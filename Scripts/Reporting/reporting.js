(function(window) {
 function checkSupportedMethods() {
  if(Object && Object.defineProperty) {
   var tObj = {};
   try {
    Object.defineProperty(tObj, 'test', { value: 0 });
    if(!Array.prototype.forEach || !Array.prototype.indexOf || [3, 1, 3].indexOf(3, 1) !== 2 || !Function.prototype.bind || !String.prototype.trim) {
     return false;
    }
    tObj = {};
    tObj.newDataProperty = "abc";
    var tDescriptor = Object.getOwnPropertyDescriptor(tObj, "newDataProperty");
    tDescriptor.writable = false;
    Object.defineProperty(tObj, "newDataProperty", tDescriptor);
   } catch(e) {
    return false;
   }
   return true;
  }
  return false;
 }
 var WebClientUIControl = {
  validateSupportedBrowser: function(hiddenMessageElement, hiddenClassName) {
   var testObject = {};
   var isSupportedBrowser = checkSupportedMethods();
   if(!isSupportedBrowser) {
    $(hiddenMessageElement).removeClass(hiddenClassName);
    if(console && console.error) {
     console.error('Internet Explorer versions lower than 9 are not supported.');
    }
   }
   return isSupportedBrowser;
  },
  initMenuItems: function(menuItems, menuItemActions) {
   for(var i = 0; i < menuItems.length; i++) {
    var menuItem = menuItems[i];
    var menuItemAction = menuItemActions[i];
    menuItem.clickAction = menuItemAction || $.noop;
   }
  },
  initViewerHandlerUri: function(uri) {
   uri && (DevExpress.Report.Preview.HandlerUri = uri);
  },
  initDesignerHandlerUri: function(uri) {
   uri && (DevExpress.Designer.Report.HandlerUri = uri);
  },
  initClientTimeOut: function(timeOut) {
   DevExpress.Report.Preview.TimeOut = timeOut;
  },
  initDebugMode: function(owner) {
   if(owner) {
    var debugMode = owner.debugMode;
    DevExpress.Designer.DEBUG = debugMode;
   }
  },
  initGlobalization: function(currentCulture) {
   currentCulture && window["Globalize"] && Globalize.culture(currentCulture);
  }
 };
 var ASPxClientCustomizeParameterEditorsEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function(parameter, info) {
   this.constructor.prototype.constructor.call(this);
   this.parameter = parameter;
   this.info = info;
  }
 });
 window.ASPx = window.ASPx || {};
 window.ASPx.WebClientUIControl = WebClientUIControl;
 window.ASPxClientCustomizeParameterEditorsEventArgs = ASPxClientCustomizeParameterEditorsEventArgs;
}(window));

(function (window) {
 var ASPxClientReportDesigner = ASPx.CreateClass(ASPxClientControl, {
  constructor: function (name) {
   this.constructor.prototype.constructor.call(this, name);
   this.internalSettings = {};
   this.SaveCommandExecute = new ASPxClientEvent();
   this.CustomizeMenuActions = new ASPxClientEvent();
   this.CustomizeParameterEditors = new ASPxClientEvent();
   this.ExitDesigner = new ASPxClientEvent();
  },
  Initialize: function () {
   if (this.selfInitialized) {
    return;
   }
   this.selfInitialized = true;
   ASPxClientControl.prototype.Initialize.call(this);
   var holder = ASPx.GetNodeByClassName(this.GetMainElement(), 'dx-designer');
   var platformErrorElement = ASPx.GetNodeByClassName(holder, 'dxwcuic-platformError');
   if (!ASPx.WebClientUIControl.validateSupportedBrowser(platformErrorElement, 'dxwcuic-hidden')) {
    return;
   }
   var self = this;
   function onSave() {
    var arg = new ASPxClientReportDesignerSaveCommandExecuteEventArgs();
    self.SaveCommandExecute.FireEvent(self, arg);
    if (self.canSaveExecuteCore(arg)) {
     self.PerformCallback();
    }
   }
   function getRootKeyName(obj) {
    for (var prop in obj) {
     if (obj.hasOwnProperty(prop)) {
      return prop;
     }
    }
    return null;
   }
   function customizeActions(actions) {
    for (var i = 0; i < self.menuItems.length; i++) {
     var menuItem = self.menuItems[i];
     actions.push(menuItem);
    }
    var arg = new ASPxClientReportDesignerCustomizeMenuActionsEventArgs(actions);
    self.CustomizeMenuActions.FireEvent(self, arg);
   }
   function customizeParameterEditors(parameter, info) {
    var arg = new ASPxClientCustomizeParameterEditorsEventArgs(parameter, info);
    self.CustomizeParameterEditors.FireEvent(self, arg);
   }
   function exitDesigner() {
    var arg = new ASPxClientReportDesignerExitDesignerEventArgs();
    self.ExitDesigner.FireEvent(self);
   }
   ASPx.WebClientUIControl.initDebugMode(this);
   ASPx.WebClientUIControl.initViewerHandlerUri(this.viewerHandlerUri);
   ASPx.WebClientUIControl.initDesignerHandlerUri(this.handlerUri);
   ASPx.WebClientUIControl.initGlobalization(this.currentCulture);
   ASPxClientReportDesigner.initAce(this.internalSettings);
   if (this.menuItems && this.menuItemActions) {
    ASPx.WebClientUIControl.initMenuItems(this.menuItems, this.menuItemActions);
   }
   if (this.dataSources && this.dataSourcesData) {
    ASPxClientReportDesigner.initDataSources(this.dataSources, this.dataSourcesData);
   }
   if (this.reportModel) {
    this.reportModelRootName = getRootKeyName(this.reportModel);
    var data = {
     report: ko.observable(this.generateDataReportBase()),
     reportUrl: ko.observable(this.reportUrl),
     availableDataSources: this.dataSources,
     dataSourceRefs: this.dataSourceRefs,
     subreports: this.subreports,
     infoDefaults: this.infoDefaults,
     state: {
      reportExtensions: this.reportExtensions
     },
     isReportServer: this.internalSettings.isReportServer,
     connectionStrings: this.wizardConnections,
     disableCustomSql: this.disableCustomSql,
     reportStorageWebIsRegister: this.reportStorageWebIsRegister
    };
    var callbacks = {
     customizeActions: customizeActions,
     customizeParameterEditors: customizeParameterEditors,
     exitDesigner: exitDesigner
    };
    this.designerModel = DevExpress.Designer.Report.createReportDesigner(holder, data, callbacks, this.localization, this.knownEnums);
    data.report(this.reportModel);
    this.designerModel.isLoading(false);
    ko.computed(function () {
     self.designerModel.model().onSave = onSave;
    });
   }
  },
  PerformCallback: function (args) {
   if (!ASPx.IsExists(args)) {
    args = '';
   } else if (typeof args === 'object') {
    args = JSON.stringify(arg);
   }
   this.performCallbackCore(args);
  },
  UpdateLocalization: function (localization) {
   DevExpress.Designer.updateLocalization(localization);
  },
  GetDesignerModel: function () {
   return this.designerModel;
  },
  GetJsonReportModel: function () {
   var reportModel = this.designerModel.model().serialize();
   var result = null;
   if (this.reportModelRootName) {
    result = {};
    result[this.reportModelRootName] = reportModel;
   } else {
    result = reportModel;
   }
   return result;
  },
  GetPropertyInfo: function (controlType, propertyDisplayName) {
   return DevExpress.Designer.getPropertyInfo(controlType, propertyDisplayName);
  },
  IsModified: function () {
   return this.designerModel && this.designerModel.isDirty();
  },
  ResetIsModified: function () {
   if (this.designerModel) {
    this.designerModel.isDirty(false);
   }
  },
  performCallbackCore: function (arg) {
   var request = {
    reportLayout: this.GetJsonReportModel(),
    arg: arg
   };
   var requestString = ASPxClientReportDesigner.convertToCallbackString(request);
   this.CreateCallback(requestString, 'save');
  },
  canSaveExecuteCore: function (arg) {
   return !arg.handled;
  },
  generateDataReportBase: function () {
   var dataReportBase = {};
   dataReportBase[this.reportModelRootName] = {
    "@ControlType": this.reportModel[this.reportModelRootName]["@ControlType"]
   };
   return dataReportBase;
  },
  OnBrowserWindowResize: function (evt) {
   this.AdjustControl();
  },
  AdjustControlCore: function () {
   this.designerModel && this.designerModel.updateSurfaceSize();
  }
 });
 ASPxClientReportDesigner.Cast = ASPxClientControl.Cast;
 ASPxClientReportDesigner.initDataSources = function (dataSources, dataSourcesData) {
  for (var i = 0; i < dataSources.length; i++) {
   var dataSource = dataSources[i];
   dataSource.data = dataSourcesData[i];
  }
 };
 ASPxClientReportDesigner.convertToCallbackString = function (obj) {
  var result = '';
  var isFirstIteration = true;
  for (var i in obj) {
   var value = obj[i];
   if (!value) {
    continue;
   }
   if (!isFirstIteration) {
    result += '&';
   }
   var jsonValue = typeof value === 'string' ? value : JSON.stringify(value);
   var encodedValue = encodeURIComponent(jsonValue);
   result += i + '=' + encodedValue;
   isFirstIteration = false;
  }
  return result;
 };
 ASPxClientReportDesigner.initAce = function (settings) {
  var ignoreAceLibsRedirectFromDX = settings && settings.ignoreAceLibsRedirectFromDX;
  var ace = window.ace;
  if (!ignoreAceLibsRedirectFromDX && ace) {
   var config = ace.config;
   config.setModuleUrl('ace/theme/dreamweaver', '/DXR.axd?r=9_37-V6ygd');
   config.setModuleUrl('ace/theme/ambiance', '/DXR.axd?r=9_36-V6ygd');
   config.setModuleUrl('ace/mode/csharp', '/DXR.axd?r=9_31-V6ygd');
   config.setModuleUrl('ace/mode/vbscript', '/DXR.axd?r=9_32-V6ygd');
   config.setModuleUrl('ace/snippets/text', '/DXR.axd?r=9_34-V6ygd');
   config.setModuleUrl('ace/snippets/csharp', '/DXR.axd?r=9_33-V6ygd');
   config.setModuleUrl('ace/snippets/vbscript', '/DXR.axd?r=9_35-V6ygd');
  }
 };
 var ASPxClientReportDesignerSaveCommandExecuteEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function () {
   this.constructor.prototype.constructor.call(this);
   this.handled = false;
  }
 });
 var ASPxClientReportDesignerCustomizeMenuActionsEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function (actions) {
   this.constructor.prototype.constructor.call(this);
   this.Actions = actions;
  }
 });
 var ASPxClientReportDesignerExitDesignerEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function () {
   this.constructor.prototype.constructor.call(this);
  }
 });
 window.ASPxClientReportDesigner = ASPxClientReportDesigner;
 window.ASPxClientReportDesignerSaveCommandExecuteEventArgs = ASPxClientReportDesignerSaveCommandExecuteEventArgs;
 window.ASPxClientReportDesignerCustomizeMenuActionsEventArgs = ASPxClientReportDesignerCustomizeMenuActionsEventArgs;
 window.ASPxClientReportDesignerExitDesignerEventArgs = ASPxClientReportDesignerExitDesignerEventArgs;
})(window);

/*! DevExpress HTML/JS Designer - v15.2.6 - 2016-02-29
* http://www.devexpress.com
* Copyright (c) 2016 Developer Express Inc; Licensed Commercial */

var DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(a){return null!=a&&a===a.window}function c(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?i[i.toString.call(a)]||"object":typeof a}function d(a){return"object"!==c(a)||a.nodeType||b(a)?!1:!(a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf"))}function e(a){for(var b in a)return!1;return!0}function f(a){return"function"===c(a)}function g(a){for(var b=[],c=2;c<arguments.length;c++)b[c-2]=arguments[c];var e,h,i,j,k,l,a=arguments[0]||{},m=1,n=arguments.length,o=!1;for("boolean"==typeof a&&(o=a,a=arguments[m]||{},m++),"object"==typeof a||f(a)||(a={}),m===n&&(a=this,m--);n>m;m++)if(null!=(e=arguments[m]))for(h in e)i=a[h],j=e[h],a!==j&&(o&&j&&(d(j)||(k=Array.isArray(j)))?(k?(k=!1,l=i&&Array.isArray(i)?i:[]):l=i&&d(i)?i:{},a[h]=g(o,l,j)):void 0!==j&&(a[h]=j));return a}function h(a){void 0===a&&(a={});var b=[];for(var c in a)b.push(a[c]);return b}var i={},j=i.hasOwnProperty;["Boolean","Number","String","Function","Array","Date","RegExp","Object","Error"].forEach(function(a){return i["[object "+a+"]"]=a.toLowerCase()}),a.isPlainObject=d,a.isEmptyObject=e,a.extend=g,a.getPropertyValues=h}(b=a.Utils||(a.Utils={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(b,c){var d=[];return a.getPropertyValues(b).forEach(function(a){var b=c(a);d.push(b)}),ko.observableArray(d)}function c(a,b){return(a||[]).map(function(a){var b=void 0!==a&&null!==a?a.toString():"00";return 1===b.length&&(b="0"+b),b}).join(b)}function d(a){var b=c([a.getMonth()+1,a.getDate(),a.getFullYear()],"/"),d=c([a.getHours(),a.getMinutes(),a.getSeconds()],":");return"00:00:00"===d?b:b+" "+d}a.deserializeArray=b,a.serializeDate=d;var e=function(){function b(b){this._refTable={},this._linkTable={},this._options=a.extend({useRefs:!0},b)}return b.prototype.linkObjects=function(){for(var a in this._linkTable){var b=this._refTable[a];if(b){var c=this._linkTable[a];c.forEach(function(a){return a(b)})}}},b.prototype.deserializeProperty=function(b,c){var d=this,e=b.defaultVal,f=(b.propertyName,b.modelName);if(f){if(void 0!==c[f]&&(e=c[f]),"string"==typeof b)return ko.observable(e);if(b.link){var g=ko.observable(null);if(e){var h=e&&e.slice("#Ref-".length);this._linkTable[h]=this._linkTable[h]||[],this._linkTable[h].push(g)}return g}if(!b.array){if(b.from)return b.from(e,this);if(b.type){var i=new b.type(e,this,b.info);return i._model||this.deserialize(i,e||{},b.info),i}if(b.info){var j={};return this.deserialize(j,e||{},b.info),j}if(b.modelName)return ko.observable(e);throw new Error("Invalid info '"+JSON.stringify(b)+"'")}if(b.from)return b.from(e,this);if(b.info){var k=[];return a.getPropertyValues(e).forEach(function(a){var c={};d.deserialize(c,a||{},b.info),k.push(c)}),ko.observableArray(k)}}},b.prototype.deserialize=function(b,c,d){var e=this;if(void 0===d&&(d=null),c){b._model=a.extend({},c);var d=b.getInfo?b.getInfo():d,f=c["@Ref"];f&&(this._refTable[f]=b),d.forEach(function(a){var d=a.propertyName,f=a.modelName;void 0!==c[f]&&delete b._model[f],b[d]=e.deserializeProperty(a,c)}),this.linkObjects()}},b.prototype.serialize=function(a,b,c){return void 0===c&&(c=null),b||c?this._serialize(a,b,c):this._serialize(a,null,null)},b.prototype._serialize=function(b,c,e){var f=this,g=a.extend({},b._model),h=null===e;return e=e||{linkObjTable:[],objects:[]},c=b.getInfo?b.getInfo():c,delete g["@Ref"],b.isEmpty&&b.isEmpty()?void 0:(c.forEach(function(h){var i=h.propertyName,j=ko.unwrap(b["_"+i]||b[i]),k=h.defaultVal,l={};if(h.modelName&&void 0!==j&&null!==j&&(a.isPlainObject(j)||!a.isEmptyObject(j)||Array.isArray(j)&&j.length>0||!Array.isArray(j)&&!a.isPlainObject(j))&&j!==k){if(h.link)e.linkObjTable.push({obj:j,setRef:function(a){g[h.modelName]="#Ref-"+a}});else if(h.array){l={};var m=1;j.forEach(function(a){var b=h.info||null,c=f._serialize(a,b,e);c&&(l["Item"+m]=c,f._options.useRefs&&(c["@Ref"]=(e.objects.push(a)-1).toString()),m++)})}else if(h.from)l=j.isEmpty&&j.isEmpty()?{}:h.toJsonObject?h.toJsonObject(j,f,e):j.toString();else if(h.info||j.getInfo)l=f._serialize(j,h.info,e);else{if(!h.modelName)throw new Error("Invalid info '"+c.stringify()+"'");l=j instanceof Date?d(j):j}(a.isPlainObject(l)&&!a.isEmptyObject(l)||Array.isArray(l)&&l.length>0||!Array.isArray(l)&&!a.isPlainObject(l))&&(g[h.modelName]=l)}}),h&&e.linkObjTable.forEach(function(a){var b=e.objects.indexOf(a.obj);-1!==b&&a.setRef(b.toString())}),g)},b}();a.ModelSerializer=e}(b=a.Utils||(a.Utils={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b=function(){function a(a,b,c,d){var e=this;void 0===d&&(d=""),this.collapsed=ko.observable(!0),this.selected=ko.observable(!1),this.value=ko.computed({read:function(){return b.peek()[c()]},write:function(a){b.peek()[c()]=a}}),this.editor=a,this.index=c,this.name=ko.computed(function(){return d&&e.value()&&e.value()[d]?ko.unwrap(e.value()[d]):c()})}return a}();a.CollectionItemWrapper=b;var c=function(){function b(b,c){var d=this;void 0===c&&(c=ko.observable(!1)),this.selectedIndex=ko.observable(null),this.alwaysShow=ko.observable(!1),this.collapsed=ko.observable(b.collapsed!==!1);var e=b.addHandler||b.info&&b.info()&&b.info().addHandler,f=b.hideButtons||b.info&&b.info()&&b.info().hideButtons;this.displayPropertyName=b.info&&b.info()&&b.info().displayPropertyName||b.displayName,this.showButtons=ko.computed(function(){return!ko.unwrap(f)&&!d.collapsed()}),this.padding=void 0!==b.level?b.level*a.propertiesGridEditorsPaddingLeft:0,this.displayName=b.displayName,this.options=b,b.displayName||(this.collapsed(!1),this.alwaysShow(!0)),this.values=ko.computed(function(){return ko.unwrap(b.values())}),this.add=function(a){b.undoEngine&&b.undoEngine().start(),b.values().push(e()),b.undoEngine&&b.undoEngine().end(),a.jQueryEvent.stopPropagation()},this.up=function(a){d._move(b.values(),-1),a.jQueryEvent.stopPropagation()},this.down=function(a){d._move(b.values(),1),a.jQueryEvent.stopPropagation()},this.remove=function(a){d.selectedIndex()>=0&&(b.values().splice(d.selectedIndex(),1),d.selectedIndex(null)),a.jQueryEvent.stopPropagation()},this.select=function(a){d.selectedIndex(a.model.index())},this.disabled=c}return b.prototype._move=function(a,b){if(this.selectedIndex()>=0){var c=this.selectedIndex(),d=c+b;if(d>=a().length||0>d)return;a.splice(d,0,a.splice(c,1)[0]),this.selectedIndex(d)}},b}();a.CollectionEditorViewModel=c,ko.bindingHandlers.dxCollectionEditor={init:function(a,b,d,e,f){var g=b(),h=new c(g,e.disabled),i=$(g.editorTemplate||"#dx-collectioneditor").text(),j=$(i),k=g.info&&g.info()&&g.info().template||g.template;if(k){var l=$(k).text();j.find(".dx-collection-item").append($(l))}else j.find(".dx-collection-item").append($(a).children());var m=$(a).append(j),n=f.createChildContext(h);return ko.applyBindings(n,m.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var __extends=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},DevExpress;!function(a){var b;!function(b){var c;!function(b){var c="dx-ellipsiseditor",d=c+" dx-dropdowneditor",e=c+"-button dx-widget dx-button-normal dx-dropdowneditor-button dx-ellipsis-button",f=c+"-icon dx-ellipsis-image dx-dropdowneditor-icon",g=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype._init=function(){a.prototype._init.call(this),this.element().addClass(d)},b.prototype._render=function(){a.prototype._render.call(this),this._renderButton()},b.prototype._renderButton=function(){this._button=$("<div />").addClass(e),this._attachButtonEvents(),this._buttonIcon=$("<div />").addClass(f).height("100%").appendTo(this._button);var b=a.prototype._buttonsContainer.call(this);this._button.prependTo(b)},b.prototype._updateButtonSize=function(){this._buttonIcon.height(this.element().height())},b.prototype._attachButtonEvents=function(){var a=this;this._button.off("click"),this.option("disabled")||this._button.on("click",function(b){a.option("buttonAction")&&(a.option("buttonAction")(),b.stopPropagation())})},b.prototype._optionChanged=function(b){var c=b.name||b;switch(c){case"disabled":this._attachButtonEvents()}a.prototype._optionChanged.apply(this,arguments)},b}(a.ui.dxTextBox);b.dxEllipsisEditor=g,a.registerComponent("dxEllipsisEditor",g)}(c=b.Widgets||(b.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c="dx-fileimage",d=c+"-input-wrapper",e=function(b){function c(a,c){b.call(this,a,c)}return __extends(c,b),c.prototype._handleFiles=function(a){for(var b=this,c=a.files,d=0;d<c.length;d++){var e=c[d];if("img"===this.option("type")){var f=/image.*/;if(!e.type.match(f))continue}var g=new FileReader;g.onload=function(){var a=g.result.replace(/^data:[^,]+,/,"");b.option("value",a)},g.readAsDataURL(e)}},c.prototype._$getInput=function(){var a=this.option("accept")?"accept = '"+this.option("accept")+"'":"";return $("<input type='file' "+a+" style='display:none' />")},c.prototype._render=function(){b.prototype._render.call(this);var a=this;this._filesinput=this._$getInput().on("change",function(){a._handleFiles(a._filesinput.get(0))}).appendTo(this.element())},c.prototype._renderInput=function(a){this._inputContainer=a||$("<div />"),this._inputContainer.addClass(d),this.element().append(this._inputContainer),b.prototype._renderInput.call(this,a)},c.prototype._attachButtonEvents=function(){var a=this;this._button.off("click"),this.option("disabled")||this._button.on("click",function(){a.option("value")||a._filesinput.val(""),a._filesinput.click()})},c.prototype._renderValue=function(){this.option("text",this.option("value")?this.option("placeHolder"):a.JS.Utils.getLocalization("(none)")),b.prototype._renderValue.call(this)},c}(b.dxEllipsisEditor);b.dxFileImagePicker=e,a.registerComponent("dxFileImagePicker",e)}(c=b.Widgets||(b.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){a.availableFonts={"Times New Roman":"Times New Roman",Arial:"Arial","Arial Black":"Arial Black","Comic Sans MS":"Comic Sans MS","Courier New":"Courier New",Georgia:"Georgia",Impact:"Impact","Lucida Console":"Lucida Console","Lucida Sans Unicode":"Lucida Sans Unicode",Tahoma:"Tahoma","Trebuchet MS":"Trebuchet MS",Verdana:"Verdana","MS Sans Serif":"MS Sans Serif","MS Serif":"MS Serif",Symbol:"Symbol",Webdings:"Webdings",Wingdings:"Wingdings"},a.availableUnits={pt:"Point",world:"World",px:"Pixel","in":"Inch",doc:"Document",mm:"Millimetr"};var b=function(){function b(b){var c=this;this.modificators={bold:null,italic:null,underline:null,strikeout:null},this.family=ko.observable("Times New Roman"),this.unit=ko.observable("pt"),this.size=ko.observable(9),this.modificators.bold=ko.observable(!1),this.modificators.italic=ko.observable(!1),this.modificators.strikeout=ko.observable(!1),this.modificators.underline=ko.observable(!1);var d=!1;ko.computed(function(){if(!d){d=!0;try{if(b.value()){var e,f,g=b.value().split(","),h=g[0],i=!1,j=!1,k=!1,l=!1;if(Object.keys(a.availableUnits).forEach(function(a){-1!=g[1].indexOf(a)&&(e=parseFloat(g[1].split(a)[0]),f=a)}),g.length>2)for(var m=2;m<g.length;m++)-1!=g[m].indexOf("Bold")&&(i=!0),-1!=g[m].indexOf("Italic")&&(j=!0),-1!=g[m].indexOf("Underline")&&(k=!0),-1!=g[m].indexOf("Strikeout")&&(l=!0);c.family(h),c.unit(f),c.size(e),c.modificators.bold(i),c.modificators.italic(j),c.modificators.underline(k),c.modificators.strikeout(l)}}finally{d=!1}}}),ko.computed(function(){var a=c.family()+", "+c.size()+c.unit();if(c.modificators.bold()||c.modificators.italic()||c.modificators.strikeout()||c.modificators.underline()){a+=", style=";var e=[];c.modificators.bold()&&e.push("Bold"),c.modificators.italic()&&e.push("Italic"),c.modificators.underline()&&e.push("Underline"),c.modificators.strikeout()&&e.push("Strikeout"),a+=e.join(", ")}d||b.value(a)})}return b}();a.FontModel=b}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(a){return Globalize&&Globalize.localize(a)||a}a.getLocalization=b}(b=a.Utils||(a.Utils={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){ko.virtualElements.allowedBindings.lazy=!0,ko.bindingHandlers.lazy={init:function(a,b,c,d,e){var f=b();return $.each(f,function(b,f){var g=ko.bindingHandlers[b];setTimeout(function(){var b=!1;ko.computed({read:function(){!b&&g.init&&(g.init(a,function(){return f},c,d,e),b=!0),g.update&&g.update(a,function(){return f},c,d,e)},disposeWhenNodeIsRemoved:a})},1)}),{controlsDescendantBindings:!0}}},ko.bindingHandlers.dxdAccordion={init:function(a,b){var c=b(),d=$(a),e=d.find(".dx-accordion-content").first(),f=function(){var a=d.parents(".dx-scrollview").dxScrollView("instance");a&&a.update()};d.find(".dx-accordion-header,.dx-accordion-button").first().off("dxclick").on("dxclick",function(){var a=c.alwaysShow&&c.alwaysShow()?!1:!c.collapsed();a?(c.collapsed(!0),e.slideUp(c.timeout,function(){f()})):(c.collapsed(!1),e.slideDown(c.timeout,function(){f()}))}),c.collapsed()?e.hide():e.show()}},ko.bindingHandlers.dxdAccordionExt={init:function(a,b,c,d,e){var f=b(),g=$(a),h=function(){var a=g.parents(".dx-scrollview").dxScrollView("instance");a&&a.update()},i=g.find(".dx-accordion-content").first(),j=null;f.collapsed()&&f.lazyContentRendering===!0&&(j=i.html(),i.empty()),f.collapsed.subscribe(function(a){a?i.slideUp(f.timeout,function(){h()}):(j&&(i.html(j),ko.applyBindingsToDescendants(e,i.get(0)),j=null),i.slideDown(f.timeout,function(){h()}))}),f.collapsed()?i.hide():i.show()}},ko.bindingHandlers.dxLocalizedSelectBox={init:function(b,c,d,e,f){var g=c(),h=g.displayExpr;return g.displayExpr=function(b){return $.isFunction(h)?a.Utils.getLocalization(h(b)):b?a.Utils.getLocalization(b[h]):b},ko.bindingHandlers.dxSelectBox.init(b,function(){return g},d,e,f),{controlsDescendantBindings:!0}}},ko.bindingHandlers.styleunit={update:function(a,b){var c=ko.utils.unwrapObservable(b()||{});$.each(c,function(b,c){c=ko.utils.unwrapObservable(c)||0,a.style[b]=c+"px"})}}}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(a,b){return!!a&&!!b&&a.header===b.header&&a.content===b.content&&a.editorType===b.editorType}a.propertiesGridEditorsPaddingLeft=19;var c=function(){function a(a,b,c,d,e){var f=this;void 0===c&&(c=0),void 0===d&&(d=ko.observable(!1)),void 0===e&&(e=!1),this.editorsInfo=b,this.level=0,this._editors=ko.observableArray([]),this.rtl=e,this.level=c,this._parentDisabled=d,ko.computed(function(){var c=a(),d=b&&b.editors||c&&c.getInfo&&c.getInfo();f._createEditors(c,d),f.update(c)})}return a.prototype.update=function(a){a&&this._editors().forEach(function(b){b.update(a)})},a.prototype.createEditor=function(a){var b=a.editor&&a.editor.editorType||d;return new b(a,this.level,this._parentDisabled,this.rtl)},a.prototype.createEditors=function(a){var c=this,d=this;return(a||[]).filter(function(a){return!!a.editor&&0===d._editors().filter(function(c){return c.name===a.propertyName&&b(c.info().editor,a.editor)}).length}).map(function(b){var d=c.createEditor(b);return d.editorsInfo=c.editorsInfo&&a,d})},a.prototype._createEditors=function(a,b){var c=this;if(!b)return!1;this.createEditors(b).forEach(function(a){return c._editors.push(a)});var d=b.map(function(a){return a.propertyName});this._editors.sort(function(a,b){return d.indexOf(a.name)-d.indexOf(b.name)})},a.prototype.getEditors=function(){return this._editors()},a}();a.ObjectProperties=c;var d=function(){function c(b,c,d,e){var f=this;void 0===d&&(d=ko.observable(!1)),void 0===e&&(e=!1),this._model=ko.observable(),this.isVisibleByContent=ko.observable(!0),this.editorsInfo=null,this.isEditorSelected=ko.observable(!1),this.isPropertyModified=ko.computed(function(){return f._model()&&f._model().isPropertyModified&&f._model().isPropertyModified(f.name)}),this.collapsed=ko.observable(!0),this.info=ko.observable(b),this.rtl=e,this.padding=this._setPadding(e?"right":"left",c*a.propertiesGridEditorsPaddingLeft);var g=ko.observable(null),h=b.propertyName;this.localizationId=b.localizationId,this.validationRules=b.validationRules,void 0!==b.defaultVal&&(g=ko.observable(b.defaultVal)),b.from&&(g=b.from(b.defaultVal)),b.array&&(g=ko.observableArray()),this.values=ko.computed(function(){return f.info().values?$.map(f.info().values,function(a,b){return{value:b,displayValue:a}}):f.info().valuesArray?$.map(f.info().valuesArray,function(a){return{value:a.value,displayValue:a.displayValue}}):void 0}),this.level=c;var i=b.editor;this._init(b.displayName,i,g,h);var j=function(a,b,c){var d;return d=ko.isObservable(b)?b():"function"==typeof b?b(a):void 0!==b?b:c};this.disabled=ko.computed(function(){var a=f._model(),b=d()||a&&a.isPropertyDisabled&&a.isPropertyDisabled(f.name);return b||(b=j(a,f.info().disabled,!1)),b}),this.visible=ko.computed(function(){var a=f._model(),b=a&&a.isPropertyVisible?a.isPropertyVisible(f.name):f.isVisibleByContent();return b&&(b=j(a,f.info().visible,!0)),b})}return c.prototype._setPadding=function(a,b){var c={};return c["padding-"+a]=b,c},c.prototype._init=function(b,c,d,e){var f=this;this.displayName=b,c=c||a.editorTemplates.text,this.templateName=c.header,this.contentTemplateName=c.content,this.defaultValue=c===a.editorTemplates.color?"transparent":null,this.value=ko.computed({read:function(){var a=f._model(),b=a&&a[e]||d;if(ko.isObservable(b)&&!b.push){var c=void 0!==b()&&null!==b();return c?b():f.defaultValue}return b},write:function(a){var b=f._model();if(b){var c=b[e];ko.isObservable(c)?c(a):b[e]=a}}}),this.name=e,this.editorTemplate=c&&c.custom||"dx-property-editor"},c.prototype.findInfo=function(a){var b=this,c=a.getInfo&&a.getInfo();return c?c.filter(function(a){return a.propertyName===b.name})[0]:null},c.prototype.updateInfo=function(a){return a&&b(a.editor,this.info().editor)?(this.info(a),!0):!a},c.prototype.update=function(a){var b=this.findInfo(a);this.isVisibleByContent(void 0!==a[this.name]&&this.updateInfo(b)),this._model(this.isVisibleByContent()?a:null)},Object.defineProperty(c.prototype,"isComplexEditor",{get:function(){return!!this.contentTemplateName},enumerable:!0,configurable:!0}),c}();a.Editor=d;var e=function(a){function b(b,d,e,f){var g=this;a.call(this,b,d,e,f),this.editorCreated=ko.observable(!1),this.collapsed.subscribe(function(){g.editorCreated()||(g.viewmodel=new c(g.value,{editors:b.info},d+1,g.disabled,g.rtl),g.editorCreated(!0))}),this.viewmodel={}}return __extends(b,a),b}(d);a.PropertyGridEditor=e;var f=function(b){function d(d,e,f,g){b.call(this,d,e,f,g);var h=new a.FontModel({value:this.value}),i=new c(ko.observable(h),{editors:a.fontInfo},e+1,this.disabled,this.rtl);this.viewmodel=i}return __extends(d,b),d}(d);a.FontEditor=f,a.editorTemplates={color:{header:"dx-color"},bool:{header:"dx-boolean"},boolSelect:{header:"dx-boolean-select"},numeric:{header:"dx-numeric"},date:{header:"dx-date"},modificators:{custom:"dx-modificators"},font:{header:"dx-emptyHeader",content:"dx-objectEditorContent",editorType:f},combobox:{header:"dx-combobox"},comboboxEditable:{header:"dx-combobox-editable"},text:{header:"dx-text"},image:{header:"dx-image"},file:{header:"dx-file"},objecteditor:{header:"dx-emptyHeader",content:"dx-objectEditorContent",editorType:e},commonCollection:{custom:"dx-commonCollection"},stringArray:{header:"dx-emptyHeader",content:"dx-string-array"}},a.fontInfo=[{propertyName:"family",displayName:"Font Name",editor:a.editorTemplates.combobox,values:a.availableFonts},{propertyName:"size",displayName:"Size",editor:a.editorTemplates.numeric},{propertyName:"unit",displayName:"Unit",editor:a.editorTemplates.combobox,values:a.availableUnits},{propertyName:"modificators",editor:a.editorTemplates.modificators}]}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var __extends=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(a){var b=[];for(var c in a)isNaN(c)&&b.push(c);return b}var c=function(){function a(){var a=this;this.type="Default",this.operands=null,this.changeValueType=function(b,c){var d=new b;return null!==c.index?a[c.name][c.index]=d:a[c.name]=d,d},this.changeValue=function(b,c,d){var e=c?new r(q.Minus,b):b;return null!==d.index?a[d.name][d.index]=e:a[d.name]=e,e},this.assignLeftPart=function(){return void 0},this.assignRightPart=function(){return void 0},this.assignType=function(b){a.operatorType=b},this.resetrightPart=function(){return void 0}}return a.operators=function(a){var c=[].concat.apply([],a.map(function(a){return b(a).map(function(b){return{name:b,value:a[b],type:a}})}));return c},a.parse=function(a){return a&&""!==a?window.parser.parse(a):null},a.create=function(a){var b=null;switch(a.type){case o:b=new p(new f,new g,a.value);break;case d:b=new e(a.value,[]);break;case s:b=new t(a.value,[new f]);break;case m:b=new m(new f,new g,new g);break;case n:b=new n(new f,[new g]);break;case q:b=new r(a.value,new f);break;case j:var c=new k(new f,null,a.value,new e(d.And,[]));a.value===j.Exists?b=c:(a.value!==j.Count&&(c.aggregatedExpression=new f),b=new p(c,new g,o.Equal));break;default:throw Error("Unsupported operator type")}return a.reverse?new r(q.Not,b):b},a.and=function(a,b){return e.combine(d.Or,[a,b])},a.or=function(a,b){return e.combine(d.Or,[a,b])},a.getNotValidRange=function(a,b){var c=0,d=0,e=b.split("\n"),f=e[1],g=e[2].length;0===f.indexOf("...")&&(f=f.split("...")[1]);var c=a.indexOf(f),d=c+g;return{start:c,end:d}},Object.defineProperty(a.prototype,"displayType",{get:function(){return this.operatorType},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"enumType",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"leftPart",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"rightPart",{get:function(){return null},enumerable:!0,configurable:!0}),a.prototype.assignFrom=function(a,b){void 0===b&&(b=!1);var c=a;a instanceof r&&!(a.leftPart instanceof f)&&(c=a.leftPart),this.assignLeftPart(b?c.leftPart:c),c.rightPart&&this.assignRightPart(c)},a}();a.CriteriaOperator=c,function(a){a[a.And=0]="And",a[a.Or=1]="Or"}(a.GroupOperatorType||(a.GroupOperatorType={}));var d=a.GroupOperatorType,e=function(a){function b(e,f){var h=this;a.call(this),this.create=function(a,c,e){var f=new p(c,new g(""),o.Equal);return a?f=new b(d.And,[]):e&&"list"===e&&(f=new k(c,null,j.Exists,new b(d.And,[]))),h.operands.push(f),h.operands[h.operands.indexOf(f)]},this.change=function(a,b,d){void 0===d&&(d=!1);var e=h.operands.indexOf(b);if(-1===e)throw Error("dont have this element in operands collection");var f=c.create(a);return a.type!==f.enumType?f.leftPart.assignFrom(b):f.assignFrom(b,d),h.operands[e]=f,b=null,h.operands[e]},this.remove=function(a){h.operands.splice(h.operands.indexOf(a),1)},this.assignLeftPart=function(a){h.operands=a.operands},this.operands=[],this.type="Group",this.operatorType=e,f=f||[new c,new c],f.forEach(function(a){return h.operands.push(a)})}return __extends(b,a),b.combine=function(a,c){var d=[];return(c||[]).forEach(function(c){c instanceof b&&c.operatorType===a?d.push.apply(d,c.operands):d.push(c)}),1===d.length?d[0]:new b(a,d)},Object.defineProperty(b.prototype,"displayType",{get:function(){return d[this.operatorType]},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"enumType",{get:function(){return d},enumerable:!0,configurable:!0}),b}(c);a.GroupOperator=e;var f=function(a){function b(b){a.call(this),this.type="Property",this.propertyName=b||""}return __extends(b,a),Object.defineProperty(b.prototype,"displayType",{get:function(){return"["+this.propertyName+"]"},enumerable:!0,configurable:!0}),b}(c);a.OperandProperty=f;var g=function(a){function b(b){a.call(this),this.type="Value";var c=null!==b&&void 0!==b?b:"";b&&b.length&&"'"===b[0]&&"'"===b[b.length-1]?c=b.slice(1,b.length-1):b&&b.length&&"#"===b[0]&&"#"===b[b.length-1]?(c=b.slice(1,b.length-1),c=Globalize.parseDate(c),c||(c=Globalize.parseDate(b.slice(1,b.length-1),["yyyy-MM-dd","MM/dd/yyyy HH:mm:ss"]))):("true"===String(b).toLowerCase()||"false"===String(b).toLowerCase())&&(c="true"===String(b).toLowerCase()?"True":"False"),this.value=c}return __extends(b,a),Object.defineProperty(b.prototype,"displayType",{get:function(){return this.value||"?"},enumerable:!0,configurable:!0}),b}(c);a.OperandValue=g;var h=function(a){function b(b){a.call(this,b)}return __extends(b,a),b}(g);a.ConstantValue=h;var i=function(a){function b(b,c){a.call(this,c),this.type="Parameter",this.parameterName=b||""}return __extends(b,a),Object.defineProperty(b.prototype,"displayType",{get:function(){return"?"+this.parameterName},enumerable:!0,configurable:!0}),b}(g);a.OperandParameter=i,function(a){a[a.Count=0]="Count",a[a.Exists=1]="Exists",a[a.Min=2]="Min",a[a.Max=3]="Max",a[a.Avg=4]="Avg",a[a.Sum=5]="Sum",a[a.Single=6]="Single"}(a.Aggregate||(a.Aggregate={}));var j=a.Aggregate,k=function(a){function b(f,g,h,i){var j=this;a.call(this),this.change=function(a,b){var e=null;return a.type===d&&(e=c.create(a),a.type!==e.enumType?e.leftPart.assignFrom(b):e.assignFrom(b),j.condition=e),e},this.assignLeftPart=function(a){a.leftPart instanceof b?j.assignFrom(a.leftPart):c instanceof b?(j.property=a.property,j.aggregatedExpression&&a.aggregatedExpression&&(j.aggregatedExpression=a.aggregatedExpression),j.condition=a.property):j.property=a.leftPart},this.type="Aggregate",this.property=f,this.condition=i instanceof e?i:i instanceof r&&i.operatorType===q.Not?i.operand instanceof e?new r(q.Not,i.operand):new r(q.Not,new e(d.And,i.operand?[i.operand]:[])):new e(d.And,i?[i]:[]),this.operatorType=h,this.aggregatedExpression=g}return __extends(b,a),Object.defineProperty(b.prototype,"displayType",{get:function(){return j[this.operatorType]},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"enumType",{get:function(){return j},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.property},enumerable:!0,configurable:!0}),b}(c);a.AggregateOperand=k;var l=function(a){function b(b,c,d,e){a.call(this),this.type="Join",this.joinTypeName=b,this.condition=c,this.operatorType=d,this.aggregatedExpression=e}return __extends(b,a),b.joinOrAggregate=function(a,c,d,e){return null===a||a.propertyName.length<2||"<"!=a.propertyName[0]||">"!=a.propertyName[a.propertyName.length-1]?new k(a,e,d,c):new b(a.propertyName.substring(1,a.propertyName.length-2),c,d,e)},b}(c);a.JoinOperand=l;var m=function(a){function b(b,c,d){var e=this;a.call(this),this.resetRightPart=function(a){e.begin=new g(a),e.end=new g(a)},this.assignLeftPart=function(a){e.property=a.leftPart},this.assignRightPart=function(a){null!==a.rightPart.length&&void 0!==a.rightPart.length?a.rightPart.length?(e.begin=a.rightPart[0],e.end=a.rightPart.length>1?a.rightPart[1]:new g):(e.begin=new g,e.end=new g):(e.begin=a.rightPart,e.end=new g)},this.operatorType="Between",this.type="Between",this.property=b,this.begin=c||new g,this.end=d||new g}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.property},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return[this.begin,this.end]},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"displayType",{get:function(){return"Between"},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"enumType",{get:function(){return b},enumerable:!0,configurable:!0}),b}(c);a.BetweenOperator=m;var n=function(a){function b(b,d){var e=this;a.call(this),this.assignLeftPart=function(a){e.criteriaOperator=a.leftPart},this.assignRightPart=function(a){e.operands=[].concat(a.rightPart)},this.operatorType="In",this.type="In",this.operands=[],this.criteriaOperator=b||new c,(d||[]).forEach(function(a){return e.operands.push(a)})}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.criteriaOperator},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return this.operands},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"displayType",{get:function(){return"In"},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"enumType",{get:function(){return b},enumerable:!0,configurable:!0}),b}(c);a.InOperator=n,function(a){a[a.Equal=0]="Equal",a[a.NotEqual=1]="NotEqual",a[a.Greater=2]="Greater",a[a.Less=3]="Less",a[a.LessOrEqual=4]="LessOrEqual",a[a.GreaterOrEqual=5]="GreaterOrEqual",a[a.Like=6]="Like",a[a.BitwiseAnd=7]="BitwiseAnd",a[a.BitwiseOr=8]="BitwiseOr",a[a.BitwiseXor=9]="BitwiseXor",a[a.Divide=10]="Divide",a[a.Modulo=11]="Modulo",a[a.Multiply=12]="Multiply",a[a.Plus=13]="Plus",a[a.Minus=14]="Minus"}(a.BinaryOperatorType||(a.BinaryOperatorType={}));var o=a.BinaryOperatorType,p=function(b){function d(a,d,e){var f=this;b.call(this),this.assignLeftPart=function(a){f.leftOperand=a.leftPart},this.assignRightPart=function(a){null!==a.rightPart.length&&void 0!==a.rightPart.length?a.rightPart.length&&(f.rightOperand=a.rightPart[0]):f.rightOperand=a.rightPart},this.type="Binary",this.leftOperand=a||new c,this.rightOperand=d||new c,this.operatorType=e}return __extends(d,b),Object.defineProperty(d.prototype,"leftPart",{get:function(){return this.leftOperand},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"rightPart",{get:function(){return this.rightOperand},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"displayType",{get:function(){return a.operatorTokens[o[this.operatorType]]||o[this.operatorType]},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"enumType",{get:function(){return o},enumerable:!0,configurable:!0}),d}(c);a.BinaryOperator=p,function(a){a[a.Minus=0]="Minus",a[a.Plus=1]="Plus",a[a.BitwiseNot=2]="BitwiseNot",a[a.Not=3]="Not",a[a.IsNull=4]="IsNull"}(a.UnaryOperatorType||(a.UnaryOperatorType={}));var q=a.UnaryOperatorType,r=function(a){function b(b,d){a.call(this),this.type="Unary",this.operand=d||new c,this.operatorType=b}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.operand},enumerable:!0,configurable:!0}),b.prototype.assignFrom=function(a){this.operatorType===q.Not?this.operand.assignFrom(a instanceof b?a.operand:a):this.operand=a instanceof b?a.operand.leftPart:a.leftPart||a},Object.defineProperty(b.prototype,"displayType",{get:function(){return q[this.operatorType]},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"enumType",{get:function(){return q},enumerable:!0,configurable:!0}),b}(c);a.UnaryOperator=r,function(a){a[a.None=0]="None",a[a.Custom=1]="Custom",a[a.CustomNonDeterministic=2]="CustomNonDeterministic",a[a.Iif=3]="Iif",a[a.IsNull=4]="IsNull",a[a.IsNullOrEmpty=5]="IsNullOrEmpty",a[a.Trim=6]="Trim",a[a.Len=7]="Len",a[a.Substring=8]="Substring",a[a.Upper=9]="Upper",a[a.Lower=10]="Lower",a[a.Concat=11]="Concat",a[a.Ascii=12]="Ascii",a[a.Char=13]="Char",a[a.ToStr=14]="ToStr",a[a.Replace=15]="Replace",a[a.Reverse=16]="Reverse",a[a.Insert=17]="Insert",a[a.CharIndex=18]="CharIndex",a[a.Remove=19]="Remove",a[a.Abs=20]="Abs",a[a.Sqr=21]="Sqr",a[a.Cos=22]="Cos",a[a.Sin=23]="Sin",a[a.Atn=24]="Atn",a[a.Exp=25]="Exp",a[a.Log=26]="Log",a[a.Rnd=27]="Rnd",a[a.Tan=28]="Tan",a[a.Power=29]="Power",a[a.Sign=30]="Sign",a[a.Round=31]="Round",a[a.Ceiling=32]="Ceiling",a[a.Floor=33]="Floor",a[a.Max=34]="Max",a[a.Min=35]="Min",a[a.Acos=36]="Acos",
a[a.Asin=37]="Asin",a[a.Atn2=38]="Atn2",a[a.BigMul=39]="BigMul",a[a.Cosh=40]="Cosh",a[a.Log10=41]="Log10",a[a.Sinh=42]="Sinh",a[a.Tanh=43]="Tanh",a[a.PadLeft=44]="PadLeft",a[a.PadRight=45]="PadRight",a[a.StartsWith=46]="StartsWith",a[a.EndsWith=47]="EndsWith",a[a.Contains=48]="Contains",a[a.ToInt=49]="ToInt",a[a.ToLong=50]="ToLong",a[a.ToFloat=51]="ToFloat",a[a.ToDouble=52]="ToDouble",a[a.ToDecimal=53]="ToDecimal",a[a.LocalDateTimeThisYear=54]="LocalDateTimeThisYear",a[a.LocalDateTimeThisMonth=55]="LocalDateTimeThisMonth",a[a.LocalDateTimeLastWeek=56]="LocalDateTimeLastWeek",a[a.LocalDateTimeThisWeek=57]="LocalDateTimeThisWeek",a[a.LocalDateTimeYesterday=58]="LocalDateTimeYesterday",a[a.LocalDateTimeToday=59]="LocalDateTimeToday",a[a.LocalDateTimeNow=60]="LocalDateTimeNow",a[a.LocalDateTimeTomorrow=61]="LocalDateTimeTomorrow",a[a.LocalDateTimeDayAfterTomorrow=62]="LocalDateTimeDayAfterTomorrow",a[a.LocalDateTimeNextWeek=63]="LocalDateTimeNextWeek",a[a.LocalDateTimeTwoWeeksAway=64]="LocalDateTimeTwoWeeksAway",a[a.LocalDateTimeNextMonth=65]="LocalDateTimeNextMonth",a[a.LocalDateTimeNextYear=66]="LocalDateTimeNextYear",a[a.IsOutlookIntervalBeyondThisYear=67]="IsOutlookIntervalBeyondThisYear",a[a.IsOutlookIntervalLaterThisYear=68]="IsOutlookIntervalLaterThisYear",a[a.IsOutlookIntervalLaterThisMonth=69]="IsOutlookIntervalLaterThisMonth",a[a.IsOutlookIntervalNextWeek=70]="IsOutlookIntervalNextWeek",a[a.IsOutlookIntervalLaterThisWeek=71]="IsOutlookIntervalLaterThisWeek",a[a.IsOutlookIntervalTomorrow=72]="IsOutlookIntervalTomorrow",a[a.IsOutlookIntervalToday=73]="IsOutlookIntervalToday",a[a.IsOutlookIntervalYesterday=74]="IsOutlookIntervalYesterday",a[a.IsOutlookIntervalEarlierThisWeek=75]="IsOutlookIntervalEarlierThisWeek",a[a.IsOutlookIntervalLastWeek=76]="IsOutlookIntervalLastWeek",a[a.IsOutlookIntervalEarlierThisMonth=77]="IsOutlookIntervalEarlierThisMonth",a[a.IsOutlookIntervalEarlierThisYear=78]="IsOutlookIntervalEarlierThisYear",a[a.IsOutlookIntervalPriorThisYear=79]="IsOutlookIntervalPriorThisYear",a[a.IsThisWeek=80]="IsThisWeek",a[a.IsThisMonth=81]="IsThisMonth",a[a.IsThisYear=82]="IsThisYear",a[a.DateDiffTick=83]="DateDiffTick",a[a.DateDiffSecond=84]="DateDiffSecond",a[a.DateDiffMilliSecond=85]="DateDiffMilliSecond",a[a.DateDiffMinute=86]="DateDiffMinute",a[a.DateDiffHour=87]="DateDiffHour",a[a.DateDiffDay=88]="DateDiffDay",a[a.DateDiffMonth=89]="DateDiffMonth",a[a.DateDiffYear=90]="DateDiffYear",a[a.GetDate=91]="GetDate",a[a.GetMilliSecond=92]="GetMilliSecond",a[a.GetSecond=93]="GetSecond",a[a.GetMinute=94]="GetMinute",a[a.GetHour=95]="GetHour",a[a.GetDay=96]="GetDay",a[a.GetMonth=97]="GetMonth",a[a.GetYear=98]="GetYear",a[a.GetDayOfWeek=99]="GetDayOfWeek",a[a.GetDayOfYear=100]="GetDayOfYear",a[a.GetTimeOfDay=101]="GetTimeOfDay",a[a.Now=102]="Now",a[a.UtcNow=103]="UtcNow",a[a.Today=104]="Today",a[a.AddTimeSpan=105]="AddTimeSpan",a[a.AddTicks=106]="AddTicks",a[a.AddMilliSeconds=107]="AddMilliSeconds",a[a.AddSeconds=108]="AddSeconds",a[a.AddMinutes=109]="AddMinutes",a[a.AddHours=110]="AddHours",a[a.AddDays=111]="AddDays",a[a.AddMonths=112]="AddMonths",a[a.AddYears=113]="AddYears",a[a.OrderDescToken=114]="OrderDescToken"}(a.FunctionOperatorType||(a.FunctionOperatorType={}));var s=a.FunctionOperatorType,t=function(b){function d(d,e){var f=this;b.call(this),this.toString=function(b){var c=(a.operatorTokens[f.displayType]||f.displayType)+"("+f.operands.map(function(a){return a.toString()}).join(", ")+")";return b?"Not "+c:c},this.assignLeftPart=function(a){f.operands=[a.leftPart]},this.assignRightPart=function(a){f.operatorType!==s.IsNullOrEmpty&&f.operatorType!==s.IsOutlookIntervalBeyondThisYear&&f.operatorType!==s.IsOutlookIntervalLaterThisYear&&f.operatorType!==s.IsOutlookIntervalLaterThisMonth&&f.operatorType!==s.IsOutlookIntervalNextWeek&&f.operatorType!==s.IsOutlookIntervalLaterThisWeek&&f.operatorType!==s.IsOutlookIntervalTomorrow&&f.operatorType!==s.IsOutlookIntervalToday&&f.operatorType!==s.IsOutlookIntervalYesterday&&f.operatorType!==s.IsOutlookIntervalEarlierThisWeek&&f.operatorType!==s.IsOutlookIntervalLastWeek&&f.operatorType!==s.IsOutlookIntervalEarlierThisMonth&&f.operatorType!==s.IsOutlookIntervalEarlierThisYear&&f.operatorType!==s.IsOutlookIntervalPriorThisYear&&f.operands.push(null!==a.rightPart.length&&void 0!==a.rightPart.length?a.rightPart.length?a.rightPart[0]:new g:a.rightPart)},this.operands=[],this.type="Function",this.operatorType=d,e=e||[new c],e.forEach(function(a){return f.operands.push(a)})}return __extends(d,b),Object.defineProperty(d.prototype,"leftPart",{get:function(){return this.operands[0]},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"rightPart",{get:function(){return this.operands.filter(function(a,b){return 0!==b})},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"displayType",{get:function(){return s[this.operatorType]||this.operatorType.toString()},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"enumType",{get:function(){return s},enumerable:!0,configurable:!0}),d}(c);a.FunctionOperator=t,a.operatorTokens={Plus:"+",Minus:"-",Equal:"=",NotEqual:"<>",Greater:">",Less:"<",LessOrEqual:"<=",GreaterOrEqual:">="}}(b=a.Data||(a.Data={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b=function(){function a(a){if(this.path="",this.fullPath=a,a)if(-1!==a.indexOf(".")){var b=a.split(".");this.id=this.ref=b[0],b.splice(0,1),this.path=b.join(".")}else this.id=this.ref=a}return a}();a.PathRequest=b;var c=function(){function a(a,b,c,d,e){var f=this;void 0===b&&(b=""),void 0===c&&(c=!0),void 0===d&&(d=$.noop),void 0===e&&(e=!1),this._rtl=!1,this.level=-1,this.hasItems=!0,this.items=ko.observableArray(),this.collapsed=ko.observable(!0),this.data=null,this.isSelected=ko.observable(!1),this._path=b,this._rtl=e,this.hasItems=c,this._treeListController=a.treeListController,this._templateName=a.templateName,this._onItemsVisibilityChanged=d,this.dragDropHandler=a.treeListController.dragDropHandler,this.getItems=function(){return f._loadItems(a)},this.toggleSelected=function(){f._treeListController.canSelect(f)&&(a.treeListController.clickHandler&&a.treeListController.clickHandler(f),a.selectedPath(f.path))},a.treeListController.dblClickHandler&&(this.dblClickHandler=function(b){a.treeListController.dblClickHandler&&a.treeListController.dblClickHandler(b)}),this.toggleCollapsed=function(){f.hasItems&&(f.collapsed(!f.collapsed.peek()),f.collapsed.peek()||0!==f.items().length?d():f._loadItems(a).always(function(){d()}))},this.nodeImageClass=this._getNodeImageClassName()}return a.prototype._getImageClassName=function(a){return ko.computed(function(){return"dx-image-fieldlist-"+(ko.unwrap(a.specifics)||"default").toLowerCase()})},a.prototype._getNodeImageClassName=function(){var a=this,b=ko.observable("dx-collapsing-image");return ko.computed({read:function(){return a.hasItems?a.collapsed()?"dx-collapsing-image":b():"dx-image-leaf-node"},write:function(a){b(a)}})},a.prototype._loadItems=function(c){var d=this,e=$.Deferred();this._loader&&this._loader.dispose();var f=ko.observable();return f.subscribe(function(b){b&&b.done(function(b){var f=b;d._treeListController.itemsFilter&&(f=b.filter(function(a){return d._treeListController.itemsFilter(a,d.path)})),d.items.peek().forEach(function(a){return a.dispose()}),d.items($.map(f,function(b){var e=new a(c,d.path,c.treeListController.hasItems(b),d._onItemsVisibilityChanged,d._rtl);return e.data=b,e.level=d.level+1,e.padding=d._applyPadding(d._rtl?"right":"left",20*e.level+12),e.imageClassName=d._getImageClassName(b),e})),d.nodeImageClass(d.items.peek().length>0?"dx-collapsing-image dx-image-expanded":"dx-image-leaf-node"),e.resolve(d.items.peek());var g=c.selectedPath.peek();if(g){var h=d.items.peek().filter(function(a){return 0===g.indexOf(a.path)})[0];h&&d._selectItem(h.name+g.substring(h.path.length))}})}),this._loader=ko.computed(function(){f(c.itemsProvider.getItems(new b(d.path)))}),e.promise()},a.prototype._selectItem=function(a){var b=this;if(this.hasItems){var c=function(){b._find(a),b.collapsed.peek()&&b.toggleCollapsed()};0===this.items.peek().length?this.getItems().done(function(){c()}):c()}},a.prototype._find=function(a){var b=a&&this.items.peek().filter(function(b){return a===b.name||0===a.indexOf(b.name)&&"."===a[b.name.length]})[0];b&&(a.length>b.name.length?b._selectItem(a.substr(b.name.length+1)):this._treeListController.select(b))},a.prototype._applyPadding=function(a,b){var c={};return c["padding-"+a]=b,c},Object.defineProperty(a.prototype,"name",{get:function(){return this.data&&this.data.name},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"path",{get:function(){return this.name?""===ko.unwrap(this._path)?ko.unwrap(this.name):ko.unwrap(this._path)+"."+ko.unwrap(this.name):ko.unwrap(this._path)},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"text",{get:function(){return this.data&&this.data.displayName},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"templateName",{get:function(){return this._templateName||this.data&&this.data.templateName||"dx-treelist-item"},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"hasContent",{get:function(){return this.data&&this.data.contenttemplate},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"actions",{get:function(){return this._treeListController.getActions?this._treeListController.getActions(this):[]},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"isDraggable",{get:function(){return this.data&&this.data.dragData?!this.data.dragData.noDragable:this._treeListController.isDraggable?this._treeListController.isDraggable(this):!1},enumerable:!0,configurable:!0}),a.prototype.dispose=function(){this._loader&&this._loader.dispose(),this.items().forEach(function(a){return a.dispose()})},a}();a.TreeListItemViewModel=c;var d=function(a){function b(b,c,d,e,f){var g=this;void 0===c&&(c=""),void 0===d&&(d=!0),void 0===e&&(e=$.noop),void 0===f&&(f=!1),a.call(this,b,c,d,e,f);var h=b.selectedPath.subscribe(function(a){g._selectItem(""!==g.path?a.substr(g.path.length+1):a)});this._selectItem(""!==this.path?this.path+"."+b.selectedPath():b.selectedPath()),this.dispose=function(){h.dispose(),a.prototype.dispose.call(g)}}return __extends(b,a),b}(c);a.TreeListRootItemViewModel=d;var e=function(){function a(){this.selectedItem=null}return a.prototype.itemsFilter=function(){return!0},a.prototype.hasItems=function(a){return"none"!==a.specifics&&("List"===a.specifics||"ListSource"===a.specifics||a.isList===!0)},a.prototype.canSelect=function(a){return!a.hasItems},a.prototype.select=function(a){this.canSelect(a)&&(this.selectedItem&&this.selectedItem.isSelected(!1),this.selectedItem=a,a.isSelected(!0))},a}();a.TreeListController=e,ko.bindingHandlers.treelist={init:function(a,b,c,f,g){var h=null,i=b(),j=function(){var b=$(a).closest(".dx-scrollview");if(b.data("dxScrollView")){var c=b.dxScrollView("instance");c&&c.update()}},k=function(b){b.treeListController=b.treeListController?b.treeListController:new e,b.treeListController.dragDropHandler||(b.treeListController.dragDropHandler=g.$root.fieldDragHandler),h&&h.dispose(),b.rtl||(b.rtl=$(a).closest(".dx-rtl").length>0),h=new d(b,b.path,!0,j,b.rtl);var c=$("#dx-treelist").text()||b.templateHtml,f=$(a).html(c),i=g.createChildContext(h.items);ko.applyBindings(i,f.children()[0])};k($.extend({},ko.unwrap(i)));var l=null;return ko.isSubscribable(i)&&(l=i.subscribe(function(a){k(a)})),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){h&&h.dispose(),l&&l.dispose()}),{controlsDescendantBindings:!0}}}}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(){function a(a){this.rtl=!1,this.parameters=ko.observable(null),this.canSelectLists=!0,this.canCreateParameters=!1,this.canChoiceParameters=!0,this.handlers={create:function(a,b){return{data:new e(a,b,"create","createItems"),templateName:"dx-filtereditor-create"}},change:function(a,b){return{data:new e(a,b,"change","items"),templateName:"dx-filtereditor-change"}},changeProperty:function(a,b){return{data:new e(a,b,"changeProperty","items","dx-filtereditor-popup-treelist"),templateName:"dx-filtereditor-changeProperty"}},changeValueType:function(a,b){return{data:new e(a,b,"changeValueType","changeTypeItems"),templateName:"dx-filtereditor-changeValueType"}},changeParameter:function(a,b){return{data:new e(a,b,"changeParameter","items"),templateName:"dx-filtereditor-changeParameter"}}},this.mapper={Aggregate:q,Property:t,Parameter:r,Value:o,Group:p,Between:m,Binary:j,Function:k,In:l,Unary:s,Default:i},this.serializer=a||new f}return a.prototype.generateTreelistOptions=function(a,b,c){var d=this,e=ko.observable(null),f=ko.observable(null);return ko.computed(function(){e({itemsProvider:ko.unwrap(a),selectedPath:ko.observable(""),selected:f,path:ko.unwrap(b),treeListController:new g(f,c),rtl:d.rtl})}),e},a}();b.FilterEditorHelper=c;var d=function(){function a(a,b,d){var e=this;this.popupContainer=".dx-viewport",this.itemsProvider=null,this.resetValue=function(){e.value("")},this.value=a,this.path=b||ko.observable(""),this.disabled=d||ko.observable(!1),this.helper=new c}return a}();b.FilterStringOptions=d;var e=function(){function a(a,b,c,d,e){var f=this;this.showPopup=function(a){f._popupService.subscription&&f._popupService.subscription.dispose(),f._popupService.title(""),f.target.isSelected(!0),f._updateActions(f.target),f._popupService.target(a.element),f._popupService.visible(!0)},this.popupContentTemplate="dx-filtereditor-popup-common",this.target=a,this._action=c,this.propertyName=d,this._popupService=b,this.popupContentTemplate=e||this.popupContentTemplate}return a.prototype._updateActions=function(a){var b=this;this._popupService.data(null),a&&(this._popupService.subscription=this._popupService.visible.subscribe(function(a){b.target.isSelected(a)}),this._popupService.viewModel=a,this._popupService.data({data:ko.unwrap(a[this.propertyName]),template:this.popupContentTemplate,click:function(c){a[b._action](c),b._popupService.visible(!1)}}))},a}();b.FilterEditorAddOn=e;var f=function(){function b(b){void 0===b&&(b=a.Data.operatorTokens),this.operatorTokens=b}return b.prototype.serializeGroupOperand=function(b,c){var d=this,e=b.operands.map(function(b){return b instanceof a.Data.GroupOperator?"("+d.serialize(b)+")":d.serialize(b)}).filter(function(a){return""!==a&&"()"!==a}).join(" "+(this.operatorTokens[b.displayType]||b.displayType)+" ");return c&&e?"Not("+e+")":e},b.prototype.serializeAggregateOperand=function(b){var c=b.operatorType===a.Data.Aggregate.Exists?"":"."+a.Data.Aggregate[b.operatorType],d=b.condition?this.serialize(b.condition):"",e=this.serialize(b.property)+"["+d+"]",f=b.operatorType!==a.Data.Aggregate.Exists?"("+(b.aggregatedExpression&&this.serialize(b.aggregatedExpression)||"")+")":"";return e+c+f},b.prototype.serializeOperandProperty=function(a){return a.displayType},b.prototype.serializeOperandValue=function(b){var c=b.value;return null===c||void 0===c||!$.isNumeric(c)&&"true"!==String(c).toLowerCase()&&"false"!==String(c).toLowerCase()?c&&b.value instanceof Date?"#"+a.Utils.serializeDate(c)+"#":c?"'"+c+"'":"?":c},b.prototype.serializeOperandParameter=function(a){return a.displayType},b.prototype.serializeBetweenOperator=function(a,b){var c=this.serialize(a.property)+" "+a.displayType+"("+this.serialize(a.begin)+", "+this.serialize(a.end)+")";return b?"Not "+c:c},b.prototype.serializeInOperator=function(a,b){var c=this,d=this.serialize(a.criteriaOperator)+" "+a.displayType+"("+a.operands.map(function(a){return c.serialize(a)}).join(", ")+")";return b?"Not "+d:d},b.prototype.serializeBinaryOperator=function(a,b){var c=b?" Not ":" ";return this.serialize(a.leftOperand)+c+(this.operatorTokens[a.displayType]||a.displayType)+" "+this.serialize(a.rightOperand)},b.prototype.serializeUnaryOperator=function(b,c){if(b.operatorType===a.Data.UnaryOperatorType.IsNull){var d=c?" Not ":" ";return this.serialize(b.operand)+" Is"+d+"Null"}if(b.operatorType===a.Data.UnaryOperatorType.Not)return this.serialize(b.operand,!0);var e=(this.operatorTokens[b.displayType]||b.displayType)+this.serialize(b.operand);return c?"Not "+e:e},b.prototype.serializeFunctionOperator=function(a,b){var c=this,d=(this.operatorTokens[a.displayType]||a.displayType)+"("+a.operands.map(function(a){return c.serialize(a)}).join(", ")+")";return b?"Not "+d:d},b.prototype.serialize=function(b,c){if(void 0===c&&(c=!1),b instanceof a.Data.AggregateOperand)return this.serializeAggregateOperand(b,c);if(b instanceof a.Data.BetweenOperator)return this.serializeBetweenOperator(b,c);if(b instanceof a.Data.BinaryOperator)return this.serializeBinaryOperator(b,c);if(b instanceof a.Data.ConstantValue)return this.serializeOperandValue(b);if(b instanceof a.Data.FunctionOperator)return this.serializeFunctionOperator(b,c);if(b instanceof a.Data.GroupOperator)return this.serializeGroupOperand(b,c);if(b instanceof a.Data.InOperator)return this.serializeInOperator(b,c);if(b instanceof a.Data.OperandParameter)return this.serializeOperandParameter(b);if(b instanceof a.Data.OperandProperty)return this.serializeOperandProperty(b);if(b instanceof a.Data.OperandValue)return this.serializeOperandValue(b);if(b instanceof a.Data.UnaryOperator)return this.serializeUnaryOperator(b,c);throw Error("Undefined type criteria operator")},b.prototype.deserialize=function(b){var c=a.Data.CriteriaOperator.parse(b);if(c instanceof a.Data.GroupOperator)return c;if(c instanceof a.Data.UnaryOperator&&c.operatorType===a.Data.UnaryOperatorType.Not){var d=c.operand;return d instanceof a.Data.GroupOperator?c:new a.Data.UnaryOperator(a.Data.UnaryOperatorType.Not,new a.Data.GroupOperator(a.Data.GroupOperatorType.And,d?[d]:[]))}return new a.Data.GroupOperator(a.Data.GroupOperatorType.And,c?[c]:[])},b}();b.FilterEditorSerializer=f;var g=function(a){function b(b,c){a.call(this),this.popupVisible=c,this.selectedItem=b}return __extends(b,a),b.prototype.itemsFilter=function(){return!0},b.prototype.hasItems=function(a){return"none"!==a.specifics&&"List"!==a.specifics&&a.isList===!0},b.prototype.canSelect=function(a){return!a.data.isList||a.data.isList===!0&&"List"===a.data.specifics},b.prototype.select=function(a){this.canSelect(a)&&(this.selectedItem(a.data),a.isSelected(!0),this.popupVisible(!1))},b}(b.TreeListController);b.FilterEditorTreeListController=g;var h=function(){function b(b,c,d){var e=this;void 0===d&&(d=!1),this.isValid=ko.observable(!0),this.operandSurface=ko.observable(null),this.operand=null,this.popupVisible=ko.observable(!1),this.buttonItems=[],this.popupService=new a.Utils.PopupService,this.rtl=d,b()&&b().helper&&(b().helper.rtl=d),this.options=b,this.save=function(){e.options().value(b().helper.serializer.serialize(e.operandSurface().model,!1)),e.popupVisible(!1)},this.fieldListProvider=c,this.isValid=ko.computed(function(){try{return e.operand=e.options().helper.serializer.deserialize(e.options().value()),!0}catch(a){return!1}}),this.popupVisible.subscribe(function(b){if(e.operand=e.options().helper.serializer.deserialize(e.options().value()),b){var c=null;c=e.operand instanceof a.Data.UnaryOperator?e.options().helper.mapper.Unary:e.options().helper.mapper.Group;var d=new c(e.operand,e,e.fieldListProvider,e.path);d.canRemove=!1,d instanceof s&&(d.operand().canRemove=!1),e.operandSurface(d)}else e.operandSurface(null)}),this.createAddButton=function(a){return b().helper.handlers.create(a,e.popupService)},this.createChangeType=function(a){return b().helper.handlers.change(a,e.popupService)},this.createChangeProperty=function(a){return b().helper.handlers.changeProperty(a,e.popupService)},this.createChangeParameter=function(a){return b().helper.handlers.changeParameter(a,e.popupService)},this.createChangeValueType=function(a){return b().helper.handlers.changeValueType(a,e.popupService)},this._createMainPopupButtons()}return b.prototype._createMainPopupButtons=function(){var b=this;this.buttonItems=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Utils.getLocalization("Save"),onClick:function(){b.save()}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Utils.getLocalization("Cancel"),onClick:function(){b.popupVisible(!1)}}}]},b.prototype.change=function(b,c){this.operand=a.Data.CriteriaOperator.create(b),this.operand.assignFrom(c.model);var b=null;b=this.operand instanceof a.Data.UnaryOperator?this.options().helper.mapper.Unary:this.options().helper.mapper.Group;var c=new b(this.operand,this,this.fieldListProvider,this.path);c.canRemove=!1,c instanceof s&&(c.operand().canRemove=!1),this.operandSurface(c)},Object.defineProperty(b.prototype,"helper",{get:function(){return this.options().helper},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"path",{get:function(){return this.options().path},enumerable:!0,configurable:!0}),b}();b.FilterEditor=h;var i=function(){function b(a,b,c,d){var e=this;this.canRemove=!0,this.operatorType=ko.observable(null),this.templateName="dx-filtereditor-common",this.isSelected=ko.observable(!1),this.operatorClass="criteria-operator-item-operator",this.popupService=b.popupService||{visible:ko.observable(!1)},this.model=a,this.helper=b.helper,this.fieldListProvider=c,this.path=d,this.parent=b,this.operatorType(a.operatorType),this.operatorType.subscribe(function(a){e.model.assignType(a)})}return b.filterEditorOperators=function(b){void 0===b&&(b="string");var c=[{name:"Equal",value:a.Data.BinaryOperatorType.Equal,type:a.Data.BinaryOperatorType},{name:"Does not equal",value:a.Data.BinaryOperatorType.NotEqual,type:a.Data.BinaryOperatorType},{name:"Is greater than",value:a.Data.BinaryOperatorType.Greater,type:a.Data.BinaryOperatorType},{name:"Is greater than or equal to",value:a.Data.BinaryOperatorType.GreaterOrEqual,type:a.Data.BinaryOperatorType},{name:"Is less than",value:a.Data.BinaryOperatorType.Less,type:a.Data.BinaryOperatorType},{name:"Is less than or equal to",value:a.Data.BinaryOperatorType.LessOrEqual,type:a.Data.BinaryOperatorType},{name:"Is between",value:"Between",type:a.Data.BetweenOperator},{name:"Is not between",value:"Between",type:a.Data.BetweenOperator,reverse:!0}];switch(b){case"guid":case"string":return[].concat(c,[{name:"Contains",value:a.Data.FunctionOperatorType.Contains,type:a.Data.FunctionOperatorType},{name:"Does not contains",value:a.Data.FunctionOperatorType.Contains,type:a.Data.FunctionOperatorType,reverse:!0},{name:"Begins with",value:a.Data.FunctionOperatorType.StartsWith,type:a.Data.FunctionOperatorType},{name:"Ends with",value:a.Data.FunctionOperatorType.EndsWith,type:a.Data.FunctionOperatorType},{name:"Is like",value:a.Data.BinaryOperatorType.Like,type:a.Data.BinaryOperatorType},{name:"Is not like",value:a.Data.BinaryOperatorType.Like,type:a.Data.BinaryOperatorType,reverse:!0},{name:"Is any of",value:"In",type:a.Data.InOperator},{name:"Is none of",value:"In",type:a.Data.InOperator,reverse:!0},{name:"Is blank",value:a.Data.FunctionOperatorType.IsNullOrEmpty,type:a.Data.FunctionOperatorType},{name:"Is not blank",value:a.Data.FunctionOperatorType.IsNullOrEmpty,type:a.Data.FunctionOperatorType,reverse:!0}]);case"integer":case"float":return[].concat(c,[{name:"Is null",value:a.Data.UnaryOperatorType.IsNull,type:a.Data.UnaryOperatorType},{name:"Is not null",value:a.Data.UnaryOperatorType.IsNull,type:a.Data.UnaryOperatorType,reverse:!0},{name:"Is any of",value:"In",type:a.Data.InOperator},{name:"Is none of",value:"In",type:a.Data.InOperator,reverse:!0}]);case"date":return[].concat(c,[{name:"Is null",value:a.Data.UnaryOperatorType.IsNull,type:a.Data.UnaryOperatorType},{name:"Is not null",value:a.Data.UnaryOperatorType.IsNull,type:a.Data.UnaryOperatorType,reverse:!0},{name:"Is any of",value:"In",type:a.Data.InOperator},{name:"Is none of",value:"In",type:a.Data.InOperator,reverse:!0},{name:"Is beyond this year",value:a.Data.FunctionOperatorType.IsOutlookIntervalBeyondThisYear,type:a.Data.FunctionOperatorType},{name:"Is later this year",value:a.Data.FunctionOperatorType.IsOutlookIntervalLaterThisYear,type:a.Data.FunctionOperatorType},{name:"Is later this month",value:a.Data.FunctionOperatorType.IsOutlookIntervalLaterThisMonth,type:a.Data.FunctionOperatorType},{name:"Is next week",value:a.Data.FunctionOperatorType.IsOutlookIntervalNextWeek,type:a.Data.FunctionOperatorType},{name:"Is later this week",value:a.Data.FunctionOperatorType.IsOutlookIntervalLaterThisWeek,type:a.Data.FunctionOperatorType},{name:"Is tomorrow",value:a.Data.FunctionOperatorType.IsOutlookIntervalTomorrow,type:a.Data.FunctionOperatorType},{name:"Is today",value:a.Data.FunctionOperatorType.IsOutlookIntervalToday,type:a.Data.FunctionOperatorType},{name:"Is yesterday",value:a.Data.FunctionOperatorType.IsOutlookIntervalYesterday,type:a.Data.FunctionOperatorType},{name:"Is earlier this week",value:a.Data.FunctionOperatorType.IsOutlookIntervalEarlierThisWeek,type:a.Data.FunctionOperatorType},{name:"Is last week",value:a.Data.FunctionOperatorType.IsOutlookIntervalLastWeek,type:a.Data.FunctionOperatorType},{name:"Is earlier this month",value:a.Data.FunctionOperatorType.IsOutlookIntervalEarlierThisMonth,type:a.Data.FunctionOperatorType},{name:"Is earlier this month",value:a.Data.FunctionOperatorType.IsOutlookIntervalEarlierThisYear,type:a.Data.FunctionOperatorType},{name:"Is prior this year",value:a.Data.FunctionOperatorType.IsOutlookIntervalPriorThisYear,type:a.Data.FunctionOperatorType}]);case"list":return[{name:"Exists",value:a.Data.Aggregate.Exists,type:a.Data.Aggregate},{name:"Count",value:a.Data.Aggregate.Count,type:a.Data.Aggregate},{name:"Max",value:a.Data.Aggregate.Max,type:a.Data.Aggregate},{name:"Min",value:a.Data.Aggregate.Min,type:a.Data.Aggregate},{name:"Sum",value:a.Data.Aggregate.Sum,type:a.Data.Aggregate},{name:"Avg",value:a.Data.Aggregate.Avg,type:a.Data.Aggregate}];case"group":return[{name:"And",value:a.Data.GroupOperatorType.And,type:a.Data.GroupOperatorType},{name:"Or",value:a.Data.GroupOperatorType.Or,type:a.Data.GroupOperatorType},{name:"Not And",value:a.Data.GroupOperatorType.And,reverse:!0,type:a.Data.GroupOperatorType},{name:"Not Or",value:a.Data.GroupOperatorType.Or,reverse:!0,type:a.Data.GroupOperatorType}]}return[].concat(c)},b.prototype._createLeftPartProperty=function(b){if(b instanceof a.Data.OperandProperty)var c=this.createChildSurface(b);else var c=this.createChildSurface(b);return c.canChange=!1,c.canRemove=!1,this.specifics=c instanceof q?ko.computed(function(){return c.aggregatedExpression()&&c.aggregatedExpression().specifics()||"integer"}):c.specifics,c},b.prototype.createChildSurface=function(a,b){return new this.helper.mapper[a.type](a,this,this.fieldListProvider,b||this.path)},Object.defineProperty(b.prototype,"items",{get:function(){return b.filterEditorOperators(this.specifics())},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"displayType",{get:function(){var a=this,b=this.items.filter(function(b){return a.operatorType()===b.value&&a.reverse===b.reverse&&a.model.enumType===b.type})[0];return b&&b.name||""},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"leftPart",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return null},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"css",{get:function(){return this.operatorClass+(this.isSelected()?" selected":"")},enumerable:!0,configurable:!0}),b.prototype.change=function(b,c){!c&&b&&this.model.enumType===b.type&&this.reverse===b.reverse&&b.type!==a.Data.FunctionOperatorType?this.operatorType(b.value):this.parent.change(b,this)},b.prototype.remove=function(){this.parent.remove(this)},b}();b.CriteriaOperatorSurface=i;var j=function(a){function b(b,c,d,e){a.call(this,b,c,d,e),this.contentTemplateName="dx-filtereditor-binary",this.leftOperand=ko.observable(null),this.rightOperand=ko.observable(null),this.leftOperand(this._createLeftPartProperty(b.leftOperand)),this.rightOperand(this.createChildSurface(b.rightOperand))}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.leftOperand()},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return this.rightOperand()},enumerable:!0,configurable:!0}),b}(i);b.BinaryOperandSurface=j;var k=function(a){function b(b,c,d,e){a.call(this,b,c,d,e),this.contentTemplateName="dx-filtereditor-function",this.operands=ko.observableArray([]),this.operands.push(this._createLeftPartProperty(b.operands[0]));for(var f=1;f<b.operands.length;f++)this.operands.push(this.createChildSurface(b.operands[f]))}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.operands&&this.operands()[0]},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return this.operands&&this.operands().filter(function(a,b){return 0!==b})},enumerable:!0,configurable:!0}),b}(i);b.FunctionOperandSurface=k;var l=function(b){function c(c,d,e,f){var g=this;b.call(this,c,d,e,f),this.contentTemplateName="dx-filtereditor-in",this.operands=ko.observableArray([]),this.criteriaOperator=ko.observable(null),this.criteriaOperator(this._createLeftPartProperty(c.criteriaOperator)),this.operands((c.operands||[]).map(function(a){return g.createChildSurface(a)})),this.addValue=function(){var b=new a.Data.OperandValue(null);g.model.operands.push(b),g.operands.push(g.createChildSurface(b))}}return __extends(c,b),Object.defineProperty(c.prototype,"leftPart",{get:function(){return this.criteriaOperator()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"rightPart",{get:function(){return this.operands()},enumerable:!0,configurable:!0}),c}(i);b.InOperandSurface=l;var m=function(a){function b(b,c,d,e){a.call(this,b,c,d,e),this.property=ko.observable(null),this.end=ko.observable(null),this.begin=ko.observable(null),this.contentTemplateName="dx-filtereditor-between",this.property(this._createLeftPartProperty(b.property)),this.begin(this.createChildSurface(b.begin)),this.end(this.createChildSurface(b.end))}return __extends(b,a),Object.defineProperty(b.prototype,"leftPart",{get:function(){return this.property&&this.property()},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"rightPart",{get:function(){return[this.begin(),this.end()]},enumerable:!0,configurable:!0}),b}(i);b.BetweenOperandSurface=m;var n=function(b){function c(a,c,d,e){var f=this;b.call(this,a,c,d,e),this.canChange=!0,this.canRemove=!1,this.changeValueType=function(a){var b=f.getRealParent(f.parent),c=f.getRealProperty(f),d=f.getPropertyName(b,c),e=b.model.changeValueType(a.instance,d);null!==d.index?b[d.name].splice(d.index,1,b.createChildSurface(e)):b[d.name](b.createChildSurface(e))}}return __extends(c,b),c.prototype.getRealParent=function(a){return a instanceof s?this.getRealParent(a.parent):a},c.prototype.getRealProperty=function(a){return a.parent instanceof s?this.getRealProperty(a.parent):a},c.prototype.getPropertyName=function(a,b){var c=null,d=null;return $.each(a,function(a,e){if(Array.isArray(ko.unwrap(e))&&ko.isObservable(e)){var f=ko.unwrap(e).indexOf(b);if(f>-1)return c=f,void(d=a)}else if(b===ko.unwrap(e)&&ko.isObservable(e))return void(d=a)}),{index:c,name:d}},Object.defineProperty(c.prototype,"changeTypeItems",{get:function(){var b=this,c=[{name:"Property",instance:a.Data.OperandProperty},{name:"Value",instance:a.Data.OperandValue}];return this.helper.canChoiceParameters&&(this.helper.parameters()&&this.helper.parameters().filter(function(a){return a.specifics&&a.specifics.toLowerCase()===b.specifics()}).length>0||this.helper.canCreateParameters)&&c.push({name:"Parameter",instance:a.Data.OperandParameter}),c},enumerable:!0,configurable:!0}),c}(i);b.OperandSurfaceBase=n;var o=function(c){function d(e,f,g,h){
var i=this;c.call(this,e,f,g,h),this._value=ko.observable(null),this._updateDate=function(a){this._value("date"===a?new Date((new Date).setHours(0,0,0,0)):"")},this.changeValue=function(){var a=i.getRealParent(i.parent),b=i.getRealProperty(i),c=i.getPropertyName(a,b),d=a.model.changeValue(i.model,i.reverse,c);null!==c.index?a[c.name].splice(c.index,1,a.createChildSurface(d)):a[c.name](a.createChildSurface(d))},this.values=ko.observable([]),this.isEditable=ko.observable(!1),this.templateName="dx-filtereditor-value",f instanceof s?(this.specifics=f.parent.specifics,f.model.operatorType===a.Data.UnaryOperatorType.Minus&&(this.reverse=!0)):this.specifics=f.specifics,this.specifics.subscribe(function(a){i._updateDate(a)}),this._value(e.value),(null===this._value()||void 0===this._value()||""===this._value())&&this._updateDate(this.specifics()),this._value.subscribe(function(a){i.model.value=a}),this.value=ko.computed({read:function(){var b=i._value();if(b instanceof Date&&(b=a.Utils.serializeDate(b)),i.items.length>0){var c=i.items.filter(function(a){return a.value===b})[0];if(c)return c.display}return i.reverse&&(b="-"+b),null!==b&&void 0!==b&&""!==b?b:d.defaultDisplay},write:function(a){a>0&&!i.reverse||0>a&&i.reverse?i._value(a):(a>0&&i.reverse||0>a&&!i.reverse)&&(i.reverse=!i.reverse,i._value(0>a?0-a:a),i.changeValue())}}),ko.computed(function(){var a=ko.unwrap(g);a&&a.getValues&&i.parent.leftPart instanceof t&&i.parent.leftPart.propertyName()&&a.getValues(new b.PathRequest(ko.unwrap(i.path)+"."+i.parent.leftPart.propertyName())).done(function(a){i.values(a)})})}return __extends(d,c),Object.defineProperty(d.prototype,"items",{get:function(){return this.values()},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"displayType",{get:function(){return null},enumerable:!0,configurable:!0}),d.defaultDisplay="Enter a value",d}(n);b.OperandValueSurface=o;var p=function(b){function c(c,d,e,f){var g=this;b.call(this,c,d,e,f),this.templateName="dx-filtereditor-group",this.operatorClass="criteria-operator-item-group",this.operands=ko.observableArray([]),this.createItems=null,this.createItems=[{name:a.Utils.getLocalization("Add group"),value:!0},{name:a.Utils.getLocalization("Add condition"),value:!1}],this.operands((c.operands||[]).map(function(a){return g.createChildSurface(a)})),this.specifics=ko.observable("group")}return __extends(c,b),c.prototype.change=function(a,c){if(c){var d=c.specifics()||"integer",e=i.filterEditorOperators(d);if(!a){var f=e.filter(function(a){return c.operatorType()===a.value&&c.reverse===a.reverse&&c.model.enumType===a.type})[0];a=f?f:e[0]}var g=this.model.change(a,c.model,c.leftPart instanceof q&&"list"!==c.leftPart.leftPart.specifics()),h=this.operands().indexOf(c),j=this.createChildSurface(g);this.operands.splice(h,1,j)}else b.prototype.change.call(this,a,c)},c.prototype.remove=function(a){a?(this.model.remove(a.model),this.operands.remove(a)):this.parent.remove(this)},c.prototype.create=function(b){var c=this.model.create(b.value,new a.Data.OperandProperty);this.operands.push(this.createChildSurface(c))},Object.defineProperty(c.prototype,"rightPart",{get:function(){return this.operands()},enumerable:!0,configurable:!0}),c}(i);b.GroupOperandSurface=p;var q=function(b){function c(c,d,e,f){var g=this;b.call(this,c,d,e,f),this.contentTemplateName="dx-filtereditor-aggregate",this.property=ko.observable(null),this.aggregatedExpression=ko.observable(null),this.condition=ko.observable(null),this.property(this._createLeftPartProperty(c.property));var h=ko.computed(function(){return g.path()+"."+g.property().propertyName()});c.aggregatedExpression&&(this.aggregatedExpression(this.createChildSurface(c.aggregatedExpression,h)),this.templateName="dx-filtereditor-aggregate-common"),c.operatorType===a.Data.Aggregate.Count&&(this.templateName="dx-filtereditor-aggregate-common");var i=this.createChildSurface(c.condition,h);i.canRemove=!1,i instanceof s&&(i.operand().canRemove=!1),this.condition(i),this.change=function(c,d){if(d){var e=g.model.change(c,d.model),f=g.createChildSurface(e,h);f.canRemove=!1,f instanceof s&&(f.operand().canRemove=!1),g.condition(f)}else g.operatorType()===a.Data.Aggregate.Exists||g.operatorType()===a.Data.Aggregate.Count?g.parent.change(c,g):!c||c.value!==a.Data.Aggregate.Exists&&c.value!==a.Data.Aggregate.Count?b.prototype.change.call(g,c,d):g.parent.change(c,g)}}return __extends(c,b),Object.defineProperty(c.prototype,"leftPart",{get:function(){return this.property&&this.property()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"rightPart",{get:function(){return this.aggregatedExpression()},enumerable:!0,configurable:!0}),c}(i);b.AggregateOperandSurface=q;var r=function(a){function b(b,c,d,e){var f=this;a.call(this,b,c,d,e),this.changeParameter=function(a){f.model.parameterName=a.name,f.parameterName(a.name)},this.operatorClass="criteria-operator-item-parameter",this.parameterName=ko.observable(""),this.templateName="dx-filtereditor-parameter",this.specifics=c.specifics,this.parameterName(b.parameterName)}return __extends(b,a),Object.defineProperty(b.prototype,"items",{get:function(){var a=this;return this.helper.parameters().filter(function(b){return b.specifics.toLocaleLowerCase()===a.specifics()})},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"displayType",{get:function(){return null},enumerable:!0,configurable:!0}),b}(n);b.OperandParameterSurface=r;var s=function(b){function c(c,d,e,f){b.call(this,c,d,e,f),this.contentTemplateName="dx-filtereditor-unary",this.operand=ko.observable(null);var g=this.createChildSurface(c.operand);c.operatorType===a.Data.UnaryOperatorType.Not?(this.templateName="dx-filtereditor-not",g.reverse=!0,this.specifics=g.specifics):g=this._createLeftPartProperty(c.operand),this.operand(g)}return __extends(c,b),Object.defineProperty(c.prototype,"leftPart",{get:function(){var a=this.operand();return this.operand()&&this.operand().reverse&&this.operand().leftPart&&(a=this.operand().leftPart),a},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"rightPart",{get:function(){return this.operand()&&this.operand().reverse?this.operand().rightPart:null},enumerable:!0,configurable:!0}),c}(i);b.UnaryOperandSurface=s;var t=function(a){function c(b,c,d,e){var f=this;a.call(this,b,c,d,e),this._displayName=ko.observable(""),this.propertyName=ko.observable(""),this.specifics=ko.observable("integer"),this.valueType=ko.observable(""),this.changeProperty=function(a){f.fieldsOptions().selected(a)},this.templateName="dx-filtereditor-property",this.operatorClass="criteria-operator-item-field",this.propertyName(b.propertyName),this.fieldsOptions=this.helper.generateTreelistOptions(d,e,this.popupService.visible),this.fieldsOptions().selected.subscribe(function(a){var b=a.specifics.toLowerCase();0===b.indexOf("calc")&&(b=b.split("calc")[1]),f.propertyName(a.name),f._displayName(a.displayName),f.model.propertyName=a.name,f.specifics()!==b&&(f.specifics(b),f.parent.change())}),this.fieldsOptions().selectedPath(this.propertyName()),this._updateSpecifics(),this.displayName=ko.computed(function(){return f.helper.getDisplayPropertyName?f.helper.getDisplayPropertyName(f.propertyName(),e):f._displayName()||f.propertyName()})}return __extends(c,a),c.prototype._updateSpecifics=function(){var a=this;ko.unwrap(this.fieldListProvider)&&ko.unwrap(this.fieldListProvider).getItems(new b.PathRequest(this.path())).done(function(b){var c=b.filter(function(a){return"List"!==a.specifics});!a.propertyName()&&c.length>0&&(a.model.propertyName=c[0].name,a.propertyName(c[0].name));var d=b.filter(function(b){return b.name===a.propertyName()})[0];d&&(a.specifics(d.specifics.toLowerCase()),a._displayName(d.displayName))})},Object.defineProperty(c.prototype,"items",{get:function(){return this.fieldsOptions},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"displayType",{get:function(){return null},enumerable:!0,configurable:!0}),c}(n);b.OperandPropertySurface=t,ko.bindingHandlers.dxFilterEditor={init:function(a,b){$(a).children().remove(),$(a).addClass("dx-popup-general");var c=$("#dx-filtereditor").text(),d=$(a).append(c),e=b(),f=ko.observable(ko.unwrap(e.fieldListProvider));return ko.computed(function(){f(e.options().itemsProvider?ko.unwrap(e.options().itemsProvider):ko.unwrap(e.fieldListProvider))}),ko.applyBindings(new h(e.options,f,$(a).closest(".dx-rtl").length>0),d.children()[0]),{controlsDescendantBindings:!0}}},ko.components.register("dx-filtereditor-plain",{viewModel:{createViewModel:function(a){var b=new h(a.options,ko.observable(a.fieldListProvider));return b.popupVisible(!0),a.options().value.subscribe(function(){b.popupVisible(!1),b.popupVisible(!0)}),b}},template:{element:"dx-filtereditor-plain"}})}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=[{text:"+",image:"addition",description:"Adds the value of one numeric expression to another or concatenates two strings."},{text:"-",image:"subtraction",description:"Finds the difference between two numbers."},{text:"*",image:"multiplication",description:"Multiplies the value of two expressions."},{text:"/",image:"division",description:"Divides the first operand by the second."},{text:"%",image:"modulus",hasSeparator:!0,description:"Returns the remainder (modulus) obtained by dividing one numeric expression into another."},{text:"()",image:"parenthesis",hasSeparator:!0},{text:"|",description:"Compares each bit of its first operand to the corresponding bit of its second operand. If either bit is 1, the corresponding result bit is set to 1. Otherwise, the corresponding result bit is set to 0."},{text:"&",description:"Performs a bitwise logical AND operation between two integer values."},{text:"^",description:"Performs a logical exclusion on two Boolean expressions, or a bitwise exclusion on two numeric expressions."},{text:"==",image:"equal",description:"Returns true if both operands have the same value; otherwise, it returns false."},{text:"!=",image:"not_equal",description:"Returns true if the operands do not have the same value; otherwise, it returns false."},{text:"<",image:"less",description:"Less than operator. Used to compare expressions."},{text:"<=",image:"less_or_equal",description:"Less than or equal to operator. Used to compare expressions."},{text:">=",image:"greater_or_equal",description:"Greater than or equal to operator. Used to compare expressions."},{text:">",hasSeparator:!0,image:"greater",description:"Greater than operator. Used to compare expressions."},{text:"In",description:"In (,,,)    Tests for the existence of a property in an object."},{text:"Like",description:"Compares a string against a pattern. If the value of the string matches the pattern, then the result is true. If the string does not match the pattern, the result is false. If both string and pattern are empty strings, the result is true."},{text:"Between",description:"Between (,)    Specifies a range to test. Returns true if a value is greater than or equal to the first operand and less than or equal to the second operand."},{text:"And",image:"and",description:"Performs a logical conjunction on two expressions."},{text:"Or",image:"or",description:"Performs a logical disjunction on two Boolean expressions."},{text:"Not",image:"not",description:"Performs logical negation on an expression."}];b.functionDisplay=[{display:"Aggregate",items:{Avg:[{paramCount:0,text:"[].Avg()",displayName:"Avg()"}],Count:[{paramCount:0,text:"[].Count()",displayName:"Count()"}],Exists:[{paramCount:0,text:"[].Exists()",displayName:"Exists()"}],Max:[{paramCount:0,text:"[].Max()",displayName:"Max()"}],Min:[{paramCount:0,text:"[].Min()",displayName:"Min()"}],Single:[{paramCount:0,text:"[].Single()",displayName:"Single()"}],Sum:[{paramCount:0,text:"[].Sum()",displayName:"Sum()"}]}},{display:"Date-Time",items:{LocalDateTimeThisYear:[{paramCount:0,text:"LocalDateTimeThisYear()"}],LocalDateTimeThisMonth:[{paramCount:0,text:"LocalDateTimeThisMonth()"}],LocalDateTimeLastWeek:[{paramCount:0,text:"LocalDateTimeLastWeek()"}],LocalDateTimeThisWeek:[{paramCount:0,text:"LocalDateTimeThisWeek()"}],LocalDateTimeYesterday:[{paramCount:0,text:"LocalDateTimeYesterday()"}],LocalDateTimeToday:[{paramCount:0,text:"LocalDateTimeToday()"}],LocalDateTimeNow:[{paramCount:0,text:"LocalDateTimeNow()"}],LocalDateTimeTomorrow:[{paramCount:0,text:"LocalDateTimeTomorrow()"}],LocalDateTimeDayAfterTomorrow:[{paramCount:0,text:"LocalDateTimeDayAfterTomorrow()"}],LocalDateTimeNextWeek:[{paramCount:0,text:"LocalDateTimeNextWeek()"}],LocalDateTimeTwoWeeksAway:[{paramCount:0,text:"LocalDateTimeTwoWeeksAway()"}],LocalDateTimeNextMonth:[{paramCount:0,text:"LocalDateTimeNextMonth()"}],LocalDateTimeNextYear:[{paramCount:0,text:"LocalDateTimeNextYear()"}],IsOutlookIntervalBeyondThisYear:null,IsOutlookIntervalLaterThisYear:null,IsOutlookIntervalLaterThisMonth:null,IsOutlookIntervalNextWeek:null,IsOutlookIntervalLaterThisWeek:null,IsOutlookIntervalTomorrow:null,IsOutlookIntervalToday:null,IsOutlookIntervalYesterday:null,IsOutlookIntervalEarlierThisWeek:null,IsOutlookIntervalLastWeek:null,IsOutlookIntervalEarlierThisMonth:null,IsOutlookIntervalEarlierThisYear:null,IsOutlookIntervalPriorThisYear:null,IsThisWeek:[{paramCount:1,text:"IsThisWeek()"}],IsThisMonth:[{paramCount:1,text:"IsThisMonth()"}],IsThisYear:[{paramCount:1,text:"IsThisYear()"}],DateDiffTick:[{paramCount:2,text:"DateDiffTick(, )"}],DateDiffSecond:[{paramCount:2,text:"DateDiffSecond(, )"}],DateDiffMilliSecond:[{paramCount:2,text:"DateDiffMilliSecond(, )"}],DateDiffMinute:[{paramCount:2,text:"DateDiffMinute(, )"}],DateDiffHour:[{paramCount:2,text:"DateDiffHour(, )"}],DateDiffDay:[{paramCount:2,text:"DateDiffDay(, )"}],DateDiffMonth:[{paramCount:2,text:"DateDiffMonth(, )"}],DateDiffYear:[{paramCount:2,text:"DateDiffYear(, )"}],GetDate:[{paramCount:1,text:"GetDate()"}],GetMilliSecond:[{paramCount:1,text:"GetMilliSecond()"}],GetSecond:[{paramCount:1,text:"GetSecond()"}],GetMinute:[{paramCount:1,text:"GetMinute()"}],GetHour:[{paramCount:1,text:"GetHour()"}],GetDay:[{paramCount:1,text:"GetDay()"}],GetMonth:[{paramCount:1,text:"GetMonth()"}],GetYear:[{paramCount:1,text:"GetYear()"}],GetDayOfWeek:[{paramCount:1,text:"GetDayOfWeek()"}],GetDayOfYear:[{paramCount:1,text:"GetDayOfYear()"}],GetTimeOfDay:[{paramCount:1,text:"GetTimeOfDay()"}],Now:[{paramCount:0,text:"Now()"}],UtcNow:[{paramCount:0,text:"UtcNow()"}],Today:[{paramCount:0,text:"Today()"}],AddTimeSpan:[{paramCount:2,text:"AddTimeSpan(, )"}],AddTicks:[{paramCount:2,text:"AddTicks(, )"}],AddMilliSeconds:[{paramCount:2,text:"AddMilliSeconds(, )"}],AddSeconds:[{paramCount:2,text:"AddSeconds(, )"}],AddMinutes:[{paramCount:2,text:"AddMinutes(, )"}],AddHours:[{paramCount:2,text:"AddHours(, )"}],AddDays:[{paramCount:2,text:"AddDays(, )"}],AddMonths:[{paramCount:2,text:"AddMonths(, )"}],AddYears:[{paramCount:2,text:"AddYears(, )"}]}},{display:"Logical",items:{Iif:[{paramCount:3,text:"Iif(, , )"}],IsNull:[{paramCount:1,text:"IsNull()"}],IsNullOrEmpty:[{paramCount:1,text:"IsNullOrEmpty()"}]}},{display:"Math",items:{Abs:[{paramCount:1,text:"Abs()"}],Sqr:[{paramCount:1,text:"Sqr()"}],Cos:[{paramCount:1,text:"Cos()"}],Sin:[{paramCount:1,text:"Sin()"}],Atn:[{paramCount:1,text:"Atn()"}],Exp:[{paramCount:1,text:"Exp()"}],Log:[{paramCount:1,text:"Log()"},{paramCount:2,text:"Log(, )"}],Rnd:[{paramCount:0,text:"Rnd()"}],Tan:[{paramCount:1,text:"Tan()"}],Power:[{paramCount:2,text:"Power(, )"}],Sign:[{paramCount:1,text:"Sign()"}],Round:[{paramCount:1,text:"Round()"},{paramCount:2,text:"Round(, )"}],Ceiling:[{paramCount:1,text:"Ceiling()"}],Floor:[{paramCount:1,text:"Floor()"}],Max:[{paramCount:2,text:"Max(, )"}],Min:[{paramCount:2,text:"Min(, )"}],Acos:[{paramCount:1,text:"Acos()"}],Asin:[{paramCount:1,text:"Asin()"}],Atn2:[{paramCount:2,text:"Atn2(, )"}],BigMul:[{paramCount:2,text:"BigMul(, )"}],Cosh:[{paramCount:1,text:"Cosh()"}],Log10:[{paramCount:1,text:"Log10()"}],Sinh:[{paramCount:1,text:"Sinh()"}],Tanh:[{paramCount:1,text:"Tanh()"}],ToInt:[{paramCount:1,text:"ToInt()"}],ToLong:[{paramCount:1,text:"ToLong()"}],ToFloat:[{paramCount:1,text:"ToFloat()"}],ToDouble:[{paramCount:1,text:"ToDouble()"}],ToDecimal:[{paramCount:1,text:"ToDecimal()"}]}},{display:"String",items:{Trim:[{paramCount:1,text:"Trim()"}],Len:[{paramCount:1,text:"Len()"}],Substring:[{paramCount:3,text:"Substring('', , )"},{paramCount:2,text:"Substring('', )"}],Upper:[{paramCount:1,text:"Upper()"}],Lower:[{paramCount:1,text:"Lower()"}],Concat:[{paramCount:1/0,text:"Concat(, )"}],Ascii:[{paramCount:1,text:"Ascii('')"}],Char:[{paramCount:1,text:"Char()"}],ToStr:[{paramCount:1,text:"ToStr()"}],Replace:[{paramCount:3,text:"Replace('','', '')"}],Reverse:[{paramCount:1,text:"Reverse('')"}],Insert:[{paramCount:3,text:"Insert('', , '')"}],CharIndex:[{paramCount:2,text:"CharIndex('','')"},{paramCount:3,text:"CharIndex('','', )"}],Remove:[{paramCount:3,text:"Remove('', , )"}],PadLeft:[{paramCount:2,text:"PadLeft(, )"},{paramCount:3,text:"PadLeft(, , '')"}],PadRight:[{paramCount:2,text:"PadRight(, )"},{paramCount:3,text:"PadRight(, , '')"}],StartsWith:[{paramCount:2,text:"StartsWith('', '')"}],EndsWith:[{paramCount:2,text:"EndsWith('', '')"}],Contains:[{paramCount:0,text:"Contains('', '')"}]}}];var d=function(){function d(a,d,e){this.popularItems=[],this.toolBox=[],this.description=ko.observable(),this._defaultClick=a,this.popularItems=this._generatePopularItems(c.filter(function(a){return!!a.image})),this.toolBox=[this._generateList("FUNCTIONS",b.functionDisplay.map(function(a){return{display:a.display,collapsed:ko.observable(!0),items:$.map(a.items,function(a){if(a){var b=[];return a.forEach(function(a){b.push(a)}),b}})}}),"dx-expressioneditor-functions"),this._generateList("OPERATORS",c.filter(function(a){return!!a.description}))],this.toolBox.push(this._generateList("FIELDS",{fields:e,parameters:d},"dx-expressioneditor-fields","37%"))}return d.prototype._generateList=function(b,c,d,e,f){var g=this;return void 0===d&&(d=null),{templateName:d,width:e||"30%",title:a.Utils.getLocalization(b),content:c,click:f||this._defaultClick,selection:function(a){g.description(a.description||a.text)}}},d.prototype._generatePopularItems=function(a,b){var c=this;return a.map(function(a){return{templateName:a.templateName||null,text:a.text||a,imgClassName:"dx-image-expressioneditor-"+a.image,hasSeparator:a.hasSeparator,description:a.description,click:b||c._defaultClick}})},d}();b.Tools=d;var e=function(a){function b(b,c,d){a.call(this),this.fieldName=b,this.putSelectionHandler=c,this.selectionHandler=d}return __extends(b,a),b.prototype.itemsFilter=function(a){return"none"!==a.specifics&&a.name!==ko.unwrap(this.fieldName)},b.prototype.select=function(a){this.selectionHandler(ko.unwrap(a.data.type))},b.prototype.getActions=function(a){var b=this;return[{clickAction:function(c){b.putSelectionHandler(a.path,c)}}]},b.prototype.canSelect=function(){return!0},b}(b.TreeListController);b.ExpressionEditorTreeListController=e;var f=function(){function b(b,c,f,g){var h=this;void 0===f&&(f=ko.observable(!1)),void 0===g&&(g=!1),this.popupVisible=ko.observable(!1),this.value=ko.observable(""),this.textAreaValue=ko.observable(""),this.isValid=ko.observable(!0),this.buttonItems=[],this.rtl=!1,this.value=b().value,this.rtl=g,this.textAreaValue(this.value()),this.popupVisible.subscribe(function(){h.textAreaValue(h.value())}),this.fieldListProvider=ko.unwrap(c),this.disabled=f;this.save=function(c){try{a.Data.CriteriaOperator.parse(h.textAreaValue()),b().value(h.textAreaValue()),h.popupVisible(!1)}catch(d){var e=a.Data.CriteriaOperator.getNotValidRange(h.textAreaValue(),d.message),f=h._getTextArea(c.element);f&&f.setSelectionRange(e.start,e.end),h.isValid(!1)}};var i=function(a,b){var c=h._getTextArea(b),d=h.textAreaValue().toString(),e=c&&c.selectionStart||d.length,f=" "==d[e-1]?(a.text||a)+" ":" "+(a.text||a)+" ";if(h.textAreaValue([d.slice(0,e),f,d.slice(e)].join("")),c&&c.setSelectionRange){c.focus();var g=e+(-1!==f.indexOf("(")?f.indexOf("(")+1:f.length);c.setSelectionRange(g,g)}},j=function(a){return function(b,c){var d="["+(""!==ko.unwrap(a)?b.substring(ko.unwrap(a).length+1):b)+"]";i(d,c)}},k=ko.observable(null);if(ko.computed(function(){if(b()){var a=ko.observable("");k({itemsProvider:h.fieldListProvider,selectedPath:a,path:"parameters",templateName:"dx-ee-treelist-item",treeListController:new e("",j(""),h._createSelectionHandler("parameter")),rtl:g})}}),b().path){var l=ko.observable(null);this.tools=new d(i,k,l),ko.computed(function(){if(b()){var a=ko.observable("");l({itemsProvider:h.fieldListProvider,selectedPath:a,path:b().path(),templateName:"dx-ee-treelist-item",treeListController:new e(b().fieldName,j(b().path),h._createSelectionHandler("field")),rtl:g})}})}else this.tools=new d(i,k);this._createMainPopupButtons()}return b.prototype._createMainPopupButtons=function(){var b=this;this.buttonItems=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Utils.getLocalization("Save"),onClick:function(a){b.save(a)}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Utils.getLocalization("Cancel"),onClick:function(){b.popupVisible(!1)}}},{toolbar:"bottom",location:"before",template:function(){return $("#dx-expressioneditor-description")},text:b.tools.description}]},b.prototype._createSelectionHandler=function(a){var b=this;return function(c){b.tools.description(c&&"None"!==c?"The type of this "+a+" is: "+c:"")}},b.prototype._getTextArea=function(a){return a&&a.parents(".dx-expressioneditor").find(":input")[0]},b}();b.ExpressionEditor=f,ko.bindingHandlers.dxExpressionEditor={init:function(a,b,c,d){var e=$(a);e.children().remove(),$(a).addClass("dx-popup-general");var g=$("#dx-expressioneditor").text(),e=e.append(g),h=b();return ko.applyBindings(new f(h.options,h.fieldListProvider,d.disabled,$(a).closest(".dx-rtl").length>0),e.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(){function a(a){this.popupContainer=".dx-viewport",this.disabled=ko.observable(!1),this.value=a}return a}();b.FormatStringEditorOptions=c;var d=function(){function b(b,d,e){var f=this;this.currentType=ko.observable(),this.patternList=ko.observableArray([]),this.formatPrefix=ko.observable(""),this.formatSuffix=ko.observable(""),this.previewString=ko.observable("preview string"),this.formatResult=ko.observable(""),this.popupVisible=ko.observable(!1);var g=this;this.popupService=new a.Utils.PopupService;var h=new c(b);this._standardPatternSource=d,this.types=this._convertArray(Object.keys(d)),this.currentType(this.types[0].name),this._customPatternSource=e||{},this.options=ko.observable(h),this._createMainPopupButtons(),this.setType=function(a){g.currentType(a.itemData.name),g._updateFormatList(),g.updatePreview()},this.setFormat=function(a){g.formatResult(a.itemData.name),g.updatePreview()},this.addCustomFormat=function(){g.formatResult()&&-1==g.patternList().map(function(a){return a.name}).indexOf(g.formatResult())&&(f.customPatterns.push(g.formatResult()),g._updateFormatList(),f._scrollToBottom())},this.removeCustomFormat=function(a){f.customPatterns.splice(f.customPatterns.indexOf(a.name),1),g._updateFormatList()},this._updateFormatList()}return b.prototype._createMainPopupButtons=function(){var a=this;this.buttonItems=[{toolbar:"bottom",location:"after",widget:"button",options:{text:"OK",onClick:function(){a.options().value(a.formatResult()),a.popupVisible(!1)}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:"Cancel",onClick:function(){a.popupVisible(!1)}}}]},b.prototype._convertArray=function(a,b){return a.map(function(a){return{name:a,canRemove:!!b}})},b.prototype._scrollToBottom=function(){var a=$(".dx-format-string .dx-format-string-formats").find(".dx-scrollview"),b=a.data("dxScrollView")&&a.dxScrollView("instance");b&&b.scrollTo&&b.scrollTo(b.scrollHeight())},b.prototype._updateFormatList=function(){var a=this._standardPatternSource[this.currentType()];this.patternList(this._convertArray(a.patterns).concat(this._convertArray(this.customPatterns,!0)))},b.prototype.updatePreview=function(){this.previewString(this._standardPatternSource[this.currentType()].value||"preview string")},Object.defineProperty(b.prototype,"customPatterns",{get:function(){var a=this._standardPatternSource[this.currentType()];return this._customPatternSource[a.type]=this._customPatternSource[a.type]||[]},enumerable:!0,configurable:!0}),b}();b.FormatStringEditor=d,ko.bindingHandlers.dxFormatEditor={init:function(a,b){$(a).children().remove(),$(a).addClass("dx-popup-general");var c=$("#dx-format-string").text(),e=$(a).append(c),f=b();return ko.applyBindings(new d(f.value,f.standardPatterns,f.customPatterns),e.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Widgets||(a.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype._setContentHeight=function(){this._$popupContent.css({height:"100%"})},b}(a.ui.dxPopup);b.dxPopupWithAutoHeight=c,a.registerComponent("dxPopupWithAutoHeight",c)}(c=b.Widgets||(b.Widgets={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b=function(){function a(){this.data=ko.observable(),this.title=ko.observable(),this.visible=ko.observable(!1),this.actions=ko.observableArray([]),this.target=ko.observable()}return a}();a.PopupService=b,ko.bindingHandlers.service={init:function(a,b,c,d,e){var f=ko.unwrap(b()||{}),g=function(a){var b=e.$parents.filter(function(b){return void 0!==b[a]})[0];return b?b[a]:null},h=g(f.name);if(h){var i=h(d),j=e.createChildContext(i.data);ko.renderTemplate(i.templateName,j,{},a,"replaceNode")}}},ko.bindingHandlers.focus={init:function(a,b){var c=b().on||b(),d=c.subscribe(function(b){b&&-1===navigator.userAgent.toLowerCase().indexOf("firefox")&&$(a).find(":input").focus()});ko.utils.domNodeDisposal.addDisposeCallback(a,function(){d.dispose()})}}}(b=a.Utils||(a.Utils={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));var parser=function(){function a(){this.yy={}}var b=function(a,b,c,d){for(c=c||{},d=a.length;d--;c[a[d]]=b);return c},c=[1,15],d=[1,10],e=[1,33],f=[1,27],g=[1,18],h=[1,19],i=[1,28],j=[1,29],k=[1,13],l=[1,30],m=[1,31],n=[1,32],o=[1,22],p=[1,23],q=[1,3],r=[1,4],s=[1,5],t=[1,9],u=[1,11],v=[1,12],w=[1,14],x=[1,37],y=[1,46],z=[1,45],A=[1,42],B=[1,35],C=[1,36],D=[1,38],E=[1,39],F=[1,40],G=[1,41],H=[1,43],I=[1,44],J=[1,47],K=[1,48],L=[1,49],M=[1,50],N=[1,51],O=[1,52],P=[1,53],Q=[1,54],R=[1,55],S=[5,11,17,19,20,22,28,35,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,64],T=[1,64],U=[2,14],V=[1,67],W=[1,69],X=[1,72],Y=[16,28],Z=[1,76],$=[15,16,28],_=[5,11,19,20,22,28,35,50,51,53,54,55,56,57,58,59,60,61,62,64],aa=[5,11,28,35,59,60],ba=[16,17,20],ca=[5,11,17,19,20,22,28,35,48,50,51,53,54,55,56,57,58,59,60,61,62,64],da=[5,11,28,35,53,54,57,58,59,60,61],ea=[5,11,19,20,28,35,53,54,55,56,57,58,59,60,61],fa=[11,35],ga={trace:function(){},yy:{},symbols_:{error:2,expressions:3,exp:4,EOF:5,criteriaList:6,"\\0":7,queryCollection:8,expOrSort:9,";":10,",":11,SORT_ASC:12,SORT_DESC:13,type:14,COL:15,".":16,"+":17,upcast:18,OP_LT:19,OP_GT:20,column:21,"^":22,param:23,"?":24,property:25,field:26,"[":27,"]":28,aggregate:29,aggregateSuffix:30,topLevelAggregate:31,AGG_COUNT:32,AGG_EXISTS:33,"(":34,")":35,AGG_AVG:36,AGG_SUM:37,AGG_SINGLE:38,MinStart:39,MaxStart:40,AGG_MIN:41,AGG_MAX:42,CONST:43,NUM:44,NULL:45,"*":46,"/":47,"-":48,"%":49,"|":50,"&":51,"~":52,OP_EQ:53,OP_NE:54,OP_GE:55,OP_LE:56,OP_LIKE:57,NOT:58,AND:59,OR:60,IS:61,OP_IN:62,argumentslist:63,OP_BETWEEN:64,FUNCTION:65,commadelimitedlist:66,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",7:"\\0",10:";",11:",",12:"SORT_ASC",13:"SORT_DESC",15:"COL",16:".",17:"+",19:"OP_LT",20:"OP_GT",22:"^",24:"?",27:"[",28:"]",32:"AGG_COUNT",33:"AGG_EXISTS",34:"(",35:")",36:"AGG_AVG",37:"AGG_SUM",38:"AGG_SINGLE",41:"AGG_MIN",42:"AGG_MAX",43:"CONST",44:"NUM",45:"NULL",46:"*",47:"/",48:"-",49:"%",50:"|",51:"&",52:"~",53:"OP_EQ",54:"OP_NE",55:"OP_GE",56:"OP_LE",57:"OP_LIKE",58:"NOT",59:"AND",60:"OR",61:"IS",62:"OP_IN",64:"OP_BETWEEN",65:"FUNCTION"},productions_:[0,[3,2],[6,1],[6,2],[8,1],[8,3],[8,3],[9,1],[9,2],[9,2],[14,1],[14,3],[14,3],[18,4],[21,1],[21,2],[21,1],[21,1],[23,2],[23,1],[25,1],[25,3],[26,3],[29,3],[29,6],[29,5],[29,4],[29,3],[29,1],[31,1],[30,1],[30,1],[30,3],[30,3],[30,4],[30,4],[30,3],[30,4],[30,2],[30,2],[39,3],[40,3],[4,1],[4,1],[4,1],[4,1],[4,1],[4,1],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,4],[4,2],[4,3],[4,3],[4,3],[4,3],[4,4],[4,3],[4,7],[4,2],[4,2],[4,2],[4,4],[4,4],[63,3],[63,2],[66,1],[66,3]],performAction:function(a,b,c,d,e,f){var g=f.length-1;switch(e){case 1:return f[g-1];case 2:result=new DevExpress.JS.Data.CriteriaOperator;break;case 3:result=f[g-1];break;case 4:this.$=[f[g]];break;case 5:case 6:this.$=f[g-2],this.$.push(f[g]);break;case 7:case 10:case 16:case 20:case 45:case 46:case 47:this.$=f[g];break;case 8:case 38:case 39:case 70:case 80:this.$=f[g-1];break;case 9:this.$=new DevExpress.JS.Data.FunctionOperator(DevExpress.JS.Data.FunctionOperatorType.OrderDescToken,f[g-1]);break;case 11:case 21:this.$=new DevExpress.JS.Data.OperandProperty(f[g-2].propertyName+"."+f[g].propertyName);break;case 12:this.$=new DevExpress.JS.Data.OperandProperty(f[g-2].propertyName+"+"+f[g].propertyName);break;case 13:this.$=new DevExpress.JS.Data.OperandProperty("<"+f[g-2].propertyName+">"+f[g].propertyName);break;case 14:this.$=new DevExpress.JS.Data.OperandProperty(f[g]);break;case 15:this.$=new DevExpress.JS.Data.OperandProperty(f[g-1].propertyName+" "+f[g]);break;case 17:this.$=new DevExpress.JS.Data.OperandProperty("^");break;case 18:this.$=new DevExpress.JS.Data.OperandParameter(f[g]);break;case 19:this.$=new DevExpress.JS.Data.OperandValue(void 0);break;case 22:this.$=new DevExpress.JS.Data.OperandProperty(f[g-1].propertyName);break;case 23:var h=f[g];this.$=DevExpress.JS.Data.JoinOperand.joinOrAggregate(f[g-2],null,h.operatorType,h.aggregatedExpression);break;case 24:var h=f[g];this.$=DevExpress.JS.Data.JoinOperand.joinOrAggregate(f[g-5],f[g-3],h.operatorType,h.aggregatedExpression);break;case 25:var h=f[g];this.$=DevExpress.JS.Data.JoinOperand.joinOrAggregate(f[g-4],null,h.operatorType,h.aggregatedExpression);break;case 26:this.$=DevExpress.JS.Data.JoinOperand.joinOrAggregate(f[g-3],f[g-1],DevExpress.JS.Data.Aggregate.Exists,null);break;case 27:this.$=DevExpress.JS.Data.JoinOperand.joinOrAggregate(f[g-2],null,DevExpress.JS.Data.Aggregate.Exists,null);break;case 30:case 32:this.$=new DevExpress.JS.Data.AggregateOperand(null,null,DevExpress.JS.Data.Aggregate.Count,null);break;case 31:case 33:this.$=new DevExpress.JS.Data.AggregateOperand(null,null,DevExpress.JS.Data.Aggregate.Exists,null);break;case 34:this.$=new DevExpress.JS.Data.AggregateOperand(null,f[g-1],DevExpress.JS.Data.Aggregate.Avg,null);break;case 35:this.$=new DevExpress.JS.Data.AggregateOperand(null,f[g-1],DevExpress.JS.Data.Aggregate.Sum,null);break;case 36:this.$=new DevExpress.JS.Data.AggregateOperand(null,new DevExpress.JS.Data.OperandProperty("This"),DevExpress.JS.Data.Aggregate.Single,null);break;case 37:this.$=new DevExpress.JS.Data.AggregateOperand(null,f[g-1],DevExpress.JS.Data.Aggregate.Single,null);break;case 40:this.$=new DevExpress.JS.Data.AggregateOperand(null,f[g],DevExpress.JS.Data.Aggregate.Min,null);break;case 41:this.$=new DevExpress.JS.Data.AggregateOperand(null,f[g],DevExpress.JS.Data.Aggregate.Max,null);break;case 42:this.$=new DevExpress.JS.Data.ConstantValue(f[g]);break;case 43:this.$=new DevExpress.JS.Data.ConstantValue(parseFloat(f[g]));break;case 44:this.$=new DevExpress.JS.Data.ConstantValue(null);

break;case 48:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Multiply);break;case 49:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Divide);break;case 50:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Plus);break;case 51:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Minus);break;case 52:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Modulo);break;case 53:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.BitwiseOr);break;case 54:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.BitwiseAnd);break;case 55:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.BitwiseXor);break;case 56:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.Minus,f[g]);break;case 57:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.Plus,f[g]);break;case 58:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.BitwiseNot,f[g]);break;case 59:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Equal);break;case 60:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.NotEqual);break;case 61:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Greater);break;case 62:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Less);break;case 63:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.GreaterOrEqual);break;case 64:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.LessOrEqual);break;case 65:this.$=new DevExpress.JS.Data.BinaryOperator(f[g-2],f[g],DevExpress.JS.Data.BinaryOperatorType.Like);break;case 66:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.Not,new DevExpress.JS.Data.BinaryOperator(f[g-3],f[g],DevExpress.JS.Data.BinaryOperatorType.Like));break;case 67:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.Not,f[g]);break;case 68:this.$=DevExpress.JS.Data.GroupOperator.combine(DevExpress.JS.Data.GroupOperatorType.And,[f[g-2],f[g]]);break;case 69:this.$=DevExpress.JS.Data.GroupOperator.combine(DevExpress.JS.Data.GroupOperatorType.Or,[f[g-2],f[g]]);break;case 71:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.IsNull,f[g-2]);break;case 72:this.$=new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.Not,new DevExpress.JS.Data.UnaryOperator(DevExpress.JS.Data.UnaryOperatorType.IsNull,f[g-3]));break;case 73:this.$=new DevExpress.JS.Data.InOperator(f[g-2],f[g]);break;case 74:this.$=new DevExpress.JS.Data.BetweenOperator(f[g-6],f[g-3],f[g-1]);break;case 75:case 76:this.$=new DevExpress.JS.Data.FunctionOperator(DevExpress.JS.Data.FunctionOperatorType[f[g-1]]||f[g-1],f[g]);break;case 77:this.$=null;break;case 78:this.$=new DevExpress.JS.Data.FunctionOperator(DevExpress.JS.Data.FunctionOperatorType.Min,[f[g-3].aggregatedExpression,f[g-1]]);break;case 79:this.$=new DevExpress.JS.Data.FunctionOperator(DevExpress.JS.Data.FunctionOperatorType.Max,[f[g-3].aggregatedExpression,f[g-1]]);break;case 81:this.$=[];break;case 82:var i=[];i.push(f[g]),this.$=i;break;case 83:var i=f[g-2];i.push(f[g]),this.$=i}},table:[{3:1,4:2,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{1:[3]},{5:[1,34],17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,42]),b(S,[2,43]),b(S,[2,44]),b(S,[2,45]),b(S,[2,46],{27:[1,56]}),b(S,[2,47]),{4:57,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:58,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:59,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:60,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:61,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,35:[1,62],36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{34:T,63:63},b([15,16],U,{63:65,34:T}),{11:[1,66],35:V},{11:[1,68],35:W},b(S,[2,19],{15:[1,70]}),{15:X,18:26,19:e,21:24,22:f,25:71},{16:[1,73]},b(S,[2,28]),{34:[1,74]},{34:[1,75]},b(Y,[2,20],{15:Z}),b(S,[2,29]),b($,[2,16]),b($,[2,17]),b(S,[2,30],{34:[1,77]}),b(S,[2,31],{34:[1,78]}),{34:[1,79]},{34:[1,80]},{34:[1,81]},{14:82,15:[1,83]},{1:[2,1]},{4:84,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:85,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:86,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:87,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:88,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:89,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:90,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:91,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:92,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:93,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:94,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:95,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:96,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:97,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:98,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{57:[1,99]},{4:100,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:101,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{45:[1,102],58:[1,103]},{34:T,63:104},{34:[1,105]},{4:106,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,28:[1,107],29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b(S,[2,56]),b(S,[2,57]),b(_,[2,58],{17:x,46:B,47:C,48:D,49:E}),b(aa,[2,67],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,61:P,62:Q,64:R}),{17:x,19:y,20:z,22:A,35:[1,108],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,77]),b(S,[2,75]),{4:111,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,35:[1,110],36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w,66:109},b(S,[2,76]),{4:112,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b(S,[2,38]),{4:113,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b(S,[2,39]),b(S,[2,18]),{16:[1,115],28:[1,114]},b($,U),{15:X,18:26,19:e,21:117,22:f,30:116,32:i,33:j,36:l,37:m,38:n,39:118,40:119,41:o,42:p},{4:120,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:121,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b($,[2,15]),{35:[1,122]},{35:[1,123]},{4:124,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:125,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{4:127,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,35:[1,126],36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{16:[1,129],17:[1,130],20:[1,128]},b(ba,[2,10]),b(S,[2,48]),b(S,[2,49]),b(ca,[2,50],{46:B,47:C,49:E}),b(ca,[2,51],{46:B,47:C,49:E}),b(S,[2,52]),b([5,11,19,20,28,35,50,53,54,55,56,57,58,59,60,61,62,64],[2,53],{17:x,22:A,46:B,47:C,48:D,49:E,51:G}),b(_,[2,54],{17:x,46:B,47:C,48:D,49:E}),b([5,11,19,20,22,28,35,50,53,54,55,56,57,58,59,60,61,62,64],[2,55],{17:x,46:B,47:C,48:D,49:E,51:G}),b(da,[2,59],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,55:J,56:K,62:Q,64:R}),b(da,[2,60],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,55:J,56:K,62:Q,64:R}),b(ea,[2,61],{17:x,22:A,46:B,47:C,48:D,49:E,50:F,51:G,62:Q,64:R}),b(ea,[2,62],{17:x,22:A,46:B,47:C,48:D,49:E,50:F,51:G,62:Q,64:R}),b(ea,[2,63],{17:x,22:A,46:B,47:C,48:D,49:E,50:F,51:G,62:Q,64:R}),b(ea,[2,64],{17:x,22:A,46:B,47:C,48:D,49:E,50:F,51:G,62:Q,64:R}),b(da,[2,65],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,55:J,56:K,62:Q,64:R}),{4:131,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b(aa,[2,68],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,61:P,62:Q,64:R}),b([5,11,28,35,60],[2,69],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,61:P,62:Q,64:R}),b(S,[2,71]),{45:[1,132]},b(S,[2,73]),{4:133,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{17:x,19:y,20:z,22:A,28:[1,134],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,27],{16:[1,135]}),b(S,[2,70]),{11:[1,137],35:[1,136]},b(S,[2,81]),b(fa,[2,82],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R}),{17:x,19:y,20:z,22:A,35:[1,138],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},{17:x,19:y,20:z,22:A,35:[1,139],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b([5,11,17,19,20,22,27,28,35,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,64],[2,22]),{15:X,18:26,19:e,21:117,22:f},b(S,[2,23]),b(Y,[2,21],{15:Z}),{35:V},{35:W},b(fa,[2,40],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R}),b(fa,[2,41],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R}),b(S,[2,32]),b(S,[2,33]),{17:x,19:y,20:z,22:A,35:[1,140],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},{17:x,19:y,20:z,22:A,35:[1,141],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,36]),{17:x,19:y,20:z,22:A,35:[1,142],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},{15:[1,143]},{15:[1,144]},{15:[1,145]},b(da,[2,66],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,55:J,56:K,62:Q,64:R}),b(S,[2,72]),{11:[1,146],17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,26],{16:[1,147]}),{30:148,32:i,33:j,36:l,37:m,38:n,39:118,40:119,41:o,42:p},b(S,[2,80]),{4:149,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},b(S,[2,78]),b(S,[2,79]),b(S,[2,34]),b(S,[2,35]),b(S,[2,37]),b($,[2,13]),b(ba,[2,11]),b(ba,[2,12]),{4:150,15:c,17:d,18:26,19:e,21:24,22:f,23:6,24:g,25:20,26:7,27:h,29:8,30:25,31:21,32:i,33:j,34:k,36:l,37:m,38:n,39:16,40:17,41:o,42:p,43:q,44:r,45:s,48:t,52:u,58:v,65:w},{30:151,32:i,33:j,36:l,37:m,38:n,39:118,40:119,41:o,42:p},b(S,[2,25]),b(fa,[2,83],{17:x,19:y,20:z,22:A,46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R}),{17:x,19:y,20:z,22:A,35:[1,152],46:B,47:C,48:D,49:E,50:F,51:G,53:H,54:I,55:J,56:K,57:L,58:M,59:N,60:O,61:P,62:Q,64:R},b(S,[2,24]),b(S,[2,74])],defaultActions:{34:[2,1]},parseError:function(a,b){if(!b.recoverable)throw new Error(a);this.trace(a)},parse:function(a){function b(){var a;return a=o.lex()||m,"number"!=typeof a&&(a=c.symbols_[a]||a),a}var c=this,d=[0],e=[null],f=[],g=this.table,h="",i=0,j=0,k=0,l=2,m=1,n=f.slice.call(arguments,1),o=Object.create(this.lexer),p={yy:{}};for(var q in this.yy)Object.prototype.hasOwnProperty.call(this.yy,q)&&(p.yy[q]=this.yy[q]);o.setInput(a,p.yy),p.yy.lexer=o,p.yy.parser=this,"undefined"==typeof o.yylloc&&(o.yylloc={});var r=o.yylloc;f.push(r);var s=o.options&&o.options.ranges;this.parseError="function"==typeof p.yy.parseError?p.yy.parseError:Object.getPrototypeOf(this).parseError;for(var t,u,v,w,x,y,z,A,B,C={};;){if(v=d[d.length-1],this.defaultActions[v]?w=this.defaultActions[v]:((null===t||"undefined"==typeof t)&&(t=b()),w=g[v]&&g[v][t]),"undefined"==typeof w||!w.length||!w[0]){var D="";B=[];for(y in g[v])this.terminals_[y]&&y>l&&B.push("'"+this.terminals_[y]+"'");D=o.showPosition?"Parse error on line "+(i+1)+":\n"+o.showPosition()+"\nExpecting "+B.join(", ")+", got '"+(this.terminals_[t]||t)+"'":"Parse error on line "+(i+1)+": Unexpected "+(t==m?"end of input":"'"+(this.terminals_[t]||t)+"'"),this.parseError(D,{text:o.match,token:this.terminals_[t]||t,line:o.yylineno,loc:r,expected:B})}if(w[0]instanceof Array&&w.length>1)throw new Error("Parse Error: multiple actions possible at state: "+v+", token: "+t);switch(w[0]){case 1:d.push(t),e.push(o.yytext),f.push(o.yylloc),d.push(w[1]),t=null,u?(t=u,u=null):(j=o.yyleng,h=o.yytext,i=o.yylineno,r=o.yylloc,k>0&&k--);break;case 2:if(z=this.productions_[w[1]][1],C.$=e[e.length-z],C._$={first_line:f[f.length-(z||1)].first_line,last_line:f[f.length-1].last_line,first_column:f[f.length-(z||1)].first_column,last_column:f[f.length-1].last_column},s&&(C._$.range=[f[f.length-(z||1)].range[0],f[f.length-1].range[1]]),x=this.performAction.apply(C,[h,j,i,p.yy,w[1],e,f].concat(n)),"undefined"!=typeof x)return x;z&&(d=d.slice(0,-1*z*2),e=e.slice(0,-1*z),f=f.slice(0,-1*z)),d.push(this.productions_[w[1]][0]),e.push(C.$),f.push(C._$),A=g[d[d.length-2]][d[d.length-1]],d.push(A);break;case 3:return!0}}return!0}},ha=function(){var a={EOF:1,parseError:function(a,b){if(!this.yy.parser)throw new Error(a);this.yy.parser.parseError(a,b)},setInput:function(a,b){return this.yy=b||this.yy||{},this._input=a,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var b=a.match(/(?:\r\n?|\n).*/g);return b?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var b=a.length,c=a.split(/(?:\r\n?|\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-b),this.offset-=b;var d=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),c.length-1&&(this.yylineno-=c.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:c?(c.length===d.length?this.yylloc.first_column:0)+d[d.length-c.length].length-c[0].length:this.yylloc.first_column-b},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-b]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?"...":"")+a.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var a=this.pastInput(),b=new Array(a.length+1).join("-");return a+this.upcomingInput()+"\n"+b+"^"},test_match:function(a,b){var c,d,e;if(this.options.backtrack_lexer&&(e={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(e.yylloc.range=this.yylloc.range.slice(0))),d=a[0].match(/(?:\r\n?|\n).*/g),d&&(this.yylineno+=d.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:d?d[d.length-1].length-d[d.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+a[0].length},this.yytext+=a[0],this.match+=a[0],this.matches=a,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(a[0].length),this.matched+=a[0],c=this.performAction.call(this,this.yy,this,b,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),c)return c;if(this._backtrack){for(var f in e)this[f]=e[f];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,b,c,d;this._more||(this.yytext="",this.match="");for(var e=this._currentRules(),f=0;f<e.length;f++)if(c=this._input.match(this.rules[e[f]]),c&&(!b||c[0].length>b[0].length)){if(b=c,d=f,this.options.backtrack_lexer){if(a=this.test_match(c,e[f]),a!==!1)return a;if(this._backtrack){b=!1;continue}return!1}if(!this.options.flex)break}return b?(a=this.test_match(b,e[d]),a!==!1?a:!1):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var a=this.next();return a?a:this.lex()},begin:function(a){this.conditionStack.push(a)},popState:function(){var a=this.conditionStack.length-1;return a>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(a){return a=this.conditionStack.length-1-Math.abs(a||0),a>=0?this.conditionStack[a]:"INITIAL"},pushState:function(a){this.begin(a)},stateStackSize:function(){return this.conditionStack.length},options:{},performAction:function(a,b,c,d){switch(c){case 0:break;case 1:return 64;case 2:return 62;case 3:return 58;case 4:return 61;case 5:return 45;case 6:return 46;case 7:return 47;case 8:return 48;case 9:return 17;case 10:return 22;case 11:return 54;case 12:return"!";case 13:return 49;case 14:return 34;case 15:return 35;case 16:return 27;case 17:return 28;case 18:return 54;case 19:return 55;case 20:return 56;case 21:return 20;case 22:return 19;case 23:return 36;case 24:return 42;case 25:return 41;case 26:return 38;case 27:return 32;case 28:return 33;case 29:return 37;case 30:return 53;case 31:return 53;case 32:return 57;case 33:return 59;case 34:return 60;case 35:return 5;case 36:return 44;case 37:return 16;case 38:return 11;case 39:return 24;case 40:return 43;case 41:return 43;case 42:return 15;case 43:return 43;case 44:return 43;case 45:return"INVALID"}},rules:[/^(?:\s+)/,/^(?:Between\b)/,/^(?:In\b)/,/^(?:Not\b)/,/^(?:Is\b)/,/^(?:Null\b)/,/^(?:\*)/,/^(?:\/)/,/^(?:-)/,/^(?:\+)/,/^(?:\^)/,/^(?:!=)/,/^(?:!)/,/^(?:%)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:<>)/,/^(?:>=)/,/^(?:<=)/,/^(?:>)/,/^(?:<)/,/^(?:Avg\b)/,/^(?:Max\b)/,/^(?:Min\b)/,/^(?:Single\b)/,/^(?:Count\b)/,/^(?:Exists\b)/,/^(?:Sum\b)/,/^(?:==)/,/^(?:=)/,/^(?:Like\b)/,/^(?:And\b)/,/^(?:Or\b)/,/^(?:$)/,/^(?:(?:\d*\.)?\d+)/,/^(?:\.)/,/^(?:,)/,/^(?:\?)/,/^(?:True\b)/,/^(?:False\b)/,/^(?:^[a-zA-Z_][a-zA-Z0-9_]*)/,/^(?:'[^']*')/,/^(?:#[^#]*#)/,/^(?:.)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],inclusive:!0}}};return a}();return ga.lexer=ha,a.prototype=ga,ga.Parser=a,new a}();"undefined"!=typeof require&&"undefined"!=typeof exports&&(exports.parser=parser,exports.Parser=parser.Parser,exports.parse=function(){return parser.parse.apply(parser,arguments)},exports.main=function(a){a[1]||(console.log("Usage: "+a[0]+" FILE"),process.exit(1));var b=require("fs").readFileSync(require("path").normalize(a[1]),"utf8");return exports.parser.parse(b)},"undefined"!=typeof module&&require.main===module&&exports.main(process.argv.slice(1)));var __extends=this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},DevExpress;!function(a){var b;!function(a){var b=function(){function a(){}return a.prototype.initActions=function(a){this.actions=a,this.actions.forEach(function(a){a.disabled||(a.disabled=ko.observable(!1))})},a.prototype.getActions=function(a){return this.condition(a)?(this.setDisabled(a),this.actions):[]},a.prototype.setDisabled=function(a){this.actions.forEach(function(b){b.disabled(a.lockedInUserDesigner&&a.lockedInUserDesigner())})},a.prototype.condition=function(){return!0},a}();a.BaseActionsProvider=b;var c=function(a){function b(b,c){a.call(this),this._selectionProvider=c;var d=new e(c,b);a.prototype.initActions.call(this,[{text:"Align to Grid",imageClassName:"dxrd-image-actions-align_to_grid",clickAction:function(){d.alignToGrid()}},{text:"Size to Grid",imageClassName:"dxrd-image-actions-size_to_grid",clickAction:function(){d.sizeToGrid()}},{text:"Center Horizontally",imageClassName:"dxrd-image-actions-center_horizontally",clickAction:function(){d.centerHorizontally()}},{text:"Center Vertically",imageClassName:"dxrd-image-actions-center_vertically",clickAction:function(){d.centerVertically()}},{text:"Bring to Front",imageClassName:"dxrd-image-actions-bring_to_front",clickAction:function(){d.sendToBack()}},{text:"Send to Back",imageClassName:"dxrd-image-actions-send_to_back",clickAction:function(){d.bringToFront()}}])}return __extends(b,a),b.prototype.setDisabled=function(){var a=this;this.actions.forEach(function(b){b.disabled(a._selectionProvider.selectedItems.some(function(a){return a.locked}))})},b}(b);a.ElementActions=c;var d=function(a){function b(b,c){a.call(this),this._selectionProvider=c;var d=new e(c,b),g=new f(c,b);a.prototype.initActions.call(this,[{text:"Align Lefts",imageClassName:"dxrd-image-actions-align_lefts",clickAction:function(){d.alignLeft()}},{text:"Align Centers",imageClassName:"dxrd-image-actions-align_centers",clickAction:function(){d.alignVerticalCenters()}},{text:"Align Rights",imageClassName:"dxrd-image-actions-align_rights",clickAction:function(){d.alignRight()}},{text:"Align Tops",imageClassName:"dxrd-image-actions-align_tops",clickAction:function(){d.alignTop()}},{text:"Align Middles",imageClassName:"dxrd-image-actions-align_middles",clickAction:function(){d.alignHorizontalCenters()}},{text:"Align Bottoms",imageClassName:"dxrd-image-actions-align_bottoms",clickAction:function(){d.alignBottom()}},{text:"Size to Control Width",imageClassName:"dxrd-image-actions-make_same_width",clickAction:function(){d.sizeToControlWidth()}},{text:"Size to Control Height",imageClassName:"dxrd-image-actions-make_same_height",clickAction:function(){d.sizeToControlHeight()}},{text:"Size to Control",imageClassName:"dxrd-image-actions-make_same_sizes",clickAction:function(){d.sizeToControl()}},{text:"Make Horizontal Spacing Equal",imageClassName:"dxrd-image-actions-make_horizontal_spacing_equal",clickAction:function(){g.horizSpaceMakeEqual()}},{text:"Increase Horizontal Spacing",imageClassName:"dxrd-image-actions-increase_horizontal_spacing",clickAction:function(){g.horizSpaceIncrease()}},{text:"Decrease Horizontal Spacing",imageClassName:"dxrd-image-actions-decrease_horizontal_spacing",clickAction:function(){g.horizSpaceDecrease()}},{text:"Remove Horizontal Spacing",imageClassName:"dxrd-image-actions-remove_horizontal_spacing",clickAction:function(){g.horizSpaceConcatenate()}},{text:"Make Vertical Spacing Equal",imageClassName:"dxrd-image-actions-make_vertical_spacing_equal",clickAction:function(){g.vertSpaceMakeEqual()}},{text:"Increase Vertical Spacing",imageClassName:"dxrd-image-actions-increase_vertical_spacing",clickAction:function(){g.vertSpaceIncrease()}},{text:"Decrease Vertical Spacing",imageClassName:"dxrd-image-actions-decrease_vertical_spacing",clickAction:function(){g.vertSpaceDecrease()}},{text:"Remove Vertical Spacing",imageClassName:"dxrd-image-actions-remove_vertical_spacing",clickAction:function(){g.vertSpaceConcatenate()}}])}return __extends(b,a),b.prototype.condition=function(){return this._selectionProvider.selectedItems.length>1},b.prototype.setDisabled=function(){var a=this;this.actions.forEach(function(b){b.disabled(a._selectionProvider.selectedItems.some(function(a){return a.locked}))})},b}(b);a.ElementsGroupActions=d;var e=function(){function b(a,b){this._selectionProvider=a,this._surfaceContext=b}return b.prototype._getFocusedItem=function(){return this._selectionProvider.focused()},b.prototype._getFocusedParent=function(){return this._selectionProvider.focused().parent},b.prototype._visitAllSelectedItemsInSameContainerWithFocused=function(a){var b=this._selectionProvider.focused().parent,c=this._selectionProvider.focused();this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return a!==c&&a.parent===b}).forEach(function(b){a(b)})},b.prototype._centerByBand=function(a,b){var c,d=a?"left":"top",e=a?"width":"height",f=this._getFocusedParent(),g=f.rect()[e]-b.right(),h=this._getFocusedItem().rect()[d],i=this._getFocusedItem().rect()[d]+this._getFocusedItem().rect()[e];this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return f===a.parent}).forEach(function(a){var b=a.rect()[d];h>b&&(h=b)}),this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return f===a.parent}).forEach(function(a){var b=a.rect()[d]+a.rect()[e];b>i&&(i=b)}),c=(g-(i-h))/2-h,this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return f===a.parent}).forEach(function(a){var b={};b[d]=a.rect()[d]+c,a.rect(b)})},b.prototype._roundingValue=function(a,b){return Math.round(a/b)*b},b.prototype.alignLeft=function(){var a=this._getFocusedItem().rect().left;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({left:a})})},b.prototype.alignTop=function(){var a=this._getFocusedItem().rect().top;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({top:a})})},b.prototype.alignRight=function(){var a=this._getFocusedItem().rect().left+this._getFocusedItem().rect().width;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({left:a-b.rect().width})})},b.prototype.alignBottom=function(){var a=this._getFocusedItem().rect().top+this._getFocusedItem().rect().height;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({top:a-b.rect().height})})},b.prototype.alignVerticalCenters=function(){var a=this._getFocusedItem().rect().left+this._getFocusedItem().rect().width/2;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({left:a-b.rect().width/2})})},b.prototype.alignHorizontalCenters=function(){var a=this._getFocusedItem().rect().top+this._getFocusedItem().rect().height/2;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({top:a-b.rect().height/2})})},b.prototype.sizeToControlWidth=function(){var a=this._getFocusedItem().rect().width;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({width:a})})},b.prototype.sizeToControlHeight=function(){var a=this._getFocusedItem().rect().height;this._visitAllSelectedItemsInSameContainerWithFocused(function(b){b.rect({height:a})})},b.prototype.sizeToControl=function(){var a=this._getFocusedItem().rect().width,b=this._getFocusedItem().rect().height;this._visitAllSelectedItemsInSameContainerWithFocused(function(c){c.rect({width:a,height:b})})},b.prototype.centerHorizontally=function(){this._centerByBand(!0,this._surfaceContext().margins)},b.prototype.centerVertically=function(){this._centerByBand(!1,new a.Margins(0,0,0,0))},b.prototype.alignToGrid=function(){var a=this,b=this._surfaceContext().snapGridSize();this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).forEach(function(c){c.rect({left:a._roundingValue(c.rect().left,b),top:a._roundingValue(c.rect().top,b)})})},b.prototype.sizeToGrid=function(){var a=this,b=this._surfaceContext().snapGridSize();this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).forEach(function(c){c.rect({left:a._roundingValue(c.rect().left,b),top:a._roundingValue(c.rect().top,b),width:a._roundingValue(c.rect().width,b),height:a._roundingValue(c.rect().height,b)})})},b.prototype._bringItemToFront=function(a){var b=a.getControlModel().parentModel().controls,c=b().indexOf(a.getControlModel());b.splice(c,1),b.push(a.getControlModel())},b.prototype.bringToFront=function(){
var a=this;this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).forEach(function(b){b.focused()||a._bringItemToFront(b)}),this._bringItemToFront(this._getFocusedItem())},b.prototype.sendToBack=function(){var a=this._selectionProvider.selectedItems.filter(function(a){return!a.locked});a.reverse(),a.forEach(function(a){var b=a.getControlModel().parentModel().controls.indexOf(a.getControlModel());a.getControlModel().parentModel().controls.splice(b,1),a.getControlModel().parentModel().controls.splice(0,0,a.getControlModel())})},b}();a.AlignmentHandler=e;var f=function(){function a(a,b){this._selectionProvider=a,this._surfaceContext=b}return a.prototype._comparer=function(a){return function(b,c){return b.rect()[a]-c.rect()[a]}},a.prototype._spaceIncrease=function(a,b){var c=this._selectionProvider.selectedItems.filter(function(a){return!a.locked}),d=b?"left":"top",e=b?"width":"height",f=b?this._surfaceContext().margins.left():0,g=this._surfaceContext().snapGridSize(),h=this._selectionProvider.focused().getControlModel().parentModel(),i=this._selectionProvider.focused();c.sort(this._comparer(d));var j=c.indexOf(this._selectionProvider.focused());this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return a!==i&&a.getControlModel().parentModel()===h}).forEach(function(b){var h,i=c.indexOf(b),k=Math.abs(i-j)*g*a,l=b.rect()[d],m=b.rect()[e],n=b.parent.rect()[e]-f;j>i?(h=l-k,0>h&&(h=0)):(h=l+k,h+m>n&&(h=n-m));var o={};o[d]=h,b.rect(o)})},a.prototype._spaceMakeEqual=function(a){this._concatenateWithSpace(a,function(a,b,c){for(var d=0,e=0;e<a.length-1;e++){var f=a[e+1].rect()[b]-(a[e].rect()[b]+a[e].rect()[c]);d=(d*e+f)/(e+1)}return d})},a.prototype._concatenateWithSpace=function(a,b){var c=this._selectionProvider.selectedItems.filter(function(a){return!a.locked}),d=a?"left":"top",e=a?"width":"height",f=0,g=this._selectionProvider.focused().getControlModel().parentModel();c.sort(this._comparer(d)),f=b(c,d,e),this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return g===a.getControlModel().parentModel()}).forEach(function(a){var b=c.indexOf(a);if(b>0){var g=c[b-1],h={};h[d]=g.rect()[d]+g.rect()[e]+f,a.rect(h)}})},a.prototype.horizSpaceConcatenate=function(){this._concatenateWithSpace(!0,function(){return 0})},a.prototype.vertSpaceConcatenate=function(){this._concatenateWithSpace(!1,function(){return 0})},a.prototype.horizSpaceMakeEqual=function(){this._spaceMakeEqual(!0)},a.prototype.vertSpaceMakeEqual=function(){this._spaceMakeEqual(!1)},a.prototype.horizSpaceDecrease=function(){this._spaceIncrease(-1,!0)},a.prototype.horizSpaceIncrease=function(){this._spaceIncrease(1,!0)},a.prototype.vertSpaceDecrease=function(){this._spaceIncrease(-1,!1)},a.prototype.vertSpaceIncrease=function(){this._spaceIncrease(1,!1)},a}();a.SpaceCommandHandler=f}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){function b(a){return parseInt(a,10)||0}ko.bindingHandlers.selectable={update:function(a,b){var c=b(),d=ko.unwrap(c.selection),e=$.extend({filter:".dxd-selectable",distance:1},ko.unwrap(c),{selecting:function(a,b){var c={control:ko.dataFor(b.selecting),cancel:!1,ctrlKey:a.ctrlKey};d.selecting(c),c.cancel&&$(b.selecting).removeClass("ui-selecting")},start:function(a){d.clickHandler(null,a),a.stopPropagation()},unselecting:function(a,b){d.unselecting(ko.dataFor(b.unselecting))}});$(a).selectable(e)}},ko.bindingHandlers.updateTop={init:function(a,b){var c=b(),d=function(b){var c=0===b||b?b:$(a).prev().position().top+$(a).prev().height();$(a).css("top",c+"px")},e=c.subscribe(function(a){d(a)});d(c()),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){e.dispose()})}},ko.bindingHandlers.draggable={init:function(b,c,d,e,f){var g=$($(b).parents(".dx-designer")[0]),h=c(),i={left:0,top:0},j=function(a){var b=h.containment||".dxrd-ghost-container",c=g.find(b),d=g.find(".dxrd-ghost-container");a.delta={left:d.offset().left-c.offset().left,top:d.offset().top-c.offset().top};var d=g.find(".dxrd-viewport");a.scroll={left:d.scrollLeft()-i.left,top:d.scrollTop()-i.top}},k=$.extend({snap:".dxrd-drag-snap-line",snapTolerance:a.SnapLinesHelper.snapTolerance},ko.unwrap(h),{start:function(a){var c=($(b).data("ui-draggable"),g.find(".dxrd-viewport"));i.left=c.scrollLeft(),i.top=c.scrollTop(),h.startDrag&&h.startDrag(ko.dataFor(a.currentTarget||a.toElement))},stop:function(a,b){j(b),h.stopDrag(b,ko.dataFor(a.target))},drag:function(a,c){a.altKey===!0||h.alwaysAlt?$(b).draggable("option","snap",!1):$(b).draggable("option","snap",".dxrd-drag-snap-line"),j(c),h.drag&&h.drag(a,c)},helper:function(a){$(b).draggable("option","snap",".dxrd-drag-snap-line"),h.helper&&h.helper(ko.dataFor(a.currentTarget||a.toElement));var c=g.find(".dxrd-drag-helper-source").clone().css({display:"block"});return c.appendTo(g.find(k.containment)),ko.applyBindings(f.$root,c[0]),c}});k.containment=g.find(k.containment),$(b).draggable(k)}},ko.bindingHandlers.resizable={init:function(c,d){var e=d(),f=null,g=$.extend({handles:e.handles||"all",ghost:!1,stop:function(){f.each(function(a,c){var d=ko.dataFor(c),e=$(c),f=b(e.css("left")),g=b(e.css("top"));0>g&&(g=0),d.rect({top:g,left:f,width:e.width(),height:e.height()}),e.removeData("originalPosition"),e.removeData("originalSize")}),e.stopped()},start:function(){e.starting(),f=$(".dxrd-viewport > .dxrd-focused, .dxrd-selected").filter(":visible"),f.each(function(a,b){var c=$(b);c.data("originalPosition",{top:parseFloat(c.css("top")),left:parseFloat(c.css("left"))}),c.data("originalSize",{width:c.width(),height:c.height()})})},resize:function(b,c){var d=c.size.width-c.originalSize.width,g=c.size.height-c.originalSize.height,h=c.position.left-c.originalPosition.left,i=c.position.top-c.originalPosition.top;e.forceResize&&e.forceResize({size:new a.Size(c.size.width,c.size.height),delta:{dx:h,dy:i,dw:d,dh:g}}),f.each(function(a,c){if(c!==b.target){var e=$(c),f=e.data("originalPosition"),j=e.data("originalSize");e.css({left:f.left+h,top:f.top+i,width:j.width+d,height:j.height+g})}})}},ko.unwrap(e));$(c).resizable(g)},update:function(a,b,c,d){var e=!(!ko.unwrap(b()).disabled&&!d.locked);$(a).resizable("option","disabled",e),$(a).resizable("option","minHeight",ko.unwrap(b()).minimumHeight)||1,e?$(a).children(".ui-resizable-handle").css("display","none"):$(a).children(".ui-resizable-handle").css("display","block")}};var c="dxd-track-cursor-data",d="dxd-track-cursor",e="."+d;ko.bindingHandlers.trackCursor={init:function(a,b){$(a).addClass(d),$(a).data(c,b),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){$(a).removeClass(d),$(a).data(c,null)})}},ko.bindingHandlers.dropTarget={init:function(a,b){var d=b().dropTarget,f=b().subscriptionTarget||".dx-designer",g=document.body,h=document.documentElement,i=function(b){var f=$(a).find(e).filter(function(a,d){var e=$(d),f=e.data(c)(),i=d.getBoundingClientRect(),j=window.pageYOffset||h.scrollTop||g.scrollTop,k=window.pageXOffset||h.scrollLeft||g.scrollLeft,l=h.clientTop||g.clientTop||0,m=h.clientLeft||g.clientLeft||0,n=b.pageY-(i.top+j-l),o=b.pageX-(i.left+k-m),p=o>=0&&o<=i.width&&n<=i.height&&n>=0;return f($.extend(f(),{isOver:p,x:o,y:n})),p&&!f().isNotDropTarget}),i=-1,j=f[0];$.each(f,function(a,b){var c=$(b).zIndex();c>=i&&(j=b,i=c)}),d&&j&&(ko.unwrap(d).dropTarget=ko.dataFor(j))};$(a).closest(f).bind("mousemove",i),$(a).closest(f).bind("dragover",function(a){i(a.originalEvent)}),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){$(a).closest(f).unbind("mousemove",i),$(a).closest(f).unbind("dragover",function(a){i(a.originalEvent)})})}},ko.bindingHandlers.templates={init:function(a,b){var c=$(b()).text(),d=$(c);return $(a).append(d),{controlsDescendantBindings:!0}}},ko.bindingHandlers.zoom={update:function(a,b){var c=ko.unwrap(b()||{});$.each(["-webkit-transform","-moz-transform","-ms-transform","-o-transform","transform"],function(b,d){a.style[d]="scale("+c+")"}),$(a).addClass("dxrd-transform-origin-left-top")}};var f=function(){function a(a){this._handlers=[],this._targetElement=a}return Object.defineProperty(a.prototype,"_activeHandler",{get:function(){return this._handlers.length>0?this._handlers[this._handlers.length-1]:null},enumerable:!0,configurable:!0}),a.prototype._removeHandler=function(a){var b=this._handlers.indexOf(a);0>b||(this._handlers.splice(b,1),b===this._handlers.length&&(this._targetElement.off("keydown",a),this._activeHandler&&this._targetElement.on("keydown",this._activeHandler)))},a.prototype.bindHandler=function(a,b){var c=this;this._activeHandler&&this._targetElement.off("keydown",this._activeHandler),this._handlers.push(b),this._targetElement.on("keydown",b),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){c._removeHandler(b)})},a}();ko.bindingHandlers.keyDownActions=function(){var a=new f($(window));return{init:function(b,c){var d=c(),e=function(a){d.processShortcut(d.toolbarItems,a)};a.bindHandler(b,e)}}}()}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){function c(a,b){$.each(a||{},function(a,d){ko.isObservable(d)?b[a](d()):c(d,b[a])})}function d(a,b){var c=!(!a||!b||a instanceof Array||b instanceof Array);return c=c&&Object.getOwnPropertyNames(a).length===Object.getOwnPropertyNames(b).length,c&&$.each(a||{},function(a,e){return 0===a.indexOf("_")||"function"==typeof e&&!ko.isObservable(e)?void 0:(ko.isObservable(e)?c=ko.unwrap(e)===ko.unwrap(b[a]):e instanceof Array?b[a]instanceof Array&&e.length===b[a].length?$.each(e,function(e,f){return c=d(f,b[a][e])}):c=!1:c=e instanceof Object?d(e,b[a]):e===b[a],c)}),c}function e(a){return a.surface}function f(a,b,c){void 0===c&&(c=1);var d;return d="Test"===b||"Pixels"===b?1*a:"TenthsOfAMillimeter"===b?3.78*a/10:96*a/100,d*=c,Math.round(100*d)/100}function g(a,b,c){var d;return d="Test"===b||"Pixels"===b?1*a:"TenthsOfAMillimeter"===b?a/3.78*10:a/96*100,d/=c,Math.round(100*d)/100}function h(a,b,c){a.peek().forEach(function(a){var d=c(a);b.splice(0,0,d)}),a.subscribe(function(a){var d=b().length,e=0,f=[];a.forEach(function(a){if("deleted"===a.status){e++;var c=b().length-a.index-1;d>c&&(d=c)}}),a.forEach(function(a){if("added"===a.status){var e=b().length-a.index;d>e&&(d=e),f.push(c(a.value))}}),b.splice.apply(b,[d,e].concat(f))},null,"arrayChange")}function i(a,b,c){a.peek().forEach(function(a){var d=c(a);b.push(d)}),a.subscribe(function(a){var d=b().length,e=0,f=[];a.forEach(function(a){"deleted"===a.status&&(e++,a.index<d&&(d=a.index))}),a.forEach(function(a){"added"===a.status&&(a.index<d&&(d=a.index),f.push(c(a.value)))}),b.splice.apply(b,[d,e].concat(f))},null,"arrayChange")}var j=function(){function a(){this._disposables=[],this.isDisposing=!1}return a.prototype.dispose=function(){this.isDisposing=!0,ko.utils.arrayForEach(this._disposables,this.disposeOne),ko.utils.objectForEach(this,this.disposeOne),this._disposables=[]},a.prototype.disposeOne=function(a,b){var c=b||a;c&&!c.isDisposing&&"function"==typeof c.dispose&&c.dispose()},a}();b.Disposable=j,b.copyObservables=c,b.compareObjects=d;var k=function(b){function e(d,e,f){var g=this;b.call(this),this.actions=[],this.update=ko.observable(!1),this.parentModel=ko.observable(e),this.controlType=this.controlType||this.getControlFactory().getControlType(d),f=f||new a.JS.Utils.ModelSerializer,f.deserialize(this,d),this.displayName=ko.pureComputed(function(){var a=g.name&&g.name();return a||(a="unnamed "+g.controlType),a}),this.resetValue=function(a){if(g[a].resetValue)g[a].resetValue();else{var b=g.getPropertyDefaultValue(a);ko.isObservable(g[a])?g[a](b):c(b,g[a])}},this.actions.push({action:this.resetValue,title:"Reset",visible:this.isResettableProperty})}return __extends(e,b),e.prototype.getPropertyDefaultValue=function(b){var c=this.getPropertyInfo(b);return ko.unwrap(c&&(new a.JS.Utils.ModelSerializer).deserializeProperty(c,{}))},e.prototype.getPropertyInfo=function(a){return this.getInfo().filter(function(b){return b.propertyName===a})[0]},e.prototype.getInfo=function(){return this.getControlFactory().controlsMap[this.controlType].info},e.prototype.createControl=function(a,b){return this.getControlFactory().createControl(a,this,b)},e.prototype.getNearestParent=function(a){return a.getMetaData().isContainer?a:a.parentModel()},e.prototype.getControlInfo=function(){return this.getControlFactory().controlsMap[this.controlType||"Unknown"]},e.prototype.getMetaData=function(){var a=this.controlType?this.controlType:"Unknown",b=this.getControlFactory().controlsMap[a];return{isContainer:b.isContainer||!1,isCopyDeny:b.isCopyDeny||!1,isDeleteDeny:b.isDeleteDeny||!1}},e.prototype._hasModifiedValue=function(a){return this["_"+a]&&this["_"+a]()&&this.isPropertyModified(a)},e.prototype.createChild=function(a){var b=this.getControlFactory().createControl(a,this);return this.addChild(b),b},e.prototype.removeChild=function(a){this.controls&&this.controls.splice(this.controls().indexOf(a),1)},e.prototype.addChild=function(a){this.controls&&-1===this.controls().indexOf(a)&&(a.parentModel(this),this.controls.splice(0,0,a))},e.prototype.isPropertyDisabled=function(){return!1},e.prototype.isPropertyModified=function(a){var b=this["_"+a]?"_"+a:a;if(this[b].isPropertyModified)return this[b].isPropertyModified();if(this[b].isEmpty)return!this[b].isEmpty();var c=this.getPropertyDefaultValue(a),e=ko.unwrap(this[b]);return c instanceof Object?!d(c,e):c!==e},e.prototype.getControlFactory=function(){throw Error("Virtual method getControlFactory")},e.prototype.isResettableProperty=function(a){return-1===["name","size","location"].indexOf(a)},Object.defineProperty(e.prototype,"root",{get:function(){for(var a=this;a&&a.parentModel();)a=a.parentModel();return a},enumerable:!0,configurable:!0}),e}(j);b.ElementViewModel=k,b.findSurface=e,b.unitsToPixel=f,b.pixelToUnits=g;var l=function(){function a(){this._x=0,this._y=0,this.isOver=!1}return Object.defineProperty(a.prototype,"x",{get:function(){return this._x},set:function(a){this._x=a},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"y",{get:function(){return this._y},set:function(a){this._y=a},enumerable:!0,configurable:!0}),a}();b.HoverInfo=l,b.createObservableReverseArrayMapCollection=h,b.createObservableArrayMapCollection=i;var m=function(a){function c(c,d,e){var f=this;a.call(this),this._createSurface=function(a){return a.surface||new(a.getControlFactory().controlsMap[a.controlType].surfaceType)(a,f._context)},this._control=c,this._context=d,c.surface=this,this._context&&b.createUnitProperties(c,this,e,this._context.measureUnit,this._context.zoom),this._x=this._x||ko.observable(0),this._y=this._y||ko.observable(0),this._width=this._width||ko.observable(0),this._height=this._height||ko.observable(0);var g=this._x,h=this._y,i=this._width,j=this._height;this.position={top:h,left:g,width:i,height:j,lineHeight:j};var k=ko.observable();this._disposables.push(ko.computed(function(){f._control.update()||k({top:h(),left:g(),right:g()+i(),bottom:h()+j(),width:i(),height:j()})})),this.rect=ko.pureComputed({read:function(){return k()},write:function(a){f._control.update(!0);try{void 0!==a.left&&g(a.left),void 0!==a.top&&h(a.top),void 0!==a.right&&void 0===a.left&&i(a.right-g()),void 0!==a.bottom&&void 0===a.top&&j(a.bottom-h()),void 0!==a.right&&void 0!==a.left&&i(a.right-a.left),void 0!==a.bottom&&void 0!==a.top&&j(a.bottom-a.top),void 0!==a.width&&i(a.width),void 0!==a.height&&j(a.height)}finally{f._control.update(!1)}}})}return __extends(c,a),c.prototype.getRoot=function(){return this._context},c.prototype.getControlModel=function(){return this._control},c}(j);b.SurfaceElementArea=m;var n=function(a){function c(c,d,e){var f=this;if(a.call(this,c,d,e),this._countSelectedChildren=ko.observable(0),this.focused=ko.observable(!1),this.selected=ko.observable(!1),this.underCursor=ko.observable(new l),this.allowMultiselect=!0,this.absolutePosition=new b.Point(0,0),this.snapLines=ko.observableArray([]),this.getControlModel=function(){return c},this.cssCalculator=new b.CssCalculator(c),this._getChildrenHolderName()&&c[this._getChildrenHolderName()]){var g=ko.observableArray();"controls"===this._getChildrenHolderName()?h(c[this._getChildrenHolderName()],g,this._createSurface):i(c[this._getChildrenHolderName()],g,this._createSurface),this[this._getChildrenHolderName()]=g,this.isSelected=ko.pureComputed(function(){return f.focused()||f.selected()?!0:g().some(function(a){return a.isSelected()})})}else this.isSelected=ko.pureComputed(function(){return f.focused()||f.selected()});this.css=ko.pureComputed(function(){return $.extend({},f.cssCalculator.fontCss(),f.cssCalculator.foreColorCss(),f.cssCalculator.backGroundCss(),f.cssCalculator.textAlignmentCss())}),this.contentCss=ko.pureComputed(function(){return $.extend({},f.cssCalculator.fontCss(),f.cssCalculator.foreColorCss(),f.cssCalculator.textAlignmentCss(),f.cssCalculator.angle(),f.cssCalculator.paddingsCss())}),this._disposables.push(ko.computed(function(){f.updateAbsolutePosition()})),this.absoluteRect=ko.pureComputed(function(){var a=f.rect(),b=f.absolutePosition.y();return{top:b,left:a.left,right:a.right,bottom:b+a.height,width:a.width,height:a.height}}),this.locked=c.lockedInUserDesigner?c.lockedInUserDesigner():!1}return __extends(c,a),Object.defineProperty(c.prototype,"parent",{get:function(){return this.getControlModel().parentModel()&&this.getControlModel().parentModel().surface},enumerable:!0,configurable:!0}),c.prototype.checkParent=function(a){return this.parent===a},c.prototype._getChildrenHolderName=function(){return"controls"},c.prototype.getChildrenCollection=function(){return this._getChildrenHolderName()&&this[this._getChildrenHolderName()]||ko.observableArray([])},c.prototype.updateAbsolutePosition=function(){var a=this;if(this.parent&&this.parent.absolutePosition){var c=this.parent.absolutePosition.x(),d=this.parent.absolutePosition.y(),e=c+this.rect().left,f=d+this.rect().top;this.absolutePosition.x(e),this.absolutePosition.y(f)}else this.absolutePosition.x(0),this.absolutePosition.y(0);if(0===this.snapLines().length&&this.isSnapTarget){var g=ko.pureComputed(function(){return a._context.effectiveHeight&&a._context.effectiveHeight()||a._context.pageHeight()}),h=ko.pureComputed(function(){return a._context.pageWidth()-a._context.margins.left()});this.snapLines.push(new b.SnapLine(this.absolutePosition.x,this.absolutePosition.y,!0,g,h)),this.snapLines.push(new b.SnapLine(ko.pureComputed(function(){return a.absolutePosition.x()+a.rect().width}),this.absolutePosition.y,!0,g,h)),this.snapLines.push(new b.SnapLine(this.absolutePosition.x,this.absolutePosition.y,!1,g,h)),this.snapLines.push(new b.SnapLine(this.absolutePosition.x,ko.pureComputed(function(){return a.absolutePosition.y()+a.rect().height}),!1,g,h))}},c.prototype.canDrop=function(){return!this.locked&&this._control.getMetaData().isContainer},c}(m);b.SurfaceElementBase=n}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){a.localization_values={"Page Header":"DevExpress.XtraReports.UI.PageHeaderBand","Max Nesting Level":"DevExpress.XtraReports.UI.XRTableOfContents.MaxNestingLevel","Null Value Text":"DevExpress.XtraReports.UI.XRControl.NullValueText","Process Null Values":"DevExpress.XtraReports.UI.XRPictureBox.ProcessNullValues","Actual Value":"DevExpress.XtraReports.UI.XRGauge.ActualValue","Custom Draw a Series Point":"DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawSeriesPoint","Row Count for Preview":"DevExpress.XtraReports.UI.XtraReport.PreviewRowCount","Synchronize Bounds":"DevExpress.XtraReports.UI.WinControlContainer.SyncBounds","Fill Color":"DevExpress.XtraReports.UI.XRShape.FillColor","Size Changed":"DevExpress.XtraReports.UI.SubreportBaseScripts.OnSizeChanged",Text:"DevExpress.XtraReports.UI.XRTableOfContentsTitle.Text",Top:"DevExpress.XtraReports.UI.XRDockStyle.Top",Format:"DevExpress.XtraReports.UI.XRPageInfo.Format","Drill-Down Expanded":"DevExpress.XtraReports.UI.Band.DrillDownExpanded","Group Fields":"DevExpress.XtraReports.UI.GroupHeaderBand.GroupFields","Use Font":"DevExpress.XtraReports.UI.StyleUsing.UseFont","Custom Total Cell Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.CustomTotalCellStyle","Process Duplicates Target":"DevExpress.XtraReports.UI.XRLabel.ProcessDuplicatesTarget","Parameter Bindings":"DevExpress.XtraReports.UI.XRSubreport.ParameterBindings",Lines:"DevExpress.XtraReports.UI.XRRichText.Lines","Script Security Permissions":"DevExpress.XtraReports.UI.XtraReport.ScriptSecurityPermissions","Sorting Summary Get Result":"DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryGetResult","Use Text Alignment":"DevExpress.XtraReports.UI.StylePriority.UseTextAlignment","Summary Get Result":"DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryGetResult","Keep Together":"DevExpress.XtraReports.UI.XRControl.KeepTogether","Field Value Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.FieldValueStyle",Padding:"DevExpress.XtraReports.UI.XRBarCode.PaddingInfo","Data Adapter":"DevExpress.XtraReports.UI.XRPivotGrid.DataAdapter","Data Source":"DevExpress.XtraReports.UI.XRSparkline.DataSource","Palette Name":"DevExpress.XtraReports.UI.XRChart.PaletteName","Report Print Options":"DevExpress.XtraReports.UI.ReportPrintOptions","Filter Separator":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FilterSeparator","Column Width":"DevExpress.XtraReports.UI.MultiColumn.ColumnWidth","Column Count":"DevExpress.XtraReports.UI.MultiColumn.ColumnCount","Show Text":"DevExpress.XtraReports.UI.XRBarCode.ShowText","Line Width":"DevExpress.XtraReports.UI.XRShape.LineWidth",Parameters:"DevExpress.XtraReports.UI.XtraReport.Parameters",Location:"DevExpress.XtraReports.UI.XRControl.Location","Group Union":"DevExpress.XtraReports.UI.GroupHeaderBand.GroupUnion","Bottom Margin":"DevExpress.XtraReports.UI.BottomMarginBand",Merge:"DevExpress.XtraReports.UI.ProcessDuplicatesMode.Merge",Leave:"DevExpress.XtraReports.UI.ProcessDuplicatesMode.Leave","Process Duplicates Mode":"DevExpress.XtraReports.UI.XRBarCode.ProcessDuplicatesMode","Empty Chart Text":"DevExpress.XtraReports.UI.XRChart.EmptyChartText","Anchor Horizontally":"DevExpress.XtraReports.UI.XRControl.AnchorHorizontal","Repeat Every Page":"DevExpress.XtraReports.UI.GroupBand.RepeatEveryPage",Multiline:"DevExpress.XtraReports.UI.XRRichTextBoxBase.Multiline","Visual Basic":"DevExpress.XtraReports.ScriptLanguage.VisualBasic",Average:"DevExpress.XtraReports.UI.SortingSummaryFunction.Avg",Min:"DevExpress.XtraReports.UI.SortingSummaryFunction.Min",Max:"DevExpress.XtraReports.UI.SortingSummaryFunction.Max",Variance:"DevExpress.XtraReports.UI.SortingSummaryFunction.Var",Sum:"DevExpress.XtraReports.UI.SortingSummaryFunction.Sum",Direction:"DevExpress.XtraReports.UI.MultiColumn.Direction","Group Header":"DevExpress.XtraReports.UI.GroupHeaderBand",Font:"DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.Font",Group:"DevExpress.XtraReports.UI.SummaryRunning.Group",Watermark:"DevExpress.XtraReports.UI.XtraReport.Watermark","Even Style":"DevExpress.XtraReports.UI.XRControl.XRControlStyles.EvenStyle","Show Print Status Dialog":"DevExpress.XtraReports.UI.XtraReport.ShowPrintStatusDialog","Data Member":"DevExpress.XtraReports.UI.XRSparkline.DataMember",Function:"DevExpress.XtraReports.UI.XRGroupSortingSummary.Function",Condition:"DevExpress.XtraReports.UI.FormattingRule.Condition",Scripts:"DevExpress.XtraReports.UI.Band.Scripts","OLAP Connection String":"DevExpress.XtraReports.UI.XRPivotGrid.OLAPConnectionString","Bound Data Changed":"DevExpress.XtraReports.UI.XRChartScripts.OnBoundDataChanged","Snap Line Margin":"DevExpress.XtraReports.UI.XRControl.SnapLineMargin",Level:"DevExpress.XtraReports.UI.DetailReportBand.Level","Export Options":"DevExpress.XtraReports.UI.XtraReport.ExportOptions","Value Range":"DevExpress.XtraReports.UI.XRSparkline.ValueRange","Average (Distinct)":"DevExpress.XtraReports.UI.SummaryFunc.DAvg","Summary (Distinct)":"DevExpress.XtraReports.UI.SummaryFunc.DSum","Variance (Distinct)":"DevExpress.XtraReports.UI.SummaryFunc.DVar","Population Variance":"DevExpress.XtraReports.UI.SummaryFunc.VarP","Evaluate Binding":"DevExpress.XtraReports.UI.SubreportBaseScripts.OnEvaluateBinding","Mouse Up in Preview":"DevExpress.XtraReports.UI.XRControlEvents.OnPreviewMouseUp",Maximum:"DevExpress.XtraReports.UI.XRGauge.Maximum","Custom Total Cell":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.CustomTotalCell","Detect URLs":"DevExpress.XtraReports.UI.XRRichTextBoxBase.DetectUrls","Series Template":"DevExpress.XtraReports.UI.XRChart.SeriesTemplate","Pie Series Point Exploded":"DevExpress.XtraReports.UI.XRChartScripts.OnPieSeriesPointExploded",Custom:"DevExpress.XtraReports.UI.SortingSummaryFunction.Custom","Palette's Base Color Number":"DevExpress.XtraReports.UI.XRChart.PaletteBaseColorNumber",Percentage:"DevExpress.XtraReports.UI.SummaryFunc.Percentage","Bookmark Duplicate Suppress":"DevExpress.XtraReports.UI.XtraReport.BookmarkDuplicateSuppress","Custom Summary":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomSummary",Panel:"DevExpress.XtraReports.UI.XRPanel",Shape:"DevExpress.XtraReports.UI.XRShape","Using Style":"DevExpress.XtraReports.UI.XRControlStyle.StyleUsing",Table:"DevExpress.XtraReports.UI.XRTable","Start Point":"DevExpress.XtraReports.UI.XRCrossBandControl.StartPoint",Chart:"DevExpress.XtraReports.UI.XRChart",Gauge:"DevExpress.XtraReports.UI.XRGauge",Label:"DevExpress.XtraReports.UI.XRLabel",Metafile:"DevExpress.XtraReports.UI.GaugeImageType.Metafile","Use Foreground Color":"DevExpress.XtraReports.UI.StylePriority.UseForeColor","Sorting Summary":"DevExpress.XtraReports.UI.GroupHeaderBand.SortingSummary","Running Band":"DevExpress.XtraReports.UI.XRPageInfo.RunningBand","Before the Band":"DevExpress.XtraReports.UI.PageBreak.BeforeBand","Double-Click in Preview":"DevExpress.XtraReports.UI.XRControlEvents.OnPreviewDoubleClick","Field Name":"DevExpress.XtraReports.UI.XRGroupSortingSummary.FieldName","Request Parameters":"DevExpress.XtraReports.UI.XtraReport.RequestParameters","Count (Distinct)":"DevExpress.XtraReports.UI.SortingSummaryFunction.DCount","Field Value Grand Total Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.FieldValueGrandTotalStyle","Table Row":"DevExpress.XtraReports.UI.XRTableRow","Line Style":"DevExpress.XtraReports.UI.XRCrossBandLine.LineStyle","Data Bindings":"DevExpress.XtraReports.UI.XRControl.DataBindings","Parent Changed":"DevExpress.XtraReports.UI.XRControlEvents.OnParentChanged","With Last Detail":"DevExpress.XtraReports.UI.GroupFooterUnion.WithLastDetail","Custom Unbound Field Data":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomUnboundFieldData","Custom Group Interval":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomGroupInterval","Page Information":"DevExpress.XtraReports.UI.XRPageInfo.PageInfo",Checked:"DevExpress.XtraReports.UI.XRCheckBox.Checked",Bookmark:"DevExpress.XtraReports.UI.XRControl.Bookmark",Bitmap:"DevExpress.XtraReports.UI.WinControlImageType.Bitmap",Height:"DevExpress.XtraReports.UI.Band.Height",Minimum:"DevExpress.XtraReports.UI.XRGauge.Minimum","After the Band, Except for the Last Entry":"DevExpress.XtraReports.UI.PageBreak.AfterBandExceptLastEntry",Indent:"DevExpress.XtraReports.UI.XRTableOfContentsLevel.Indent","Sorting Summary Reset":"DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryReset",Value:"DevExpress.XtraReports.UI.ProcessDuplicatesTarget.Value","Show Printing Warnings":"DevExpress.XtraReports.UI.XtraReport.ShowPrintingWarnings","Multi-Column Options":"DevExpress.XtraReports.UI.MultiColumn","Draw the Watermark":"DevExpress.XtraReports.UI.XtraReport.DrawWatermark",Median:"DevExpress.XtraReports.UI.SortingSummaryFunction.Median","Background Color":"DevExpress.XtraReports.UI.XRControl.BackColor",None:"DevExpress.XtraReports.UI.MultiColumnMode.None","Group Field":"DevExpress.XtraReports.UI.GroupField","Glyph Alignment":"DevExpress.XtraReports.UI.XRCheckBox.GlyphAlignment","Custom ServerMode Sort":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomServerModeSort",Annotations:"DevExpress.XtraReports.UI.XRChart.Annotations",Sparkline:"DevExpress.XtraReports.UI.XRSparkline","JScript .NET":"DevExpress.XtraReports.ScriptLanguage.JScript","Table Cell":"DevExpress.XtraReports.UI.XRTableCell","Snap to Grid":"DevExpress.XtraReports.UI.SnappingMode.SnapToGrid","Style Priority":"DevExpress.XtraReports.UI.XRControl.StylePriority","Image Type":"DevExpress.XtraReports.UI.XRGauge.ImageType","Rich Text":"DevExpress.XtraReports.UI.XRRichTextBase.RtfText","Cross-band Box":"DevExpress.XtraReports.UI.XRCrossBandBox","Line Direction":"DevExpress.XtraReports.UI.XRLine.LineDirection","Border Width":"DevExpress.XtraReports.UI.XRControl.BorderWidth","Row Span":"DevExpress.XtraReports.UI.XRTableCell.RowSpan","Border Color":"DevExpress.XtraReports.UI.XRControl.BorderColor","Text Alignment":"DevExpress.XtraReports.UI.XRControl.TextAlignment","Group Sorting Summary":"DevExpress.XtraReports.UI.XRGroupSortingSummary","Filter String":"DevExpress.XtraReports.UI.XtraReportBase.FilterString","Custom Cell Value":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomCellValue","Printable Component Container":"DevExpress.XtraReports.UI.PrintableComponentContainer","Locked in the End-User Designer":"DevExpress.XtraReports.UI.XRControl.LockedInUserDesigner","Page Footer":"DevExpress.XtraReports.UI.PageFooterBand","Border Dash Style":"DevExpress.XtraReports.UI.XRControlStyle.BorderDashStyle",Formatting:"DevExpress.XtraReports.UI.FormattingRule.Formatting","Standard Deviation":"DevExpress.XtraReports.UI.SortingSummaryFunction.StdDev","Format String":"DevExpress.XtraReports.UI.XRBinding.FormatString","Back Color":"DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.BackColor",Suppress:"DevExpress.XtraReports.UI.ValueSuppressType.Suppress","Window Control Options":"DevExpress.XtraReports.UI.WindowControlOptions",Margins:"DevExpress.XtraReports.UI.XtraReport.Margins","Using Settings of the Default Printer":"DevExpress.XtraReports.UI.XtraReport.DefaultPrinterSettingsUsing",Borders:"DevExpress.XtraReports.UI.XRControl.Borders","Style Sheet":"DevExpress.XtraReports.UI.XtraReport.StyleSheet","End Point":"DevExpress.XtraReports.UI.XRCrossBandControl.EndPoint",Fill:"DevExpress.XtraReports.UI.XRDockStyle.Fill","Annotation Repository":"DevExpress.XtraReports.UI.XRChart.AnnotationRepository","Page Width":"DevExpress.XtraReports.UI.XtraReport.PageWidth","Series Data Member":"DevExpress.XtraReports.UI.XRChart.SeriesDataMember","Check Box":"DevExpress.XtraReports.UI.XRCheckBox","Use Padding":"DevExpress.XtraReports.UI.StylePriority.UsePadding","View Theme":"DevExpress.XtraReports.UI.XRGauge.ViewTheme","View Style":"DevExpress.XtraReports.UI.XRGauge.ViewStyle","Page Color":"DevExpress.XtraReports.UI.XtraReport.PageColor","With First Detail":"DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail","Navigation URL":"DevExpress.XtraReports.UI.XRControl.NavigateUrl","Report Header":"DevExpress.XtraReports.UI.ReportHeaderBand","Custom Field Value Cells":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomFieldValueCells",Styles:"DevExpress.XtraReports.UI.XRPivotGrid.Styles","Standard Deviation (Distinct)":"DevExpress.XtraReports.UI.SortingSummaryFunction.DStdDev","Series Name Template":"DevExpress.XtraReports.UI.XRChart.SeriesNameTemplate","Standard Population Deviation (Distinct)":"DevExpress.XtraReports.UI.SummaryFunc.DStdDevP","XML Data Path":"DevExpress.XtraReports.UI.XtraReportBase.XmlDataPath","Options Chart Data Source":"DevExpress.XtraReports.UI.XRPivotGrid.OptionsChartDataSource","Anchor Vertically":"DevExpress.XtraReports.UI.XRControl.AnchorVertical","Report Source Url":"DevExpress.XtraReports.UI.XRSubreport.ReportSourceUrl","Data Source's Schema":"DevExpress.XtraReports.UI.XtraReport.DataSourceSchema","Zip Code":"DevExpress.XtraReports.UI.XRZipCode",Angle:"DevExpress.XtraReports.UI.XRLabel.Angle",
"Process Duplicates":"DevExpress.XtraReports.UI.XRLabel.ProcessDuplicates","Print Field Value":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintFieldValue","Small Chart Text":"DevExpress.XtraReports.UI.XRChart.SmallChartText","Display Name":"DevExpress.XtraReports.UI.CalculatedField.DisplayName","Custom Draw an Axis Label":"DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawAxisLabel","Detail Count at Design Time":"DevExpress.XtraReports.UI.ReportPrintOptions.DetailCountAtDesignTime","Using Parent Style":"DevExpress.XtraReports.UI.XRControl.ParentStyleUsing","Drawing Method":"DevExpress.XtraReports.UI.WinControlContainer.DrawMethod","As Image":"DevExpress.XtraReports.UI.WinControlPrintMode.AsImage","Header Group Line Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.HeaderGroupLineStyle","Start Band":"DevExpress.XtraReports.UI.XRCrossBandControl.StartBand","Label Scripts":"DevExpress.XtraReports.UI.XRLabelScripts",Image:"DevExpress.XtraReports.UI.XRPictureBox.Image","Suppress and Shrink":"DevExpress.XtraReports.UI.ProcessDuplicatesMode.SuppressAndShrink","Drill-Down Control":"DevExpress.XtraReports.UI.Band.DrillDownControl","Row Changed":"DevExpress.XtraReports.UI.XRSummaryEvents.OnRowChanged","Report Source":"DevExpress.XtraReports.UI.SubreportBase.ReportSource",Default:"DevExpress.XtraReports.UI.WinControlPrintMode.Default","Paper Kind":"DevExpress.XtraReports.UI.XtraReport.PaperKind","Paper Name":"DevExpress.XtraReports.UI.XtraReport.PaperName","Text Horizontal Alignment":"DevExpress.XtraReports.UI.XRAppearanceObject.TextHorizontalAlignment","Snapping Mode":"DevExpress.XtraReports.UI.XtraReport.SnappingMode","Can Publish":"DevExpress.XtraReports.UI.XRControl.CanPublish","Summary Row Changed":"DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryRowChanged","Image URL":"DevExpress.XtraReports.UI.XRPictureBox.ImageUrl",Size:"DevExpress.XtraReports.UI.XRControl.Size",Name:"DevExpress.XtraReports.UI.XRControl.Name","Control Style":"DevExpress.XtraReports.UI.XRControlStyle","Foreground Color":"DevExpress.XtraReports.UI.XRControlStyle.ForeColor","Band Level Changed":"DevExpress.XtraReports.UI.GroupBandScripts.OnBandLevelChanged","Sort Fields":"DevExpress.XtraReports.UI.DetailBand.SortFields","Custom Field Sort":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomFieldSort","Data Source Demanded":"DevExpress.XtraReports.UI.XtraReportScripts.OnDataSourceDemanded","End Band":"DevExpress.XtraReports.UI.XRCrossBandControl.EndBand","Sorting Summary Row Changed":"DevExpress.XtraReports.UI.GroupHeaderBandScripts.OnSortingSummaryRowChanged","Cell Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.CellStyle","Print at Bottom":"DevExpress.XtraReports.UI.ReportFooterBand.PrintAtBottom",Tag:"DevExpress.XtraReports.UI.XRControl.Tag","Show Print Margins Warning":"DevExpress.XtraReports.UI.XtraReport.ShowPrintMarginsWarning","Get a Result":"DevExpress.XtraReports.UI.XRSummaryEvents.OnGetResult","Detail Count":"DevExpress.XtraReports.UI.ReportPrintOptions.DetailCount",Sizing:"DevExpress.XtraReports.UI.XRPictureBox.Sizing","Calculated Fields":"DevExpress.XtraReports.UI.XtraReport.CalculatedFields","Whole Page":"DevExpress.XtraReports.UI.GroupUnion.WholePage","Parameters Submitted":"DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestSubmit","Use Column Width":"DevExpress.XtraReports.UI.MultiColumnMode.UseColumnWidth","Use Border Color":"DevExpress.XtraReports.UI.StyleUsing.UseBorderColor","Total Cell Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.TotalCellStyle","Print Progress":"DevExpress.XtraReports.UI.XtraReportScripts.OnPrintProgress","Use Column Count":"DevExpress.XtraReports.UI.MultiColumnMode.UseColumnCount","Use Border Width":"DevExpress.XtraReports.UI.StyleUsing.UseBorderWidth","Axis Scale Changed":"DevExpress.XtraReports.UI.XRChartScripts.OnAxisScaleChanged",View:"DevExpress.XtraReports.UI.XRSparkline.View","Can Shrink":"DevExpress.XtraReports.UI.XRControl.CanShrink","Detail Count when Data Source is Empty":"DevExpress.XtraReports.UI.ReportPrintOptions.DetailCountOnEmptyDataSource","Formatting Rules":"DevExpress.XtraReports.UI.XRControl.FormattingRules","Before the Band, Except for the First Entry":"DevExpress.XtraReports.UI.PageBreak.BeforeBandExceptFirstEntry","Chart Scripts":"DevExpress.XtraReports.UI.XRChartScripts","Draw the Grid":"DevExpress.XtraReports.UI.XtraReport.DrawGrid","Band Scripts":"DevExpress.XtraReports.UI.BandScripts","Group Footer":"DevExpress.XtraReports.UI.GroupFooterBand","Background Image":"DevExpress.XtraReports.UI.XRChart.BackImage",Trimming:"DevExpress.XtraReports.UI.XRAppearanceObject.Trimming","Ignore Null Values":"DevExpress.XtraReports.UI.XRGroupSortingSummary.IgnoreNullValues","Script References":"DevExpress.XtraReports.UI.XtraReport.ScriptReferences",Ascending:"DevExpress.XtraReports.UI.XRColumnSortOrder.Ascending","Xlsx Format String":"DevExpress.XtraReports.UI.XRControl.XlsxFormatString",Fields:"DevExpress.XtraReports.UI.XRPivotGrid.Fields",Binding:"DevExpress.XtraReports.Design.DataBinding.Binding","First Down, then Across":"DevExpress.XtraReports.UI.ColumnDirection.DownThenAcross","Print Options":"DevExpress.XtraReports.UI.XRPivotGrid.OptionsPrint","Before Print":"DevExpress.XtraReports.UI.XRControlEvents.OnBeforePrint","Sort Order":"DevExpress.XtraReports.UI.XRGroupSortingSummary.SortOrder","Use WMPaint Recursively":"DevExpress.XtraReports.UI.WinControlDrawMethod.UseWMPaintRecursive","Page Info":"DevExpress.XtraReports.UI.XRPageInfo","Field Value Display Text":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnFieldValueDisplayText","Clip Content":"DevExpress.XtraReports.UI.PrintableComponentContainer.ClipContent","Appearance Name":"DevExpress.XtraReports.UI.XRChart.AppearanceName","Custom Draw a Series":"DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawSeries","Custom Column Width":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomColumnWidth",Mode:"DevExpress.XtraReports.UI.MultiColumn.Mode","Axis Whole Range Changed":"DevExpress.XtraReports.UI.XRChartScripts.OnAxisWholeRangeChanged","Show Designer's Hints":"DevExpress.XtraReports.UI.XtraReport.ShowDesignerHints","Axis Visual Range Changed":"DevExpress.XtraReports.UI.XRChartScripts.OnAxisVisualRangeChanged","Fill Empty Space":"DevExpress.XtraReports.UI.XtraReportScripts.OnFillEmptySpace","Get a Value":"DevExpress.XtraReports.UI.CalculatedFieldScripts.OnGetValue","Line Scripts":"DevExpress.XtraReports.UI.XRLineScripts",Bands:"DevExpress.XtraReports.UI.XtraReportBase.Bands",Symbology:"DevExpress.XtraReports.UI.XRBarCode.Symbology","Grand Total Cell Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.GrandTotalCellStyle","Sub-Bands":"DevExpress.XtraReports.UI.Band.SubBands","Control Scripts":"DevExpress.XtraReports.UI.XRControlScripts","Cross-band Line":"DevExpress.XtraReports.UI.XRCrossBandLine","Location Changed":"DevExpress.XtraReports.UI.XRControlEvents.OnLocationChanged","Designer Options":"DevExpress.XtraReports.UI.XtraReport.DesignerOptions",Series:"DevExpress.XtraReports.UI.XRChart.Series","Use Borders":"DevExpress.XtraReports.UI.StyleUsing.UseBorders",Width:"DevExpress.XtraReports.UI.XRControl.Width","Image Alignment":"DevExpress.XtraReports.UI.XRPictureBox.ImageAlignment","Filter Separator Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.FilterSeparatorStyle",Diagram:"DevExpress.XtraReports.UI.XRChart.Diagram","Script Language":"DevExpress.XtraReports.UI.XtraReport.ScriptLanguage","Word Wrap":"DevExpress.XtraReports.UI.XRAppearanceObject.WordWrap","Hundredths of an Inch":"DevExpress.XtraReports.UI.ReportUnit.HundredthsOfAnInch","Page Height":"DevExpress.XtraReports.UI.XtraReport.PageHeight","Custom Paint":"DevExpress.XtraReports.UI.XRChartScripts.OnCustomPaint",Count:"DevExpress.XtraReports.UI.SortingSummaryFunction.Count","Population Variance (Distinct)":"DevExpress.XtraReports.UI.SortingSummaryFunction.DVarP","Use Border Dash Style":"DevExpress.XtraReports.UI.StylePriority.UseBorderDashStyle","OLAP Data Provider":"DevExpress.XtraReports.UI.XRPivotGrid.OLAPDataProvider",Orientation:"DevExpress.XtraReports.UI.XRBarCode.BarCodeOrientation","Fill Style":"DevExpress.XtraReports.UI.XRChart.FillStyle","Report Scripts":"DevExpress.XtraReports.UI.XtraReportScripts","Report Footer":"DevExpress.XtraReports.UI.ReportFooterBand","Can Grow":"DevExpress.XtraReports.UI.XRControl.CanGrow","Running Summary":"DevExpress.XtraReports.UI.SummaryFunc.RunningSum","Property Name":"DevExpress.XtraReports.UI.XRBinding.PropertyName",Summary:"DevExpress.XtraReports.UI.XRLabel.Summary","After the Band":"DevExpress.XtraReports.UI.PageBreak.AfterBand",Prefilter:"DevExpress.XtraReports.UI.PivotGrid.XRPrefilter",Alignment:"DevExpress.XtraReports.UI.XRBarCode.Alignment",Page:"DevExpress.XtraReports.UI.SummaryRunning.Page",Detail:"DevExpress.XtraReports.UI.DetailBand",Reset:"DevExpress.XtraReports.UI.XRSummaryEvents.OnReset","Summary Reset":"DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryReset","Text Changed":"DevExpress.XtraReports.UI.XRControlEvents.OnTextChanged",Pixels:"DevExpress.XtraReports.UI.ReportUnit.Pixels",Report:"DevExpress.XtraReports.UI.SummaryRunning.Report",Bottom:"DevExpress.XtraReports.UI.XRDockStyle.Bottom",Titles:"DevExpress.XtraReports.UI.XRChart.Titles",Draw:"DevExpress.XtraReports.UI.XRControlEvents.OnDraw","First Across, then Down":"DevExpress.XtraReports.UI.ColumnDirection.AcrossThenDown","Pivot Grid":"DevExpress.XtraReports.UI.XRPivotGrid","Header Group Line":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.HeaderGroupLine",Descending:"DevExpress.XtraReports.UI.XRColumnSortOrder.Descending","Table Of Contents Title":"DevExpress.XtraReports.UI.XRTableOfContentsTitle","Use WMPrint Recursively":"DevExpress.XtraReports.UI.WinControlDrawMethod.UseWMPrintRecursive","Table Of Contents Level":"DevExpress.XtraReports.UI.XRTableOfContentsLevel","Custom Chart Data Source Rows":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomChartDataSourceRows","Custom Chart Data Source Data":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomChartDataSourceData",Visible:"DevExpress.XtraReports.UI.XRControl.Visible","Standard Population Deviation":"DevExpress.XtraReports.UI.SortingSummaryFunction.StdDevP",Layout:"DevExpress.XtraReports.UI.MultiColumn.Layout","Snap Grid Size":"DevExpress.XtraReports.UI.XtraReport.SnapGridSize","Parameters Request Before Show":"DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestBeforeShow","HTML Item Created":"DevExpress.XtraReports.UI.XRControlEvents.OnHtmlItemCreated","Use WMPrint Method":"DevExpress.XtraReports.UI.WinControlDrawMethod.UseWMPrint","Use WMPaint Method":"DevExpress.XtraReports.UI.WinControlDrawMethod.UseWMPaint","Print on Page":"DevExpress.XtraReports.UI.XRControlEvents.OnPrintOnPage","Windows Forms Control":"DevExpress.XtraReports.UI.WinControlContainer","Snap Line Padding":"DevExpress.XtraReports.UI.XRControl.SnapLinePadding","Formatting Rule Sheet":"DevExpress.XtraReports.UI.XtraReport.FormattingRuleSheet","PivotGrid Scripts":"DevExpress.XtraReports.UI.XRPivotGridScripts","Show Margin Lines in Preview":"DevExpress.XtraReports.UI.XtraReport.ShowPreviewMarginLines","Custom Row Height":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomRowHeight","Check State":"DevExpress.XtraReports.UI.XRCheckBox.CheckState","Segment Width":"DevExpress.XtraReports.UI.XRZipCode.SegmentWidth","Value Member":"DevExpress.XtraReports.UI.XRSparkline.ValueMember","Field Header Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.FieldHeaderStyle","Total Cell":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.TotalCell","Vertical Content Splitting":"DevExpress.XtraReports.UI.XtraReport.VerticalContentSplitting","Sub-Report":"DevExpress.XtraReports.UI.XRSubreport","Binary Data":"DevExpress.XtraReports.UI.XRBarCode.BinaryData","Column Spacing":"DevExpress.XtraReports.UI.MultiColumn.ColumnSpacing","Field Value Total Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.FieldValueTotalStyle","Custom Draw Crosshair":"DevExpress.XtraReports.UI.XRChartScripts.OnCustomDrawCrosshair",Module:"DevExpress.XtraReports.UI.XRBarCode.Module","Prefilter Criteria Changed":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrefilterCriteriaChanged","Sub-Band":"DevExpress.XtraReports.UI.SubBand",Line:"DevExpress.XtraReports.UI.XRLine","Detail Report":"DevExpress.XtraReports.UI.DetailReportBand","Text Trimming":"DevExpress.XtraReports.UI.XRControl.TextTrimming","Print Mode":"DevExpress.XtraReports.UI.WinControlContainer.PrintMode",Levels:"DevExpress.XtraReports.UI.XRTableOfContents.Levels","Level Title":"DevExpress.XtraReports.UI.XRTableOfContents.LevelTitle","Calculated Field Scripts":"DevExpress.XtraReports.UI.CalculatedFieldScripts",Stretch:"DevExpress.XtraReports.UI.XRShape.Stretch","Pivot Grid Data Source Options":"DevExpress.XtraReports.UI.XRChart.PivotGridDataSourceOptions",FieldValueGrandTotal:"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValueGrandTotal","Keep Together with Detail Reports":"DevExpress.XtraReports.UI.DetailBand.KeepTogetherWithDetailReports","Print Header":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintHeader",Landscape:"DevExpress.XtraReports.UI.XtraReport.Landscape","Group Header Band Scripts":"DevExpress.XtraReports.UI.GroupHeaderBandScripts","Data Field Options":"DevExpress.XtraReports.UI.XRPivotGrid.OptionsDataField","Print Cell":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnPrintCell","Page Break":"DevExpress.XtraReports.UI.Band.PageBreak","Bar Code":"DevExpress.XtraReports.UI.XRBarCode","Record Number":"DevExpress.XtraReports.UI.SummaryFunc.RecordNumber","Top Margin":"DevExpress.XtraReports.UI.TopMarginBand","Tenths of a Millimeter":"DevExpress.XtraReports.UI.ReportUnit.TenthsOfAMillimeter","Parameter Name":"DevExpress.XtraReports.UI.ParameterBinding.ParameterName","C#":"DevExpress.XtraReports.ScriptLanguage.CSharp","Show Footer":"DevExpress.XtraReports.Design.GroupSort.GroupSortReflectItem.ShowFooter","Data Source's Row Changed":"DevExpress.XtraReports.UI.XtraReportScripts.OnDataSourceRowChanged","Leader Symbol":"DevExpress.XtraReports.UI.XRTableOfContentsLevel.LeaderSymbol",Enabled:"DevExpress.XtraReports.UI.XRGroupSortingSummary.Enabled","Data Options":"DevExpress.XtraReports.UI.XRPivotGrid.OptionsData","View Options":"DevExpress.XtraReports.UI.XRPivotGrid.OptionsView",Appearance:"DevExpress.XtraReports.UI.XRPivotGrid.Appearance","Auto-Module":"DevExpress.XtraReports.UI.XRBarCode.AutoModule","Band's Height Changed":"DevExpress.XtraReports.UI.XtraReportScripts.OnBandHeightChanged","Show Header":"DevExpress.XtraReports.Design.GroupSort.GroupSortReflectItem.ShowHeader","Fore Color":"DevExpress.XtraReports.UI.XRTableOfContentsLevelBase.ForeColor","Field Header":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldHeader","Merge based on Tag":"DevExpress.XtraReports.UI.ValueSuppressType.MergeByTag",Expression:"DevExpress.XtraReports.UI.CalculatedField.Expression","Picture Box":"DevExpress.XtraReports.UI.XRPictureBox","Automatic Layout":"DevExpress.XtraReports.UI.XRChart.AutoLayout","Summary Calculated":"DevExpress.XtraReports.UI.XRLabelScripts.OnSummaryCalculated","Navigation Target":"DevExpress.XtraReports.UI.XRControl.Target","Field Value":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValue","Parent Bookmark":"DevExpress.XtraReports.UI.XRControl.BookmarkParent","Table Of Contents":"DevExpress.XtraReports.UI.XRTableOfContents",Legend:"DevExpress.XtraReports.UI.XRChart.Legend","Blank Detail Count":"DevExpress.XtraReports.UI.ReportPrintOptions.BlankDetailCount","Text Vertical Alignment":"DevExpress.XtraReports.UI.XRAppearanceObject.TextVerticalAlignment","Custom Cell Display Text":"DevExpress.XtraReports.UI.XRPivotGridScripts.OnCustomCellDisplayText","Auto Width":"DevExpress.XtraReports.UI.XRLabel.AutoWidth","Roll Paper":"DevExpress.XtraReports.UI.XtraReport.RollPaper","Print On":"DevExpress.XtraReports.UI.PageBand.PrintOn","Field Value Total":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.FieldValueTotal","Click in Preview":"DevExpress.XtraReports.UI.XRControlEvents.OnPreviewClick","Parameters Changed":"DevExpress.XtraReports.UI.XtraReportScripts.OnParametersRequestValueChanged","Calculated Field":"DevExpress.XtraReports.UI.CalculatedField","Horizontal Content Splitting":"DevExpress.XtraReports.UI.XtraReport.HorizontalContentSplitting",Running:"DevExpress.XtraReports.UI.XRSummary.Running","Lines Style":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridStyles.LinesStyle","Snap Lines":"DevExpress.XtraReports.UI.SnappingMode.SnapLines","Use Background Color":"DevExpress.XtraReports.UI.StyleUsing.UseBackColor","Formatting Rule":"DevExpress.XtraReports.UI.FormattingRule","Merge based on Value":"DevExpress.XtraReports.UI.ValueSuppressType.MergeByValue","Series Sorting":"DevExpress.XtraReports.UI.XRChart.SeriesSorting","Mouse Move in Preview":"DevExpress.XtraReports.UI.XRControlEvents.OnPreviewMouseMove","Mouse Down in Preview":"DevExpress.XtraReports.UI.XRControlEvents.OnPreviewMouseDown","Printer Name":"DevExpress.XtraReports.UI.XtraReport.PrinterName","Target Value":"DevExpress.XtraReports.UI.XRGauge.TargetValue","View Type":"DevExpress.XtraReports.UI.XRGauge.ViewType","Odd Style":"DevExpress.XtraReports.UI.XRControl.XRControlStyles.OddStyle","Level Default":"DevExpress.XtraReports.UI.XRTableOfContents.LevelDefault","Print when Data Source is Empty":"DevExpress.XtraReports.UI.ReportPrintOptions.PrintOnEmptyDataSource","Start Page Number":"DevExpress.XtraReports.UI.XRPageInfo.StartPageNumber",Style:"DevExpress.XtraReports.UI.ConditionFormatting.Style","Indicators Palette Name":"DevExpress.XtraReports.UI.XRChart.IndicatorsPaletteName","After Print":"DevExpress.XtraReports.UI.XRControlEvents.OnAfterPrint","As Bricks":"DevExpress.XtraReports.UI.WinControlPrintMode.AsBricks",Cell:"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.Cell","Grand Total Cell":"DevExpress.XtraReports.UI.PivotGrid.XRPivotGridAppearances.GrandTotalCell","Show Export Warnings":"DevExpress.XtraReports.UI.XtraReport.ShowExportWarnings","Style Sheet's Path":"DevExpress.XtraReports.UI.XtraReport.StyleSheetPath","Measure Units":"DevExpress.XtraReports.UI.XtraReport.ReportUnit","Field Type":"DevExpress.XtraReports.UI.CalculatedField.FieldType","Multi Select":"DevExpress.XtraPivotGrid.PivotGridOptionsSelection.MultiSelect","OLAP Filter Using Where Clause":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.OLAPFilterUsingWhereClause","Show Column Grand Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnGrandTotals","Show Unbound Expression Menu":"DevExpress.XtraPivotGrid.PivotGridField.Options.ShowUnboundExpressionMenu",ForeColor:"DevExpress.PivotGrid.Printing.PrintAppearanceObject.ForeColor",Field:"DevExpress.XtraPivotGrid.PivotGridStyleFormatCondition.Field","Custom Totals":"DevExpress.XtraPivotGrid.PivotTotalsVisibility.CustomTotals","Summary Type":"DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.SummaryType","Totals Visibility":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalsVisibility","OLAP Filter By UniqueName":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.OLAPFilterByUniqueName",Empty:"DevExpress.XtraPivotGrid.PivotGridAppearances.Empty","Paper Height":"DevExpress.XtraPivotGrid.Data.PivotGridPageSettings.PaperHeight",TotalCell:"DevExpress.PivotGrid.Printing.PrintAppearance.TotalCell","Field Value Grand Total":"DevExpress.XtraPivotGrid.PivotGridAppearancesBase.FieldValueGrandTotal","Column Header Area":"DevExpress.XtraPivotGrid.PivotGridAppearances.ColumnHeaderArea",GrandTotalCell:"DevExpress.PivotGrid.Printing.PrintAppearance.GrandTotalCell","Read Only":"DevExpress.XtraPivotGrid.PivotGridField.Options.ReadOnly","Filter Separator Bar Padding":"DevExpress.XtraPivotGrid.PivotGridOptionsView.FilterSeparatorBarPadding","Top Value Mode":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueMode","Top Value Type":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueType",Numeric:"DevExpress.XtraPivotGrid.PivotGroupInterval.Numeric","Visible Count":"DevExpress.XtraPivotGrid.PivotGridGroup.VisibleCount","Grand Total Cell Format":"DevExpress.XtraPivotGrid.PivotGridFieldBase.GrandTotalCellFormat","Chart Data Vertical":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.ChartDataVertical","Apply To Total Cell":"DevExpress.XtraPivotGrid.PivotGridStyleFormatCondition.ApplyToTotalCell","After Values":"DevExpress.XtraPivotGrid.PivotRowTotalsLocation.Far","Show Value Hints":"DevExpress.XtraPivotGrid.PivotGridOptionsHint.ShowValueHints","Traffic Lights":"DevExpress.XtraPivotGrid.PivotKPIGraphic.TrafficLights","Summary Display Type":"DevExpress.XtraPivotGrid.PivotGridFieldBase.SummaryDisplayType",Status:"DevExpress.XtraPivotGrid.PivotKPIType.Status","Show Vert Lines":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowVertLines","Month-Year":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonthYear","Cell Format":"DevExpress.XtraPivotGrid.PivotGridCustomTotalBase.CellFormat","Apply To Grand Total Cell":"DevExpress.XtraPivotGrid.PivotGridStyleFormatCondition.ApplyToGrandTotalCell","Dimension Attribute":"DevExpress.XtraPivotGrid.PivotSortMode.DimensionAttribute","Filter Values":"DevExpress.XtraPivotGrid.PivotGridGroup.FilterValues","Allow Cross-Group Variation":"DevExpress.XtraPivotGrid.PivotGridOptionsData.AllowCrossGroupVariation",Day:"DevExpress.XtraPivotGrid.PivotGroupInterval.DateDay","OLAP None":"DevExpress.XtraPivotGrid.PivotSortMode.None","Store Layout Options":"DevExpress.XtraPivotGrid.OptionsLayoutPivotGrid.StoreLayoutOptions","Hide Empty Variation Items":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.HideEmptyVariationItems","Value Format":"DevExpress.XtraPivotGrid.PivotGridFieldToolTips.ValueFormat",Weight:"DevExpress.XtraPivotGrid.PivotKPIType.Weight",Month:"DevExpress.XtraPivotGrid.PivotGroupInterval.DateMonth","KPI Graphic":"DevExpress.XtraPivotGrid.PivotGridFieldBase.KPIGraphic","Horizontal Scrolling":"DevExpress.XtraPivotGrid.PivotGridOptionsBehavior.HorizontalScrolling","Drill Down Max Row Count":"DevExpress.XtraPivotGrid.PivotGridOptionsData.DrillDownMaxRowCount","Allow Edit":"DevExpress.XtraPivotGrid.PivotGridField.Options.AllowEdit","Rank In Column Smallest To Largest":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInColumnSmallestToLargest","Percent Of Row Grand Total":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfRowGrandTotal","Show Button Mode":"DevExpress.XtraPivotGrid.PivotGridField.Options.ShowButtonMode","Enable Field Value Menu":"DevExpress.XtraPivotGrid.PivotGridOptionsMenu.EnableFieldValueMenu","Export Empty Cells":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.ExportEmptyCells","Group Interval Numeric Range":"DevExpress.XtraPivotGrid.PivotGridFieldBase.GroupIntervalNumericRange","Percent Of Row":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfRow","Variation for Entire Population":"DevExpress.Data.PivotGrid.PivotSummaryType.Varp","Allow Filter By Summary":"DevExpress.XtraPivotGrid.PivotGridOptionsCustomization.AllowFilterBySummary","Show Grand Total":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowGrandTotal",PrefilterPanel:"DevExpress.XtraPivotGrid.PivotGridAppearances.PrefilterPanel","Column Value Line Count":"DevExpress.XtraPivotGrid.PivotGridField.ColumnValueLineCount","Data Area":"DevExpress.XtraPivotGrid.PivotArea.DataArea","Show Row Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowTotals","OLAP Key":"DevExpress.XtraPivotGrid.PivotSortMode.Key",Always:"DevExpress.XtraPivotGrid.AllowHideFieldsType.Always",Caption:"DevExpress.XtraPivotGrid.PivotGridFieldBase.Caption",XMLA:"DevExpress.XtraPivotGrid.OLAPDataProvider.Xmla","Unbound Field Name":"DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundFieldName","All Areas":"DevExpress.XtraPivotGrid.PivotGridAllowedAreas.All",Faces:"DevExpress.XtraPivotGrid.PivotKPIGraphic.Faces","Show Data Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowDataHeaders","Prefilter Column Name":"DevExpress.XtraPivotGrid.PivotGridFieldBase.PrefilterColumnName","Print Horizontal Lines":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintHorzLines","Max Point Count By Series":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.MaxPointCountBySeries","Show Filter Separator Bar":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowFilterSeparatorBar",Variation:"DevExpress.Data.PivotGrid.PivotSummaryType.Var","Show Grand Totals For Single Values":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowGrandTotalsForSingleValues","Allow Sort":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowSort","Allow Drag":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowDrag",Never:"DevExpress.XtraPivotGrid.PivotOLAPFilterUsingWhereClause.Never",BackColor:"DevExpress.PivotGrid.Printing.PrintAppearanceObject.BackColor",Criteria:"DevExpress.XtraPivotGrid.Prefilter.Criteria","Header Filter Button Active":"DevExpress.XtraPivotGrid.PivotGridAppearances.HeaderFilterButtonActive","Print Data Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintDataHeaders","Draw Focus Rect":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.DrawFocusedCellRect","Column Area":"DevExpress.XtraPivotGrid.PivotArea.ColumnArea","Data Header Area":"DevExpress.XtraPivotGrid.PivotGridAppearances.DataHeaderArea","Show Column Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnTotals","Use Aggregate For Single Filter Value":"DevExpress.XtraPivotGrid.PivotGridOptionsOLAP.UseAggregateForSingleFilterValue","Grand Total Text":"DevExpress.XtraPivotGrid.PivotGridFieldBase.GrandTotalText","Sort By Summary Info":"DevExpress.XtraPivotGrid.PivotGridFieldBase.SortBySummaryInfo","Show In Customization Form":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowInCustomizationForm","Custom Total Summary Type":"DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.CustomTotalSummaryType","Area Index":"DevExpress.XtraPivotGrid.PivotGridFieldBase.AreaIndex","Percent Of Grand Total":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfGrandTotal","Use Aggregate Functions":"DevExpress.XtraPivotGrid.UnboundExpressionMode.UseAggregateFunctions","Page Settings":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PageSettings",Calculations:"DevExpress.XtraPivotGrid.PivotGridFieldBase.Calculations","Image Index":"DevExpress.XtraPivotGrid.PivotGridField.ImageIndex","OLAP Unique Member Name":"DevExpress.XtraPivotGrid.PivotGridFieldSortCondition.OLAPUniqueMemberName","Allow Sort By Summary":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowSortBySummary","Status Arrow":"DevExpress.XtraPivotGrid.PivotKPIGraphic.StatusArrow",Control:"DevExpress.XtraPivotGrid.PivotGridScrolling.Control","Row Count":"DevExpress.XtraPivotGrid.PivotGridCells.RowCount","Show Row Grand Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowGrandTotals","Show New Values":"DevExpress.XtraPivotGrid.PivotGridFieldBase.ShowNewValues","Allow Glyph Skinning":"DevExpress.XtraPivotGrid.PivotGridOptionsView.AllowGlyphSkinning",Area:"DevExpress.XtraPivotGrid.PivotGridOptionsDataField.Area","Unbound Expression":"DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundExpression",Year:"DevExpress.XtraPivotGrid.PivotGroupInterval.DateYear","Case Sensitive":"DevExpress.XtraPivotGrid.PivotGridOptionsData.CaseSensitive","Date-Hour":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateHour","Max Height":"DevExpress.XtraPivotGrid.PivotGridOptionsSelection.MaxHeight","Preserve Collapsed Levels":"DevExpress.XtraPivotGrid.CopyCollapsedValuesMode.PreserveCollapsedLevels","Merge Row Field Values":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.MergeRowFieldValues","Allow Drag In Customization Form":"DevExpress.XtraPivotGrid.PivotGridOptionsCustomization.AllowDragInCustomizationForm","Show Filter Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowFilterHeaders","Total Cell Format":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalCellFormat","Empty Value Text":"DevExpress.XtraPivotGrid.PivotGridFieldBase.EmptyValueText","Expanded In Fields Group":"DevExpress.XtraPivotGrid.PivotGridFieldBase.ExpandedInFieldsGroup","Loading Panel Delay":"DevExpress.XtraPivotGrid.PivotGridOptionsBehaviorBase.LoadingPanelDelay","Row Totals Location":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.RowTotalsLocation","Print Row Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintRowHeaders","Group Filter Mode":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.GroupFilterMode","Row Value Line Count":"DevExpress.XtraPivotGrid.PivotGridOptionsDataFieldEx.RowValueLineCount","Row Area":"DevExpress.XtraPivotGrid.PivotArea.RowArea","Date-Hour-Minute":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateHourMinute","Show Cell Hints":"DevExpress.XtraPivotGrid.PivotGridOptionsHint.ShowCellHints","Copy Field Values To Clipboard Behavior":"DevExpress.XtraPivotGrid.PivotGridOptionsBehavior.ClipboardCopyCollapsedValuesMode","Top Value Show Others":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueShowOthers","Allow Filter":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowFilter",OleDb:"DevExpress.XtraPivotGrid.OLAPDataProvider.OleDb","Rank In Row Largest To Smallest":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInRowLargestToSmallest",Adomd:"DevExpress.XtraPivotGrid.OLAPDataProvider.Adomd","Server Defined":"DevExpress.XtraPivotGrid.PivotKPIGraphic.ServerDefined","Road Signs":"DevExpress.XtraPivotGrid.PivotKPIGraphic.RoadSigns","Header Height Offset":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.HeaderHeightOffset","Apply Best Fit On Field Dragging":"DevExpress.XtraPivotGrid.PivotGridOptionsBehavior.ApplyBestFitOnFieldDragging","Allow Expand":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowExpand","Show Column Custom Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.ShowColumnCustomTotals","Reversed Cylinder":"DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedCylinder","Before Values":"DevExpress.XtraPivotGrid.PivotTotalsLocation.Near","Total Value Format":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TotalValueFormat",CustomTotalCell:"DevExpress.PivotGrid.Printing.PrintAppearance.CustomTotalCell","Criteria As String":"DevExpress.XtraPivotGrid.PrefilterBase.CriteriaString",CellsArea:"DevExpress.XtraPivotGrid.PivotGridScrolling.CellsArea","Selected Cell":"DevExpress.XtraPivotGrid.PivotGridAppearances.SelectedCell","Top Value Count":"DevExpress.XtraPivotGrid.PivotGridFieldBase.TopValueCount","Day Of Year":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateDayOfYear","Day Of Week":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateDayOfWeek","Column Totals Location":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ColumnTotalsLocation","Reversed Thermometer":"DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedThermometer","Cell Editor":"DevExpress.XtraPivotGrid.PivotGridField.FieldEdit","Use Print Appearance":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.UsePrintAppearance","Copy To Clipboard With Field Values":"DevExpress.XtraPivotGrid.PivotGridOptionsBehavior.CopyToClipboardWithFieldValues","Year Age":"DevExpress.XtraPivotGrid.PivotGroupInterval.YearAge","Merge Column Field Values":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.MergeColumnFieldValues","Export As Numbers To Excel":"DevExpress.XtraPivotGrid.PivotGridFieldBase.UseNativeFormat","Use Summary Values":"DevExpress.XtraPivotGrid.DataFieldUnboundExpressionMode.UseSummaryValues","Quarter-Year":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarterYear","Filter By Visible Fields Only":"DevExpress.XtraPivotGrid.PivotGridOptionsData.FilterByVisibleFieldsOnly",Shapes:"DevExpress.XtraPivotGrid.PivotKPIGraphic.Shapes","Rank In Row Smallest To Largest":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInRowSmallestToLargest",
"Row Header Area":"DevExpress.XtraPivotGrid.PivotGridAppearances.RowHeaderArea",Auto:"DevExpress.XtraPivotGrid.PivotOLAPFilterUsingWhereClause.Auto",Cylinder:"DevExpress.XtraPivotGrid.PivotKPIGraphic.Cylinder","Filter By UniqueName":"DevExpress.XtraPivotGrid.PivotGridOptionsOLAP.FilterByUniqueName","Sort Mode":"DevExpress.XtraPivotGrid.PivotGridFieldBase.SortMode",Thermometer:"DevExpress.XtraPivotGrid.PivotKPIGraphic.Thermometer","Standard Deviation for Entire Population":"DevExpress.Data.PivotGrid.PivotSummaryType.StdDevp","Allow Prefilter":"DevExpress.XtraPivotGrid.PivotGridOptionsCustomizationEx.AllowPrefilter","Reversed Gauge":"DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedGauge","Reset Options":"DevExpress.XtraPivotGrid.OptionsLayoutPivotGrid.ResetOptions","Header Filter Button Show Mode":"DevExpress.XtraPivotGrid.PivotGridOptionsView.HeaderFilterButtonShowMode","Single Values Only":"DevExpress.XtraPivotGrid.PivotOLAPFilterUsingWhereClause.SingleValuesOnly","Show Row Custom Totals":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.ShowRowCustomTotals","Allow Customization Form":"DevExpress.XtraPivotGrid.PivotGridOptionsCustomization.AllowCustomizationForm","Value Text":"DevExpress.XtraPivotGrid.PivotGridFieldToolTips.ValueText","Empty Cell Text":"DevExpress.XtraPivotGrid.PivotGridFieldBase.EmptyCellText","Focused Cell":"DevExpress.XtraPivotGrid.PivotGridAppearances.FocusedCell","Cell Selection":"DevExpress.XtraPivotGrid.PivotGridOptionsSelection.CellSelection","OLAP ID":"DevExpress.XtraPivotGrid.PivotSortMode.ID","Filter Area":"DevExpress.XtraPivotGrid.PivotArea.FilterArea",Quarter:"DevExpress.XtraPivotGrid.PivotGroupInterval.DateQuarter","Percent Of Column Grand Total":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfColumnGrandTotal","Show Row Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowHeaders","Week Of Year":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateWeekOfYear","Month Age":"DevExpress.XtraPivotGrid.PivotGroupInterval.MonthAge",Percent:"DevExpress.XtraPivotGrid.PivotTopValueType.Percent","Allow Run Time Summary Change":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.AllowRunTimeSummaryChange","Parent Field Values":"DevExpress.XtraPivotGrid.TopValueMode.ParentFieldValues","Show Custom Totals":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowCustomTotals","Duplicate Collapsed Values":"DevExpress.XtraPivotGrid.CopyCollapsedValuesMode.DuplicateCollapsedValues","All Values":"DevExpress.XtraPivotGrid.TopValueMode.AllValues","Header Filter Button":"DevExpress.XtraPivotGrid.PivotGridAppearances.HeaderFilterButton","Percent Variation":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentVariation","Row Header Width":"DevExpress.XtraPivotGrid.PivotGridOptionsDataField.RowHeaderWidth","Header Area":"DevExpress.XtraPivotGrid.PivotGridAppearances.HeaderArea","Show In Prefilter":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowInPrefilter","Show Column Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnHeaders","Auto Populated Properties":"DevExpress.XtraPivotGrid.PivotGridFieldBase.AutoPopulatedProperties","Print Unused Filter Fields":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintUnusedFilterFields",FieldValueTotal:"DevExpress.PivotGrid.Printing.PrintAppearance.FieldValueTotal","Remove Collapsed Levels":"DevExpress.XtraPivotGrid.CopyCollapsedValuesMode.RemoveCollapsedLevels","Week Age":"DevExpress.XtraPivotGrid.PivotGroupInterval.WeekAge","No Totals":"DevExpress.XtraPivotGrid.PivotTotalsVisibility.None","Show Header Hints":"DevExpress.XtraPivotGrid.PivotGridOptionsHint.ShowHeaderHints","Sort By Attribute":"DevExpress.XtraPivotGrid.PivotGridFieldBase.SortByAttribute","Day Age":"DevExpress.XtraPivotGrid.PivotGroupInterval.DayAge","Rank In Column Largest To Smallest":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.RankInColumnLargestToSmallest","Tool Tips":"DevExpress.XtraPivotGrid.PivotGridField.ToolTips","Min Width":"DevExpress.XtraPivotGrid.PivotGridFieldBase.MinWidth","Apply To Custom Total Cell":"DevExpress.XtraPivotGrid.PivotGridStyleFormatCondition.ApplyToCustomTotalCell","Row Field Value Separator":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.RowFieldValueSeparator","Apply To Cell":"DevExpress.XtraPivotGrid.PivotGridStyleFormatCondition.ApplyToCell","Variance Arrow":"DevExpress.XtraPivotGrid.PivotKPIGraphic.VarianceArrow",Options:"DevExpress.XtraPivotGrid.PivotGridFieldBase.Options","Grouping Interval":"DevExpress.XtraPivotGrid.PivotGridFieldBase.GroupInterval","Data Column Name":"DevExpress.XtraPivotGrid.PivotGridFieldBase.FieldName","Show Always":"DevExpress.XtraPivotGrid.PivotShowButtonModeEnum.ShowAlways",Goal:"DevExpress.XtraPivotGrid.PivotKPIType.Goal","Expand Button":"DevExpress.XtraPivotGrid.PivotGridAppearances.ExpandButton","Show Column Grand Total Header":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowColumnGrandTotalHeader","Show For The Focused Cell Only":"DevExpress.XtraPivotGrid.PivotShowButtonModeEnum.ShowForFocusedCell","Display Folder":"DevExpress.XtraPivotGrid.PivotGridFieldBase.DisplayFolder","Unbound Expression Mode":"DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundExpressionMode",Minute:"DevExpress.XtraPivotGrid.PivotGroupInterval.Minute","Show Summary Type Name":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowSummaryTypeName",Second:"DevExpress.XtraPivotGrid.PivotGroupInterval.Second","Print Headers on Every Page":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintHeadersOnEveryPage","Data Field Unbound Expression Mode":"DevExpress.XtraPivotGrid.PivotGridOptionsData.DataFieldUnboundExpressionMode","Show Horz Lines":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowHorzLines","Max Series Count":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsChartDataSourceBase.MaxSeriesCount","Header Width Offset":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.HeaderWidthOffset",Conditions:"DevExpress.XtraPivotGrid.PivotGridFieldSortBySummaryInfo.Conditions",Trend:"DevExpress.XtraPivotGrid.PivotKPIType.Trend","Week Of Month":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateWeekOfMonth","Show Values":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowValues","Display Text":"DevExpress.XtraPivotGrid.PivotSortMode.DisplayText",Alphabetical:"DevExpress.XtraPivotGrid.PivotGroupInterval.Alphabetical","Row Tree Width":"DevExpress.XtraPivotGrid.PivotGridOptionsViewBase.RowTreeWidth","Allowed Areas":"DevExpress.XtraPivotGrid.PivotGridFieldBase.AllowedAreas","Show Totals":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.ShowTotals","Running Total":"DevExpress.XtraPivotGrid.PivotGridFieldBase.RunningTotal","Show Custom Totals For Single Values":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowCustomTotalsForSingleValues",Selection:"DevExpress.XtraPivotGrid.PivotGridCells.Selection","Add New Groups":"DevExpress.XtraPivotGrid.OptionsLayoutPivotGrid.AddNewGroups","Enable Header Menu":"DevExpress.XtraPivotGrid.PivotGridOptionsMenu.EnableHeaderMenu","Field Naming":"DevExpress.XtraPivotGrid.PivotGridOptionsDataField.FieldNaming","Show When Editor Is Active":"DevExpress.XtraPivotGrid.PivotShowButtonModeEnum.ShowOnlyInEditor","Show Row Grand Total Header":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowRowGrandTotalHeader","Group Fields in the Customization Window":"DevExpress.XtraPivotGrid.PivotGridOptionsView.GroupFieldsInCustomizationWindow",FieldValue:"DevExpress.PivotGrid.Printing.PrintAppearance.FieldValue","Filter Header Area":"DevExpress.XtraPivotGrid.PivotGridAppearances.FilterHeaderArea","Allow Hide Fields":"DevExpress.XtraPivotGrid.PivotGridOptionsCustomization.AllowHideFields","Totals Location":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.TotalsLocation","Print Vertical Lines":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintVertLines","Multi Selection":"DevExpress.XtraPivotGrid.PivotGridCells.MultiSelection","OLAP Use NonEmpty":"DevExpress.XtraPivotGrid.PivotGridFieldOptions.OLAPUseNonEmpty","Header Text":"DevExpress.XtraPivotGrid.PivotGridFieldToolTips.HeaderText","Clipboard Copy Multiselection Mode":"DevExpress.XtraPivotGrid.PivotGridOptionsBehavior.ClipboardCopyMultiSelectionMode","Show Totals For Single Values":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsViewBase.ShowTotalsForSingleValues","Absolute Variation":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.AbsoluteVariation","Row Tree Offset":"DevExpress.XtraPivotGrid.PivotGridOptionsViewBase.RowTreeOffset",Tree:"DevExpress.XtraPivotGrid.PivotGroupFilterMode.Tree",List:"DevExpress.XtraPivotGrid.PivotGroupFilterMode.List","Unbound Type":"DevExpress.XtraPivotGrid.PivotGridFieldBase.UnboundType","Auto Expand Groups":"DevExpress.XtraPivotGrid.PivotGridOptionsData.AutoExpandGroups","Standard Arrow":"DevExpress.XtraPivotGrid.PivotKPIGraphic.StandardArrow","Tree Like":"DevExpress.XtraPivotGrid.PivotRowTotalsLocation.Tree","Column Field Value Separator":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.ColumnFieldValueSeparator","When Customization Form Visible":"DevExpress.XtraPivotGrid.AllowHideFieldsType.WhenCustomizationFormVisible","Selection Only":"DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.SelectionOnly",BorderColor:"DevExpress.PivotGrid.Printing.PrintAppearanceObject.BorderColor",Date:"DevExpress.XtraPivotGrid.PivotGroupInterval.Date",Hour:"DevExpress.XtraPivotGrid.PivotGroupInterval.Hour","Date-Hour-Minute-Second":"DevExpress.XtraPivotGrid.PivotGroupInterval.DateHourMinuteSecond",BorderWidth:"DevExpress.PivotGrid.Printing.PrintAppearanceObject.BorderWidth","Reversed Status Arrow":"DevExpress.XtraPivotGrid.PivotKPIGraphic.ReversedStatusArrow","Print Filter Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintFilterHeaders",FieldHeader:"DevExpress.PivotGrid.Printing.PrintAppearance.FieldHeader","Print Column Headers":"DevExpress.XtraPivotGrid.Data.PivotGridOptionsPrint.PrintColumnHeaders",Absolute:"DevExpress.XtraPivotGrid.PivotTopValueType.Absolute","Enable Appearance Focused Cell":"DevExpress.XtraPivotGrid.PivotGridOptionsSelection.EnableAppearanceFocusedCell","Enable Header Area Menu":"DevExpress.XtraPivotGrid.PivotGridOptionsMenu.EnableHeaderAreaMenu","Sort By Column Indicator Image":"DevExpress.XtraPivotGrid.PivotGridAppearances.SortByColumnIndicatorImage","Use Async Mode":"DevExpress.XtraPivotGrid.PivotGridOptionsBehaviorBase.UseAsyncMode","Paper Width":"DevExpress.XtraPivotGrid.Data.PivotGridPageSettings.PaperWidth","Default Members Behavior":"DevExpress.XtraPivotGrid.PivotGridOptionsOLAP.DefaultMembersBehavior","Max Width":"DevExpress.XtraPivotGrid.PivotGridOptionsSelection.MaxWidth","Percent Of Column":"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.PercentOfColumn",Index:"DevExpress.Data.PivotGrid.PivotSummaryDisplayType.Index","Update Delay":"DevExpress.XtraPivotGrid.PivotGridOptionsChartDataSource.UpdateDelay","Automatic Totals":"DevExpress.XtraPivotGrid.PivotTotalsVisibility.AutomaticTotals","Show Level 76.4%":"DevExpress.XtraCharts.FibonacciIndicator.ShowLevel76_4","Show Level 23.6%":"DevExpress.XtraCharts.FibonacciIndicator.ShowLevel23_6","From Center Horizontal":"DevExpress.XtraCharts.RectangleGradientMode.FromCenterHorizontal","Right Bottom":"DevExpress.XtraCharts.DockCorner.RightBottom",Reverse:"DevExpress.XtraCharts.Axis.Reverse",Close:"DevExpress.XtraCharts.StockLevel.Close","Line Tension Percent":"DevExpress.XtraCharts.FullStackedSplineArea3DSeriesView.LineTensionPercent","Equal Bar Width":"DevExpress.XtraCharts.SideBySideStackedBarSeriesView.EqualBarWidth","Right Outside":"DevExpress.XtraCharts.LegendAlignmentHorizontal.RightOutside",Diamond:"DevExpress.XtraCharts.MarkerKind.Diamond","Resolve Overlapping Options":"DevExpress.XtraCharts.AxisLabel.ResolveOverlappingOptions",Thousands:"DevExpress.XtraCharts.NumericGridAlignment.Thousands","Axis X":"DevExpress.XtraCharts.SwiftPlotDiagram.AxisX","Axis Y":"DevExpress.XtraCharts.SwiftPlotDiagram.AxisY",Left:"DevExpress.XtraCharts.LegendAlignmentHorizontal.Left","Start To Start":"DevExpress.XtraCharts.TaskLinkType.StartToStart","Shape Kind":"DevExpress.XtraCharts.Annotation.ShapeKind","Base Level Text Color":"DevExpress.XtraCharts.FibonacciIndicatorLabel.BaseLevelTextColor","Retrieve Column Custom Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveColumnCustomTotals","Data Filters":"DevExpress.XtraCharts.SeriesBase.DataFilters","Scrolling Options":"DevExpress.XtraCharts.Diagram3D.ScrollingOptions","Custom Panel":"DevExpress.XtraCharts.SimpleDiagram.CustomPanel",Color:"DevExpress.XtraCharts.SeriesViewBase.Color",YZX:"DevExpress.XtraCharts.RotationOrder.YZX",YXZ:"DevExpress.XtraCharts.RotationOrder.YXZ",ZXY:"DevExpress.XtraCharts.RotationOrder.ZXY",ZYX:"DevExpress.XtraCharts.RotationOrder.ZYX",XYZ:"DevExpress.XtraCharts.RotationOrder.XYZ",XZY:"DevExpress.XtraCharts.RotationOrder.XZY","Secondary Axes Y":"DevExpress.XtraCharts.XYDiagram.SecondaryAxesY","Secondary Axes X":"DevExpress.XtraCharts.XYDiagram.SecondaryAxesX",Axis:"DevExpress.XtraCharts.AxisXCoordinate.Axis","Marker Visibility":"DevExpress.XtraCharts.RadarLineSeriesView.MarkerVisibility","Default Pane":"DevExpress.XtraCharts.XYDiagram2D.DefaultPane",Plus:"DevExpress.XtraCharts.MarkerKind.Plus",Star:"DevExpress.XtraCharts.MarkerKind.Star","Not Equal":"DevExpress.XtraCharts.DataFilterCondition.NotEqual","Top Outside":"DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside",Vertical:"DevExpress.XtraCharts.LayoutDirection.Vertical","Show Additional Levels":"DevExpress.XtraCharts.FibonacciIndicator.ShowAdditionalLevels",Outside:"DevExpress.XtraCharts.BubbleLabelPosition.Outside","Height to Width Ratio":"DevExpress.XtraCharts.FunnelSeriesViewBase.HeightToWidthRatio",Millisecond:"DevExpress.XtraCharts.DateTimeMeasureUnit.Millisecond",Shadow:"DevExpress.XtraCharts.XYDiagramSeriesViewBase.Shadow","Hatch Style":"DevExpress.XtraCharts.HatchFillOptions.HatchStyle","Color Each":"DevExpress.XtraCharts.SeriesView3DColorEachSupportBase.ColorEach",Position:"DevExpress.XtraCharts.PointSeriesLabel.Position","Value Data Members":"DevExpress.XtraCharts.SeriesBase.ValueDataMembers","Finish To Finish":"DevExpress.XtraCharts.TaskLinkType.FinishToFinish",Pyramid:"DevExpress.XtraCharts.Bar3DModel.Pyramid",Solid:"DevExpress.XtraCharts.FillMode3D.Solid","Top Left to Bottom Right":"DevExpress.XtraCharts.RectangleGradientMode.TopLeftToBottomRight",Y:"DevExpress.XtraCharts.ChartAnchorPoint.Y",X:"DevExpress.XtraCharts.ChartAnchorPoint.X","Tool Tip Image":"DevExpress.XtraCharts.Series.ToolTipImage","Bottom Inside":"DevExpress.XtraCharts.BarSeriesLabelPosition.BottomInside","Retrieve Row Custom Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveRowCustomTotals",Tangent:"DevExpress.XtraCharts.PieSeriesLabelPosition.Tangent","From Center Vertical":"DevExpress.XtraCharts.RectangleGradientMode.FromCenterVertical","Minimum Value Label":"DevExpress.XtraCharts.RangeAreaLabelKind.MinValueLabel","Child Color":"DevExpress.XtraCharts.TaskLinkColorSource.ChildColor",Border:"DevExpress.XtraCharts.BarSeriesView.Border","Chart Measure Unit":"DevExpress.XtraCharts.ChartRangeControlClientSnapMode.ChartMeasureUnit",Dimension:"DevExpress.XtraCharts.SimpleDiagram3D.Dimension",Antialiasing:"DevExpress.XtraCharts.Legend.Antialiasing","Minor Length":"DevExpress.XtraCharts.TickmarksBase.MinorLength","Show for Zero Values":"DevExpress.XtraCharts.BarSeriesLabel.ShowForZeroValues","Minor Color":"DevExpress.XtraCharts.GridLines.MinorColor","Value Numeric Options":"DevExpress.XtraCharts.PointOptions.ValueNumericOptions",Clockwise:"DevExpress.XtraCharts.PieSweepDirection.Clockwise","Line Visibility":"DevExpress.XtraCharts.SeriesLabelBase.LineVisibility",Tens:"DevExpress.XtraCharts.NumericMeasureUnit.Tens",Ones:"DevExpress.XtraCharts.NumericMeasureUnit.Ones","Bar Distance":"DevExpress.XtraCharts.SideBySideFullStackedBar3DSeriesView.BarDistance","Minor Thickness":"DevExpress.XtraCharts.TickmarksBase.MinorThickness","Allow Stagger":"DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowStagger","Max Horizontal Percentage":"DevExpress.XtraCharts.Legend.MaxHorizontalPercentage",Colorizer:"DevExpress.XtraCharts.SeriesBase.Colorizer",Center:"DevExpress.XtraCharts.FunnelSeriesLabelPosition.Center","Marker Line Visible":"DevExpress.XtraCharts.Line3DSeriesView.MarkerLineVisible",AutoSize:"DevExpress.XtraCharts.TextAnnotation.AutoSize","Rotation Angle Y":"DevExpress.XtraCharts.Diagram3D.RotationAngleY","Rotation Angle X":"DevExpress.XtraCharts.Diagram3D.RotationAngleX","Rotation Angle Z":"DevExpress.XtraCharts.Diagram3D.RotationAngleZ","Max Allowed Point Count in Series":"DevExpress.XtraCharts.PivotGridDataSourceOptions.MaxAllowedPointCountInSeries",Numerical:"DevExpress.XtraCharts.ScaleType.Numerical","Use Mouse Wheel":"DevExpress.XtraCharts.ZoomingOptions.UseMouseWheel",MinValueAngle:"DevExpress.XtraCharts.RangeAreaSeriesLabel.MinValueAngle",Length:"DevExpress.XtraCharts.TickmarksBase.Length","Max Value Internal":"DevExpress.XtraCharts.AxisRange.MaxValueInternal",AxisValue:"DevExpress.XtraCharts.StripLimit.AxisValue","Value Level":"DevExpress.XtraCharts.SingleLevelIndicator.ValueLevel","Top to Bottom":"DevExpress.XtraCharts.PolygonGradientMode.TopToBottom","Envelope Line Style":"DevExpress.XtraCharts.MovingAverage.EnvelopeLineStyle",GridAlignment:"DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.GridAlignment","Top N Options":"DevExpress.XtraCharts.SeriesBase.TopNOptions","Inverted Step":"DevExpress.XtraCharts.StepAreaSeriesView.InvertedStep","Series Indent Fixed":"DevExpress.XtraCharts.XYDiagram3D.SeriesIndentFixed","Top Right to Bottom Left":"DevExpress.XtraCharts.PolygonGradientMode.TopRightToBottomLeft",Tail:"DevExpress.XtraCharts.AnnotationConnectorStyle.Tail","Use Weight":"DevExpress.XtraCharts.PaneSizeMode.UseWeight",DateTimeOptions:"DevExpress.XtraCharts.AxisLabel.DateTimeOptions","Show Others":"DevExpress.XtraCharts.TopNOptions.ShowOthers",Dot:"DevExpress.XtraCharts.DashStyle.Dot","Rotation Options":"DevExpress.XtraCharts.Diagram3D.RotationOptions","Point View":"DevExpress.XtraCharts.PointOptions.PointView","Common Label Position":"DevExpress.XtraCharts.CrosshairOptions.CommonLabelPosition","Left Outside":"DevExpress.XtraCharts.LegendAlignmentHorizontal.LeftOutside","Auto Scale Breaks":"DevExpress.XtraCharts.Axis.AutoScaleBreaks","Shape Fillet":"DevExpress.XtraCharts.Annotation.ShapeFillet",Tickmarks:"DevExpress.XtraCharts.RadarAxisY.Tickmarks","Size As Percentage":"DevExpress.XtraCharts.Pie3DSeriesView.SizeAsPercentage",Currency:"DevExpress.XtraCharts.NumericFormat.Currency",Precision:"DevExpress.XtraCharts.NumericOptions.Precision","Size In Pixels":"DevExpress.XtraCharts.XYDiagramPaneBase.SizeInPixels","Min Value":"DevExpress.XtraCharts.AxisRange.MinValue","Axis Value":"DevExpress.XtraCharts.CustomAxisLabel.AxisValue","Parent Color":"DevExpress.XtraCharts.TaskLinkColorSource.ParentColor","Use Keyboard with Mouse":"DevExpress.XtraCharts.ZoomingOptions.UseKeyboardWithMouse",Week:"DevExpress.XtraCharts.DateTimeGridAlignment.Week",Millions:"DevExpress.XtraCharts.NumericMeasureUnit.Millions","Column Name":"DevExpress.XtraCharts.DataFilter.ColumnName",Scientific:"DevExpress.XtraCharts.NumericFormat.Scientific","Grid Alignment":"DevExpress.XtraCharts.NumericScaleOptions.GridAlignment","Exploded Points":"DevExpress.XtraCharts.PieSeriesViewBase.ExplodedPoints","Label Mode":"DevExpress.XtraCharts.Annotation.LabelMode","Resolve Overlapping Min Indent":"DevExpress.XtraCharts.SeriesLabelBase.ResolveOverlappingMinIndent",Standard:"DevExpress.XtraCharts.TimeSpanFormat.Standard",Indicators:"DevExpress.XtraCharts.XYDiagram2DSeriesViewBase.Indicators","Runtime Rotation":"DevExpress.XtraCharts.Annotation.RuntimeRotation","Whole Range":"DevExpress.XtraCharts.AxisBase.WholeRange","Offest X":"DevExpress.XtraCharts.CrosshairLabelPosition.OffsetX","Offest Y":"DevExpress.XtraCharts.CrosshairLabelPosition.OffsetY","Moving Average And Envelope":"DevExpress.XtraCharts.MovingAverageKind.MovingAverageAndEnvelope","Max Line Count":"DevExpress.XtraCharts.SeriesLabelBase.MaxLineCount","Grid Offset":"DevExpress.XtraCharts.ScaleOptionsBase.GridOffset",Thickness:"DevExpress.XtraCharts.TickmarksBase.Thickness","Minor Count":"DevExpress.XtraCharts.AxisBase.MinorCount","Text Color":"DevExpress.XtraCharts.TextAnnotation.TextColor","Max Limit":"DevExpress.XtraCharts.Strip.MaxLimit",Transparency:"DevExpress.XtraCharts.XYDiagram3DSeriesViewBase.Transparency","Stacked Group":"DevExpress.XtraCharts.SideBySideStackedBar3DSeriesView.StackedGroup","Marker Options":"DevExpress.XtraCharts.AreaSeriesViewBase.MarkerOptions",Kind:"DevExpress.XtraCharts.FibonacciIndicator.Kind","Exploded Distance Percentage":"DevExpress.XtraCharts.PieSeriesViewBase.ExplodedDistancePercentage",LegendItemPattern:"DevExpress.XtraCharts.RangeColorizer.LegendItemPattern",SweepDirection:"DevExpress.XtraCharts.PieSeriesViewBase.SweepDirection",Panes:"DevExpress.XtraCharts.XYDiagram2D.Panes",MinAllowedSizePercentage:"DevExpress.XtraCharts.PieSeriesView.MinAllowedSizePercentage","Total Seconds":"DevExpress.XtraCharts.TimeSpanFormat.TotalSeconds","Show Value Labels":"DevExpress.XtraCharts.CrosshairOptions.ShowValueLabels","Child Point":"DevExpress.XtraCharts.Relation.ChildPoint","Marker 2":"DevExpress.XtraCharts.RangeAreaSeriesView.Marker2","Marker 1":"DevExpress.XtraCharts.RangeAreaSeriesView.Marker1",Right:"DevExpress.XtraCharts.RectangleIndents.Right","Value Duration Format":"DevExpress.XtraCharts.RangePointOptions.ValueDurationFormat","Tool Tip Point Pattern":"DevExpress.XtraCharts.SeriesBase.ToolTipPointPattern",WorkdaysOnly:"DevExpress.XtraCharts.DateTimeScaleOptions.WorkdaysOnly","Hole Radius Percent":"DevExpress.XtraCharts.Doughnut3DSeriesView.HoleRadiusPercent",Polygon:"DevExpress.XtraCharts.RadarDiagramDrawingStyle.Polygon","Value 2":"DevExpress.XtraCharts.ValueLevel.Value_2","Value 1":"DevExpress.XtraCharts.ValueLevel.Value_1",Color2:"DevExpress.XtraCharts.PaletteEntry.Color2","Left to Right":"DevExpress.XtraCharts.RadarAxisXLabelTextDirection.LeftToRight","Runtime Moving":"DevExpress.XtraCharts.Annotation.RuntimeMoving","Bar Width":"DevExpress.XtraCharts.BarSeriesView.BarWidth","Line Thickness":"DevExpress.XtraCharts.FinancialSeriesViewBase.LineThickness",Near:"DevExpress.XtraCharts.ConstantLineTitleAlignment.Near",Labels:"DevExpress.XtraCharts.FibonacciIndicator.Label","Left Top":"DevExpress.XtraCharts.DockCorner.LeftTop","Notched Arrow":"DevExpress.XtraCharts.AnnotationConnectorStyle.NotchedArrow","Border Visible":"DevExpress.XtraCharts.RadarDiagram.BorderVisible",ApproximateColors:"DevExpress.XtraCharts.RangeColorizer.ApproximateColors","Max Value Label":"DevExpress.XtraCharts.RangeBarLabelKind.MaxValueLabel","Marker Visible":"DevExpress.XtraCharts.Legend.MarkerVisible","From Center":"DevExpress.XtraCharts.PolygonGradientMode.FromCenter","Dock Corner":"DevExpress.XtraCharts.FreePosition.DockCorner","Show Argument Line":"DevExpress.XtraCharts.CrosshairOptions.ShowArgumentLine",Counterclockwise:"DevExpress.XtraCharts.PieSweepDirection.Counterclockwise",Arrow:"DevExpress.XtraCharts.AnnotationConnectorStyle.Arrow","Pane Distance":"DevExpress.XtraCharts.XYDiagram2D.PaneDistance","Show Below Line":"DevExpress.XtraCharts.ConstantLineTitle.ShowBelowLine",Edge2:"DevExpress.XtraCharts.ScaleBreak.Edge2",Edge1:"DevExpress.XtraCharts.ScaleBreak.Edge1","Auto Format":"DevExpress.XtraCharts.DateTimeOptions.AutoFormat","Auto Grid":"DevExpress.XtraCharts.ScaleOptionsBase.AutoGrid",Straight:"DevExpress.XtraCharts.ScaleBreakStyle.Straight","Crosshair Axis Label Options":"DevExpress.XtraCharts.Axis2D.CrosshairAxisLabelOptions","Labels Visibility":"DevExpress.XtraCharts.SeriesBase.LabelsVisibility","Retrieve Column Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveColumnTotals","Bar Distance Fixed":"DevExpress.XtraCharts.SideBySideRangeBarSeriesView.BarDistanceFixed","Pane Layout Direction":"DevExpress.XtraCharts.XYDiagram2D.PaneLayoutDirection","Layout Direction":"DevExpress.XtraCharts.SimpleDiagram3D.LayoutDirection",Manual:"DevExpress.XtraCharts.ChartRangeControlClientSnapMode.Manual","Max Size":"DevExpress.XtraCharts.BubbleSeriesView.MaxSize","Gradient Mode":"DevExpress.XtraCharts.PolygonGradientFillOptions.GradientMode","Argument and Values":"DevExpress.XtraCharts.PointView.ArgumentAndValues","Custom Measure Unit":"DevExpress.XtraCharts.NumericScaleOptions.CustomMeasureUnit","Rotation Type":"DevExpress.XtraCharts.Diagram3D.RotationType",Circle:"DevExpress.XtraCharts.MarkerKind.Circle","Automatic: Integral":"DevExpress.XtraCharts.DateTimeScaleMode.AutomaticIntegral","Enable Antialiasing":"DevExpress.XtraCharts.TextAnnotation.EnableAntialiasing","Retrieve Row Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveRowTotals","Automatic: Average":"DevExpress.XtraCharts.DateTimeScaleMode.AutomaticAverage",NumericOptions:"DevExpress.XtraCharts.AxisLabel.NumericOptions","Use Mouse":"DevExpress.XtraCharts.ScrollingOptions.UseMouse",High:"DevExpress.XtraCharts.StockLevel.High",Open:"DevExpress.XtraCharts.StockLevel.Open",SnapMode:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.SnapMode","Use Keyboard":"DevExpress.XtraCharts.ScrollingOptions.UseKeyboard","Connector Style":"DevExpress.XtraCharts.Annotation.ConnectorStyle","Less Than Or Equal":"DevExpress.XtraCharts.DataFilterCondition.LessThanOrEqual","Total Minutes":"DevExpress.XtraCharts.TimeSpanFormat.TotalMinutes",Item:"DevExpress.XtraCharts.SeriesPoint.Item",Model:"DevExpress.XtraCharts.Bar3DSeriesView.Model","Auto Side Margins":"DevExpress.XtraCharts.Range.AutoSideMargins","Fill Mode":"DevExpress.XtraCharts.FillStyle3D.FillMode","Axis Y Max Zoom Percent":"DevExpress.XtraCharts.ZoomingOptions2D.AxisYMaxZoomPercent","Dash Dot":"DevExpress.XtraCharts.DashStyle.DashDot","Value Line Style":"DevExpress.XtraCharts.CrosshairOptions.ValueLineStyle","Min Limit":"DevExpress.XtraCharts.Strip.MinLimit","Alignment Vertical":"DevExpress.XtraCharts.Legend.AlignmentVertical",Key:"DevExpress.XtraCharts.SeriesPointFilter.Key","Value Line Color":"DevExpress.XtraCharts.CrosshairOptions.ValueLineColor","Show Open Close":"DevExpress.XtraCharts.StockSeriesView.ShowOpenClose","Exploded Points Filters":"DevExpress.XtraCharts.PieSeriesViewBase.ExplodedPointsFilters","Right Column":"DevExpress.XtraCharts.FunnelSeriesLabelPosition.RightColumn","Custom Labels":"DevExpress.XtraCharts.Axis2D.CustomLabels","Always Show Zero Level":"DevExpress.XtraCharts.VisualRange.AlwaysShowZeroLevel",Staggered:"DevExpress.XtraCharts.AxisLabel.Staggered","Runtime Resizing":"DevExpress.XtraCharts.Annotation.RuntimeResizing","Automatic Layout Settings Enabled":"DevExpress.XtraCharts.PivotGridDataSourceOptions.AutoLayoutSettingsEnabled",Horizontal:"DevExpress.XtraCharts.TextOrientation.Horizontal","Show Argument Labels":"DevExpress.XtraCharts.CrosshairOptions.ShowArgumentLabels","Bar Thickness":"DevExpress.XtraCharts.ScrollBarOptions.BarThickness",Tuesday:"DevExpress.XtraCharts.Weekday.Tuesday","Min Size":"DevExpress.XtraCharts.BubbleSeriesView.MinSize","Argument Scale Type":"DevExpress.XtraCharts.SeriesBase.ArgumentScaleType","Back Image":"DevExpress.XtraCharts.XYDiagramPaneBase.BackImage","Total Days":"DevExpress.XtraCharts.TimeSpanFormat.TotalDays","Use Mouse Advanced":"DevExpress.XtraCharts.RotationType.UseMouseAdvanced",AggregateFunction:"DevExpress.XtraCharts.ScaleOptionsBase.AggregateFunction","Hide Overlapped":"DevExpress.XtraCharts.AxisLabelResolveOverlappingMode.HideOverlapped","Marker 2 Visibility":"DevExpress.XtraCharts.RangeAreaSeriesView.Marker2Visibility","Long Date":"DevExpress.XtraCharts.DateTimeFormat.LongDate","Long Time":"DevExpress.XtraCharts.DateTimeFormat.LongTime",SnapSpacing:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.SnapSpacing",Radial:"DevExpress.XtraCharts.PieSeriesLabelPosition.Radial","Threshold Value":"DevExpress.XtraCharts.TopNMode.ThresholdValue","Crosshair Label Visibility":"DevExpress.XtraCharts.SeriesBase.CrosshairLabelVisibility",GridOffset:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.GridOffset","Size as Percentage":"DevExpress.XtraCharts.PieSeriesViewBase.SizeAsPercentage","Start Angle in Degrees":"DevExpress.XtraCharts.RadarDiagram.StartAngleInDegrees","Argument Data Member":"DevExpress.XtraCharts.SeriesBase.ArgumentDataMember","Shape Position":"DevExpress.XtraCharts.Annotation.ShapePosition",Far:"DevExpress.XtraCharts.ConstantLineTitleAlignment.Far","Dock Target":"DevExpress.XtraCharts.CrosshairFreePosition.DockTarget",Hundreds:"DevExpress.XtraCharts.NumericMeasureUnit.Hundreds",Points:"DevExpress.XtraCharts.Series.Points","Min Value Internal":"DevExpress.XtraCharts.Range.MinValueInternal","Base Level Line Style":"DevExpress.XtraCharts.FibonacciIndicator.BaseLevelLineStyle","Percent Options":"DevExpress.XtraCharts.SimplePointOptions.PercentOptions","Vertical Indent":"DevExpress.XtraCharts.Legend.VerticalIndent","Scale Break Options":"DevExpress.XtraCharts.Axis.ScaleBreakOptions","Bar Color":"DevExpress.XtraCharts.ScrollBarOptions.BarColor",Strips:"DevExpress.XtraCharts.Axis2D.Strips","Alignment Horizontal":"DevExpress.XtraCharts.Legend.AlignmentHorizontal",Hatch:"DevExpress.XtraCharts.FillMode.Hatch","Dash Style":"DevExpress.XtraCharts.LineStyle.DashStyle","Color Data Member":"DevExpress.XtraCharts.SeriesBase.ColorDataMember","One Label":"DevExpress.XtraCharts.RangeBarLabelKind.OneLabel","Runtime Zooming":"DevExpress.XtraCharts.Diagram3D.RuntimeZooming","Marker 1 Visibility":"DevExpress.XtraCharts.RangeAreaSeriesView.Marker1Visibility","Series Distance":"DevExpress.XtraCharts.XYDiagram3D.SeriesDistance",Keys:"DevExpress.XtraCharts.KeyColorColorizer.Keys","Others Argument":"DevExpress.XtraCharts.TopNOptions.OthersArgument","Retrieve Empty Cells":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveEmptyCells","Text Visible":"DevExpress.XtraCharts.Legend.TextVisible",Inside:"DevExpress.XtraCharts.PieSeriesLabelPosition.Inside","Use Touch Device":"DevExpress.XtraCharts.RotationOptions.UseTouchDevice","Show Facet":"DevExpress.XtraCharts.Bar3DSeriesView.ShowFacet",Values:"DevExpress.XtraCharts.SeriesPoint.Values","Constant Lines":"DevExpress.XtraCharts.Axis2D.ConstantLines","Bottom to Top":"DevExpress.XtraCharts.RadarAxisXLabelTextDirection.BottomToTop","Axis Label Text":"DevExpress.XtraCharts.Strip.AxisLabelText","Y Axis Scroll Bar Alignment":"DevExpress.XtraCharts.ScrollBarOptions.YAxisScrollBarAlignment","Legend Text":"DevExpress.XtraCharts.Strip.LegendText","Resolve Overlapping Mode":"DevExpress.XtraCharts.SeriesLabelBase.ResolveOverlappingMode","Finish To Start":"DevExpress.XtraCharts.TaskLinkType.FinishToStart",Others:"DevExpress.XtraCharts.PieExplodeMode.Others","Min Value Marker":"DevExpress.XtraCharts.RangeBarSeriesView.MinValueMarker","Drawing Style":"DevExpress.XtraCharts.RadarDiagram.DrawingStyle","Perspective Angle":"DevExpress.XtraCharts.Diagram3D.PerspectiveAngle","Right Top":"DevExpress.XtraCharts.DockCorner.RightTop",SnapAlignment:"DevExpress.XtraCharts.ChartRangeControlClientDateTimeGridOptions.SnapAlignment","Area Width":"DevExpress.XtraCharts.Area3DSeriesView.AreaWidth","Fibonacci Retracement":"DevExpress.XtraCharts.FibonacciIndicatorKind.FibonacciRetracement","Z Order":"DevExpress.XtraCharts.Annotation.ZOrder","Min Indent":"DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.MinIndent",Square:"DevExpress.XtraCharts.MarkerKind.Square","Text Pattern":"DevExpress.XtraCharts.SeriesLabelBase.TextPattern",Holidays:"DevExpress.XtraCharts.WorkdaysOptions.Holidays","To Center":"DevExpress.XtraCharts.PolygonGradientMode.ToCenter",Dash:"DevExpress.XtraCharts.DashStyle.Dash","Max Allowed Series Count":"DevExpress.XtraCharts.PivotGridDataSourceOptions.MaxAllowedSeriesCount","Use Mouse Standard":"DevExpress.XtraCharts.RotationType.UseMouseStandard","Border 1":"DevExpress.XtraCharts.RangeAreaSeriesView.Border1","Border 2":"DevExpress.XtraCharts.RangeAreaSeriesView.Border2",
"Show Level 100%":"DevExpress.XtraCharts.FibonacciIndicator.ShowLevel100",Both:"DevExpress.XtraCharts.StockType.Both","Minor Visible":"DevExpress.XtraCharts.TickmarksBase.MinorVisible",Ragged:"DevExpress.XtraCharts.ScaleBreakStyle.Ragged","Justify All Around Point":"DevExpress.XtraCharts.ResolveOverlappingMode.JustifyAllAroundPoint","Start To Finish":"DevExpress.XtraCharts.TaskLinkType.StartToFinish",Gradient:"DevExpress.XtraCharts.FillMode3D.Gradient",All:"DevExpress.XtraCharts.PieExplodeMode.All","X Axis Scroll Bar Visible":"DevExpress.XtraCharts.ScrollBarOptions.XAxisScrollBarVisible","End Text":"DevExpress.XtraCharts.SeriesNameTemplate.EndText","Max Value":"DevExpress.XtraCharts.Range.MaxValue","Own Color":"DevExpress.XtraCharts.TaskLinkColorSource.OwnColor","Interlaced Fill Style":"DevExpress.XtraCharts.RadarAxis.InterlacedFillStyle",Argument:"DevExpress.XtraCharts.FinancialIndicatorPoint.Argument","Extrapolate to Infinity":"DevExpress.XtraCharts.TrendLine.ExtrapolateToInfinity",Pane:"DevExpress.XtraCharts.XYDiagramSeriesViewBase.Pane","Line Color":"DevExpress.XtraCharts.SeriesLabelBase.LineColor","Child Border Color":"DevExpress.XtraCharts.TaskLinkColorSource.ChildBorderColor","Custom Grid Alignment":"DevExpress.XtraCharts.NumericScaleOptions.CustomGridAlignment","Retrieve Column Grand Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveColumnGrandTotals","Value 3":"DevExpress.XtraCharts.SeriesPointKey.Value_3","Value 4":"DevExpress.XtraCharts.SeriesPointKey.Value_4","Chart Grid":"DevExpress.XtraCharts.ChartRangeControlClientGridMode.ChartGrid",Rotation:"DevExpress.XtraCharts.PieSeriesView.Rotation",Zoom:"DevExpress.XtraCharts.ChartImageSizeMode.Zoom",Tile:"DevExpress.XtraCharts.ChartImageSizeMode.Tile",Rotated:"DevExpress.XtraCharts.XYDiagram.Rotated","Dash Dot Dot":"DevExpress.XtraCharts.DashStyle.DashDotDot","Pie Fill Style":"DevExpress.XtraCharts.Pie3DSeriesView.PieFillStyle",Saturday:"DevExpress.XtraCharts.Weekday.Saturday","Color 2":"DevExpress.XtraCharts.FillOptionsColor2Base.Color2",KeyProvider:"DevExpress.XtraCharts.KeyColorColorizer.KeyProvider","Top To Bottom":"DevExpress.XtraCharts.TextOrientation.TopToBottom","Two Labels":"DevExpress.XtraCharts.RangeAreaLabelKind.TwoLabels","Funnel Fill Style":"DevExpress.XtraCharts.Funnel3DSeriesView.FunnelFillStyle","Value and Weight":"DevExpress.XtraCharts.BubbleLabelValueToDisplay.ValueAndWeight","Group Header Pattern":"DevExpress.XtraCharts.CrosshairOptions.GroupHeaderPattern",GridMode:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.GridMode",Automatic:"DevExpress.XtraCharts.ScaleMode.Automatic","Argument Line Color":"DevExpress.XtraCharts.CrosshairOptions.ArgumentLineColor","Zooming Options":"DevExpress.XtraCharts.Diagram3D.ZoomingOptions","Argument Line Style":"DevExpress.XtraCharts.CrosshairOptions.ArgumentLineStyle","Date-time Measure Unit":"DevExpress.XtraCharts.AxisBase.DateTimeMeasureUnit",Billions:"DevExpress.XtraCharts.NumericGridAlignment.Billions","Parent Border Color":"DevExpress.XtraCharts.TaskLinkColorSource.ParentBorderColor","Inverted Triangle":"DevExpress.XtraCharts.MarkerKind.InvertedTriangle",Undefined:"DevExpress.XtraCharts.PointView.Undefined","Zoom Percent":"DevExpress.XtraCharts.Diagram3D.ZoomPercent","Show Axis Label":"DevExpress.XtraCharts.Strip.ShowAxisLabel",RangeStops:"DevExpress.XtraCharts.RangeColorizer.RangeStops","Total Milliseconds":"DevExpress.XtraCharts.TimeSpanFormat.TotalMilliseconds",Logarithmic:"DevExpress.XtraCharts.AxisBase.Logarithmic","Left Column":"DevExpress.XtraCharts.FunnelSeriesLabelPosition.LeftColumn","Indent from Marker":"DevExpress.XtraCharts.BubbleSeriesLabel.IndentFromMarker","Legend Point Options":"DevExpress.XtraCharts.SeriesBase.LegendPointOptions","Date Time":"DevExpress.XtraCharts.ScaleType.DateTime",GridSpacing:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.GridSpacing","Crosshair Enabled":"DevExpress.XtraCharts.SeriesBase.CrosshairEnabled","Bar Depth Auto":"DevExpress.XtraCharts.Bar3DSeriesView.BarDepthAuto","Line Visible":"DevExpress.XtraCharts.SeriesLabelBase.LineVisible","Crosshair Highlight Points":"DevExpress.XtraCharts.SeriesBase.CrosshairHighlightPoints","Runtime Anchoring":"DevExpress.XtraCharts.Annotation.RuntimeAnchoring","Y Axis Scroll Bar Visible":"DevExpress.XtraCharts.ScrollBarOptions.YAxisScrollBarVisible",Visibility:"DevExpress.XtraCharts.BorderBase.Visibility","Bottom Left to Top Right":"DevExpress.XtraCharts.PolygonGradientMode.BottomLeftToTopRight","Base Level Color":"DevExpress.XtraCharts.FibonacciIndicator.BaseLevelColor","Insert Zero Values":"DevExpress.XtraCharts.ProcessMissingPointsMode.InsertZeroValues",Range:"DevExpress.XtraCharts.AxisBase.Range","Color Source":"DevExpress.XtraCharts.TaskLinkOptions.ColorSource","Min Value Label":"DevExpress.XtraCharts.RangeBarLabelKind.MinValueLabel","Point Distance":"DevExpress.XtraCharts.FunnelSeriesViewBase.PointDistance","Tool Tip Series Pattern":"DevExpress.XtraCharts.SeriesBase.ToolTipSeriesPattern","Show Value Line":"DevExpress.XtraCharts.CrosshairOptions.ShowValueLine","Value As Duration":"DevExpress.XtraCharts.RangePointOptions.ValueAsDuration","Envelope Percent":"DevExpress.XtraCharts.MovingAverage.EnvelopePercent","Show Level 0%":"DevExpress.XtraCharts.FibonacciIndicator.ShowLevel0","Crosshair Label Mode":"DevExpress.XtraCharts.CrosshairOptions.CrosshairLabelMode","Begin Text":"DevExpress.XtraCharts.AxisLabel.BeginText","Maximum Value Label":"DevExpress.XtraCharts.RangeAreaLabelKind.MaxValueLabel","Use Points":"DevExpress.XtraCharts.PieExplodeMode.UsePoints","Fibonacci Fans":"DevExpress.XtraCharts.FibonacciIndicatorKind.FibonacciFans","Fibonacci Arcs":"DevExpress.XtraCharts.FibonacciIndicatorKind.FibonacciArcs","Bubble Marker Options":"DevExpress.XtraCharts.BubbleSeriesView.BubbleMarkerOptions",Triangle:"DevExpress.XtraCharts.MarkerKind.Triangle","Retrieve Data by Columns":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveDataByColumns","AxisY Coordinate":"DevExpress.XtraCharts.PaneAnchorPoint.AxisYCoordinate","Plane Depth Fixed":"DevExpress.XtraCharts.XYDiagram3D.PlaneDepthFixed","Equal Pie Size":"DevExpress.XtraCharts.SimpleDiagram.EqualPieSize",General:"DevExpress.XtraCharts.DateTimeFormat.General",Low:"DevExpress.XtraCharts.StockLevel.Low","Outer Indents":"DevExpress.XtraCharts.FreePosition.OuterIndents","Column Indent":"DevExpress.XtraCharts.PieSeriesLabel.ColumnIndent","Summary Function":"DevExpress.XtraCharts.SeriesBase.SummaryFunction","Percentage Accuracy":"DevExpress.XtraCharts.PercentOptions.PercentageAccuracy","Horizontal Scroll Percent":"DevExpress.XtraCharts.Diagram3D.HorizontalScrollPercent","Link Options":"DevExpress.XtraCharts.GanttSeriesView.LinkOptions","Argument Date-time Options":"DevExpress.XtraCharts.PointOptions.ArgumentDateTimeOptions","Show In Legend":"DevExpress.XtraCharts.Indicator.ShowInLegend","Use Scroll Bars":"DevExpress.XtraCharts.ScrollingOptions2D.UseScrollBars","Short Time":"DevExpress.XtraCharts.DateTimeFormat.ShortTime","Short Date":"DevExpress.XtraCharts.DateTimeFormat.ShortDate",Zero:"DevExpress.XtraCharts.AxisAlignment.Zero","Rotation Order":"DevExpress.XtraCharts.Diagram3D.RotationOrder",Relations:"DevExpress.XtraCharts.SeriesPoint.Relations","Date-time Grid Alignment":"DevExpress.XtraCharts.AxisBase.DateTimeGridAlignment","Total Hours":"DevExpress.XtraCharts.TimeSpanFormat.TotalHours",Box:"DevExpress.XtraCharts.Bar3DModel.Box",WorkdaysOptions:"DevExpress.XtraCharts.DateTimeScaleOptions.WorkdaysOptions","Show Crosshair Labels":"DevExpress.XtraCharts.CrosshairOptions.ShowCrosshairLabels","Top Level":"DevExpress.XtraCharts.RadarAxisY.TopLevel",Cone:"DevExpress.XtraCharts.Bar3DModel.Cone","Scale Breaks":"DevExpress.XtraCharts.Axis.ScaleBreaks","Text Direction":"DevExpress.XtraCharts.RadarAxisXLabel.TextDirection","Threshold Percent":"DevExpress.XtraCharts.TopNOptions.ThresholdPercent",SnapOffset:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.SnapOffset","Equally Spaced Items":"DevExpress.XtraCharts.Legend.EquallySpacedItems","Reduction Options":"DevExpress.XtraCharts.FinancialSeriesViewBase.ReductionOptions","Automatic Binding Settings Enabled":"DevExpress.XtraCharts.PivotGridDataSourceOptions.AutoBindingSettingsEnabled","Envelope Color":"DevExpress.XtraCharts.MovingAverage.EnvelopeColor",Depth:"DevExpress.XtraCharts.Pie3DSeriesView.Depth","Horizontal Indent":"DevExpress.XtraCharts.Legend.HorizontalIndent",MaxValueAngle:"DevExpress.XtraCharts.RangeAreaSeriesLabel.MaxValueAngle","Quarter and Year":"DevExpress.XtraCharts.DateTimeFormat.QuarterAndYear","Tool Tip Enabled":"DevExpress.XtraCharts.SeriesBase.ToolTipEnabled","Numeric Options":"DevExpress.XtraCharts.AxisBase.NumericOptions",Qualitative:"DevExpress.XtraCharts.ScaleType.Qualitative","Bar Depth":"DevExpress.XtraCharts.Bar3DSeriesView.BarDepth","Synchronize With Whole Range":"DevExpress.XtraCharts.VisualRange.SynchronizeWithWholeRange","Two Columns":"DevExpress.XtraCharts.PieSeriesLabelPosition.TwoColumns","Side Margins Value":"DevExpress.XtraCharts.Range.SideMarginsValue","Workdays Only":"DevExpress.XtraCharts.AxisBase.WorkdaysOnly",Thursday:"DevExpress.XtraCharts.Weekday.Thursday","Parent Point":"DevExpress.XtraCharts.Relation.ParentPoint","Size Mode":"DevExpress.XtraCharts.ImageAnnotation.SizeMode","Fixed Point":"DevExpress.XtraCharts.NumericFormat.FixedPoint","Bottom Outside":"DevExpress.XtraCharts.LegendAlignmentVertical.BottomOutside",MeasureUnit:"DevExpress.XtraCharts.DateTimeScaleOptions.MeasureUnit","Exact Workdays":"DevExpress.XtraCharts.WorkdaysOptions.ExactWorkdays","Vertical Scroll Percent":"DevExpress.XtraCharts.Diagram3D.VerticalScrollPercent",Dock:"DevExpress.XtraCharts.DockableTitle.Dock","Scrolling Range":"DevExpress.XtraCharts.AxisRange.ScrollingRange","Numeric Scale Options":"DevExpress.XtraCharts.AxisBase.NumericScaleOptions","Month and Year":"DevExpress.XtraCharts.DateTimeFormat.MonthAndYear","Series Name":"DevExpress.XtraCharts.PointView.SeriesName",AnchorPoint:"DevExpress.XtraCharts.Annotation.AnchorPoint","Bottom Right to Top Left":"DevExpress.XtraCharts.PolygonGradientMode.BottomRightToTopLeft",ShowInLegend:"DevExpress.XtraCharts.PaletteColorizerBase.ShowInLegend","Date-time Scale Mode":"DevExpress.XtraCharts.SecondaryAxisX.DateTimeScaleMode","Line Marker Options":"DevExpress.XtraCharts.LineSeriesView.LineMarkerOptions","Marker Line Color":"DevExpress.XtraCharts.Line3DSeriesView.MarkerLineColor","Inner Indent":"DevExpress.XtraCharts.NestedDoughnutSeriesView.InnerIndent","Legend Text Pattern":"DevExpress.XtraCharts.SeriesBase.LegendTextPattern","Side Margins Enabled":"DevExpress.XtraCharts.AxisRange.SideMarginsEnabled","Marker Line Style":"DevExpress.XtraCharts.Line3DSeriesView.MarkerLineStyle","Series Points Sorting Key":"DevExpress.XtraCharts.SeriesBase.SeriesPointsSortingKey",Palette:"DevExpress.XtraCharts.PaletteColorizerBase.Palette",Skip:"DevExpress.XtraCharts.ProcessMissingPointsMode.Skip","Marker Size":"DevExpress.XtraCharts.Legend.MarkerSize","Tool Tip Hint Data Member":"DevExpress.XtraCharts.SeriesBase.ToolTipHintDataMember","Value DateTime Options":"DevExpress.XtraCharts.PointOptions.ValueDateTimeOptions","Align to Center":"DevExpress.XtraCharts.FunnelSeriesView.AlignToCenter","Point Options":"DevExpress.XtraCharts.SeriesLabelBase.PointOptions","Top Inside":"DevExpress.XtraCharts.BarSeriesLabelPosition.TopInside","Highlight Points":"DevExpress.XtraCharts.CrosshairOptions.HighlightPoints","Max Count":"DevExpress.XtraCharts.AutoScaleBreaks.MaxCount","Height to Width Ratio Auto":"DevExpress.XtraCharts.FunnelSeriesView.HeightToWidthRatioAuto",Closed:"DevExpress.XtraCharts.RadarLineSeriesView.Closed","Show Group Headers":"DevExpress.XtraCharts.CrosshairOptions.ShowGroupHeaders",ValueProvider:"DevExpress.XtraCharts.RangeColorizer.ValueProvider","Month and Day":"DevExpress.XtraCharts.DateTimeFormat.MonthAndDay","Crosshair Label Pattern":"DevExpress.XtraCharts.SeriesBase.CrosshairLabelPattern",Continuous:"DevExpress.XtraCharts.ScaleMode.Continuous","Date Time Values":"DevExpress.XtraCharts.SeriesPoint.DateTimeValues","Link Type":"DevExpress.XtraCharts.TaskLink.LinkType","Inner Indents":"DevExpress.XtraCharts.FreePosition.InnerIndents","Date Time Options":"DevExpress.XtraCharts.AxisBase.DateTimeOptions","Tool Tip Hint":"DevExpress.XtraCharts.SeriesPoint.ToolTipHint","Right to Left":"DevExpress.XtraCharts.PolygonGradientMode.RightToLeft","Max Value Marker Visibility":"DevExpress.XtraCharts.RangeBarSeriesView.MaxValueMarkerVisibility",Friday:"DevExpress.XtraCharts.Weekday.Friday","Argument Numeric Options":"DevExpress.XtraCharts.PointOptions.ArgumentNumericOptions",Workdays:"DevExpress.XtraCharts.WorkdaysOptions.Workdays","Allow Rotate":"DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowRotate",Number:"DevExpress.XtraCharts.NumericFormat.Number","Bottom To Top":"DevExpress.XtraCharts.TextOrientation.BottomToTop","Value2 Label":"DevExpress.XtraCharts.RangeAreaLabelKind.Value2Label","Process Missing Points":"DevExpress.XtraCharts.ScaleOptionsBase.ProcessMissingPoints","Arrow Height":"DevExpress.XtraCharts.TaskLinkOptions.ArrowHeight","Show Behind":"DevExpress.XtraCharts.ConstantLine.ShowBehind","Value Scale Type":"DevExpress.XtraCharts.SeriesBase.ValueScaleType","Value1 Label":"DevExpress.XtraCharts.RangeAreaLabelKind.Value1Label",RangeControlNumericGridOptions:"DevExpress.XtraCharts.XYDiagram2D.RangeControlNumericGridOptions","Connector Length":"DevExpress.XtraCharts.RelativePosition.ConnectorLength","AxisX Coordinate":"DevExpress.XtraCharts.PaneAnchorPoint.AxisXCoordinate",Title:"DevExpress.XtraCharts.Axis2D.Title","Text Orientation":"DevExpress.XtraCharts.SeriesLabelBase.TextOrientation","Text Offset":"DevExpress.XtraCharts.Legend.TextOffset",Interlaced:"DevExpress.XtraCharts.AxisBase.Interlaced","Perspective Enabled":"DevExpress.XtraCharts.Diagram3D.PerspectiveEnabled","Points Count":"DevExpress.XtraCharts.SubsetBasedIndicator.PointsCount",Pentagon:"DevExpress.XtraCharts.MarkerKind.Pentagon","Runtime Scrolling":"DevExpress.XtraCharts.Diagram3D.RuntimeScrolling",Hexagon:"DevExpress.XtraCharts.MarkerKind.Hexagon","Value to Display":"DevExpress.XtraCharts.BubbleSeriesLabel.ValueToDisplay","Minor Line Style":"DevExpress.XtraCharts.GridLines.MinorLineStyle","Point Marker Options":"DevExpress.XtraCharts.PointSeriesView.PointMarkerOptions","Runtime Exploding":"DevExpress.XtraCharts.PieSeriesView.RuntimeExploding","Min Value Marker Visibility":"DevExpress.XtraCharts.RangeBarSeriesView.MinValueMarkerVisibility",Envelope:"DevExpress.XtraCharts.MovingAverageKind.Envelope",Waved:"DevExpress.XtraCharts.ScaleBreakStyle.Waved","Insert Empty Points":"DevExpress.XtraCharts.ProcessMissingPointsMode.InsertEmptyPoints","Use Filters":"DevExpress.XtraCharts.PieExplodeMode.UseFilters","Arrow Width":"DevExpress.XtraCharts.TaskLinkOptions.ArrowWidth","Data Type":"DevExpress.XtraCharts.DataFilter.DataType","Logarithmic Base":"DevExpress.XtraCharts.AxisBase.LogarithmicBase","Explode Mode":"DevExpress.XtraCharts.PieSeriesViewBase.ExplodeMode","Line Length":"DevExpress.XtraCharts.SeriesLabelBase.LineLength","Single Page Only":"DevExpress.XtraCharts.PivotGridDataSourceOptions.SinglePageOnly",Equal:"DevExpress.XtraCharts.DataFilterCondition.Equal","Use Angles":"DevExpress.XtraCharts.RotationType.UseAngles","Use Size In Pixels":"DevExpress.XtraCharts.PaneSizeMode.UseSizeInPixels",LabelFormatProvider:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.LabelFormatProvider","To Center Vertical":"DevExpress.XtraCharts.RectangleGradientMode.ToCenterVertical",Pattern:"DevExpress.XtraCharts.CrosshairAxisLabelOptions.Pattern",Monday:"DevExpress.XtraCharts.Weekday.Monday",RangeControlDateTimeGridOptions:"DevExpress.XtraCharts.XYDiagram2D.RangeControlDateTimeGridOptions",LabelFormat:"DevExpress.XtraCharts.ChartRangeControlClientGridOptions.LabelFormat","Allow Hide":"DevExpress.XtraCharts.AxisLabelResolveOverlappingOptions.AllowHide","Moving Average":"DevExpress.XtraCharts.MovingAverageKind.MovingAverage",PaletteName:"DevExpress.XtraCharts.PaletteColorizerBase.PaletteName","Less Than":"DevExpress.XtraCharts.DataFilterCondition.LessThan","Snap Mode":"DevExpress.XtraCharts.CrosshairOptions.SnapMode",Cross:"DevExpress.XtraCharts.MarkerKind.Cross","Justify Around Point":"DevExpress.XtraCharts.ResolveOverlappingMode.JustifyAroundPoint","Axis X Max Zoom Percent":"DevExpress.XtraCharts.ZoomingOptions2D.AxisXMaxZoomPercent","Value As Percent":"DevExpress.XtraCharts.PercentOptions.ValueAsPercent","Offset X":"DevExpress.XtraCharts.ToolTipPositionWithOffset.OffsetX","Offset Y":"DevExpress.XtraCharts.ToolTipPositionWithOffset.OffsetY","Grid Spacing Auto":"DevExpress.XtraCharts.AxisBase.GridSpacingAuto","Series Point":"DevExpress.XtraCharts.SeriesPointAnchorPoint.SeriesPoint","Measure Unit":"DevExpress.XtraCharts.NumericScaleOptions.MeasureUnit","Point 2":"DevExpress.XtraCharts.FinancialIndicator.Point2","Point 1":"DevExpress.XtraCharts.FinancialIndicator.Point1","Series Points Sorting":"DevExpress.XtraCharts.SeriesBase.SeriesPointsSorting","Greater Than Or Equal":"DevExpress.XtraCharts.DataFilterCondition.GreaterThanOrEqual","Grid Spacing":"DevExpress.XtraCharts.ScaleOptionsBase.GridSpacing","Visibility In Panes":"DevExpress.XtraCharts.Axis2D.VisibilityInPanes",Financial:"DevExpress.XtraCharts.AggregateFunction.Financial",Rectangle:"DevExpress.XtraCharts.ShapeKind.Rectangle","Work Days Options":"DevExpress.XtraCharts.AxisBase.WorkdaysOptions",Ellipse:"DevExpress.XtraCharts.ShapeKind.Ellipse","Greater Than":"DevExpress.XtraCharts.DataFilterCondition.GreaterThan",Sunday:"DevExpress.XtraCharts.Weekday.Sunday","Rotation Direction":"DevExpress.XtraCharts.RadarDiagram.RotationDirection","Show in a Legend":"DevExpress.XtraCharts.SeriesBase.ShowInLegend","Star Point Count":"DevExpress.XtraCharts.BaseMarker.StarPointCount","Is Empty":"DevExpress.XtraCharts.SeriesPoint.IsEmpty","Series Distance Fixed":"DevExpress.XtraCharts.XYDiagram3D.SeriesDistanceFixed","Level Line Length":"DevExpress.XtraCharts.FinancialSeriesViewBase.LevelLineLength","Interlaced Color":"DevExpress.XtraCharts.AxisBase.InterlacedColor","Rounded Rectangle":"DevExpress.XtraCharts.ShapeKind.RoundedRectangle","Max Vertical Percentage":"DevExpress.XtraCharts.Legend.MaxVerticalPercentage","Retrieve Row Grand Totals":"DevExpress.XtraCharts.PivotGridDataSourceOptions.RetrieveRowGrandTotals","Left Bottom":"DevExpress.XtraCharts.DockCorner.LeftBottom",Wednesday:"DevExpress.XtraCharts.Weekday.Wednesday","X Axis Scroll Bar Alignment":"DevExpress.XtraCharts.ScrollBarOptions.XAxisScrollBarAlignment","Grid Lines":"DevExpress.XtraCharts.AxisBase.GridLines",ScaleMode:"DevExpress.XtraCharts.ScaleOptionsBase.ScaleMode","Cross Axis":"DevExpress.XtraCharts.TickmarksBase.CrossAxis","Max Value Marker":"DevExpress.XtraCharts.RangeBarSeriesView.MaxValueMarker","To Center Horizontal":"DevExpress.XtraCharts.RectangleGradientMode.ToCenterHorizontal","Japanese Envelope Chou Number 4":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4","Japanese Envelope Chou Number 3":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3","Expanded Stacked":"DevExpress.XtraPrinting.BarCode.DataBarType.ExpandedStacked",TimeSpan:"DevExpress.XtraReports.UI.FieldType.TimeSpan","Charset A":"DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetA","Charset B":"DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetB","Charset C":"DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetC","Prc Envelope Number 8 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated","Forward Diagonal":"DevExpress.XtraPrinting.Drawing.DirectionMode.ForwardDiagonal","Center Image":"DevExpress.XtraPrinting.ImageSizeMode.CenterImage","FNC1 Functional Character":"DevExpress.XtraPrinting.BarCode.DataMatrixGS1Generator.FNC1Substitute",BCC:"DevExpress.XtraPrinting.RecipientFieldType.BCC",Expanded:"DevExpress.XtraPrinting.BarCode.DataBarType.Expanded",HTML:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.HTML","Remove Old Columns":"DevExpress.Utils.OptionsColumnLayout.RemoveOldColumns",Executive:"System.Drawing.Printing.PaperKind.Executive","Italy Envelope":"System.Drawing.Printing.PaperKind.ItalyEnvelope","Legal Extra":"System.Drawing.Printing.PaperKind.LegalExtra","Export Mode":"DevExpress.XtraPrinting.HtmlExportOptionsBase.ExportMode","Human-Readable Text":"DevExpress.XtraPrinting.BarCode.EAN128Generator.HumanReadableText","Prc Envelope Number 1 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated","Zoom Image":"DevExpress.XtraPrinting.ImageSizeMode.ZoomImage","Stop Page Building":"DevExpress.XtraPrinting.PrintingSystemCommand.StopPageBuilding","JIS B4 Rotated ":"System.Drawing.Printing.PaperKind.B4JisRotated",String:"DevExpress.XtraTreeList.Data.UnboundColumnType.String","Different Files":"DevExpress.XtraPrinting.XlsxExportMode.DifferentFiles",Attachments:"DevExpress.XtraPrinting.PdfExportOptions.Attachments",Application:"DevExpress.XtraPrinting.PdfDocumentOptions.Application","RTF Export Options":"DevExpress.XtraPrinting.RtfExportOptions","Standard 15x11":"System.Drawing.Printing.PaperKind.Standard15x11","Standard 12x11":"System.Drawing.Printing.PaperKind.Standard12x11","Standard 10x14":"System.Drawing.Printing.PaperKind.Standard10x14","Standard 10x11":"System.Drawing.Printing.PaperKind.Standard10x11","Standard 11x17":"System.Drawing.Printing.PaperKind.Standard11x17","Zoom to Page Width":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToPageWidth","US Standard Fanfold":"System.Drawing.Printing.PaperKind.USStandardFanfold","Dash-Dot-Dot":"DevExpress.XtraPrinting.BorderDashStyle.DashDotDot","8 x 32":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix8x32","8 x 18":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix8x18","Prc 32K Big Rotated":"System.Drawing.Printing.PaperKind.Prc32KBigRotated","Use Margins":"DevExpress.XtraPrinting.PrinterSettingsUsing.UseMargins","PDF/A-2b":"DevExpress.XtraPrinting.PdfExportOptions.PdfACompatible","Letter Small":"System.Drawing.Printing.PaperKind.LetterSmall",No:"DevExpress.Utils.DefaultBoolean.False","Prc 16K Rotated":"System.Drawing.Printing.PaperKind.Prc16KRotated","Convert Images to Jpeg":"DevExpress.XtraPrinting.PdfExportOptions.ConvertImagesToJpeg","Letter Extra":"System.Drawing.Printing.PaperKind.LetterExtra","Tip's Length":"DevExpress.XtraPrinting.Shape.ShapeBracket.TipLength",Trellis:"System.Drawing.Drawing2D.HatchStyle.Trellis","PDF Export Options":"DevExpress.XtraPrinting.PdfExportOptions","Y to X Ratio":"DevExpress.XtraPrinting.BarCode.PDF417Generator.YToXRatio",Thumbnails:"DevExpress.XtraPrinting.PrintingSystemCommand.Thumbnails","Wide Upward Diagonal":"System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal",Fillet:"DevExpress.XtraPrinting.Shape.ShapeBrace.Fillet","Character Set":"DevExpress.XtraPrinting.HtmlExportOptionsBase.CharacterSet","Middle Right":"DevExpress.XtraPrinting.TextAlignment.MiddleRight",Wave:"System.Drawing.Drawing2D.HatchStyle.Wave","Use Native Format":"DevExpress.XtraPrinting.XlsExportOptions.UseNativeFormat","Scroll Page Down":"DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageDown","Percent 90":"System.Drawing.Drawing2D.HatchStyle.Percent90","Percent 80":"System.Drawing.Drawing2D.HatchStyle.Percent80","Percent 50":"System.Drawing.Drawing2D.HatchStyle.Percent50","Percent 40":"System.Drawing.Drawing2D.HatchStyle.Percent40","Percent 70":"System.Drawing.Drawing2D.HatchStyle.Percent70","Percent 75":"System.Drawing.Drawing2D.HatchStyle.Percent75","Percent 60":"System.Drawing.Drawing2D.HatchStyle.Percent60","Percent 10":"System.Drawing.Drawing2D.HatchStyle.Percent10","Percent 05":"System.Drawing.Drawing2D.HatchStyle.Percent05","Percent 30":"System.Drawing.Drawing2D.HatchStyle.Percent30","Percent 25":"System.Drawing.Drawing2D.HatchStyle.Percent25","Percent 20":"System.Drawing.Drawing2D.HatchStyle.Percent20","Japanese Envelope Kaku Number 3":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3","Japanese Envelope Kaku Number 2":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2",Separator:"DevExpress.XtraPrinting.TextExportOptionsBase.Separator","Page Range":"DevExpress.XtraPrinting.HtmlExportOptionsBase.PageRange","Show Grid Lines":"DevExpress.XtraPrinting.XlsExportOptions.ShowGridLines","XLS Export Options":"DevExpress.XtraPrinting.XlsExportOptions","Close Preview":"DevExpress.XtraPrinting.PrintingSystemCommand.ClosePreview","Image Export Options":"DevExpress.XtraPrinting.ImageExportOptions","B5 Envelope":"System.Drawing.Printing.PaperKind.B5Envelope","Japanese Postcard Rotated":"System.Drawing.Printing.PaperKind.JapanesePostcardRotated","Dotted Grid":"System.Drawing.Drawing2D.HatchStyle.DottedGrid","Large Checker Board":"System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard","Save Mode":"DevExpress.XtraPrinting.PrintPreviewOptions.SaveMode",Double:"DevExpress.XtraReports.UI.FieldType.Double","Single File":"DevExpress.XtraPrinting.XlsxExportMode.SingleFile","Show Prev Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ShowPrevPage","Modulo 10":"DevExpress.XtraPrinting.BarCode.MSICheckSum.Modulo10","A4 Small":"System.Drawing.Printing.PaperKind.A4Small","Personal Envelope (6 3/4)":"System.Drawing.Printing.PaperKind.PersonalEnvelope","Zoom In":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomIn",Integer:"DevExpress.Data.UnboundColumnType.Integer","A4 Extra":"System.Drawing.Printing.PaperKind.A4Extra","Stacked Omnidirectional":"DevExpress.XtraPrinting.BarCode.DataBarType.StackedOmnidirectional","HTML Export Options":"DevExpress.XtraPrinting.HtmlExportOptions","Alpha Numeric":"DevExpress.XtraPrinting.BarCode.QRCodeCompactionMode.AlphaNumeric","A5 Extra":"System.Drawing.Printing.PaperKind.A5Extra","Dark Downward Diagonal":"System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal",EnableCopying:"DevExpress.XtraPrinting.PdfPermissionsOptions.EnableCopying","Backward Diagonal":"DevExpress.XtraPrinting.Drawing.DirectionMode.BackwardDiagonal","Hand Tool":"DevExpress.XtraPrinting.PrintingSystemCommand.HandTool",Binary:"DevExpress.XtraPrinting.BarCode.PDF417CompactionMode.Binary","Show Last Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ShowLastPage","Large Confetti":"System.Drawing.Drawing2D.HatchStyle.LargeConfetti","Store All Options":"DevExpress.Utils.OptionsColumnLayout.StoreAllOptions",Author:"DevExpress.XtraPrinting.PdfDocumentOptions.Author","B4 Envelope":"System.Drawing.Printing.PaperKind.B4Envelope","Compaction Mode":"DevExpress.XtraPrinting.BarCode.QRCodeGenerator.CompactionMode",Version:"DevExpress.XtraPrinting.XpsDocumentOptions.Version","Security Options":"DevExpress.XtraPrinting.PdfExportOptions.PasswordSecurityOptions","Using a Save File Dialog":"DevExpress.XtraPrinting.SaveMode.UsingSaveFileDialog","Version 40 (177x177)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version40","Version 26 (121x121)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version26","Version 27 (125x125)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version27","Version 24 (113x113)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version24","Version 25 (117x117)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version25","Version 22 (105x105)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version22","Version 23 (109x109)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version23","Version 20 (97x97)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version20","Version 21 (101x101)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version21","Version 28 (129x129)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version28","Version 29 (133x133)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version29","Version 15 (77x77)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version15","Version 14 (73x73)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version14","Version 17 (85x85)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version17","Version 16 (81x81)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version16","Version 11 (61x61)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version11","Version 10 (57x57)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version10","Version 13 (69x69)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version13","Version 12 (65x65)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version12","Version 19 (93x93)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version19","Version 18 (89x89)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version18","Version 37 (165x165)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version37","Version 36 (161x161)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version36","Version 35 (157x157)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version35","Version 34 (153x153)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version34","Version 33 (149x149)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version33","Version 32 (145x145)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version32","Version 31 (141x141)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version31","Version 30 (137x137)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version30","Version 39 (173x173)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version39","Version 38 (169x169)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version38",Bound:"DevExpress.Data.UnboundColumnType.Bound","Tail's Length":"DevExpress.XtraPrinting.Shape.ShapeBrace.TailLength",Strikeout:"System.Drawing.Font.Strikeout",Save:"DevExpress.XtraPrinting.PrintingSystemCommand.Save",Copy:"DevExpress.XtraPrinting.PrintingSystemCommand.Copy",File:"DevExpress.XtraPrinting.PrintingSystemCommand.File",Find:"DevExpress.XtraPrinting.PrintingSystemCommand.Find","User Name":"DevExpress.XtraPrinting.PageInfo.UserName","Standard 9x11":"System.Drawing.Printing.PaperKind.Standard9x11","Using Printer Settings":"DevExpress.XtraPrinting.PrinterSettingsUsing","A5 Transverse":"System.Drawing.Printing.PaperKind.A5Transverse","Top Justify":"DevExpress.XtraPrinting.TextAlignment.TopJustify","Top Center":"System.Drawing.ContentAlignment.TopCenter","Matrix Size":"DevExpress.XtraPrinting.BarCode.DataMatrixGenerator.MatrixSize",Smart:"DevExpress.XtraPrinting.VerticalContentSplitting.Smart","Send File":"DevExpress.XtraPrinting.PrintingSystemCommand.SendFile","A3 Extra":"System.Drawing.Printing.PaperKind.A3Extra","Send as XLSX":"DevExpress.XtraPrinting.PrintingSystemCommand.SendXlsx",Exact:"DevExpress.XtraPrinting.VerticalContentSplitting.Exact","Export Watermarks":"DevExpress.XtraPrinting.HtmlExportOptionsBase.ExportWatermarks","Dark Vertical":"System.Drawing.Drawing2D.HatchStyle.DarkVertical",Slant:"DevExpress.XtraReports.UI.LineDirection.Slant","Top Left":"System.Drawing.ContentAlignment.TopLeft",Underline:"System.Drawing.Font.Underline","Light Vertical":"System.Drawing.Drawing2D.HatchStyle.LightVertical","Image Tiling":"DevExpress.XtraPrinting.Drawing.PageWatermark.ImageTiling","Start and Stop Symbols":"DevExpress.XtraPrinting.BarCode.CodabarGenerator.StartStopPair","Never Embedded Fonts":"DevExpress.XtraPrinting.PdfExportOptions.NeverEmbeddedFonts",Pointer:"DevExpress.XtraPrinting.PrintingSystemCommand.Pointer","Dark Upward Diagonal":"System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal","Prc Envelope Number 6 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated","Zoom Out":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomOut","Export as Image":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportGraphic","Prc Envelope Number 10":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10","Middle Center":"DevExpress.XtraPrinting.TextAlignment.MiddleCenter","A3 Transverse":"System.Drawing.Printing.PaperKind.A3Transverse","JIS B5 Transverse":"System.Drawing.Printing.PaperKind.B5Transverse",X12:"DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.X12",C40:"DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.C40",Body:"DevExpress.XtraPrinting.EmailOptions.Body",Subject:"DevExpress.XtraPrinting.XpsDocumentOptions.Subject","Invite Envelope":"System.Drawing.Printing.PaperKind.InviteEnvelope",
"Number of Sides":"DevExpress.XtraPrinting.Shape.ShapePolygon.NumberOfSides","Paper Size":"DevExpress.XtraPrinting.PrintingSystemCommand.PaperSize","High Resolution":"DevExpress.XtraPrinting.PrintingPermissions.HighResolution","Send as Image":"DevExpress.XtraPrinting.PrintingSystemCommand.SendGraphic",OpenPassword:"DevExpress.XtraPrinting.PdfPasswordSecurityOptions.OpenPassword",Customize:"DevExpress.XtraPrinting.PrintingSystemCommand.Customize","Middle Justify":"DevExpress.XtraPrinting.TextAlignment.MiddleJustify","Scroll Page Up":"DevExpress.XtraPrinting.PrintingSystemCommand.ScrollPageUp","Prc Envelope Number 9 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated",A6:"System.Drawing.Printing.PaperKind.A6",A4:"System.Drawing.Printing.PaperKind.A4",A5:"System.Drawing.Printing.PaperKind.A5",A2:"System.Drawing.Printing.PaperKind.A2",A3:"System.Drawing.Printing.PaperKind.A3",B5:"System.Drawing.Printing.PaperKind.B5",B4:"System.Drawing.Printing.PaperKind.B4","Suppress 65536 Rows Warning":"DevExpress.XtraPrinting.XlsExportOptions.Suppress65536RowsWarning","Pixel Format":"System.Drawing.Image.PixelFormat",Int32:"DevExpress.XtraReports.UI.FieldType.Int32",Int16:"DevExpress.XtraReports.UI.FieldType.Int16","Monarch Envelope":"System.Drawing.Printing.PaperKind.MonarchEnvelope",Float:"DevExpress.XtraReports.UI.FieldType.Float",Omnidirectional:"DevExpress.XtraPrinting.BarCode.DataBarType.Omnidirectional","C3 Envelope":"System.Drawing.Printing.PaperKind.C3Envelope","Large Grid":"System.Drawing.Drawing2D.HatchStyle.LargeGrid","144 x 144":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix144x144","Dashed Horizontal":"System.Drawing.Drawing2D.HatchStyle.DashedHorizontal","Auto-Size":"DevExpress.XtraPrinting.ImageSizeMode.AutoSize","120 x 120":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix120x120","Inserting Deleting Rotating":"DevExpress.XtraPrinting.ChangingPermissions.InsertingDeletingRotating","Skip Empty Rows":"DevExpress.XtraPrinting.CsvExportOptions.SkipEmptyRows","Dashed Vertical":"System.Drawing.Drawing2D.HatchStyle.DashedVertical","Japanese Postcard":"System.Drawing.Printing.PaperKind.JapanesePostcard",Boolean:"DevExpress.XtraReports.UI.FieldType.Boolean","Page Border Color":"DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderColor","C6 Envelope":"System.Drawing.Printing.PaperKind.C6Envelope","Page Count":"DevExpress.XtraPrinting.PageInfo.Total","Page Border Width":"DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderWidth","104 x 104":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix104x104","Number 12 Envelope":"System.Drawing.Printing.PaperKind.Number12Envelope","A3 Extra Transverse":"System.Drawing.Printing.PaperKind.A3ExtraTransverse","A5 Rotated":"System.Drawing.Printing.PaperKind.A5Rotated","132 x 132":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix132x132","Small Checker Board":"System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard","Export as XLSX":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportXlsx","Export File":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportFile","Additional Recipients":"DevExpress.XtraPrinting.EmailOptions.AdditionalRecipients","MHT Export Options":"DevExpress.XtraPrinting.MhtExportOptions","Document Options":"DevExpress.XtraPrinting.XpsExportOptions.DocumentOptions",Legal:"System.Drawing.Printing.PaperKind.Legal","Iso B4":"System.Drawing.Printing.PaperKind.IsoB4",Folio:"System.Drawing.Printing.PaperKind.Folio","JIS B6":"System.Drawing.Printing.PaperKind.B6Jis","SuperB/SuperB/A3":"System.Drawing.Printing.PaperKind.BPlus","SuperA/SuperA/A4":"System.Drawing.Printing.PaperKind.APlus",Truncated:"DevExpress.XtraPrinting.BarCode.DataBarType.Truncated","Dark Horizontal":"System.Drawing.Drawing2D.HatchStyle.DarkHorizontal","Image Quality":"DevExpress.XtraPrinting.PdfExportOptions.ImageQuality","Show Next Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ShowNextPage","Prc Envelope Number 4 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated","Middle Left":"DevExpress.XtraPrinting.TextAlignment.MiddleLeft","PDF Document Options":"DevExpress.XtraPrinting.PdfDocumentOptions","Sheet Name":"DevExpress.XtraPrinting.XlsExportOptions.SheetName","Version 4 (33x33)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version4","Version 5 (37x37)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version5","Version 6 (41x41)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version6","Version 7 (45x45)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version7","Version 1 (21x21)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version1","Version 2 (25x25)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version2","Version 3 (29x29)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version3","Version 8 (49x49)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version8","Version 9 (53x53)":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.Version9","Page Layout Continuous":"DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutContinuous","Using a Default Path":"DevExpress.XtraPrinting.SaveMode.UsingDefaultPath","Wide Narrow Ratio":"DevExpress.XtraPrinting.BarCode.Interleaved2of5Generator.WideNarrowRatio","Keep Size":"DevExpress.Snap.Core.Fields.UpdateMergeImageFieldMode.KeepSize","CSV Export Options":"DevExpress.XtraPrinting.CsvExportOptions","Horizontal Brick":"System.Drawing.Drawing2D.HatchStyle.HorizontalBrick","All Pages":"DevExpress.XtraReports.UI.PrintOnPages.AllPages","Outlined Diamond":"System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond","Ignore 256 Columns Limit":"DevExpress.XtraPrinting.XlsExportOptions.Ignore256ColumnsLimit","Skip Empty Columns":"DevExpress.XtraPrinting.CsvExportOptions.SkipEmptyColumns","Top Right":"System.Drawing.ContentAlignment.TopRight","Letter Plus":"System.Drawing.Printing.PaperKind.LetterPlus",Description:"DevExpress.XtraPrinting.XpsDocumentOptions.Description","Recipient Name":"DevExpress.XtraPrinting.EmailOptions.RecipientName","Zoom to Two Pages":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTwoPages","Horizontal Line Width":"DevExpress.XtraPrinting.Shape.ShapeCross.HorizontalLineWidth",PermissionsOptions:"DevExpress.XtraPrinting.PdfPasswordSecurityOptions.PermissionsOptions",Ledger:"System.Drawing.Printing.PaperKind.Ledger",Letter:"System.Drawing.Printing.PaperKind.Letter","Japanese Envelope Chou Number 4 Rotated":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated","Text Export Options":"DevExpress.XtraPrinting.TextExportOptions","Error Correction Level":"DevExpress.XtraPrinting.BarCode.QRCodeGenerator.ErrorCorrectionLevel","Vertical Line Width":"DevExpress.XtraPrinting.Shape.ShapeCross.VerticalLineWidth","Number 11 Envelope":"System.Drawing.Printing.PaperKind.Number11Envelope",Statement:"System.Drawing.Printing.PaperKind.Statement","Bottom Center":"System.Drawing.ContentAlignment.BottomCenter",Keywords:"DevExpress.XtraPrinting.XpsDocumentOptions.Keywords","Bottom Right":"DevExpress.XtraPrinting.ImageAlignment.BottomRight","Action After Export":"DevExpress.XtraPrinting.PrintPreviewOptions.ActionAfterExport","Signature Options":"DevExpress.XtraPrinting.PdfExportOptions.SignatureOptions","ISO B5 Extra":"System.Drawing.Printing.PaperKind.B5Extra","Horizontal Resolution":"System.Drawing.Image.HorizontalResolution",PrintingPermissions:"DevExpress.XtraPrinting.PdfPermissionsOptions.PrintingPermissions","Workbook Color Palette Compliance":"DevExpress.XtraPrinting.XlsExportOptions.WorkbookColorPaletteCompliance","A6 Rotated":"System.Drawing.Printing.PaperKind.A6Rotated","GDI Vertical Font":"System.Drawing.Font.GdiVerticalFont","Light Horizontal":"System.Drawing.Drawing2D.HatchStyle.LightHorizontal","Multiple Pages":"DevExpress.XtraPrinting.PrintingSystemCommand.MultiplePages","Not with Report Header and Report Footer":"DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeaderAndReportFooter","Export as XLS":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportXls","Export as XPS":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportXps","Export as TXT":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportTxt","Export as PDF":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportPdf","Export as RTF":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportRtf","Export as MHT":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportMht","Export as HTML":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportHtm","Export as CSV":"DevExpress.XtraPrinting.PrintingSystemCommand.ExportCsv","Ignore 65536 Rows Limit":"DevExpress.XtraPrinting.XlsExportOptions.Ignore65536RowsLimit",Weave:"System.Drawing.Drawing2D.HatchStyle.Weave","XLSx Export Options":"DevExpress.XtraPrinting.XlsxExportOptions","Japanese Envelope Chou Number 3 Rotated":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated",Plaid:"System.Drawing.Drawing2D.HatchStyle.Plaid","JIS B5 Rotated":"System.Drawing.Printing.PaperKind.B5JisRotated","Store Appearance":"DevExpress.Utils.OptionsColumnLayout.StoreAppearance",Unit:"System.Drawing.Font.Unit",Divot:"System.Drawing.Drawing2D.HatchStyle.Divot",Bold:"System.Drawing.Font.Bold","Quote Strings with Separators":"DevExpress.XtraPrinting.TextExportOptionsBase.QuoteStringsWithSeparators","Bottom Left":"DevExpress.XtraPrinting.TextAlignment.BottomLeft","D Sheet":"System.Drawing.Printing.PaperKind.DSheet","Submit Parameters":"DevExpress.XtraPrinting.PrintingSystemCommand.SubmitParameters","Prc Envelope Number 7 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated","Raw Format":"System.Drawing.Image.RawFormat","Current Date and Time":"DevExpress.XtraPrinting.PageInfo.DateTime","Keep Scale":"DevExpress.Snap.Core.Fields.UpdateMergeImageFieldMode.KeepScale","C Sheet":"System.Drawing.Printing.PaperKind.CSheet","Single File (Page-by-Page)":"DevExpress.XtraPrinting.HtmlExportMode.SingleFilePageByPage","Page Orientation":"DevExpress.XtraPrinting.PrintingSystemCommand.PageOrientation","Rotate to the Right":"DevExpress.XtraPrinting.BarCode.BarCodeOrientation.RotateRight","Small Confetti":"System.Drawing.Drawing2D.HatchStyle.SmallConfetti","Tabloid Extra":"System.Drawing.Printing.PaperKind.TabloidExtra","E Sheet":"System.Drawing.Printing.PaperKind.ESheet","Page Setup":"DevExpress.XtraPrinting.PrintingSystemCommand.PageSetup","A4 Plus":"System.Drawing.Printing.PaperKind.A4Plus","Japanese Envelope You Number 4":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4","Low Resolution":"DevExpress.XtraPrinting.PrintingPermissions.LowResolution","Upside Down":"DevExpress.XtraPrinting.BarCode.BarCodeOrientation.UpsideDown",Normal:"DevExpress.XtraPrinting.ImageSizeMode.Normal",RTF:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.RTF",MHT:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.MHT",DOC:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.DOC",Encoding:"DevExpress.XtraPrinting.TextExportOptionsBase.Encoding",Wrap:"DevExpress.Utils.WordWrap.Wrap","Add New Columns":"DevExpress.Utils.OptionsColumnLayout.AddNewColumns",ASCII:"DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.ASCII","C65 Envelope":"System.Drawing.Printing.PaperKind.C65Envelope","Stretch Image":"DevExpress.XtraPrinting.ImageSizeMode.StretchImage",Byte:"DevExpress.XtraPrinting.BarCode.QRCodeCompactionMode.Byte",Type:"DevExpress.XtraPrinting.BarCode.DataBarGenerator.Type",Sphere:"System.Drawing.Drawing2D.HatchStyle.Sphere","Reduce Palette For Exact Colors":"DevExpress.XtraPrinting.WorkbookColorPaletteCompliance.ReducePaletteForExactColors","Suppress 256 Columns Warning":"DevExpress.XtraPrinting.XlsExportOptions.Suppress256ColumnsWarning","Zoom Track Bar":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomTrackBar","Default Resource File":"DevExpress.XtraPrinting.PdfExportOptions.DefaultResourceFile","Japanese Double Postcard Rotated":"System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated","Dashed Downward Diagonal":"System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal","Prc Envelope Number 2 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated",Magnifier:"DevExpress.XtraPrinting.PrintingSystemCommand.Magnifier",PdfPermissionsOptions:"DevExpress.XtraPrinting.PdfPasswordSecurityOptions.PdfPermissionsOptions","Number 9 Envelope":"System.Drawing.Printing.PaperKind.Number9Envelope","Remove Secondary Symbols":"DevExpress.XtraPrinting.HtmlExportOptionsBase.RemoveSecondarySymbols","Store Layout":"DevExpress.Utils.OptionsColumnLayout.StoreLayout","A4 Rotated":"System.Drawing.Printing.PaperKind.A4Rotated",ChangingPermissions:"DevExpress.XtraPrinting.PdfPermissionsOptions.ChangingPermissions","C4 Envelope":"System.Drawing.Printing.PaperKind.C4Envelope","Native Format Options":"DevExpress.XtraPrinting.NativeFormatOptions","Prc 32K Rotated":"System.Drawing.Printing.PaperKind.Prc32KRotated","Number 10 Envelope":"System.Drawing.Printing.PaperKind.Number10Envelope",PermissionsPassword:"DevExpress.XtraPrinting.PdfPasswordSecurityOptions.PermissionsPassword","Show Options Dialog Before Export":"DevExpress.XtraPrinting.PrintPreviewOptions.ShowOptionsBeforeExport","Back Slant":"DevExpress.XtraReports.UI.LineDirection.BackSlant","Japanese Envelope Kaku Number 2 Rotated":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated","Ask a User":"DevExpress.XtraPrinting.ActionAfterExport.AskUser","Light Upward Diagonal":"System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal",Limited:"DevExpress.XtraPrinting.BarCode.DataBarType.Limited","A4 Transverse":"System.Drawing.Printing.PaperKind.A4Transverse",Yes:"DevExpress.Utils.DefaultBoolean.True",Stacked:"DevExpress.XtraPrinting.BarCode.DataBarType.Stacked","Recipient Address":"DevExpress.XtraPrinting.EmailOptions.RecipientAddress","Prc Envelope Number 5 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated","Small Grid":"System.Drawing.Drawing2D.HatchStyle.SmallGrid",Hyperlink:"DevExpress.Snap.Extensions.Native.ActionLists.ContentType.Hyperlink","Japanese Envelope You Number 4 Rotated":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated","Double Modulo 10":"DevExpress.XtraPrinting.BarCode.MSICheckSum.DoubleModulo10","View Whole Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ViewWholePage",WordML:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.WordML",Compression:"DevExpress.XtraPrinting.XpsExportOptions.Compression","Embed Images In HTML":"DevExpress.XtraPrinting.HtmlExportOptions.EmbedImagesInHTML","German Legal Fanfold":"System.Drawing.Printing.PaperKind.GermanLegalFanfold","Image View Mode":"DevExpress.XtraPrinting.Drawing.PageWatermark.ImageViewMode",OpenDocument:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.OpenDocument",EnableScreenReaders:"DevExpress.XtraPrinting.PdfPermissionsOptions.EnableScreenReaders","Print Direct":"DevExpress.XtraPrinting.PrintingSystemCommand.PrintDirect","Prc 32K":"System.Drawing.Printing.PaperKind.Prc32K","Prc 16K":"System.Drawing.Printing.PaperKind.Prc16K","Adjust Colors To Default Palette":"DevExpress.XtraPrinting.WorkbookColorPaletteCompliance.AdjustColorsToDefaultPalette","Prc Envelope Number 10 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated",Quarto:"System.Drawing.Printing.PaperKind.Quarto",Decimal:"DevExpress.Data.UnboundColumnType.Decimal",DateTime:"DevExpress.XtraTreeList.Data.UnboundColumnType.DateTime","Diagonal Cross":"System.Drawing.Drawing2D.HatchStyle.DiagonalCross","Diagonal Brick":"System.Drawing.Drawing2D.HatchStyle.DiagonalBrick","Commenting Filling Signing":"DevExpress.XtraPrinting.ChangingPermissions.CommentingFillingSigning","Use Paper Kind":"DevExpress.XtraPrinting.PrinterSettingsUsing.UsePaperKind","Dotted Diamond":"System.Drawing.Drawing2D.HatchStyle.DottedDiamond","Zig Zag":"System.Drawing.Drawing2D.HatchStyle.ZigZag","Page Number":"DevExpress.XtraPrinting.PageInfo.Number","Zoom to Whole Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToWholePage",Guid:"DevExpress.XtraReports.UI.FieldType.Guid","Count of Star Points":"DevExpress.XtraPrinting.Shape.ShapeStar.StarPointCount","Page Layout Facing":"DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutFacing","Filling Signing":"DevExpress.XtraPrinting.ChangingPermissions.FillingSigning","80 x 80":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix80x80","88 x 88":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix88x88","96 x 96":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix96x96","64 x 64":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix64x64","72 x 72":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix72x72","48 x 48":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix48x48","40 x 40":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix40x40","44 x 44":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix44x44","52 x 52":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix52x52","26 x 26":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix26x26","24 x 24":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix24x24","22 x 22":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix22x22","20 x 20":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix20x20","36 x 36":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix36x36","32 x 32":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix32x32","16 x 16":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x16","16 x 48":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x48","16 x 36":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix16x36","18 x 18":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix18x18","12 x 26":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x26","12 x 12":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x12","12 x 36":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix12x36","14 x 14":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix14x14","10 x 10":"DevExpress.XtraPrinting.BarCode.DataMatrixSize.Matrix10x10","Letter Rotated":"System.Drawing.Printing.PaperKind.LetterRotated",Medium:"DevExpress.XtraPrinting.PdfJpegImageQuality.Medium","Truncate Symbol":"DevExpress.XtraPrinting.BarCode.PDF417Generator.TruncateSymbol","Solid Diamond":"System.Drawing.Drawing2D.HatchStyle.SolidDiamond",Lowest:"DevExpress.XtraPrinting.PdfJpegImageQuality.Lowest","Text Export Mode":"DevExpress.XtraPrinting.TextExportOptionsBase.TextExportMode","Physical Dimension":"System.Drawing.Image.PhysicalDimension","Recipient Address Prefix":"DevExpress.XtraPrinting.EmailOptions.RecipientAddressPrefix","Light Downward Diagonal":"System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal","Default Send Format":"DevExpress.XtraPrinting.PrintPreviewOptions.DefaultSendFormat",Creator:"DevExpress.XtraPrinting.XpsDocumentOptions.Creator",DE:"DevExpress.XtraPrinting.BarCode.CodabarStartStopPair.DE",AT:"DevExpress.XtraPrinting.BarCode.CodabarStartStopPair.AT",BN:"DevExpress.XtraPrinting.BarCode.CodabarStartStopPair.BN","Image Transparency":"DevExpress.XtraPrinting.Drawing.PageWatermark.ImageTransparency",Shingle:"System.Drawing.Drawing2D.HatchStyle.Shingle","Wide Downward Diagonal":"System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal","Text Transparency":"DevExpress.XtraPrinting.Drawing.PageWatermark.TextTransparency","Show Print Dialog on Open":"DevExpress.XtraPrinting.PdfExportOptions.ShowPrintDialogOnOpen","Vertical Resolution":"System.Drawing.Image.VerticalResolution","Default Export Format":"DevExpress.XtraPrinting.PrintPreviewOptions.DefaultExportFormat","Narrow Horizontal":"System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal",Concavity:"DevExpress.XtraPrinting.Shape.ShapeStar.Concavity","Edit Page H F":"DevExpress.XtraPrinting.PrintingSystemCommand.EditPageHF","A3 Rotated":"System.Drawing.Printing.PaperKind.A3Rotated",Clip:"DevExpress.XtraPrinting.Drawing.ImageViewMode.Clip",OpenXML:"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.OpenXML","Default Directory":"DevExpress.XtraPrinting.PrintPreviewOptions.DefaultDirectory",Background:"DevExpress.XtraPrinting.PrintingSystemCommand.Background","Document Map":"DevExpress.XtraPrinting.PrintingSystemCommand.DocumentMap","C5 Envelope":"System.Drawing.Printing.PaperKind.C5Envelope","Page Border's Color":"DevExpress.XtraPrinting.ImageExportOptions.PageBorderColor",Compressed:"DevExpress.XtraPrinting.NativeFormatOptions.Compressed","Dashed Upward Diagonal":"System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal","Page Border's Width":"DevExpress.XtraPrinting.ImageExportOptions.PageBorderWidth","Zoom to Text Width":"DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth","Print Preview Options":"DevExpress.XtraPrinting.PrintPreviewOptions","Table Layout":"DevExpress.XtraPrinting.HtmlExportOptionsBase.TableLayout",Squeeze:"DevExpress.XtraPrinting.ImageSizeMode.Squeeze",CC:"DevExpress.XtraPrinting.RecipientFieldType.CC",TO:"DevExpress.XtraPrinting.RecipientFieldType.TO","Any Except Extracting Pages":"DevExpress.XtraPrinting.ChangingPermissions.AnyExceptExtractingPages","Send as CSV":"DevExpress.XtraPrinting.PrintingSystemCommand.SendCsv","Send as MHT":"DevExpress.XtraPrinting.PrintingSystemCommand.SendMht","Send as RTF":"DevExpress.XtraPrinting.PrintingSystemCommand.SendRtf","Send as TXT":"DevExpress.XtraPrinting.PrintingSystemCommand.SendTxt","Send as PDF":"DevExpress.XtraPrinting.PrintingSystemCommand.SendPdf","Send as XPS":"DevExpress.XtraPrinting.PrintingSystemCommand.SendXps","Send as XLS":"DevExpress.XtraPrinting.PrintingSystemCommand.SendXls","Auto-Select Version":"DevExpress.XtraPrinting.BarCode.QRCodeVersion.AutoVersion","Prc Envelope Number 3":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3","Prc Envelope Number 2":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2","Prc Envelope Number 1":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1","Prc Envelope Number 7":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7","Prc Envelope Number 6":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6","Prc Envelope Number 5":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5","Prc Envelope Number 4":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4","Prc Envelope Number 9":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9","Prc Envelope Number 8":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8","XPS Document Options":"DevExpress.XtraPrinting.XpsDocumentOptions",L:"DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.L",M:"DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.M",H:"DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.H",Q:"DevExpress.XtraPrinting.BarCode.QRCodeErrorCorrectionLevel.Q","Level 4":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level4","Level 5":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level5","Level 6":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level6","Level 7":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level7","Level 0":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level0","Level 1":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level1","Level 2":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level2","Level 3":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level3","Level 8":"DevExpress.XtraPrinting.BarCode.ErrorCorrectionLevel.Level8","Number 14 Envelope":"System.Drawing.Printing.PaperKind.Number14Envelope","Not with Report Header":"DevExpress.XtraReports.UI.PrintOnPages.NotWithReportHeader","Letter Transverse":"System.Drawing.Printing.PaperKind.LetterTransverse","Pdf Password Security Options":"DevExpress.XtraPrinting.PdfPasswordSecurityOptions","JIS B6 Rotated":"System.Drawing.Printing.PaperKind.B6JisRotated",CStar:"DevExpress.XtraPrinting.BarCode.CodabarStartStopPair.CStar","Japanese Double Postcard":"System.Drawing.Printing.PaperKind.JapaneseDoublePostcard",Columns:"DevExpress.XtraPrinting.BarCode.PDF417Generator.Columns","Segments In Row":"DevExpress.XtraPrinting.BarCode.DataBarGenerator.SegmentsInRow","Prc Envelope Number 3 Rotated":"System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated","B6 Envelope":"System.Drawing.Printing.PaperKind.B6Envelope","Fill Background":"DevExpress.XtraPrinting.PrintingSystemCommand.FillBackground","Show Options before Saving":"DevExpress.XtraPrinting.NativeFormatOptions.ShowOptionsBeforeSave","German Standard Fanfold":"System.Drawing.Printing.PaperKind.GermanStandardFanfold","Dash-Dot":"DevExpress.XtraPrinting.BorderDashStyle.DashDot",Italic:"System.Drawing.Font.Italic","Page Layout":"DevExpress.XtraPrinting.PrintingSystemCommand.PageLayout","Calculate a Checksum":"DevExpress.XtraPrinting.BarCode.BarCodeGeneratorBase.CalcCheckSum","Export Hyperlinks":"DevExpress.XtraPrinting.XlsExportOptions.ExportHyperlinks","Auto Charset":"DevExpress.XtraPrinting.BarCode.Code128Charset.CharsetAuto","Rotate to the Left":"DevExpress.XtraPrinting.BarCode.BarCodeOrientation.RotateLeft","Go To Page":"DevExpress.XtraPrinting.PrintingSystemCommand.GoToPage","MSI Checksum":"DevExpress.XtraPrinting.BarCode.CodeMSIGenerator.MSICheckSum","Page Number (Roman, Uppercase)":"DevExpress.XtraPrinting.PageInfo.RomHiNumber",'"Current of Total" Page Numbers':"DevExpress.XtraPrinting.PageInfo.NumberOfTotal","Not with Report Footer":"DevExpress.XtraReports.UI.PrintOnPages.NotWithReportFooter","Bottom Justify":"DevExpress.XtraPrinting.TextAlignment.BottomJustify","Plain Text":"DevExpress.Snap.Extensions.Native.ActionLists.TextFormat.PlainText","Japanese Envelope Kaku Number 3 Rotated":"System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated","Page Number (Roman, Lowercase)":"DevExpress.XtraPrinting.PageInfo.RomLowNumber","Print Selection":"DevExpress.XtraPrinting.PrintingSystemCommand.PrintSelection",Tabloid:"System.Drawing.Printing.PaperKind.Tabloid","Pdf Permissions Options":"DevExpress.XtraPrinting.PdfPermissionsOptions","Letter Extra Transverse":"System.Drawing.Printing.PaperKind.LetterExtraTransverse","Format Type":"DevExpress.Utils.FormatInfo.FormatType",Rows:"DevExpress.XtraPrinting.BarCode.PDF417Generator.Rows","E-mail Options":"DevExpress.XtraPrinting.EmailOptions",Note:"System.Drawing.Printing.PaperKind.Note","Use Landscape":"DevExpress.XtraPrinting.PrinterSettingsUsing.UseLandscape",Category:"DevExpress.XtraPrinting.XpsDocumentOptions.Category",Resolution:"DevExpress.XtraPrinting.ImageExportOptions.Resolution",Highest:"DevExpress.XtraPrinting.PdfJpegImageQuality.Highest","DL Envelope":"System.Drawing.Printing.PaperKind.DLEnvelope","Raw Data Mode":"DevExpress.XtraPrinting.XlsExportOptions.RawDataMode","Page Margins":"DevExpress.XtraPrinting.PrintingSystemCommand.PageMargins",Object:"DevExpress.XtraTreeList.Data.UnboundColumnType.Object","No Wrap":"DevExpress.Utils.WordWrap.NoWrap","(Collection)":"System.Collections.CollectionBase",Scale:"DevExpress.XtraPrinting.PrintingSystemCommand.Scale",Print:"DevExpress.XtraPrinting.PrintingSystemCommand.Print","Narrow Vertical":"System.Drawing.Drawing2D.HatchStyle.NarrowVertical","Default File Name":"DevExpress.XtraPrinting.PrintPreviewOptions.DefaultFileName","Show First Page":"DevExpress.XtraPrinting.PrintingSystemCommand.ShowFirstPage","Prc 32K Big":"System.Drawing.Printing.PaperKind.Prc32KBig",Edifact:"DevExpress.XtraPrinting.BarCode.DataMatrixCompactionMode.Edifact","GDI Character Set":"System.Drawing.Font.GdiCharSet","Additional Metadata":"DevExpress.XtraPrinting.PdfExportOptions.AdditionalMetadata","Look-Up Settings":"DevExpress.XtraReports.Parameters.Parameter.LookUpSettings",Parameter:"DevExpress.XtraReports.Parameters.Parameter","Static List":"DevExpress.XtraReports.Parameters.StaticListLookUpSettings","Multi-Value":"DevExpress.XtraReports.Parameters.Parameter.MultiValue",Address:"DevExpress.XtraReports.Recipients.Recipient.Address",Prefix:"DevExpress.XtraReports.Recipients.Recipient.Prefix","Contact Name":"DevExpress.XtraReports.Recipients.Recipient.ContactName","Dynamic List":"DevExpress.XtraReports.Parameters.DynamicListLookUpSettings","Look-Up Values":"DevExpress.XtraReports.Parameters.StaticListLookUpSettings.LookUpValues","Display Member":"DevExpress.XtraReports.Parameters.DynamicListLookUpSettings.DisplayMember","Highlight Negative Points":"DevExpress.Sparkline.BarSparklineView.HighlightNegativePoints","Highlight Min Point":"DevExpress.Sparkline.SparklineViewBase.HighlightMinPoint","Max Point Color":"DevExpress.Sparkline.SparklineViewBase.MaxPointColor","Show Markers":"DevExpress.Sparkline.LineSparklineView.ShowMarkers","Min Point Color":"DevExpress.Sparkline.SparklineViewBase.MinPointColor","Max Point Marker Size":"DevExpress.Sparkline.LineSparklineView.MaxPointMarkerSize","End Point Color":"DevExpress.Sparkline.SparklineViewBase.EndPointColor","Marker Color":"DevExpress.Sparkline.LineSparklineView.MarkerColor","Negative Point Color":"DevExpress.Sparkline.SparklineViewBase.NegativePointColor","Start Point Color":"DevExpress.Sparkline.SparklineViewBase.StartPointColor","Is Auto":"DevExpress.Sparkline.SparklineRange.IsAuto","Limit 1":"DevExpress.Sparkline.SparklineRange.Limit1","Limit 2":"DevExpress.Sparkline.SparklineRange.Limit2","Negative Point Marker Size":"DevExpress.Sparkline.LineSparklineView.NegativePointMarkerSize","Area Opacity":"DevExpress.Sparkline.AreaSparklineView.AreaOpacity","End Point Marker Size":"DevExpress.Sparkline.LineSparklineView.EndPointMarkerSize","Highlight Start Point":"DevExpress.Sparkline.SparklineViewBase.HighlightStartPoint","Min Point Marker Size":"DevExpress.Sparkline.LineSparklineView.MinPointMarkerSize","Highlight End Point":"DevExpress.Sparkline.SparklineViewBase.HighlightEndPoint","Start Point Marker Size":"DevExpress.Sparkline.LineSparklineView.StartPointMarkerSize","Highlight Max Point":"DevExpress.Sparkline.SparklineViewBase.HighlightMaxPoint",Circular:"DevExpress.XtraGauges.Core.Customization.DashboardGaugeType.Circular","Dashboard Gauge Type":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeType",Half:"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle.Half",Full:"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle.Full","Three Fourths":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle.ThreeFourth","Dashboard Gauge Theme":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeTheme","Dashboard Gauge Style":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle","Quarter Right":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle.QuarterRight","Flat Light":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeTheme.FlatLight",Linear:"DevExpress.XtraGauges.Core.Customization.DashboardGaugeType.Linear","Flat Dark":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeTheme.FlatDark","Quarter Left":"DevExpress.XtraGauges.Core.Customization.DashboardGaugeStyle.QuarterLeft","Align to Grid":"ReportStringId.RibbonXRDesign_AlignToGrid_STipTitle","Save the current report.":"ReportStringId.RibbonXRDesign_SaveFile_Description","Make Same Width":"ReportStringId.RibbonXRDesign_SizeToControlWidth_STipTitle",Data:"ReportStringId.CatData","Load File...":"ReportStringId.Cmd_RtfLoad",Behavior:"ReportStringId.CatBehavior","Change the font face.":"ReportStringId.RibbonXRDesign_FontName_STipContent","This operation will remove all styles. Do you wish to proceed?":"ReportStringId.Msg_WarningRemoveStyles",Justify:"ReportStringId.UD_Capt_JustifyJustify","Add the control from the clipboard":"ReportStringId.UD_Hint_Paste","Remove Vertical Spacing":"ReportStringId.UD_TTip_VertSpaceConcatenate","Close the report":"ReportStringId.UD_Hint_Close","Report has been changed. Do you want to save changes ?":"ReportStringId.UD_Msg_ReportChanged","Font Name":"ReportStringId.UD_TTip_FormatFontName","Font Size":"ReportStringId.UD_TTip_FormatFontSize",Paste:"ReportStringId.UD_Capt_Paste","Edit Bindings...":"ReportStringId.Verb_EditBindings","Save All":"ReportStringId.UD_Capt_SaveAll","Cut the selected controls from the report and put them on the Clipboard.":"ReportStringId.RibbonXRDesign_Cut_STipContent","Set the foreground color of the control":"ReportStringId.UD_Hint_ForegroundColor","Make the selected controls the same size":"ReportStringId.UD_Hint_MakeSameSizeBoth",
"Add New DataSource":"ReportStringId.UD_Title_FieldList_AddNewDataSourceText",Home:"ReportStringId.RibbonXRDesign_HtmlHome_Caption","Copy the selected controls and put them on the Clipboard.":"ReportStringId.RibbonXRDesign_Copy_STipContent","Center Vertically":"ReportStringId.RibbonXRDesign_CenterVertically_STipTitle","{0} {{ PaperKind: {1} }}":"ReportStringId.RepTabCtl_ReportStatus",Refresh:"ReportStringId.RibbonXRDesign_HtmlRefresh_STipTitle","Multi-Column Mode":"ReportStringId.STag_Name_ColumnMode","Change the text background color.":"ReportStringId.RibbonXRDesign_BackColor_STipContent","Save the report with a new name":"ReportStringId.UD_Hint_SaveFileAs","Make Vertical Spacing Equal":"ReportStringId.RibbonXRDesign_VertSpaceMakeEqual_Caption","Space for repeating columns.":"ReportStringId.MultiColumnDesignMsg1","Controls placed here will be printed incorrectly.":"ReportStringId.MultiColumnDesignMsg2","Save the current report with a new name.":"ReportStringId.RibbonXRDesign_SaveFileAs_Description",Navigation:"ReportStringId.CatNavigation","Can't create two instances of a class on a form":"ReportStringId.Msg_CreateSomeInstance","Printing Settings":"ReportStringId.PivotGridForm_ItemSettings_Caption","Center in Form":"ReportStringId.UD_Group_CenterInForm","No bookmarks were found in the report. To create a table of contents, specify a bookmark for at least one report element.":"ReportStringId.Msg_NoBookmarksWereFoundInReportForXrToc","Make Same Size":"ReportStringId.RibbonXRDesign_SizeToControl_Caption","Save all modified reports.":"ReportStringId.RibbonXRDesign_SaveAll_STipContent","Select one or more of the Appearance objects to customize the printing appearances of the corresponding visual elements.":"ReportStringId.PivotGridFrame_Appearances_DescriptionText","Center Text":"ReportStringId.RibbonXRDesign_JustifyCenter_STipTitle","An error occurred during deserialization - possible wrong report class name":"ReportStringId.Msg_WrongReportClassName","Convert To Labels":"ReportStringId.Cmd_TableConvertToLabels","Show or hide the Scripts Editor.":"ReportStringId.RibbonXRDesign_Scripts_STipContent","Invalid binding":"ReportStringId.BindingMapperForm_InvalidBindingWarning","Customize the current XRPivotGrid's layout and preview its data.":"ReportStringId.PivotGridForm_ItemLayout_Description","Size to Grid":"ReportStringId.UD_Capt_MakeSameSizeSizeToGrid","Right align the selected controls":"ReportStringId.UD_Hint_AlignRights",Delete:"ReportStringId.Cmd_Delete","Open...":"ReportStringId.UD_Capt_OpenFile","Error when trying to populate the datasource. The following exception was thrown:":"ReportStringId.Msg_FillDataError","Can't load the report. The file is possibly corrupted or report's assembly is missing.":"ReportStringId.Msg_FileCorrupted","Add a formatting rule":"ReportStringId.FRSForm_TTip_AddRule","Open a report.":"ReportStringId.RibbonXRDesign_OpenFile_STipContent","Assign Style To The XRControl":"ReportStringId.Cmd_AssignStyleToXRControl","Main settings(Fields, Layout).":"ReportStringId.PivotGridForm_GroupMain_Description","Decrease the vertical spacing between the selected controls.":"ReportStringId.RibbonXRDesign_VertSpaceDecrease_STipContent",Done:"ReportStringId.RibbonXRDesign_StatusBar_HtmlDone","Tile Vertical":"ReportStringId.UD_Capt_MdiTileVertical","Make the selected controls have the same width":"ReportStringId.UD_Hint_MakeSameSizeWidth","Data source:":"ReportStringId.NewParameterEditorForm_DataSource","Standard Controls":"ReportStringId.UD_XtraReportsToolboxCategoryName","Main Menu":"ReportStringId.UD_Capt_MainMenuName","Manage fields.":"ReportStringId.PivotGridForm_ItemFields_Description","Switch between tabbed and window MDI layout modes":"ReportStringId.UD_Hint_TabbedInterface","Increase Vertical Spacing":"ReportStringId.RibbonXRDesign_VertSpaceIncrease_STipTitle","The padding should be greater than or equal to 0.":"ReportStringId.Msg_IncorrectPadding","Undo the last operation":"ReportStringId.UD_Hint_Undo","Redo the last operation":"ReportStringId.UD_Hint_Redo","Select or input the zoom factor":"ReportStringId.UD_Hint_Zoom","Close the designer":"ReportStringId.UD_Hint_Exit","Copy the control to the clipboard":"ReportStringId.UD_Hint_Copy","Make Horizontal Spacing Equal":"ReportStringId.UD_TTip_HorizSpaceMakeEqual","Side margins":"ReportStringId.SR_Side_Margins","Change the text foreground color.":"ReportStringId.RibbonXRDesign_ForeColor_STipContent",Toolbar:"ReportStringId.UD_Capt_ToolbarName","Report Explorer":"ReportStringId.UD_Title_ReportExplorer","Select Controls With Style":"ReportStringId.Cmd_SelectControlsWithStyle","Align Rights":"ReportStringId.RibbonXRDesign_AlignRight_Caption","Align the positions of the selected controls to the grid.":"ReportStringId.RibbonXRDesign_AlignToGrid_STipContent","Align Lefts":"ReportStringId.UD_TTip_AlignLeft",Commands:"ReportStringId.Cmd_Commands","StyleSheet error":"ReportStringId.SSForm_Msg_StyleSheetError","New Report via Wizard...":"ReportStringId.RibbonXRDesign_NewReportWizard_Caption",Clear:"ReportStringId.Verb_RTFClear",Back:"ReportStringId.RibbonXRDesign_HtmlBackward_STipTitle","Align text to both the left and right sides, adding extra space between words as necessary.":"ReportStringId.RibbonXRDesign_JustifyJustify_STipContent",Forward:"ReportStringId.RibbonXRDesign_HtmlForward_Caption","Bring to Front":"ReportStringId.RibbonXRDesign_BringToFront_Caption",'A parameter binding assigns a value of an incompatible type to the subreport parameter "{0}".':"ReportStringId.Msg_ParameterBindingValueTypeMismatch","Underline the font":"ReportStringId.UD_Hint_FontUnderline","Make the vertical spacing between the selected controls equal.":"ReportStringId.RibbonXRDesign_VertSpaceMakeEqual_STipContent","HTML View":"ReportStringId.RibbonXRDesign_HtmlPageText","Project Objects":"ReportStringId.UD_Title_FieldList_ProjectObjectsText","Invalid leader symbol.":"ReportStringId.Msg_InvalidLeaderSymbolForXrTocLevel","Align the positions of the selected controls to the grid":"ReportStringId.UD_Hint_AlignToGrid","Underline the selected text.":"ReportStringId.RibbonXRDesign_FontUnderline_STipContent",Undo:"ReportStringId.UD_TTip_Undo",Redo:"ReportStringId.UD_TTip_Redo","Column To Right":"ReportStringId.Cmd_TableInsertColumnToRight","Run Designer...":"ReportStringId.Verb_RunDesigner",Lefts:"ReportStringId.UD_Capt_AlignLefts","Vertical Spacing":"ReportStringId.UD_Group_VerticalSpacing",Preview:"ReportStringId.RepTabCtl_Preview","Formatting Toolbar":"ReportStringId.UD_Capt_FormattingToolbarName","Delete the control and copy it to the clipboard":"ReportStringId.UD_Hint_Cut","Column To Left":"ReportStringId.Cmd_TableInsertColumnToLeft",Validate:"ReportStringId.ScriptEditor_Validate","Data adapter:":"ReportStringId.NewParameterEditorForm_DataAdapter",Error:"ReportStringId.Msg_ErrorTitle",Column:"ReportStringId.Cmd_TableDeleteColumn",New:"ReportStringId.UD_Capt_NewReport",'Click "Validate" to check scripts.':"ReportStringId.ScriptEditor_ClickValidate","Report StyleSheet files (*.repss)|*.repss|All files (*.*)|*.*":"ReportStringId.SSForm_Msg_FileFilter","Align the control's text to the left":"ReportStringId.UD_Hint_JustifyLeft","Change the zoom level of the document designer.":"ReportStringId.RibbonXRDesign_Zoom_STipContent","Incorrect argument's value":"ReportStringId.Msg_IncorrectArgument","Decrease Horizontal Spacing":"ReportStringId.RibbonXRDesign_HorizSpaceDecrease_Caption","Show/Hide Windows":"ReportStringId.RibbonXRDesign_Windows_STipTitle","Align the centers of the selected controls horizontally.":"ReportStringId.RibbonXRDesign_AlignHorizontalCenters_STipContent","Align To Grid":"ReportStringId.Cmd_AlignToGrid","Remove a formatting rule":"ReportStringId.FRSForm_TTip_RemoveRule","Show only invalid bindings":"ReportStringId.BindingMapperForm_ShowOnlyInvalidBindings","Vertical\r\npitch":"ReportStringId.SR_Vertical_Pitch",Row:"ReportStringId.Cmd_TableDeleteRow","Italicize the text.":"ReportStringId.RibbonXRDesign_FontItalic_STipContent","Format String...":"ReportStringId.Verb_FormatString","Assign Even Style To The XRControl":"ReportStringId.Cmd_AssignEvenStyleToXRControl","Send to Back":"ReportStringId.UD_Capt_OrderSendToBack","Report Source: {0}\r\n":"ReportStringId.XRSubreport_ReportSourceInfo","Select All":"ReportStringId.UD_Capt_SelectAll","You selected more than one formatting rule":"ReportStringId.FRSForm_Msg_MoreThanOneRule","Hide or show the {0} window":"ReportStringId.UD_Hint_ViewDockPanels","The following error occurred when the script in procedure {0} was executed:\r\n {1}":"ReportStringId.Msg_ScriptExecutionError","Make the font italic":"ReportStringId.UD_Hint_FontItalic","The group header or footer you want to delete is not empty. Do you want to delete this band along with its controls?":"ReportStringId.Msg_GroupSortWarning","The 'ReportSource' property of a subreport control cannot be set to a descendant of the current report":"ReportStringId.Msg_InvalidReportSource","Zoom Factor: {0}%":"ReportStringId.UD_Capt_ZoomFactor","Edit Formatting Rules...":"ReportStringId.Cmd_EditFormattingRules","Exact:":"ReportStringId.RibbonXRDesign_ZoomExact_Caption","There are following errors in script(s):\r\n{0}":"ReportStringId.Msg_ScriptError",Structure:"ReportStringId.CatStructure","Export warning: The following controls are overlapped and may be exported to HTML, RTF, XLS, XLSX, CSV and Text incorrectly - {0}.":"ReportStringId.Msg_WarningControlsAreOverlapped",Middles:"ReportStringId.UD_Capt_AlignMiddles","Data member:":"ReportStringId.NewParameterEditorForm_DataMember",Appearances:"ReportStringId.PivotGridForm_ItemAppearances_Caption","Processing...":"ReportStringId.RibbonXRDesign_StatusBar_HtmlProcessing","Select Controls With Formatting Rule":"ReportStringId.Cmd_SelectControlsWithFormattingRule","Group and Sort":"ReportStringId.UD_Title_GroupAndSort",GroupFooter:"ReportStringId.Cmd_GroupFooter","New Report":"ReportStringId.RibbonXRDesign_NewReport_Caption","Adjust the printing settings for the current XRPivotGrid.":"ReportStringId.PivotGridForm_ItemSettings_Description","Align the bottoms of the selected controls.":"ReportStringId.RibbonXRDesign_AlignBottom_STipContent","Align Left":"ReportStringId.UD_TTip_FormatAlignLeft","Align the tops of the selected controls":"ReportStringId.UD_Hint_AlignTops","Move the selected controls to the back":"ReportStringId.UD_Hint_OrderSendToBack","Edit Text":"ReportStringId.Verb_EditText","Bring To Front":"ReportStringId.Cmd_BringToFront","To add a new grouping or sorting level, first provide a data source for the report.":"ReportStringId.Msg_GroupSortNoDataSource","Create a new report using the Wizard":"ReportStringId.UD_Hint_NewWizardReport","Arrange all open documents from left to right":"ReportStringId.UD_Hint_MdiTileVertical"," style":"ReportStringId.SSForm_Msg_StyleNamePreviewPostfix","The specified expression is invalid.":"ReportStringId.Msg_InvalidExpressionEx","No styles are selected":"ReportStringId.SSForm_Msg_NoStyleSelected","Align Bottoms":"ReportStringId.RibbonXRDesign_AlignBottom_Caption",Cascade:"ReportStringId.UD_Capt_MdiCascade","Launch the report wizard to create a new report.":"ReportStringId.RibbonXRDesign_NewReportWizard_STipContent","Create a new blank report.":"ReportStringId.RibbonXRDesign_NewReport_STipContent",Centers:"ReportStringId.UD_Capt_AlignCenters","Detail reports don't support multicolumn.":"ReportStringId.Msg_DontSupportMulticolumn","Justify the control's text":"ReportStringId.UD_Hint_JustifyJustify","Custom function '{0}' not found.":"ReportStringId.Msg_NoCustomFunction",Toolbox:"ReportStringId.RibbonXRDesign_ToolboxControlsPage",Tops:"ReportStringId.UD_Capt_AlignTops","Right align the selected controls.":"ReportStringId.RibbonXRDesign_AlignRight_STipContent","This operation will remove all formatting rules. Do you wish to proceed?":"ReportStringId.Msg_WarningRemoveFormattingRules","(Not set)":"ReportStringId.UD_PropertyGrid_NotSetText",Elements:"ReportStringId.CatElements",'"{0}" has been changed. Do you want to save changes ?':"ReportStringId.UD_Msg_MdiReportChanged","Increase the vertical spacing between the selected controls.":"ReportStringId.RibbonXRDesign_VertSpaceIncrease_STipContent","Save As...":"ReportStringId.UD_Capt_SaveFileAs",Increase:"ReportStringId.UD_Capt_SpacingIncrease",Printing:"ReportStringId.CatPrinting","Are you sure you want to apply these changes?":"ReportStringId.Msg_ApplyChangesQuestion","Open a report":"ReportStringId.UD_Hint_OpenFile","Save Report As":"ReportStringId.RibbonXRDesign_SaveFileAs_STipTitle","Move Down":"ReportStringId.Cmd_BandMoveDown","The XRTableOfContents control can be placed only into Report Header and Report Footer bands.":"ReportStringId.Msg_PlacingXrTocIntoIncorrectContainer","All scripts are valid.":"ReportStringId.ScriptEditor_ScriptsAreValid","Make Same Height":"ReportStringId.UD_TTip_SizeToControlHeight",GroupHeader:"ReportStringId.Cmd_GroupHeader","Remove a style":"ReportStringId.SSForm_TTip_RemoveStyle","Increase the spacing between the selected controls":"ReportStringId.UD_Hint_SpacingIncrease","This operation will remove all calculated fields from all data tables. Do you wish to proceed?":"ReportStringId.Msg_WarningRemoveCalculatedFields",Cut:"ReportStringId.RibbonXRDesign_Cut_STipTitle","Close the current report.":"ReportStringId.RibbonXRDesign_Close_STipContent","Undo the last operation.":"ReportStringId.RibbonXRDesign_Undo_STipContent","Switch to the {0} tab":"ReportStringId.UD_Hint_ViewTabs","Hide or show the {0}":"ReportStringId.UD_Hint_ViewBars","(New)":"ReportStringId.ScriptEditor_NewString","Center Horizontally":"ReportStringId.RibbonXRDesign_CenterHorizontally_STipTitle","Paste the contents of the Clipboard.":"ReportStringId.RibbonXRDesign_Paste_STipContent",Loc:"ReportStringId.DesignerStatus_Location","Modify the XRPivotGrid's layout (sorting settings, field arrangement) and click the Apply button to apply the modifications to the current XRPivotGrid. You can also save the layout to an XML file (this can be loaded and applied to other views at design time and runtime).":"ReportStringId.PivotGridFrame_Layouts_DescriptionText","Load styles from a file":"ReportStringId.SSForm_TTip_LoadStyles","Add a Sort":"ReportStringId.GroupSort_AddSort","Zoom Toolbar":"ReportStringId.UD_Capt_ZoomToolbarName","Preview Row Count":"ReportStringId.STag_Name_PreviewRowCount","Arrange all open documents cascaded, so that they overlap each other":"ReportStringId.UD_Hint_MdiCascade","Move the selected controls to the back.":"ReportStringId.RibbonXRDesign_SendToBack_STipContent","Decrease Vertical Spacing":"ReportStringId.UD_TTip_VertSpaceDecrease","Clear formatting rules":"ReportStringId.FRSForm_TTip_ClearRules","Set the background color of the control":"ReportStringId.UD_Hint_BackGroundColor",Bind:"ReportStringId.Verb_Bind","Save...":"ReportStringId.Verb_Save","Delete...":"ReportStringId.Verb_Delete","Align Middles":"ReportStringId.RibbonXRDesign_AlignHorizontalCenters_Caption","Send To Back":"ReportStringId.Cmd_SendToBack","Save/Export...":"ReportStringId.Verb_Export","Top\r\nmargin":"ReportStringId.SR_Top_Margin","Align the bottoms of the selected controls":"ReportStringId.UD_Hint_AlignBottoms",Properties:"ReportStringId.Cmd_Properties","Increase Horizontal Spacing":"ReportStringId.UD_TTip_HorizSpaceIncrease",Property:"ReportStringId.BCForm_Lbl_Property","Drag-and-drop this item to create a control bound to it;\r\n- or -\r\nDrag this item with the right mouse button or SHIFT\r\nto select a bound control from the popup menu;\r\n- or -\r\nUse the context menu to add a calculated field or parameter.":"ReportStringId.UD_TTip_ItemDescription",Horizontally:"ReportStringId.UD_Capt_CenterInFormHorizontally","Horizontally center the selected controls within a band":"ReportStringId.UD_Hint_CenterInFormHorizontally","Save File":"ReportStringId.UD_TTip_FileSave","Open File":"ReportStringId.UD_TTip_FileOpen","Report Designer":"ReportStringId.RibbonXRDesign_PageText","Edit Styles...":"ReportStringId.Cmd_EditStyles","Save all reports":"ReportStringId.UD_Hint_SaveAll","Value member:":"ReportStringId.NewParameterEditorForm_ValueMember",Bottoms:"ReportStringId.UD_Capt_AlignBottoms","Bring the selected controls to the front.":"ReportStringId.RibbonXRDesign_BringToFront_STipContent","Size the selected controls to the grid":"ReportStringId.UD_Hint_MakeSameSizeSizeToGrid","Zoom out the design surface":"ReportStringId.UD_Hint_ZoomOut","Open/Import...":"ReportStringId.Verb_Import","Insert...":"ReportStringId.Verb_Insert","Tabbed Interface":"ReportStringId.UD_Capt_TabbedInterface",Designer:"ReportStringId.RepTabCtl_Designer","Insert Band":"ReportStringId.Cmd_InsertBand","Can't load the report's layout. The file is possibly corrupted or contains incorrect information.":"ReportStringId.Msg_FileContentCorrupted","Align Right":"ReportStringId.UD_TTip_FormatAlignRight","Arrange all open documents from top to bottom":"ReportStringId.UD_Hint_MdiTileHorizontal",DetailReport:"ReportStringId.Cmd_DetailReport","Vertically center the selected controls within a band":"ReportStringId.UD_Hint_CenterInFormVertically","Align text to the right.":"ReportStringId.RibbonXRDesign_JustifyRight_STipContent","Align Centers":"ReportStringId.RibbonXRDesign_AlignVerticalCenters_STipTitle","Assign Odd Style To The XRControl":"ReportStringId.Cmd_AssignOddStyleToXRControl","The report currently being edited is of a different type than the one you are trying to open.\r\nDo you want to open the selected report anyway?":"ReportStringId.Msg_CreateReportInstance","Left align the selected controls.":"ReportStringId.RibbonXRDesign_AlignLeft_STipContent","Remove Horizontal Spacing":"ReportStringId.RibbonXRDesign_HorizSpaceConcatenate_Caption",Main:"ReportStringId.PivotGridForm_GroupMain_Caption","Text is too large.":"ReportStringId.Msg_LargeText","Align the centers of the selected controls vertically":"ReportStringId.UD_Hint_AlignCenters","Find the text on this page.":"ReportStringId.RibbonXRDesign_HtmlFind_STipContent","Number Across":"ReportStringId.SR_Number_Across","Show or hide the Tool Box, Report Explorer, Field List and Property Grid windows.":"ReportStringId.RibbonXRDesign_Windows_STipContent","Save styles to a file":"ReportStringId.SSForm_TTip_SaveStyles","Align Text Left":"ReportStringId.RibbonXRDesign_JustifyLeft_Caption",TopMargin:"ReportStringId.Cmd_TopMargin","Zoom in to get a close-up view of the report.":"ReportStringId.RibbonXRDesign_ZoomIn_STipContent",CenterVertically:"ReportStringId.UD_TTip_CenterVertically","Align the centers of the selected controls vertically.":"ReportStringId.RibbonXRDesign_AlignVerticalCenters_STipContent","Horizontal pitch":"ReportStringId.SR_Horizontal_Pitch","Create a new blank report":"ReportStringId.UD_Hint_NewReport","Align Tops":"ReportStringId.RibbonXRDesign_AlignTop_Caption","Edit Parameter Bindings...":"ReportStringId.SubreportDesigner_EditParameterBindings","Printing option management for the current XRPivotGrid.":"ReportStringId.PivotGridForm_GroupPrinting_Description","Close the report designer.":"ReportStringId.RibbonXRDesign_Exit_STipContent","\r\n\r\nDataMember: {0}":"ReportStringId.UD_TTip_DataMemberDescription","Align Text Right":"ReportStringId.RibbonXRDesign_JustifyRight_STipTitle",Remove:"ReportStringId.UD_Capt_SpacingRemove","Printing warning: Save the following reports to preview subreports with recent changes applied - {0}.":"ReportStringId.Msg_WarningUnsavedReports","Decrease the spacing between the selected controls":"ReportStringId.UD_Hint_SpacingDecrease",BottomMargin:"ReportStringId.Cmd_BottomMargin","Left align the selected controls":"ReportStringId.UD_Hint_AlignLefts","Use Ctrl with the left mouse button to rotate the shape":"ReportStringId.Msg_ShapeRotationToolTip","Add Style":"ReportStringId.Cmd_AddStyle","Redo the last operation.":"ReportStringId.RibbonXRDesign_Redo_STipContent","New via Wizard...":"ReportStringId.UD_Capt_NewWizardReport","Move back to the previous page.":"ReportStringId.RibbonXRDesign_HtmlBackward_STipContent","Delete unused styles":"ReportStringId.SSForm_TTip_PurgeStyles",Windows:"ReportStringId.RibbonXRDesign_Windows_Caption",XtraReports:"ReportStringId.Msg_Caption","Add a Group":"ReportStringId.GroupSort_AddGroup",Window:"ReportStringId.UD_Group_Window","Horizontally center the selected controls within a band.":"ReportStringId.RibbonXRDesign_CenterHorizontally_STipContent",Edit:"ReportStringId.UD_Group_Edit","Move Up":"ReportStringId.Cmd_BandMoveUp","Row Above":"ReportStringId.Cmd_TableInsertRowAbove","Row Below":"ReportStringId.Cmd_TableInsertRowBelow","Horizontal Spacing":"ReportStringId.UD_Group_HorizontalSpacing","one band per page":"ReportStringId.BandDsg_QuantityPerPage","User Designer":"ReportStringId.CatUserDesigner","The condition must be Boolean!":"ReportStringId.Msg_InvalidCondition","Show fields selector":"ReportStringId.PivotGridFrame_Layouts_SelectorCaption2","Hide fields selector":"ReportStringId.PivotGridFrame_Layouts_SelectorCaption1"," selected styles...":"ReportStringId.SSForm_Msg_SelectedStylesText",PageHeader:"ReportStringId.Cmd_PageHeader","Decrease the horizontal spacing between the selected controls.":"ReportStringId.RibbonXRDesign_HorizSpaceDecrease_STipContent",ReportFooter:"ReportStringId.Cmd_ReportFooter","No more instances of XRTableOfContents can be added to the band.":"ReportStringId.Msg_InvalidXrTocInstanceInBand","There are cyclic bookmarks in the report.":"ReportStringId.Msg_CyclicBookmarks",Components:"ReportStringId.UD_Title_ReportExplorer_Components",Unbound:"ReportStringId.Cmd_InsertUnboundDetailReport","Clear styles":"ReportStringId.SSForm_TTip_ClearStyles","Field List":"ReportStringId.UD_Title_FieldList","Drag-and-drop this item to create a table with its items;\r\n- or -\r\nDrag this item with the right mouse button or SHIFT\r\nto create a 'header' table with field names;\r\n- or -\r\nUse the context menu to add a calculated field or parameter.":"ReportStringId.UD_TTip_TableDescription","Add a style":"ReportStringId.SSForm_TTip_AddStyle","Show/Hide Scripts":"ReportStringId.RibbonXRDesign_Scripts_STipTitle","Zoom in the design surface":"ReportStringId.UD_Hint_ZoomIn",Design:"ReportStringId.CatDesign","Report Source Url: {0}\r\n":"ReportStringId.XRSubreport_ReportSourceUrlInfo","Add Sub-Band":"ReportStringId.Cmd_AddSubBand","Adjust the print appearances of the current XRPivotGrid.":"ReportStringId.PivotGridForm_ItemAppearances_Description","Design in Report Wizard...":"ReportStringId.Verb_ReportWizard","Edit GroupFields...":"ReportStringId.Verb_EditGroupFields","Center text.":"ReportStringId.RibbonXRDesign_JustifyCenter_STipContent","Align the control's text to the center":"ReportStringId.UD_Hint_JustifyCenter","No more instances of XRTableOfContents can be added to the report.":"ReportStringId.Msg_InvalidXrTocInstance","Align the tops of the selected controls.":"ReportStringId.RibbonXRDesign_AlignTop_STipContent","Delete the control":"ReportStringId.UD_Hint_Delete","The Font name can't be empty.":"ReportStringId.Msg_WarningFontNameCantBeEmpty",PageFooter:"ReportStringId.Cmd_PageFooter","File not found.":"ReportStringId.Msg_FileNotFound","The DrillDownControl property of the '{0}' band is not valid.":"ReportStringId.Msg_InvalidDrillDownControl","You selected more than one style":"ReportStringId.SSForm_Msg_MoreThanOneStyle","Change the font size.":"ReportStringId.RibbonXRDesign_FontSize_STipContent","You don't have sufficient permission to execute the scripts in this report.\r\n\r\nDetails:\r\n\r\n{0}":"ReportStringId.Msg_ScriptingPermissionErrorMessage","Data Binding":"ReportStringId.STag_Name_DataBinding","Align the control's text to the right":"ReportStringId.UD_Hint_JustifyRight","Add Field to Area":"ReportStringId.Verb_AddFieldToArea",Tasks:"ReportStringId.STag_Capt_Tasks",ReportHeader:"ReportStringId.Cmd_ReportHeader","Add Formatting Rule":"ReportStringId.Cmd_AddFormattingRule","Refresh this page.":"ReportStringId.RibbonXRDesign_HtmlRefresh_STipContent","Serialization Error":"ReportStringId.Msg_SerializationErrorTitle","Styles Editor":"ReportStringId.SSForm_Caption","Make the selected controls have the same height":"ReportStringId.UD_Hint_MakeSameSizeHeight","Entered code is not correct":"ReportStringId.Msg_ScriptCodeIsNotCorrect","Table of Contents Level Collection Editor":"ReportStringId.XRTableOfContents_LevelCollectionEditor_Title","{0} {1}":"ReportStringId.STag_Capt_Format","Remove All Formatting Rules":"ReportStringId.Cmd_ClearFormattingRules","Load Report Template...":"ReportStringId.Verb_LoadReportTemplate","Delete Unused Styles":"ReportStringId.Cmd_PurgeStyles","Save '{0}'":"ReportStringId.Dlg_SaveFile_Title","Layout Toolbar":"ReportStringId.UD_Capt_LayoutToolbarName","Move forward to the next page.":"ReportStringId.RibbonXRDesign_HtmlForward_STipContent","XRPivotGrid Fields":"ReportStringId.PivotGridFrame_Fields_ColumnsText",Rights:"ReportStringId.UD_Capt_JustifyRight",About:"ReportStringId.Verb_About","The specified expression contains invalid symbols (line {0}, character {1}).":"ReportStringId.Msg_InvalidExpression","to Grid":"ReportStringId.UD_Capt_AlignToGrid","View Code":"ReportStringId.Cmd_ViewCode","Edit and Reorder Bands...":"ReportStringId.Verb_EditBands","one band per report":"ReportStringId.BandDsg_QuantityPerReport","Importing a report layout. Please, wait...":"ReportStringId.Msg_ReportImporting","You must select fields for the report before you continue":"ReportStringId.Wizard_PageChooseFields_Msg","Number\r\nDown":"ReportStringId.SR_Number_Down","Display member:":"ReportStringId.NewParameterEditorForm_DisplayMember","Align the centers of the selected controls horizontally":"ReportStringId.UD_Hint_AlignMiddles","Save Report":"ReportStringId.RibbonXRDesign_SaveFile_STipTitle","Vertically center the selected controls within a band.":"ReportStringId.RibbonXRDesign_CenterVertically_STipContent","Make the horizontal spacing between the selected controls equal.":"ReportStringId.RibbonXRDesign_HorizSpaceMakeEqual_STipContent","Make Same size":"ReportStringId.UD_TTip_SizeToControl","Open Report":"ReportStringId.RibbonXRDesign_OpenFile_STipTitle",Vertically:"ReportStringId.UD_Capt_CenterInFormVertically","Make the selected text bold.":"ReportStringId.RibbonXRDesign_FontBold_STipContent","Save the report":"ReportStringId.UD_Hint_SaveFile","Place controls here to keep them together":"ReportStringId.PanelDesignMsg",Insert:"ReportStringId.Cmd_TableInsert","Delete Unused Formatting Rules":"ReportStringId.Cmd_PurgeFormattingRules","Insert Detail Report":"ReportStringId.Cmd_InsertDetailReport","Status Bar":"ReportStringId.UD_Capt_StatusBarName","Increase the horizontal spacing between the selected controls.":"ReportStringId.RibbonXRDesign_HorizSpaceIncrease_STipContent","Make the selected controls have the same width.":"ReportStringId.RibbonXRDesign_SizeToControlWidth_STipContent","Name: {0}\r\n":"ReportStringId.XRSubreport_NameInfo","Select and drag field to the PivotGrid fields panel to create PivotGrid field.":"ReportStringId.PivotGridFrame_Fields_DescriptionText2","You can add and delete XRPivotGrid fields and modify their settings.":"ReportStringId.PivotGridFrame_Fields_DescriptionText1",Exit:"ReportStringId.UD_Capt_Exit","Bring the selected controls to the front":"ReportStringId.UD_Hint_OrderBringToFront","Printing warning: The following controls are outside the right page margin, and this will cause extra pages to be printed - {0}.":"ReportStringId.Msg_WarningControlsAreOutOfMargin","Select all the controls in the document":"ReportStringId.UD_Hint_SelectAll","Remove the vertical spacing between the selected controls.":"ReportStringId.RibbonXRDesign_VertSpaceConcatenate_STipContent","Make the selected controls have the same height.":"ReportStringId.RibbonXRDesign_SizeToControlHeight_STipContent","Display the home page.":"ReportStringId.RibbonXRDesign_HtmlHome_STipContent","The error log is unrelated to the actual script, because the script has been changed after its last validation.\r\nTo see the actual script errors, click the Validate button again.":"ReportStringId.ScriptEditor_ScriptHasBeenChanged",Align:"ReportStringId.UD_Group_Align","Delete unused formatting rules":"ReportStringId.FRSForm_TTip_PurgeRules",Order:"ReportStringId.UD_Group_Order","Formatting Rule Sheet Editor":"ReportStringId.FRSForm_Caption","Zoom out to see more of the report at a reduced size.":"ReportStringId.RibbonXRDesign_ZoomOut_STipContent","Make Equal":"ReportStringId.UD_Capt_SpacingMakeEqual","Remove the horizontal spacing between the selected controls.":"ReportStringId.RibbonXRDesign_HorizSpaceConcatenate_STipContent","Scripts Errors":"ReportStringId.UD_Title_ErrorList","Size the selected controls to the grid.":"ReportStringId.RibbonXRDesign_SizeToGrid_STipContent","New Report via Wizard":"ReportStringId.RibbonXRDesign_NewReportWizard_STipTitle","Remove All Styles":"ReportStringId.Cmd_ClearStyles","This method call is invalid for the object's current state":"ReportStringId.Msg_InvalidMethodCall",Null:"ReportStringId.XRSubreport_NullReportSourceInfo","Summary...":"ReportStringId.Verb_SummaryWizard","This operation will remove all parameters. Do you wish to proceed?":"ReportStringId.Msg_WarningRemoveParameters","Tile Horizontal":"ReportStringId.UD_Capt_MdiTileHorizontal","Make the font bold":"ReportStringId.UD_Hint_FontBold","Tab Buttons":"ReportStringId.UD_Group_TabButtonsList","Make the selected controls have the same size.":"ReportStringId.RibbonXRDesign_SizeToControl_STipContent","No formatting rules are selected":"ReportStringId.FRSForm_Msg_NoRuleSelected","Align text to the left.":"ReportStringId.RibbonXRDesign_JustifyLeft_STipContent",Decrease:"ReportStringId.UD_Capt_SpacingDecrease","New Blank Report":"ReportStringId.RibbonXRDesign_NewReport_STipTitle","Tool Box":"ReportStringId.UD_Title_ToolBox","Property Grid":"ReportStringId.UD_Title_PropertyGrid","Invalid file format":"ReportStringId.SSForm_Msg_InvalidFileFormat","Report Files (*{0})|*{1}|All Files (*.*)|*.*":"ReportStringId.UD_SaveFileDialog_DialogFilter","Save All Reports":"ReportStringId.RibbonXRDesign_SaveAll_STipTitle","Not enough memory to paint. Zoom level will be reset.":"ReportStringId.Msg_NotEnoughMemoryToPaint",Toolbars:"ReportStringId.UD_Group_ToolbarsList","Field Area for a New Field":"ReportStringId.STag_Name_FieldArea","Incorrect band type":"ReportStringId.Msg_IncorrectBandType","Remove the spacing between the selected controls":"ReportStringId.UD_Hint_SpacingRemove","Multi-Column Layout":"ReportStringId.STag_Name_ColumnLayout","Make the spacing between the selected controls equal":"ReportStringId.UD_Hint_SpacingMakeEqual","Fields Section Only":"PivotGridStringId.CustomizationFormTopPanelOnly","Grand Total":"PivotGridStringId.GrandTotal","[Bottom Panel Only 2 by 2 Layout]":"PivotGridStringId.Alt_BottomPanelOnly2by2Layout","[Expand]":"PivotGridStringId.Alt_Expand","[Top Panel Only Layout]":"PivotGridStringId.Alt_TopPanelOnlyLayout","[Column Area Headers]":"PivotGridStringId.Alt_ColumnAreaHeaders","(Show Blanks)":"PivotGridStringId.FilterShowBlanks",Hide:"PivotGridStringId.PopupMenuHideField","Fields Section and Areas Section Side-By-Side":"PivotGridStringId.CustomizationFormStackedSideBySide","(Ascending)":"PivotGridStringId.Alt_SortedAscending","Error retrieving drilldown dataset":"PivotGridStringId.DrillDownException",Good:"PivotGridStringId.StatusGood",Bad:"PivotGridStringId.StatusBad","Collapse All":"PivotGridStringId.PopupMenuCollapseAll",Collapse:"PivotGridStringId.PopupMenuCollapse","Row field:":"PivotGridStringId.SummaryFilterRowField","Drop Column Fields Here":"PivotGridStringId.ColumnHeadersCustomization",Headers:"PivotGridStringId.PrintDesignerCategoryHeaders","An error occurs in the Prefilter criteria. Please detect invalid property captions inside the criteria operands and correct or remove them.":"PivotGridStringId.PrefilterInvalidCriteria","Drop Data Items Here":"PivotGridStringId.DataHeadersCustomization",
"Add To":"PivotGridStringId.CustomizationFormAddTo","Move to Left":"PivotGridStringId.PopupMenuMovetoLeft","Move to Right":"PivotGridStringId.PopupMenuMovetoRight","Row Headers":"PivotGridStringId.PrintDesignerRowHeaders","(Descending)":"PivotGridStringId.Alt_SortedDescending","{0} StdDev":"PivotGridStringId.TotalFormatStdDev","Hidden Fields":"PivotGridStringId.CustomizationFormHiddenFields","Drag Items to the PivotGrid":"PivotGridStringId.CustomizationFormText","Drag fields between areas below:":"PivotGridStringId.CustomizationFormHint","Clear Rules from All Measures":"PivotGridStringId.PopupMenuFormatRulesClearAllRules","Expand All":"PivotGridStringId.PopupMenuExpandAll","[Filter Area Headers]":"PivotGridStringId.Alt_FilterAreaHeaders","Vertical Lines":"PivotGridStringId.PrintDesignerVerticalLines",Measure:"PivotGridStringId.PopupMenuFormatRulesMeasure","Show Details command cannot be executed when multiple items are selected in a report filter field. Select a single item for each field in the report filter area before performing a drillthrough.":"PivotGridStringId.OLAPDrillDownFilterException","PivotGrid Prefilter":"PivotGridStringId.PrefilterFormCaption",Total:"PivotGridStringId.Total","[Filtered]":"PivotGridStringId.Alt_FilterButtonActive","[Hidden Field's Headers]":"PivotGridStringId.Alt_FieldListHeaders","[Stacked Side By Side Layout]":"PivotGridStringId.Alt_StackedSideBySideLayout","[Filter]":"PivotGridStringId.Alt_FilterButton","[Bottom Panel Only 1 by 4 Layout]":"PivotGridStringId.Alt_BottomPanelOnly1by4Layout","Max Visible Count":"PivotGridStringId.SummaryFilterMaxVisibleCount","{0} Count":"PivotGridStringId.TotalFormatCount","{0} Custom":"PivotGridStringId.TotalFormatCustom","Print Designer":"PivotGridStringId.PrintDesigner","Expression Editor...":"PivotGridStringId.PopupMenuShowExpression",Var:"PivotGridStringId.SummaryVar","Reload Data":"PivotGridStringId.PopupMenuRefreshData","Invert Filter":"PivotGridStringId.FilterInvert","Q{0}":"PivotGridStringId.DateTimeQuarterFormat",Cancel:"PivotGridStringId.FilterCancel",Hidden:"PivotGridStringId.SummaryFilterLegendHidden","Going Down":"PivotGridStringId.TrendGoingDown",Expand:"PivotGridStringId.PopupMenuExpand","PivotGrid Field List":"PivotGridStringId.CustomizationFormCaption","In order to use the PivotGrid OLAP functionality, you should have a MS OLAP OleDb provider installed on your system.\r\nYou can download it here:":"PivotGridStringId.OLAPNoOleDbProvidersMessage","Show values from":"PivotGridStringId.SummaryFilterRangeFrom","(Any)":"PivotGridStringId.PopupMenuFormatRulesAnyField","(Blank)":"PivotGridStringId.FilterBlank","[Data Area Headers]":"PivotGridStringId.Alt_DataAreaHeaders","[Resize]":"PivotGridStringId.Alt_FilterWindowSizeGrip",KPIs:"PivotGridStringId.OLAPKPIsCaption",StdDevp:"PivotGridStringId.SummaryStdDevp","Apply to specific level":"PivotGridStringId.SummaryFilterApplyToSpecificLevel","Edit Prefilter":"PivotGridStringId.EditPrefilter","Headers On Every Page":"PivotGridStringId.PrintDesignerHeadersOnEveryPage","Horizontal Lines":"PivotGridStringId.PrintDesignerHorizontalLines","Clear Sorting":"PivotGridStringId.PopupMenuClearSorting","Show Field List":"PivotGridStringId.PopupMenuShowFieldList",OK:"PivotGridStringId.FilterOk","[Layout Button]":"PivotGridStringId.Alt_LayoutButton","[Row Area Headers]":"PivotGridStringId.Alt_RowAreaHeaders","[Stacked Default Layout]":"PivotGridStringId.Alt_StackedDefaultLayout",Varp:"PivotGridStringId.SummaryVarp","No Change":"PivotGridStringId.TrendNoChange","{0} Varp":"PivotGridStringId.TotalFormatVarp","Format Rules":"PivotGridStringId.PopupMenuFormatRules",to:"PivotGridStringId.SummaryFilterRangeTo","Remove All Sorting":"PivotGridStringId.PopupMenuRemoveAllSortByColumn","Column Headers":"PivotGridStringId.PrintDesignerColumnHeaders","Field Values":"PivotGridStringId.PrintDesignerCategoryFieldValues","Apply only to specific level":"PivotGridStringId.PopupMenuFormatRulesIntersectionOnly","Drag a field here to customize layout":"PivotGridStringId.CustomizationFormListBoxText",StdDev:"PivotGridStringId.SummaryStdDev","This command cannot be used on multiple selections.":"PivotGridStringId.CannotCopyMultipleSelections","Clear Rules from This Intersection":"PivotGridStringId.PopupMenuFormatRulesClearIntersectionRules",'Sort "{0}" by This Row':"PivotGridStringId.PopupMenuSortFieldByRow","Going Up":"PivotGridStringId.TrendGoingUp","Defer Layout Update":"PivotGridStringId.CustomizationFormDeferLayoutUpdate","Choose fields to add to report:":"PivotGridStringId.CustomizationFormAvailableFields",Search:"PivotGridStringId.SearchBoxText","Unused Filter Fields":"PivotGridStringId.PrintDesignerUnusedFilterFields","Sort A-Z":"PivotGridStringId.PopupMenuSortAscending","Sort Z-A":"PivotGridStringId.PopupMenuSortDescending","Drop Row Fields Here":"PivotGridStringId.RowHeadersCustomization",Measures:"PivotGridStringId.OLAPMeasuresCaption","{0} Average":"PivotGridStringId.TotalFormatAverage","Column field:":"PivotGridStringId.SummaryFilterColumnField","Drop Filter Fields Here":"PivotGridStringId.FilterHeadersCustomization",'Sort "{0}" by This Column':"PivotGridStringId.PopupMenuSortFieldByColumn","(invalid property)":"PivotGridStringId.PrefilterInvalidProperty","Show Prefilter":"PivotGridStringId.PopupMenuShowPrefilter","{0} Total":"PivotGridStringId.TotalFormat","{0} StdDevp":"PivotGridStringId.TotalFormatStdDevp","Move to Beginning":"PivotGridStringId.PopupMenuMovetoBeginning","Hide Field List":"PivotGridStringId.PopupMenuHideFieldList","Filter Headers":"PivotGridStringId.PrintDesignerFilterHeaders","KPI Graphics":"PivotGridStringId.PopupMenuKPIGraphic","Fields Section and Areas Section Stacked":"PivotGridStringId.CustomizationFormStackedDefault","Customization Form Layout":"PivotGridStringId.CustomizationFormLayoutButtonTooltip","(Show All)":"PivotGridStringId.FilterShowAll","Hide Prefilter":"PivotGridStringId.PopupMenuHidePrefilter","Clear Rules from This Measure":"PivotGridStringId.PopupMenuFormatRulesClearMeasureRules",Update:"PivotGridStringId.CustomizationFormUpdate","Move to End":"PivotGridStringId.PopupMenuMovetoEnd","[Collapse]":"PivotGridStringId.Alt_Collapse","Data Headers":"PivotGridStringId.PrintDesignerDataHeaders","Areas Section Only (2 by 2)":"PivotGridStringId.CustomizationFormBottomPanelOnly2by2","Areas Section Only (1 by 4)":"PivotGridStringId.CustomizationFormBottomPanelOnly1by4","(Grand Total)":"PivotGridStringId.PopupMenuFormatRulesGrandTotal",Neutral:"PivotGridStringId.StatusNeutral","{0} Var":"PivotGridStringId.TotalFormatVar","{0} Sum":"PivotGridStringId.TotalFormatSum","{0} Max":"PivotGridStringId.TotalFormatMax","{0} Min":"PivotGridStringId.TotalFormatMin","The palette is default and then can't be modified.":"ChartStringId.MsgModifyDefaultPaletteError","Export the current document in one of the available formats, and save it to the file on a disk.":"ChartStringId.CmdExportPlaceHolderDescription",Spline:"ChartStringId.SvnSpline","The distance between the panes should be greater than or equal to 0.":"ChartStringId.MsgIncorrectPaneDistance","The chart height must be set in pixels.":"ChartStringId.MsgWebInvalidHeightUnit","Compare values across categories and across series and display a pyramid chart on three axes.":"ChartStringId.CmdCreatePyramidManhattanBarChartDescription","Relative Position":"ChartStringId.AnnotationRelativePosition","Chart Control":"ChartStringId.ChartControlDockTarget",NarrowVertical:"ChartStringId.WizHatchNarrowVertical","The indent should be greater than or equal to 0.":"ChartStringId.MsgIncorrectBarSeriesLabelIndent","Show to what extent values have changed for different points in the same series.":"ChartStringId.CmdCreateStepLineChartDescription","\"Can't set the series point, because it should belong to a series, and the series should be contained in the chart's collection.":"ChartStringId.MsgIncorrectAnchorPointSeriesPoint",SUM:"ChartStringId.FunctionNameSum",MAX:"ChartStringId.FunctionNameMax",MIN:"ChartStringId.FunctionNameMin","Chart Type":"ChartStringId.WizChartTypePageName","Populate the chart's datasource with data.":"ChartStringId.VerbPopulateDescription","100% Stacked Line in 3-D":"ChartStringId.CmdCreateFullStackedLine3DChartMenuCaption","AxisValue can't be set to null for the ConstantLine object.":"ChartStringId.MsgIncorrectConstantLineAxisValue","The tickmark length should be greater than 0.":"ChartStringId.MsgIncorrectTickmarkLength","Indicators changed":"ChartStringId.TrnIndicatorsChanged","Combine the advantages of both the 100% Stacked Column and Clustered Column chart types, so that you can stack different columns, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateSideBySideFullStackedBarChartDescription",Bar:"ChartStringId.SvnSideBySideBar","Polar Line":"ChartStringId.CmdCreatePolarLineChartMenuCaption","Annotations...":"ChartStringId.VerbAnnotations","Pastel Kit":"ChartStringId.AppPastelKit","The pane's size in pixels should be greater than or equal to 0.":"ChartStringId.MsgInvalidPaneSizeInPixels",Chameleon:"ChartStringId.AppChameleon","Print Preview":"ChartStringId.CmdPrintPreviewMenuCaption","Image Annotation ":"ChartStringId.ImageAnnotationPrefix",Pie:"ChartStringId.CmdCreatePieChartMenuCaption","Use Ctrl with the center (wheel) mouse button\r\nto scroll the chart.":"ChartStringId.Msg3DScrollingToolTip","Use Ctrl with the left mouse button\r\nto resize the annotation.":"ChartStringId.MsgAnnotationResizingToolTip",Populate:"ChartStringId.VerbPopulate","The PivotGridDataSourceOptions.{0} property is available only if the chart's data source is a PivotGrid.":"ChartStringId.MsgPivotGridDataSourceOptionsNotSupprotedProperty","The doughnut hole percentage should be greater than or equal to 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectDoughnutHolePercent","There are no visible series to represent in a chart.\r\nTry to add new series, or make sure that\r\nat least one of them is visible.":"ChartStringId.MsgEmptyChart",DottedDiamond:"ChartStringId.WizHatchDottedDiamond","Use Ctrl with the left mouse button\r\nto rotate the chart.":"ChartStringId.Msg3DRotationToolTip","Primary AxisX":"ChartStringId.PrimaryAxisXName","Customize the view-type-specific options of a series.\r\nNote that you may select a series by clicking it in the chart preview.":"ChartStringId.WizSeriesViewPageDescription","Primary AxisY":"ChartStringId.PrimaryAxisYName","Show trends for several series and compare their values for the same points arguments on a circular diagram on the basis of angles.":"ChartStringId.CmdCreatePolarLineChartDescription","100% Stacked Line":"ChartStringId.CmdCreateFullStackedLineChartMenuCaption","Side By Side Gantt":"ChartStringId.SvnSideBySideGantt","Bar 3D":"ChartStringId.SvnSideBySideBar3D","100% Stacked Column":"ChartStringId.CmdCreateFullStackedBarChartMenuCaption","The ZOrder should be greater than or equal to 0 and less than 100.":"ChartStringId.MsgIncorrectAnnotationZOrder","This page was already unregistered.":"ChartStringId.MsgUnregisterPageError","Nature Colors":"ChartStringId.AppNatureColors",FromCenterVertical:"ChartStringId.WizGradientFromCenterVertical","The data snapshot operation is complete. All series data now statically persist in the chart.\r\nThis also means that now the chart is in unbound mode.\r\n\r\nNOTE: You can undo this operation by pressing Ctrl+Z in the Visual Studio designer.":"ChartStringId.MsgDataSnapshot","3-D Cylinder":"ChartStringId.CmdCreateCylinderManhattanBarChartMenuCaption","Side By Side Bar 3D Stacked":"ChartStringId.SvnSideBySideStackedBar3D","The zoom percent should be greater than or equal to 100.":"ChartStringId.MsgIncorrectMaxZoomPercent","The {0} property  can't be set to non-integer for the date-time scale.":"ChartStringId.MsgIncorrectDateTimeRangeControlClientSpacing","Strips changed":"ChartStringId.TrnStripsChanged","Use it when it's necessary to show stand-alone data points on the same chart plot.":"ChartStringId.CmdCreatePointChartDescription",SmallConfetti:"ChartStringId.WizHatchSmallConfetti","The area width should be greater than 0.":"ChartStringId.MsgIncorrectAreaWidth",Point:"ChartStringId.CmdCreatePointChartMenuCaption","Range Area in 3-D":"ChartStringId.CmdCreateRangeArea3DChartMenuCaption",TopToBottom:"ChartStringId.WizSeriesLabelTextOrientationTopToBottom","The chart doesn't contain an appearance with the {0} name.":"ChartStringId.MsgIncorrectAppearanceName","Behave similar to 100% Stacked Area Chart in 3D, but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateFullStackedSplineArea3DChartDescription",WideUpwardDiagonal:"ChartStringId.WizHatchWideUpwardDiagonal","Compare the contribution of each value to a total across categories.":"ChartStringId.CmdCreatePyramidStackedBar3DChartDescription","Export to PDF":"ChartStringId.CmdExportToPDFMenuCaption","Auto-created Series":"ChartStringId.AutocreatedSeriesName",NarrowHorizontal:"ChartStringId.WizHatchNarrowHorizontal","Axis can't be set to null for the AxisYCoordinate object.":"ChartStringId.MsgNullAxisYCoordinateAxis","The {0} is abstract, and so an object of this type can't be instantiated and added as a wizard page.":"ChartStringId.MsgWizardAbsractPageType","Clear Data Source":"ChartStringId.VerbClearDataSource","Area 3D":"ChartStringId.SvnArea3D","Side By Side Bar 3D Stacked 100%":"ChartStringId.SvnSideBySideFullStackedBar3D","The chart doesn't contain a palette with the {0} name.":"ChartStringId.MsgPaletteNotFound","3-D Column":"ChartStringId.CmdCreateManhattanBarChartMenuCaption",Other:"ChartStringId.RibbonOtherPageCaption","Export to RTF":"ChartStringId.CmdExportToRTFMenuCaption","The legend horizontal indent should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectLegendHorizontalIndent","Stacked Line":"ChartStringId.CmdCreateStackedLineChartMenuCaption","Open the Annotations Collection Editor.":"ChartStringId.VerbAnnotationsDescription","Microsoft Excel 2007 Work Book":"ChartStringId.CmdExportToXLSXDescription","The weight of the pane should be greater than 0.":"ChartStringId.MsgIncorrectPaneWeight","Secondary axis X deleted":"ChartStringId.TrnSecondryAxisXDeleted","Run the Chart Wizard, which allows the properties of the chart to be edited.":"ChartStringId.VerbWizardDescription","The maximum width of the label should be greater than or equal to 0.":"ChartStringId.MsgIncorrectLabelMaxWidth","Auto Size":"ChartStringId.WizChartImageSizeModeAutoSize","Display a wide area at the top, indicating the total points' value, while other areas are proportionally smaller.\r\n\r\nUse it when it is necessary to represent stages in a sales process, show the amount of potential revenue for each stage, as well as identify potential problem areas in an organization's sales processes.\r\n    ":"ChartStringId.CmdCreateFunnelChartDescription","Manhattan Bar":"ChartStringId.SvnManhattanBar","It is impossible to set a custom range, if the DateTimeScaleMode is not Manual.":"ChartStringId.MsgUnsupportedManualRangeForAutomaticDateTimeScaleMode","Step Line in 3-D":"ChartStringId.CmdCreateStepLine3DChartMenuCaption","The length of the minor tickmark should be greater than 0.":"ChartStringId.MsgIncorrectTickmarkMinorLength","MaxValueInternal can't be set to NaN and Infinity values.":"ChartStringId.MsgIncorrectAxisRangeMaxValueInternal",Funnel:"ChartStringId.SvnFunnel","Compare values across categories and display clustered columns in 3-D format.":"ChartStringId.CmdCreateBar3DChartDescription","The line length should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectSeriesLabelLineLength","You can't manually change the series point's value, because a chart is bound to data.":"ChartStringId.MsgDenyChangeSeriesPointValue","Scatter Radar Line":"ChartStringId.SvnScatterRadarLine","2-D Area":"ChartStringId.CmdArea2DGroupPlaceHolderMenuCaption","Compare values across categories and across series and display a cone chart on three axes.":"ChartStringId.CmdCreateConeManhattanBarChartDescription","Open Value":"ChartStringId.OpenValuePatternDescription",BottomRightToTopLeft:"ChartStringId.WizGradientBottomRightToTopLeft","Chart titles changed":"ChartStringId.TrnChartTitlesChanged","Red Orange":"ChartStringId.PltRedOrange","Clustered Pyramid":"ChartStringId.CmdCreatePyramidBar3DChartMenuCaption","Size in pixels should be greater than or equal to -1 and less than 50.":"ChartStringId.MsgInvalidSizeInPixels","The {0} SeriesView doesn't exist.":"ChartStringId.MsgSeriesViewDoesNotExist","(invisible)":"ChartStringId.InvisibleSeriesView","Line 3D":"ChartStringId.SvnLine3D","Scatter Polar Line":"ChartStringId.CmdCreateScatterPolarLineChartMenuCaption","The min limit of the strip should be less than the max limit.":"ChartStringId.MsgIncorrectStripMinLimit","the argument scale type":"ChartStringId.MsgIncompatibleByArgumentScaleType","Indicator deleted":"ChartStringId.TrnIndicatorDeleted","Nested Doughnut":"ChartStringId.CmdCreateNestedDoughnutChartMenuCaption","Tagged Image File Format":"ChartStringId.CmdExportToTIFFDescription","Dark Flat":"ChartStringId.AppDarkFlat","Blue Warm":"ChartStringId.PltBlueWarm","Editing isn't allowed!":"ChartStringId.MsgPaletteEditingIsntAllowed",Bubble:"ChartStringId.SvnBubble","Stacked Area in 3-D":"ChartStringId.CmdCreateStackedArea3DChartMenuCaption","Insert a point, funnel, financial, radar, polar, range, or gantt chart.":"ChartStringId.CmdCreateOtherSeriesTypesChartPlaceHolderDescription","Palettes changed":"ChartStringId.TrnPalettesChanged","Export to HTML":"ChartStringId.CmdExportToHTMLMenuCaption","The task link's minimum indent should be greater than or equal to 0.":"ChartStringId.MsgIncorrectTaskLinkMinIndent","The annotation height should be greater than 0.":"ChartStringId.MsgIncorrectAnnotationHeight","Display data as a line on a circular grid that has multiple axis along which data can be plotted. The series points are drawn in the circular grid in the same order that they have in the series point collection.":"ChartStringId.CmdCreateScatterRadarLineChartDescription","TopNOptions can't be enabled for this series, because either its ValueScaleType is not Numerical or its data points have more than 1 value.":"ChartStringId.MsgUnsupportedTopNOptions","The GridAlignment property must be greater than or equal to the current measure unit.":"ChartStringId.MsgIncorrectDateTimeGridAlignment","Right-top":"ChartStringId.WizDockCornerRightTop",DashedUpwardDiagonal:"ChartStringId.WizHatchDashedUpwardDiagonal","The logarithmic base should be greater than 1.":"ChartStringId.MsgInvalidLogarithmicBase","The fixed series distance should be greater than or equal to 0.":"ChartStringId.MsgIncorrectSeriesDistanceFixed",JustifyAroundPoint:"ChartStringId.WizResolveOverlappingModeJustifyAroundPoint",LightVertical:"ChartStringId.WizHatchLightVertical","Show variation in stock prices over the course of a day. The Open and Close prices are represented by left and right lines on each point, and the Low and High prices are represented by the bottom and top values of the vertical line which is shown at each point.":"ChartStringId.CmdCreateStockChartDescription","Bitmap Picture":"ChartStringId.CmdExportToBMPDescription",numeric:"ChartStringId.ScaleTypeNumerical","Bar Stacked 100%":"ChartStringId.SvnFullStackedBar","3-D Area":"ChartStringId.CmdArea3DGroupPlaceHolderMenuCaption","Annotation deleted":"ChartStringId.TrnAnnotationDeleted",Foundry:"ChartStringId.PltFoundry",TopRightToBottomLeft:"ChartStringId.WizGradientTopRightToBottomLeft","Chart wizard settings applied":"ChartStringId.TrnChartWizard","Use Ctrl with the left mouse button\r\nto move the annotation.":"ChartStringId.MsgAnnotationMovingToolTip",DashedDownwardDiagonal:"ChartStringId.WizHatchDashedDownwardDiagonal","100% Stacked Cylinder":"ChartStringId.CmdCreateCylinderFullStackedBar3DChartMenuCaption","Click the ellipsis button...":"ChartStringId.WizSpecifyDataFilters","The series view's pane can't be set to null.":"ChartStringId.MsgNullSeriesViewPane",Gantt:"ChartStringId.CmdGanttGroupPlaceHolderMenuCaption",JustifyAllAroundPoints:"ChartStringId.WizResolveOverlappingModeJustifyAllAroundPoints","AxisValue can't be set to null for the AxisCoordinate object.":"ChartStringId.MsgIncorrectAxisCoordinateAxisValue","The specified pane either doesn't belong to a chart, or doesn't show the current axis whose visibility should be changed.":"ChartStringId.MsgInvalidPane","Series ":"ChartStringId.SeriesPrefix",'The datasource doesn\'t contain a datamember with the "{0}" name.':"ChartStringId.MsgIncorrectDataMember","Terracotta Pie":"ChartStringId.PltTerracottaPie",Marquee:"ChartStringId.PltMarquee","Image Annotation":"ChartStringId.ImageAnnotation","DevExpress Scheduler holidays files (*.xml)|*.xml|Microsoft Office Outlook holidays files (*.hol)|*.hol|Text files (*.txt)|*.txt|All files (*.*)|*.*":"ChartStringId.HolidaysImportFilter","Combine the advantages of both the 100% Stacked Column and Clustered Column chart types in 3-D format, so that you can stack different columns, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateSideBySideFullStackedBar3DChartDescription","Display data as filled areas on a diagram, with each data point displayed as a peak or hollow in the area. Use it when you need to show trends for several series on the same diagram, and also show the relationship of the parts to the whole.":"ChartStringId.CmdCreateArea3DChartDescription","Insert an area chart.\r\n\r\nArea charts emphasize differences between several sets of data over a period of time.\r\n    ":"ChartStringId.CmdCreateAreaChartDescription","Export to Image":"ChartStringId.CmdExportToImagePlaceHolderMenuCaption","Behave similar to Stacked Area Chart but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateStackedSplineAreaChartDescription","Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All files(*.*)|*.*":"ChartStringId.WizBackImageFileNameFilter","Value must be equal or greater then 0.":"ChartStringId.MsgValueMustBeGreateThenZero","Compare values across categories and across series and display a cylinder chart on three axes.":"ChartStringId.CmdCreateCylinderManhattanBarChartDescription","The chart width must be set in pixels.":"ChartStringId.MsgWebInvalidWidthUnit","The current measure unit should be greater than 0.":"ChartStringId.MsgIncorrectNumericMeasureUnit","Display series as filled areas on a diagram, with two data points that define minimum and maximum limits.\r\n\r\nUse it when you need to accentuate the delta between start and end values.\r\n    ":"ChartStringId.CmdCreateRangeAreaChartDescription","Combine the advantages of both the Stacked Column and Clustered Column chart types in 3-D format, so that you can stack different columns, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateSideBySideStackedBar3DChartDescription","Can't set the AxisXCoordinate's axis, because the specified axis isn't primary and isn't contained in the diagram's collection of secondary X-axes.":"ChartStringId.MsgIncorrectAxisXCoordinateAxis","Stacked Column in 3-D":"ChartStringId.CmdCreateStackedBar3DChartMenuCaption",LightUpwardDiagonal:"ChartStringId.WizHatchLightUpwardDiagonal","Free Position":"ChartStringId.CrosshairLabelFreePosition","Red Violet":"ChartStringId.PltRedViolet","Constant line deleted":"ChartStringId.TrnConstantLineDeleted","Behave similar to 100% Stacked Area, but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateFullStackedSplineAreaChartDescription","The indent value should be greater than or equal to 0.":"ChartStringId.MsgIncorrectIndentFromMarker","The connector length should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectRelativePositionConnectorLength","Load a chart from an XML file.":"ChartStringId.VerbLoadLayoutDescription",LightDownwardDiagonal:"ChartStringId.WizHatchLightDownwardDiagonal","Annotations changed":"ChartStringId.TrnAnnotationsChanged","See basic information on XtraCharts.":"ChartStringId.VerbAboutDescription","Behave similar to Area Chart but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateSplineAreaChartDescription","Compare the contribution of each value to a total across categories by using horizontal rectangles.":"ChartStringId.CmdCreateRotatedStackedBarChartDescription",Red:"ChartStringId.PltRed","The{0} chart{1}.":"ChartStringId.AlternateTextPlaceholder","All Colors":"ChartStringId.StyleAllColors",Percent70:"ChartStringId.WizHatchPercent70",Percent75:"ChartStringId.WizHatchPercent75",Percent60:"ChartStringId.WizHatchPercent60",Percent50:"ChartStringId.WizHatchPercent50",Percent40:"ChartStringId.WizHatchPercent40",Percent30:"ChartStringId.WizHatchPercent30",Percent25:"ChartStringId.WizHatchPercent25",Percent20:"ChartStringId.WizHatchPercent20",Percent10:"ChartStringId.WizHatchPercent10",Percent05:"ChartStringId.WizHatchPercent05",Percent90:"ChartStringId.WizHatchPercent90",Percent80:"ChartStringId.WizHatchPercent80","Add titles to your chart, and customize their options.":"ChartStringId.WizChartTitlesPageDescription","Spline Area 3D":"ChartStringId.SvnSpline3DArea","Compare values across categories.":"ChartStringId.CmdCreateConeBar3DChartDescription","Palettes...":"ChartStringId.VerbEditPalettes","The GridAlignment property can't be modified in the automatic date-time scale mode.":"ChartStringId.MsgIncorrectDateTimeGridAlignmentPropertyUsing","Compare the percentage each value contributes to a total across categories and display 100% stacked columns in 3-D format.":"ChartStringId.CmdCreateFullStackedBar3DChartDescription",JPEG:"ChartStringId.CmdExportToJPEGMenuCaption","Rich Text Format":"ChartStringId.CmdExportToRTFDescription","Show points from two or more different series on the same circular diagram on the basis of angles.":"ChartStringId.CmdCreatePolarPointChartDescription","Side By Side Bar Stacked":"ChartStringId.SvnSideBySideStackedBar","Anchor Point can't be null.":"ChartStringId.MsgIncorrectAnchorPoint","Northern Lights":"ChartStringId.PltNorthernLights","The PolarAxisX doesn't support logarithmic mode.":"ChartStringId.MsgPolarAxisXLogarithmic","Strip ":"ChartStringId.StripPrefix","A pane's name can't be empty.":"ChartStringId.MsgEmptyPaneName","Select a placeholder to see the preview":"ChartStringId.PatternEditorPreviewCaption","MaxValue can't be set to null.":"ChartStringId.MsgIncorrectAxisRangeMaxValue","The marker size should be greater than 1.":"ChartStringId.MsgIncorrectMarkerSize","Reset legend point options":"ChartStringId.VerbResetLegendPointOptions","The exploded distance percentage value should be greater than 0.":"ChartStringId.MsgIncorrectExplodedDistancePercentage","AxisValue can't be set to null for the CustomAxisLabel object.":"ChartStringId.MsgIncorrectCustomAxisLabelAxisValue","This view can't represent negative\r\nvalues. All values must be either greater\r\nthan or equal to zero.":"ChartStringId.PieIncorrectValuesText","Relation's ChildPointID must be unique.":"ChartStringId.MsgRelationChildPointIDNotUnique","Select a printer, number of copies and other printing options before printing.":"ChartStringId.CmdPrintDescription","Color {0}":"ChartStringId.StyleColorNumber","The scroll bar thickness should be greater than or equal to 3 and less than or equal to 25.":"ChartStringId.MsgIncorrectScrollBarThickness","A secondary axis name can't be empty.":"ChartStringId.MsgEmptySecondaryAxisName","Combine the advantages of both the Stacked Cone and Clustered Cone chart types, so that you can stack different cones, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateConeSideBySideStackedBar3DChartDescription","Combine the advantages of both the Stacked Pyramid and Clustered Pyramid chart types, so that you can stack different pyramids, and combine them into groups across the same axis value.":"ChartStringId.CmdCreatePyramidSideBySideStackedBar3DChartDescription","ImageUrl property can be used for the WebChartControl only. Please, use the Image property instead.":"ChartStringId.MsgIncorrectUseImageUrlProperty","The vertical scroll percent should be greater than or equal to -{0} and less than or equal to {0}.":"ChartStringId.MsgIncorrectVerticalScrollPercent",FromCenterHorizontal:"ChartStringId.WizGradientFromCenterHorizontal","(incompatible)":"ChartStringId.IncompatibleSeriesView","Since the current Pie series view displays the series created using a series template, the specified series point can't be removed from the collection of exploded points. You need to use another Explode Mode instead.":"ChartStringId.MsgInvalidExplodedModeRemove","Chart Tools":"ChartStringId.RibbonPageCategoryCaption","LegendPointOptions reset":"ChartStringId.TrnLegendPointOptionsReset","Run Chart Wizard...":"ChartStringId.CmdRunWizardMenuCaption","Automatic DateTimeScaleMode can't work together with zooming and scrolling.":"ChartStringId.MsgUnsupportedDateTimeScaleModeWithScrollingZooming","Double-click to edit...":"ChartStringId.MsgPaletteDoubleClickToEdit","The thickness of the minor tickmark should be greater than 0.":"ChartStringId.MsgIncorrectTickmarkMinorThickness","Load\r\nTemplate":"ChartStringId.CmdLoadTemplateMenuCaption","Black and White":"ChartStringId.PltBlackAndWhite",Add:"ChartStringId.MenuItemAdd",LargeCheckerBoard:"ChartStringId.WizHatchLargeCheckerBoard","Stacked Column":"ChartStringId.CmdCreateStackedBarChartMenuCaption","It's impossible to swap autocreated and fixed series.":"ChartStringId.MsgCantSwapSeries","Series deleted":"ChartStringId.TrnSeriesDeleted","Clustered Stacked Cone":"ChartStringId.CmdCreateConeSideBySideStackedBar3DChartMenuCaption","Insert a bar chart.\r\n\r\nBar charts are the best chart type for comparing multiple values.\r\n    ":"ChartStringId.CmdCreateRotatedBarChartDescription","3-D Line":"ChartStringId.CmdCreateLine3DChartMenuCaption",Opulent:"ChartStringId.PltOpulent","Create a template with the same setting as the current chart.":"ChartStringId.CmdSaveAsTemplateDescription","ExplodedPointsFilters changed":"ChartStringId.TrnExplodedPointsFilters","Summarize and display categories of data and compare amounts or values between different categories.":"ChartStringId.CmdCreateRotatedBarChartPlaceHolderDescription","The MeasureUnit property can't be modified in both the automatic and continuous numeric scale modes.":"ChartStringId.MsgIncorrectNumericMeasureUnitPropertyUsing","Spline Area Stacked 100%":"ChartStringId.SvnSplineFullStackedArea","Pane can't be set to null for the PaneAnchorPoint object.":"ChartStringId.MsgNullPaneAnchorPointPane","You can't manually change the series point's argument, because a chart is bound to data.":"ChartStringId.MsgDenyChangeSeriesPointAgument","Series point can't have a relation to itself.":"ChartStringId.MsgSelfRelatedSeriesPoint","The bar depth should be greater than 0.":"ChartStringId.MsgIncorrectBarDepth","Axis of values":"ChartStringId.AxisYDefaultTitle","Tool Tip Position can't be null.":"ChartStringId.MsgIncorrectToolTipPosition",Trek:"ChartStringId.PltTrek",Flow:"ChartStringId.PltFlow",Apex:"ChartStringId.PltApex",Blue:"ChartStringId.PltBlue","The bar width should be greater than 0.":"ChartStringId.MsgIncorrectBarWidth","Chart Titles":"ChartStringId.WizChartTitlesPageName","The {0} value level isn't supported by the {1}.":"ChartStringId.MsgUnsupportedValueLevel","Exact workdays changed":"ChartStringId.TrnExactWorkdaysChanged","File '{0}' isn't found.":"ChartStringId.MsgFileNotFound",'The "SynchronizePointOptions" property can\'t be set at runtime.':"ChartStringId.MsgSynchronizePointOptionsSettingRuntimeError","The points count should be greater than 1.":"ChartStringId.MsgIncorrectPointsCount","The {0} property should be greater than 0.":"ChartStringId.MsgIncorrectRangeControlClientSpacing","Chart title deleted":"ChartStringId.TrnChartTitleDeleted",
"Regression Line":"ChartStringId.IndRegressionLine","Fibonacci Indicator":"ChartStringId.IndFibonacciIndicator","Point Labels":"ChartStringId.WizSeriesLabelsPageName",'by {0} with "{1}"':"ChartStringId.IncompatibleSeriesMessage","Display the trend of the percentage each value contributes over time or categories.\r\n\r\nUse it to emphasize the trend in the proportion of each series.\r\n    ":"ChartStringId.CmdCreateFullStackedAreaChartDescription","Candle Stick":"ChartStringId.CmdCreateCandleStickChartMenuCaption","100% Stacked Pyramid":"ChartStringId.CmdCreatePyramidFullStackedBar3DChartMenuCaption","There is no panes to anchor to, because the chart's diagram type doesn't support panes.":"ChartStringId.IncorrectDiagramTypeToolTipText","A summary function with the name '{0}' is not registered.":"ChartStringId.MsgSummaryFunctionIsNotRegistered","Spline Area Stacked":"ChartStringId.SvnSplineStackedArea","Swift Plot":"ChartStringId.SvnSwiftPlot","Combine the advantages of both the Stacked Cylinder and Clustered Cylinder chart types, so that you can stack different cylinders, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateCylinderSideBySideStackedBar3DChartDescription","Exploded points changed":"ChartStringId.TrnExplodedPoints","{0} data filter(s)":"ChartStringId.WizDataFiltersEntered","Clustered Column":"ChartStringId.CmdCreateBarChartMenuCaption","Yellow Orange":"ChartStringId.PltYellowOrange","The max limit of the strip should be greater than the min limit.":"ChartStringId.MsgIncorrectStripMaxLimit","Combine the advantages of both the 100% Stacked Cone and Clustered Cone chart types, so that you can stack different cones, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateConeSideBySideFullStackedBar3DChartDescription","The {0} argument scale type is incompatible with the {1} series view.":"ChartStringId.MsgIncompatibleArgumentScaleType","It's impossible to set the sorting key's value to {0}.":"ChartStringId.MsgInvalidSortingKey","The primary axis can't be deleted. If you want to hide it, set its Visible property to false.":"ChartStringId.IODeleteAxis","The axis thickness should be greater than 0.":"ChartStringId.MsgIncorrectAxisThickness","100% Stacked Cone":"ChartStringId.CmdCreateConeFullStackedBar3DChartMenuCaption","Clustered 100% Stacked Pyramid":"ChartStringId.CmdCreatePyramidSideBySideFullStackedBar3DChartMenuCaption","The percent value should be greater than or equal to 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectPercentValue","Illegal Operation":"ChartStringId.IOCaption","Bar 3D Stacked 100%":"ChartStringId.SvnFullStackedBar3D","Pane Anchor Point":"ChartStringId.AnnotationPaneAnchorPoint",Gray:"ChartStringId.AppGray",Dark:"ChartStringId.AppDark","The specified overlapping mode isn't supported by the current series view.":"ChartStringId.MsgUnsupportedResolveOverlappingMode","Pie 3D":"ChartStringId.SvnPie3D",Stock:"ChartStringId.SvnStock","Hit testing for 3D Chart Types isn't supported. So, this method is supported for 2D Chart Types only.":"ChartStringId.MsgCalcHitInfoNotSupported","Right-bottom":"ChartStringId.WizDockCornerRightBottom",DashedVertical:"ChartStringId.WizHatchDashedVertical","This group was already unregistered.":"ChartStringId.MsgUnregisterGroupError","100% Stacked Area in 3-D":"ChartStringId.CmdCreateFullStackedArea3DChartMenuCaption","Assign this pane to the\r\nSeries.View.Pane property,\r\nto show a series on this pane":"ChartStringId.MsgEmptyPaneTextForHorizontalLayout","The specified value to convert to the scale's internal representation isn't compatible with the current scale type.":"ChartStringId.MsgInvalidScaleType","Show the variation in the price of stock over the course of a day. The Open and Close prices are represented by a filled rectangle, and the Low and High prices are represented by the bottom and top values of the vertical line which is shown at each point.":"ChartStringId.CmdCreateCandleStickChartDescription","Joint Photographic Experts Group":"ChartStringId.CmdExportToJPEGDescription",DarkHorizontal:"ChartStringId.WizHatchDarkHorizontal","The percentage accuracy should be greater than 0.":"ChartStringId.MsgIncorrectPercentageAccuracy","Can't set the PaneAnchorPoint's pane, because the specified pane isn't default and isn't contained in the diagram's collection of panes.":"ChartStringId.MsgIncorrectPaneAnchorPointPane","Polar Point":"ChartStringId.SvnPolarPoint","The argument of the financial indicator's point can't be set to null.":"ChartStringId.MsgNullFinancialIndicatorArgument","Funnel 3D":"ChartStringId.SvnFunnel3D","Print and Export":"ChartStringId.RibbonPrintExportGroupCaption","Weighted Moving Average":"ChartStringId.IndWeightedMovingAverage","Portable Network Graphics":"ChartStringId.CmdExportToPNGDescription","(None)":"ChartStringId.WizNoBackImage","Range Area":"ChartStringId.SvnRangeArea","MinValueInternal can't be set to NaN and Infinity values.":"ChartStringId.MsgIncorrectAxisRangeMinValueInternal","Holidays changed":"ChartStringId.TrnHolidaysChanged","Constant Lines changed":"ChartStringId.TrnConstantLinesChanged","Compare the percentage that each value contributes to a total across categories by using vertical rectangles.\r\n\r\nUse it to emphasize the proportion of each data series.\r\n    ":"ChartStringId.CmdCreateFullStackedBarChartDescription","Combine the advantages of both the 100% Stacked Pyramid and Clustered Pyramid chart types, so that you can stack different pyramids, and combine them into groups across the same axis value.":"ChartStringId.CmdCreatePyramidSideBySideFullStackedBar3DChartDescription",Grayscale:"ChartStringId.PltGrayscale","	The minimum and maximum limits of the Strip can not be the same.":"ChartStringId.MsgIncorrectStripConstructorParameters","Panes changed":"ChartStringId.TrnXYDiagramPanesChanged","Series title deleted":"ChartStringId.TrnSeriesTitleDeleted","DashStyle.Empty can only be assigned to a constant line's LineStyle property.":"ChartStringId.MsgIncorrectDashStyle","Owner of the parent series point can't be null and must be of the Series type.":"ChartStringId.MsgIncorrectParentSeriesPointOwner","Clustered 100% Stacked Cone":"ChartStringId.CmdCreateConeSideBySideFullStackedBar3DChartMenuCaption","The palette base color number should be greater than or equal to 0 and less than or equal to the total number of palette colors.":"ChartStringId.MsgIncorrectPaletteBaseColorNumber","You should specify all of the summary function parameters.":"ChartStringId.MsgSummaryFunctionParameterIsNotSpecified","Compare the percentage each value contributes to a total across categories using horizontal rectangles.\r\n\r\nUse it when the values on the chart represent durations or when the category text is very long.\r\n    ":"ChartStringId.CmdCreateRotatedFullStackedBarChartDescription","3-D Spline":"ChartStringId.CmdCreateSpline3DChartMenuCaption","Cannot set the EqualBarWidth property unless the series is added to the chart's collection.":"ChartStringId.MsgIncorrectEqualBarWidthPropertyUsing","Compare the percentage each value contributes to a total across categories.":"ChartStringId.CmdCreateConeFullStackedBar3DChartDescription","The nested doughnut inner indent should be greater than or equal to 0.":"ChartStringId.MsgIncorrectNestedDoughnutInnerIndent","The arrow height should be greater than 0.":"ChartStringId.MsgIncorrectArrowHeight","The title indent should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectChartTitleIndent","Radar Point":"ChartStringId.SvnRadarPoint","Clustered 100% Stacked Column in 3-D":"ChartStringId.CmdCreateSideBySideFullStackedBar3DChartMenuCaption","{0} series":"ChartStringId.AlternateTextSeriesText","Use Ctrl with the left mouse button\r\nto scroll the chart.":"ChartStringId.Msg2DScrollingToolTip","The legend vertical indent should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectLegendVerticalIndent",Polar:"ChartStringId.CmdPolarGroupPlaceHolderMenuCaption",SeriesPointFilter:"ChartStringId.DefaultSeriesPointFilterName","You can't add any view type in this collection, because at least one view type must be available in the Wizard.":"ChartStringId.MsgAddLastViewType","Series Group":"ChartStringId.StackedGroupPatternDescription","Web Page":"ChartStringId.CmdExportToHTMLDescription","Clustered Cylinder":"ChartStringId.CmdCreateCylinderBar3DChartMenuCaption","The shape fillet should be greater than or equal to 0.":"ChartStringId.MsgIncorrectShapeFillet","The specified object isn't a ChartControl.":"ChartStringId.MsgNotChartControl","3-D Clustered Column":"ChartStringId.CmdCreateBar3DChartMenuCaption","Max count should be greater than 0.":"ChartStringId.MsgInvalidMaxCount","The grid alignment should be greater than or equal to the current measure unit.":"ChartStringId.MsgIncorrectNumericGridAlignment","Enable zooming (true)":"ChartStringId.WizEnableZoomingTrue","Custom Axis Labels changed":"ChartStringId.TrnCustomAxisLabelChanged","DateTimeScaleMode isn't supported for the GanttDiagram.":"ChartStringId.MsgUnsupportedDateTimeScaleModeForGanttDiagram","The Trees":"ChartStringId.PltTheTrees","Other Charts":"ChartStringId.CmdCreateOtherSeriesTypesChartPlaceHolderMenuCaption",'The type of the "{0}" value data member isn\'t compatible with the {1} scale.':"ChartStringId.MsgIncompatibleValueDataMember","Stacked Line in 3-D":"ChartStringId.CmdCreateStackedLine3DChartMenuCaption","Export to XLS":"ChartStringId.CmdExportToXLSMenuCaption","Spline Area 3D Stacked 100%":"ChartStringId.SvnSplineAreaFullStacked3D","The dimension of the simple diagram should be greater than 0 and less than 100.":"ChartStringId.MsgIncorrectSimpleDiagramDimension","The top N threshold percent should be greater than 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectTopNThresholdPercent","Stacked Cylinder":"ChartStringId.CmdCreateCylinderStackedBar3DChartMenuCaption","Pane deleted":"ChartStringId.TrnPaneDeleted","Insert a pie chart.\r\n\r\nPie charts display the contribution of each value to a total.\r\n\r\nUse it when values can be added together or when you have only one data series and all values are positive.\r\n    ":"ChartStringId.CmdCreatePieChartDescription","Cannot set the BarDistance property unless the series is added to the chart's collection.":"ChartStringId.MsgIncorrectBarDistancePropertyUsing","Assign this pane to the Series.View.Pane property,\r\nto show a series on this pane":"ChartStringId.MsgEmptyPaneTextForVerticalLayout","Low Value":"ChartStringId.LowValuePatternDescription","The top N threshold value should be greater than 0.":"ChartStringId.MsgIncorrectTopNThresholdValue",PNG:"ChartStringId.CmdExportToPNGMenuCaption",ZigZag:"ChartStringId.WizHatchZigZag","The specified summary function string is in an incorrect format.":"ChartStringId.MsgIncorrectSummaryFunction","Line Stacked 100%":"ChartStringId.SvnFullStackedLine","Area Stacked 100%":"ChartStringId.SvnFullStackedArea","Load a chart from template":"ChartStringId.CmdLoadTemplateDescription","{0}, {1}pt, {2}":"ChartStringId.FontFormat","The array of values must contain either numerical or date-time values.":"ChartStringId.MsgIncorrectArrayOfValues","Compare the contribution of each value to a total across categories and display stacked columns in 3-D format.":"ChartStringId.CmdCreateStackedBar3DChartDescription","Range Area 3D":"ChartStringId.SvnRangeArea3D","Show how much values have changed for different points of the same series.":"ChartStringId.CmdCreateStepAreaChartDescription","Compare the contribution of each value to a total across categories by using vertical rectangles.\r\n\r\nUse it to emphasize the total across series for one category.\r\n    ":"ChartStringId.CmdCreateStackedBarChartDescription","100% Stacked Spline Area in 3-D":"ChartStringId.CmdCreateFullStackedSplineArea3DChartMenuCaption","\"Series point can't be set to null for the SeriesPointAncherPoint object.":"ChartStringId.MsgNullAnchorPointSeriesPoint","Spline Area":"ChartStringId.SvnSplineArea","The column indent should be greater than or equal to 0.":"ChartStringId.MsgIncorrectPieSeriesLabelColumnIndent","Secondary AxisX ":"ChartStringId.SecondaryAxisXPrefix","Secondary axis Y deleted":"ChartStringId.TrnSecondryAxisYDeleted","The start angle value should be greater than or equal to -360 and less than or equal to 360 degrees.":"ChartStringId.MsgIncorrectStartAngle"," showing {0}":"ChartStringId.AlternateTextSeriesPlaceholder","Copy all the data from the bound datasource to the chart, and then unbind the chart.":"ChartStringId.VerbDataSnapshotDescription",Doughnut:"ChartStringId.CmdCreateDoughnutChartMenuCaption","Scatter Line":"ChartStringId.CmdCreateScatterLineChartMenuCaption","Enable zooming (false)":"ChartStringId.WizEnableZoomingFalse",'A value "{0}" isn\'t compatible with the current value scale type.':"ChartStringId.MsgIncompatibleValue","Value Duration":"ChartStringId.ValueDurationPatternDescription",Concourse:"ChartStringId.PltConcourse","Line 3D Stacked 100%":"ChartStringId.SvnFullStackedLine3D","The ScaleMode property cannot be used with AxisY.":"ChartStringId.MsgAttemptToSetScaleModeForAxisY","Behave similar to 3D Area Chart, but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateSplineArea3DChartDescription","The range of a polar X-axis can't be changed.":"ChartStringId.MsgPolarAxisXRangeChanged","The {0} object isn't a data adapter.":"ChartStringId.MsgIncorrectDataAdapter","The specified view type is already present in the collection.":"ChartStringId.MsgAddPresentViewType","The specified {0} parameter type doesn't match the appropriate scale type, which is {1} for this axis.":"ChartStringId.MsgDiagramToPointIncorrectValue","Left-top":"ChartStringId.WizDockCornerLeftTop",'An argument "{0}" isn\'t compatible with the current argument scale type.':"ChartStringId.MsgIncompatibleArgument","Bar 3D Stacked":"ChartStringId.SvnStackedBar3D","Display series as areas on a diagram, so that the value of each data point is aggregated with the underlying data points' values.":"ChartStringId.CmdCreateStackedArea3DChartDescription","Clear the chart's datasource.":"ChartStringId.VerbClearDataSourceDescription","Step Area 3D":"ChartStringId.SvnStepArea3D","The border width should be greater than 0.":"ChartStringId.MsgIncorrectBorderThickness","Display all series stacked and is useful when it is necessary to compare how much each series adds to the total aggregate value for specific arguments (as percents).":"ChartStringId.CmdCreateFullStackedLine3DChartDescription","Area 3D Stacked 100%":"ChartStringId.SvnFullStackedArea3D","The pie depth should be greater than 0 and less than or equal to 100, since its value is measured in percents.":"ChartStringId.MsgIncorrectPieDepth","Polar Area":"ChartStringId.SvnPolarArea",AVERAGE:"ChartStringId.FunctionNameAverage","Compare values across categories by using vertical rectangles.\r\n\r\nUse it when the order of categories is not important or for displaying item counts such as a histogram.\r\n    ":"ChartStringId.CmdCreateBarChartDescription","The line tension percentage should be greater than or equal to 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectLineTensionPercent","Step Area":"ChartStringId.SvnStepArea","Step Line":"ChartStringId.SvnStepLine","The specified series point doesn't belong to the current Pie series views' collection of series points, and so it can't be added to the collection of exploded points.":"ChartStringId.MsgInvalidExplodedSeriesPoint","Combine the advantages of both the 100% Stacked Cylinder and Clustered Cylinder chart types, so that you can stack different cylinders, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateCylinderSideBySideFullStackedBar3DChartDescription","Display the contribution of each value to a total while comparing series with one doughnut nested in another one.":"ChartStringId.CmdCreateNestedDoughnutChartDescription","Can't set the series view's pane, because the specified pane isn't default and isn't contained in the diagram's collection of panes.":"ChartStringId.MsgIncorrectSeriesViewPane","Compare the percentage values of different point arguments in the same series, and illustrate these values as easy to understand pie slices, but with a hole in its center.":"ChartStringId.CmdCreateDoughnut3DChartDescription","100% Stacked Spline Area":"ChartStringId.CmdCreateFullStackedSplineAreaChartMenuCaption","Customize the diagram's panes.\r\nNote that you may select a pane by clicking it in the chart preview.":"ChartStringId.WizPanesPageDescription","The palette with the {0} name already exists in the repository.":"ChartStringId.MsgAddExistingPaletteError","Data Snapshot":"ChartStringId.VerbDataSnapshot","Display series as filled area on a circular diagram on the basis of angles.":"ChartStringId.CmdCreatePolarAreaChartDescription","Step Area in 3-D":"ChartStringId.CmdCreateStepArea3DChartMenuCaption","The shadow size should be greater than 0.":"ChartStringId.MsgIncorrectShadowSize","Series point's ID must be unique.":"ChartStringId.MsgSeriesPointIDNotUnique","2-D Pie":"ChartStringId.CmdPie2DGroupPlaceHolderMenuCaption","The series distance should be greater than or equal to 0.":"ChartStringId.MsgIncorrectSeriesDistance","The legend marker size should be greater than 0 and less than 1000.":"ChartStringId.MsgIncorrectLegendMarkerSize","Show trends for several series and compare their values for the same point arguments on a circular diagram on the basis of angles. The series points are drawn in the circular grid in the same order that they have in the series point collection.":"ChartStringId.CmdCreateScatterPolarLineChartDescription","Contain numerous style presets of a chart control to specify its appearance depending on the selected palette.":"ChartStringId.CmdChangeAppearancePlaceHolderDescription","The annotation Width should be greater than 0.":"ChartStringId.MsgIncorrectAnnotationWidth","Display all points from different series in a stacked manner and is useful when it is necessary to compare how much each series adds to the total aggregate value for specific arguments.":"ChartStringId.CmdCreateStackedLine3DChartDescription","Text Annotation ":"ChartStringId.TextAnnotationPrefix","The default pane can't be deleted.":"ChartStringId.IODeleteDefaultPane","Green Yellow":"ChartStringId.PltGreenYellow","Radar Area":"ChartStringId.CmdCreateRadarAreaChartMenuCaption",DiagonalCross:"ChartStringId.WizHatchDiagonalCross",DiagonalBrick:"ChartStringId.WizHatchDiagonalBrick","The types of the MinValue and MaxValue don't match.":"ChartStringId.MsgMinMaxDifferentTypes","You can add only Indicator objects to this collection.":"ChartStringId.MsgIncorrectIndicator",TIFF:"ChartStringId.CmdExportToTIFFMenuCaption","Step Line 3D":"ChartStringId.SvnStepLine3D","The MeasureUnit property can't be modified for the axis Y.":"ChartStringId.MsgMeasureUnitCanNotBeSetForAxisY","Save a chart to an XML file.":"ChartStringId.VerbSaveLayoutDescription","Range Bar":"ChartStringId.SvnOverlappedRangeBar","Microsoft Excel 2000-2003 Work Book":"ChartStringId.CmdExportToXLSDescription",Annotation:"ChartStringId.DefaultAnnotation","Chart layout loaded":"ChartStringId.TrnLoadLayout","Incorrect transformation matrix.":"ChartStringId.MsgIncorrectTransformationMatrix",SmallCheckerBoard:"ChartStringId.WizHatchSmallCheckerBoard","Secondary AxisY ":"ChartStringId.SecondaryAxisYPrefix","The number of minor count should be greater than 0 and less than 100.":"ChartStringId.MsgIncorrectMinorCount","The ProcessMissingPoints property operates with the X-axis scale only.":"ChartStringId.MsgProcessMissingPointsForValueAxis","Palettes Editor":"ChartStringId.MsgPaletteEditorTitle",Slipstream:"ChartStringId.PltSlipstream","Parent and child points must belong to the same series.":"ChartStringId.MsgIncorrectSeriesOfParentAndChildPoints",FromCenter:"ChartStringId.WizGradientFromCenter","Triangular Moving Average":"ChartStringId.IndTriangularMovingAverage","3-D Cone":"ChartStringId.CmdCreateConeManhattanBarChartMenuCaption","Choose a palette to color series or their data points. Also choose the style, which specifies the chart's appearance depending on the current palette.":"ChartStringId.WizAppearancePageDescription","The Alignment can't be set to Alignment.Zero for the secondary axis.":"ChartStringId.MsgInvalidZeroAxisAlignment",SolidDiamond:"ChartStringId.WizHatchSolidDiamond","Stretch (a chart is stretched or shrunk to fit the page\r\non which it is printed)":"ChartStringId.PrintSizeModeStretch","Show activity columns from different series grouped by their arguments. Each column represents a range of data with two values for each argument value.":"ChartStringId.CmdCreateSideBySideRangeBarChartDescription","Display each row or column of data as a 3-D ribbon on three axes.":"ChartStringId.CmdCreateLine3DChartDescription","The '{0}' summary function is incompatible with the {1} scale.":"ChartStringId.MsgIncompatibleSummaryFunction","This property is intended for internal use only. You're not allowed to change its value.":"ChartStringId.MsgInternalPropertyChangeError","the view type":"ChartStringId.MsgIncompatibleByViewType","This control doesn't contain the specified chart.":"ChartStringId.MsgNotBelongingChart","The fixed series indent should be greater than or equal to 0.":"ChartStringId.MsgIncorrectSeriesIndentFixed","100% Stacked Column in 3-D":"ChartStringId.CmdCreateFullStackedBar3DChartMenuCaption","Change the palette for the current chart.":"ChartStringId.CmdChangePalettePlaceHolderDescription","Display trend overtime (dates, years) or ordered categories. Useful when there are many data points and the order is important.":"ChartStringId.CmdCreateLineChartDescription","All Holidays":"ChartStringId.AllHolidays","Label ":"ChartStringId.CustomAxisLabelPrefix",LeftToRight:"ChartStringId.WizGradientLeftToRight","The horizontal scroll percent should be greater than or equal to -{0} and less than or equal to {0}.":"ChartStringId.MsgIncorrectHorizontalScrollPercent","The Chart Wizard is invoked to help you adjust the main chart settings in one place.":"ChartStringId.CmdRunWizardDescription","Chart Wizard":"ChartStringId.WizErrorMessageTitle","The angle of the annotation should be greater than or equal to -360 and less than or equal to 360.":"ChartStringId.MsgIncorrectTextAnnotationAngle","The stock level line length value should be greater than or equal to 0.":"ChartStringId.MsgIncorrectStockLevelLineLengthValue","3-D Pie":"ChartStringId.CmdPie3DGroupPlaceHolderMenuCaption","Insert a line chart.\r\n\r\nLine charts are used to display trends overtime.\r\n    ":"ChartStringId.CmdCreateLineChartPlaceHolderDescription","Clustered Range Column":"ChartStringId.CmdCreateSideBySideRangeBarChartMenuCaption","Doughnut in 3-D":"ChartStringId.CmdCreateDoughnut3DChartMenuCaption","Invalid datasource type (no supported interfaces are implemented).":"ChartStringId.MsgInvalidDataSource",WideDownwardDiagonal:"ChartStringId.WizHatchWideDownwardDiagonal","Spline Area 3D Stacked":"ChartStringId.SvnSplineAreaStacked3D",Templates:"ChartStringId.RibbonTemplatesGroupCaption","{0} argument scale type cannot be specified, because the existing exploded point filters don't correspond to it.":"ChartStringId.MsgIncorrectPieArgumentScaleType",HideOverlapping:"ChartStringId.WizResolveOverlappingModeHideOverlapping","Secondary axes X changed":"ChartStringId.TrnSecondaryAxesXChanged","Close Value":"ChartStringId.CloseValuePatternDescription","The line thickness should be greater than 0.":"ChartStringId.MsgIncorrectLineThickness","An invalid chart palette file":"ChartStringId.MsgPaletteEditorInvalidFile","Combine the advantages of both the Stacked Bar and Clustered Bar chart types, so that you can stack different bars, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateRotatedSideBySideStackedBarChartDescription",LeftColumn:"ChartStringId.WizPositionLeftColumn","Crosshair Position can't be null.":"ChartStringId.MsgIncorrectCrosshairPosition","The dimension of the {0} summary function isn't compatible with the {1} series view ({2} but should be {3}).":"ChartStringId.MsgIncompatibleSummaryFunctionDimension",Relative:"ChartStringId.WizShapePositionKindRelative",Radar:"ChartStringId.CmdRadarGroupPlaceHolderMenuCaption",OutlinedDiamond:"ChartStringId.WizHatchOutlinedDiamond","Simple Moving Average":"ChartStringId.IndSimpleMovingAverage","Invalid placeholder":"ChartStringId.InvalidPlaceholder","Trend Line":"ChartStringId.IndTrendLine","Chart Anchor Point":"ChartStringId.AnnotationChartAnchorPoint","The legend text offset should be greater than or equal to 0 and less than 1000.":"ChartStringId.MsgIncorrectLegendTextOffset","The envelope percent should be greater than 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectEnvelopePercent","Display the trend of the percentage each value contributes over time or ordered categories.":"ChartStringId.CmdCreateFullStackedLineChartDescription","The array of values is empty.":"ChartStringId.MsgEmptyArrayOfValues","Clustered 100% Stacked Column":"ChartStringId.CmdCreateSideBySideFullStackedBarChartMenuCaption","Customize the diagram's properties.":"ChartStringId.WizDiagramPageDescription","100% Stacked Bar":"ChartStringId.CmdCreateRotatedFullStackedBarChartMenuCaption","Since the current Pie series view displays the series created using a series template, the specified series point can't be added to the collection of exploded points. You need to use another Explode Mode instead.":"ChartStringId.MsgInvalidExplodedModeAdd",Technic:"ChartStringId.PltTechnic",'The "PointOptions" property can\'t be set at runtime.':"ChartStringId.MsgPointOptionsSettingRuntimeError","Single File Web Page":"ChartStringId.CmdExportToMHTDescription","Constant Line ":"ChartStringId.ConstantLinePrefix","This chart diagram can not be displayed in a Range Control.":"ChartStringId.InvalidRangeControlText",Violet:"ChartStringId.PltViolet","The page of the {0} type is already registered. You can't add more than one page of a particular type.":"ChartStringId.MsgWizardNonUniquePageType","To enter data points manually, use the Points tab. Or, use other tabs, to specify data source settings for individual or auto-created series.":"ChartStringId.WizDataPageDescription","Stacked Bar":"ChartStringId.CmdCreateRotatedStackedBarChartMenuCaption",ToCenterHorizontal:"ChartStringId.WizGradientToCenterHorizontal","Stacked Pyramid":"ChartStringId.CmdCreatePyramidStackedBar3DChartMenuCaption","date-time":"ChartStringId.ScaleTypeDateTime","Can't set the series view's X-axis, because the specified axis isn't primary and isn't contained in the diagram's collection of secondary X-axes.":"ChartStringId.MsgIncorrectSeriesViewAxisX","Can't set the series view's Y-axis, because the specified axis isn't primary and isn't contained in the diagram's collection of secondary Y-axes.":"ChartStringId.MsgIncorrectSeriesViewAxisY","Summary function changed":"ChartStringId.TrnSummaryFunctionChanged","Clustered Stacked Column in 3-D":"ChartStringId.CmdCreateSideBySideStackedBar3DChartMenuCaption",BMP:"ChartStringId.CmdExportToBMPMenuCaption","The grid spacing of a polar X-axis can't be changed.":"ChartStringId.MsgPolarAxisXGridSpacingChanged","100% Stacked Area":"ChartStringId.CmdCreateFullStackedAreaChartMenuCaption","Use Ctrl with the left mouse button\r\nto rotate the annotation.":"ChartStringId.MsgAnnotationRotationToolTip","Run Wizard...":"ChartStringId.VerbWizard",BackwardDiagonal:"ChartStringId.WizHatchBackwardDiagonal","The perspective angle should be greater than or equal to 0 and less than 180.":"ChartStringId.MsgIncorrectPerspectiveAngle","The collection doesn't contain the specified item.":"ChartStringId.MsgItemNotInCollection",RightColumn:"ChartStringId.WizPositionRightColumn","Series Point Anchor Point":"ChartStringId.AnnotationSeriesPointAnchorPoint","Mouse Position":"ChartStringId.ToolTipMousePosition","Display the contribution of each value to a total.\r\n\r\nUse it when the values can be added together or when you have only one data series and all values are positive.\r\n    ":"ChartStringId.CmdCreatePieChartPlaceHolderDescription",LargeConfetti:"ChartStringId.WizHatchLargeConfetti","It's necessary to specify {0} value data members for the current series view.":"ChartStringId.MsgIncorrectValueDataMemberCount","The same element is repeated several times in the order array.":"ChartStringId.MsgOrderRepeatedElementFound","Shape Position can't be null.":"ChartStringId.MsgIncorrectShapePosition","Clustered Cone":"ChartStringId.CmdCreateConeBar3DChartMenuCaption","Bar Stacked":"ChartStringId.SvnStackedBar",TopLeftToBottomRight:"ChartStringId.WizGradientTopLeftToBottomRight","The BarSeriesLabelPosition.Top value isn't supported for this series view type.":"ChartStringId.MsgIncorrectBarSeriesLabelPosition","This property can't be customized at runtime.":"ChartStringId.MsgDesignTimeOnlySetting","Spline 3D":"ChartStringId.SvnSpline3D","Display horizontal bars along the time axis. Each bar represents a separate event with the start and end values, hence these charts are used to track different activities during the time frame.\r\n\r\nUse it when it's necessary to show activity bars from different series one above another, to compare their duration.\r\n    ":"ChartStringId.CmdCreateSideBySideGanttChartDescription","Series...":"ChartStringId.VerbSeries","The series view's X-axis can't be set to null.":"ChartStringId.MsgNullSeriesViewAxisX","The series view's Y-axis can't be set to null.":"ChartStringId.MsgNullSeriesViewAxisY","The summary function '{0}' accepts {1} parameters instead of {2}.":"ChartStringId.MsgIncorrectSummaryFunctionParametersCount",Workday:"ChartStringId.Workday","Clustered 100% Stacked Bar":"ChartStringId.CmdCreateRotatedSideBySideFullStackedBarChartMenuCaption","Clustered Stacked Column":"ChartStringId.CmdCreateSideBySideStackedBarChartMenuCaption","None (a chart is printed with the size identical to that\r\nshown on the form)":"ChartStringId.PrintSizeModeNone","Zoom (a chart is resized proportionally (without clipping),\r\nso that it best fits the page on which it is printed)":"ChartStringId.PrintSizeModeZoom","The precision of the percent value should be greater than 0.":"ChartStringId.MsgIncorrectPercentPrecision","The number of star points should be greater than 3 and less than 101.":"ChartStringId.MsgIncorrectMarkerStarPointCount","The value can't be equal to Double.NaN, Double.PositiveInfinity, or Double.NegativeInfinity.":"ChartStringId.MsgIncorrectDoubleValue","Radar Line":"ChartStringId.SvnRadarLine","Stacked Spline Area in 3-D":"ChartStringId.CmdCreateStackedSplineArea3DChartMenuCaption","The line width should be greater than 0.":"ChartStringId.MsgIncorrectLineWidth","The min value of the axis range should be less than its max value.":"ChartStringId.MsgIncorrectAxisRange",DataFilter:"ChartStringId.DefaultDataFilterName","The ProcessMissingPoints property can't be specified in the continuous scale mode.":"ChartStringId.MsgProcessMissingPointsForContinuousScale","Clustered Stacked Cylinder":"ChartStringId.CmdCreateCylinderSideBySideStackedBar3DChartMenuCaption","Display the trend of the contribution of each value over time or categories.\r\n\r\nUse it to emphasize the trend in the total across series for one category.\r\n    ":"ChartStringId.CmdCreateStackedAreaChartDescription","Stacked Cone":"ChartStringId.CmdCreateConeStackedBar3DChartMenuCaption","Scale breaks changed":"ChartStringId.TrnScaleBreaksChanged","Graphics Interchange Format":"ChartStringId.CmdExportToGIFDescription",BottomToTop:"ChartStringId.WizSeriesLabelTextOrientationBottomToTop","MinValue can't be set to null.":"ChartStringId.MsgIncorrectAxisRangeMinValue","Can't set the AxisYCoordinate's axis, because the specified axis isn't primary and isn't contained in the diagram's collection of secondary Y-axes.":"ChartStringId.MsgIncorrectAxisYCoordinateAxis",
"Axis visibility changed":"ChartStringId.TrnAxisVisibilityChanged",Wizard:"ChartStringId.RibbonWizardGroupCaption","The angle should be greater than or equal to -360 and less than or equal to 360.":"ChartStringId.MsgIncorrectRelativePositionAngle","":"ChartStringId.CmdEmptyMenuCaption","Series Binding":"ChartStringId.WizSeriesDataBindingPageName","Clustered Gantt":"ChartStringId.CmdCreateSideBySideGanttChartMenuCaption","Compare values across categories and across series on three axes.\r\n\r\nUse it when the categories and series are equally important.\r\n    ":"ChartStringId.CmdCreateManhattanBarChartDescription","Doughnut 3D":"ChartStringId.SvnDoughnut3D","Preview and make changes to pages before printing.":"ChartStringId.CmdPrintPreviewDescription","The unregistered element is found.":"ChartStringId.MsgOrderUnregisteredElementFound","The arrow width should be always odd and greater than 0.":"ChartStringId.MsgIncorrectArrowWidth","Track different activities during the time frame.":"ChartStringId.CmdCreateGanttChartDescription",Construction:"ChartStringId.WizConstructionGroupName",Yellow:"ChartStringId.PltYellow",SmallGrid:"ChartStringId.WizHatchSmallGrid","Revert the legend point options to their default values.":"ChartStringId.VerbResetLegendPointOptionsDescription","Scale Break ":"ChartStringId.ScaleBreakPrefix","Cannot set the BarDistanceFixed property unless the series is added to the chart's collection.":"ChartStringId.MsgIncorrectBarDistanceFixedPropertyUsing","2-D Column":"ChartStringId.CmdColumn2DGroupPlaceHolderMenuCaption","The MeasureUnit property can't be modified in both the automatic and continuous date-time scale modes.":"ChartStringId.MsgIncorrectDateTimeMeasureUnitPropertyUsing",Exploded:"ChartStringId.ExplodedPointsDialogExplodedColumn","The precision should be greater than or equal to 0.":"ChartStringId.MsgIncorrectNumericPrecision","Pane ":"ChartStringId.XYDiagramPanePrefix","In A Fog":"ChartStringId.AppInAFog","You can't manually change this series point collection, because a chart is bound to data.":"ChartStringId.MsgDenyChangeSeriesPointCollection","Blue Green":"ChartStringId.PltBlueGreen","Display data as areas on a diagram, so that the value of each data point is stacked with all the other corresponding data points' values.\r\n\r\nUse it for comparing the percentage values of several series for the same point arguments.\r\n    ":"ChartStringId.CmdCreateFullStackedArea3DChartDescription","Pivot Grid Datasource":"ChartStringId.WizPivotGridDataSourcePageName","Text Annotation":"ChartStringId.TextAnnotation","There are no visible panes to show in a chart.\r\nTry to set the chart's Diagram.DefaultPane.Visible property to True,\r\nor show other panes from the Diagram.Panes collection.":"ChartStringId.MsgNoPanes","Pie in 3-D":"ChartStringId.CmdCreatePie3DChartMenuCaption","An argument can't be empty.":"ChartStringId.MsgEmptyArgument","Combine the advantages of both the 100% Stacked Bar and Clustered Bar chart types, so you can stack different bars, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateRotatedSideBySideFullStackedBarChartDescription","Can't create an image for the specified size.":"ChartStringId.MsgIncorrectImageBounds","Side By Side Range Bar":"ChartStringId.SvnSideBySideRangeBar",LightHorizontal:"ChartStringId.WizHatchLightHorizontal",Holiday:"ChartStringId.Holiday","Orange Red":"ChartStringId.PltOrangeRed","Line Stacked":"ChartStringId.SvnStackedLine","Area Stacked":"ChartStringId.SvnStackedArea","Child series point's ID must be positive or equal to zero.":"ChartStringId.MsgIncorrectChildSeriesPointID","The ChartControl isn't found, or there are several charts on this control. To solve the problem, you should handle the WizardPage.InitializePage event and manually specify the chart.":"ChartStringId.MsgInitializeChartNotFound",Equity:"ChartStringId.PltEquity",HorizontalBrick:"ChartStringId.WizHatchHorizontalBrick",Light:"ChartStringId.AppLight","Left-bottom":"ChartStringId.WizDockCornerLeftBottom","Open the Series Collection Editor.":"ChartStringId.VerbSeriesDescription","Clustered Stacked Bar":"ChartStringId.CmdCreateRotatedSideBySideStackedBarChartMenuCaption",auto:"ChartStringId.ScaleTypeAuto","2-D Line":"ChartStringId.CmdLine2DGroupPlaceHolderMenuCaption","The length of the order array isn't equal to the total number of registered elements.":"ChartStringId.MsgOrderArrayLengthMismatch","Owner of the child series point can't be null and must be of the Series type.":"ChartStringId.MsgIncorrectChildSeriesPointOwner","Increase the chart's size,\r\nto view its layout.\r\n    ":"ChartStringId.DefaultSmallChartText","Office 2013":"ChartStringId.PltOffice2013",Origin:"ChartStringId.PltOrigin",Orange:"ChartStringId.PltOrange","Use Ctrl with the left mouse button\r\nto explode or collapse slices.":"ChartStringId.Msg2DPieExplodingToolTip",Office:"ChartStringId.PltOffice",ToCenter:"ChartStringId.WizGradientToCenter","3-D Funnel":"ChartStringId.CmdCreateFunnel3DChartMenuCaption","Open the Palettes Editor.":"ChartStringId.VerbEditPalettesDescription","The angle of the label should be greater than or equal to -360 and less than or equal to 360.":"ChartStringId.MsgIncorrectLabelAngle",LargeGrid:"ChartStringId.WizHatchLargeGrid","Impossible to export a chart to the specified image format.":"ChartStringId.MsgIncorrectImageFormat","Export to MHT":"ChartStringId.CmdExportToMHTMenuCaption","Plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateSplineChartDescription","Display the contribution of each value to a total like a pie chart, but it can contain multiple series.":"ChartStringId.CmdCreateDoughnutChartDescription","Failed to import holydays from the '{0}' file.":"ChartStringId.MsgCantImportHolidays",Aspect:"ChartStringId.PltAspect","The specified file isn't a correct image file. Please choose another one.":"ChartStringId.WizInvalidBackgroundImage","The minimum size should be greater than or equal to 0, and less than the maximum size.":"ChartStringId.MsgIncorrectBubbleMinSize","Export to XLSX":"ChartStringId.CmdExportToXLSXMenuCaption","The zoom percent should be greater than 0 and less than or equal to {0}.":"ChartStringId.MsgIncorrectZoomPercent","Stacked Area":"ChartStringId.CmdCreateStackedAreaChartMenuCaption",Free:"ChartStringId.WizShapePositionKindFree","The grid spacing should be greater than 0.":"ChartStringId.MsgIncorrectGridSpacing","Clustered Stacked Pyramid":"ChartStringId.CmdCreatePyramidSideBySideStackedBar3DChartMenuCaption","Stacked Spline Area":"ChartStringId.CmdCreateStackedSplineAreaChartMenuCaption","The edge1 value can't be null.":"ChartStringId.MsgInvalidEdge1","The edge2 value can't be null.":"ChartStringId.MsgInvalidEdge2","The top N values count should be greater than 0.":"ChartStringId.MsgIncorrectTopNCount","Spline Area in 3-D":"ChartStringId.CmdCreateSplineArea3DChartMenuCaption",Export:"ChartStringId.CmdExportPlaceHolderMenuCaption","Blue II":"ChartStringId.PltBlueII","3-D Pyramid":"ChartStringId.CmdCreatePyramidManhattanBarChartMenuCaption","The group with the {0} name is already registered.":"ChartStringId.MsgWizardNonUniqueGroupName","Display the trend of the contribution of each value over time or ordered categories.":"ChartStringId.CmdCreateStackedLineChartDescription","Wizard Page":"ChartStringId.DefaultWizardPageLabel","The reduction color value can't be empty.":"ChartStringId.MsgIncorrectReductionColorValue","Display the contribution of each value to a total.":"ChartStringId.CmdCreatePie3DChartDescription","The specified path cannot be resolved: {0}.":"ChartStringId.MsgIncorrectPath","Font can't be null":"ChartStringId.MsgIncorrectFont","2-D Bar":"ChartStringId.CmdBar2DGroupPlaceHolderMenuCaption","Use Ctrl with the left mouse button\r\nto move the anchor point.":"ChartStringId.MsgAnchorPointMovingToolTip",'The "LegendPointOptions" property can\'t be set at runtime.':"ChartStringId.MsgLegendPointOptionsSettingRuntimeError",DottedGrid:"ChartStringId.WizHatchDottedGrid","Create series, and adjust their general properties.\r\nNote that the view type of the first visible series determines the diagram type and its set of specific options.":"ChartStringId.WizSeriesPageDescription",'Incorrect value "{0}" for the property "{1}".':"ChartStringId.MsgIncorrectPropertyValue",'Can\'t add a palette which has an empty name (\\"\\") to the palette repository. Please, specify a name for the palette.':"ChartStringId.MsgInvalidPaletteName","Series changed":"ChartStringId.TrnSeriesChanged",'The type of the "{0}" argument data member isn\'t compatible with the {1} scale.':"ChartStringId.MsgIncompatibleArgumentDataMember",DashedHorizontal:"ChartStringId.WizHatchDashedHorizontal","Palette ":"ChartStringId.PalettePrefix","The AxisValue property cannot be set to null for the StripLimit object.":"ChartStringId.MsgIncorrectStripLimitAxisValue","Save As\r\nTemplate":"ChartStringId.CmdSaveAsTemplateMenuCaption","Chart Title":"ChartStringId.DefaultChartTitle",'The "Label" property can\'t be set at runtime.':"ChartStringId.MsgLabelSettingRuntimeError","An incorrect value is specified. A dock target can only be a pane, or null (meaning the chart control itself).":"ChartStringId.MsgIncorrectFreePositionDockTarget","Axis of arguments":"ChartStringId.AxisXDefaultTitle",DarkDownwardDiagonal:"ChartStringId.WizHatchDarkDownwardDiagonal",'The type of the "{0}" point isn\'t compatible with the {1} scale.':"ChartStringId.MsgIncompatiblePointType",DarkVertical:"ChartStringId.WizHatchDarkVertical","This series view doesn't support relations.":"ChartStringId.MsgSeriesViewNotSupportRelations","Create and customize annotations anchored to a chart, pane or series point.\r\nNote that you may select an annotation by clicking it in the chart preview.":"ChartStringId.WizAnnotationsPageDescription",Links:"ChartStringId.ColumnLinks","The tickmark thickness should be greater than 0.":"ChartStringId.MsgIncorrectTickmarkThickness","Display the trend of values over time or categories.":"ChartStringId.CmdCreateAreaChartPlaceHolderDescription","Show points from two or more different series on the same points arguments on a circular grid that has multiple axes along which data can be plotted.":"ChartStringId.CmdCreateRadarPointChartDescription","The nested doughnut weight should be greater than 0.":"ChartStringId.MsgIncorrectNestedDoughnutWeight","Enable scrolling (true)":"ChartStringId.WizEnableScrollingTrue",DarkUpwardDiagonal:"ChartStringId.WizHatchDarkUpwardDiagonal",COUNT:"ChartStringId.FunctionNameCount","Point Hint":"ChartStringId.PointHintPatternDescription",GIF:"ChartStringId.CmdExportToGIFMenuCaption","Exponential Moving Average":"ChartStringId.IndExponentialMovingAverage","The maximum size should be greater than the minimum size.":"ChartStringId.MsgIncorrectBubbleMaxSize","Side By Side Bar Stacked 100%":"ChartStringId.SvnSideBySideFullStackedBar","(none)":"ChartStringId.WizDataFiltersDisabled","Enable scrolling (false)":"ChartStringId.WizEnableScrollingFalse","The funnel hole percentage should be greater than or equal to 0 and less than or equal to 100.":"ChartStringId.MsgIncorrectFunnelHolePercent","Percent Value":"ChartStringId.PercentValuePatternDescription","Customize the chart's properties.":"ChartStringId.WizChartPageDescription","Range Column":"ChartStringId.CmdCreateRangeBarChartMenuCaption","Behave similar to Stacked Area in 3D chart, but plot a fitted curve through each data point in a series.":"ChartStringId.CmdCreateStackedSplineArea3DChartDescription","Line 3D Stacked":"ChartStringId.SvnStackedLine3D","The specified XML file can't be opened,\r\nbecause it is either not a supported file type,\r\nor because the file has been damaged.":"ChartStringId.MsgChartLoadingException",ToCenterVertical:"ChartStringId.WizGradientToCenterVertical",Presentation:"ChartStringId.WizPresentationGroupName","The GridAlignment property can't be modified in the automatic numeric scale mode.":"ChartStringId.MsgIncorrectNumericGridAlignmentPropertyUsing","DataFilters changed":"ChartStringId.TrnDataFiltersChanged","Violet II":"ChartStringId.PltVioletII","the value scale type":"ChartStringId.MsgIncompatibleByValueScaleType","The zero value is not acceptable for the workdays.  Use work days of a week.":"ChartStringId.MsgUnsupportedWorkdaysForWorkdaysOptions",qualitative:"ChartStringId.ScaleTypeQualitative","Clustered 100% Stacked Cylinder":"ChartStringId.CmdCreateCylinderSideBySideFullStackedBar3DChartMenuCaption","The {0} must be inherited from the {1} class.":"ChartStringId.MsgWizardIncorrectBasePageType","Display vertical columns along the Y-axis (the axis of values). Each column represents a range of data for each argument value.":"ChartStringId.CmdCreateRangeBarChartDescription","Display series as filled area on a circular grid that has multiple axes along which data can be plotted.":"ChartStringId.CmdCreateRadarAreaChartDescription","Show trends for several series and compare their values for the same points arguments on a circular grid that has multiple axes along which data can be plotted.":"ChartStringId.CmdCreateRadarLineChartDescription",Urban:"ChartStringId.PltUrban",Verve:"ChartStringId.PltVerve","The fixed plane depth should be greater than or equal to 1.":"ChartStringId.MsgIncorrectPlaneDepthFixed",Paper:"ChartStringId.PltPaper",Solstice:"ChartStringId.PltSolstice",Green:"ChartStringId.PltGreen",Civic:"ChartStringId.PltCivic",Oriel:"ChartStringId.PltOriel","The Mixed":"ChartStringId.PltMixed",Metro:"ChartStringId.PltMetro","The maximum line count should be greater than or equal to 0 and less than or equal to 20.":"ChartStringId.MsgIncorrectMaxLineCount",ForwardDiagonal:"ChartStringId.WizHatchForwardDiagonal","This property can't be used if the Direction property is set to {0}.":"ChartStringId.MsgEquallySpacedItemsNotUsable","Represent series points in the same order that they have in the collection.":"ChartStringId.CmdCreateScatterLineChartDescription","The SeriesPointRelations collection already contains this relation.":"ChartStringId.MsgSeriesPointRelationAlreadyExists","Area 3D Stacked":"ChartStringId.SvnStackedArea3D","This series is incompatible:\r\n  ":"ChartStringId.IncompatibleSeriesHeader","Axis can't be set to null for the AxisXCoordinate object.":"ChartStringId.MsgNullAxisXCoordinateAxis","Insert a column chart.\r\n\r\nColumn charts are used to compare values across categories.\r\n    ":"ChartStringId.CmdCreateBarChartPlaceHolderDescription","Child series point with ID equal to {0} doesn't exist.":"ChartStringId.MsgChildSeriesPointNotExist","The page can't be registered in the unregistered group":"ChartStringId.MsgRegisterPageInUnregisterGroup","Customize the point labels of a series.\r\nNote that you may select labels of a series by clicking them in the chart preview.":"ChartStringId.WizSeriesLabelsPageDescription","Choose a chart type you want to use. To filter chart types by their groups, use the values in the drop-down box.":"ChartStringId.WizChartTypePageDescription","The {0} value scale type is incompatible with the {1} series view.":"ChartStringId.MsgIncompatibleValueScaleType","There is no series in the chart's collection with at least one series point.":"ChartStringId.IncorrectSeriesCollectionToolTipText","Resemble a Scatter chart, but compare sets of three values instead of two. The third value determines the size of the bubble marker.":"ChartStringId.CmdCreateBubbleChartDescription","Load...":"ChartStringId.VerbLoadLayout","Secondary axes Y changed":"ChartStringId.TrnSecondaryAxesYChanged","The {0} ValueLevel is invalid for the current regression line.":"ChartStringId.MsgIncorrectValueLevel","This PolygonGradientMode isn't compatible with AreaSeriesView.":"ChartStringId.MsgInvalidGradientMode",Axes:"ChartStringId.WizAxesPageName","Combine the advantages of both the Stacked Column and Clustered Column chart types, so that you can stack different columns, and combine them into groups across the same axis value.":"ChartStringId.CmdCreateSideBySideStackedBarChartDescription",RightToLeft:"ChartStringId.WizGradientRightToLeft","Annotation ":"ChartStringId.AnnotationPrefix","Customize the legend's properties.":"ChartStringId.WizLegendPageDescription","The point distance value should be greater than 0.":"ChartStringId.MsgIncorrectPointDistance","Customize the X and Y axes of the diagram.\r\nNote that you may select an axis by clicking it in the chart preview.":"ChartStringId.WizAxesPageDescription",'The {0} condition can\'t be applied to the "{1}" data.':"ChartStringId.MsgInvalidFilterCondition",BottomLeftToTopRight:"ChartStringId.WizGradientBottomLeftToTopRight","Series title changed":"ChartStringId.TrnSeriesTitleChanged","Adobe Portable Document Format":"ChartStringId.CmdExportToPDFDescription","High Value":"ChartStringId.HighValuePatternDescription","Series Views":"ChartStringId.WizSeriesViewPageName",WinLoss:"SparklineStringId.viewWinLoss","It's impossible to create an instance of a class: {0} because specified parameters are incorrect.":"GaugesCoreStringId.MsgInvalidClassCreationParameters","Path can't be created.":"GaugesCoreStringId.MsgPathCreationError","It's impossible to create an instance of a class {0} because specified text is incorrect: ":"GaugesCoreStringId.MsgTextParsingError","The gauge control can't be restored correctly, because the specified layout file contians the following invalid elements: {0}.":"GaugesCoreStringId.MsgGaugeRestoreError","We have all the information needed to process the report.":"ASPxReportsStringId.ReportDesigner_Wizard_ReportComplete_Description","What summary function would you like to calculate?":"ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Description","To be able to run the Document Viewer, the client web browser must support HTML5.":"ASPxReportsStringId.WebDocumentViewer_PlatformNotSupported_Error","Enter the text to find in the document.":"ASPxReportsStringId.SearchDialog_EnterText","The specified Report Service has not been found.":"ASPxReportsStringId.DocumentViewer_RemoteSourceConnection_Error","Report Wizard":"ASPxReportsStringId.ReportDesigner_Wizard_Header",Next:"ASPxReportsStringId.ReportDesigner_Wizard_Next","Ignore null values":"ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_IgnoreNullValues","To log in to the Report Server, handle the RequestCredentials event.":"ASPxReportsStringId.DocumentViewer_RemoteAuthenticatorCredentialHandled_Error",Collapsed:"ASPxReportsStringId.ReportDesigner_Accordion_Collapsed","Align Left 1":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AlignLeft1","Align Left 2":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AlignLeft2","It is only possible to assign either the SettingsRemoteSource or ConfigurationRemoteSource property of ASPxDocumentViewer at a time.":"ASPxReportsStringId.DocumentViewer_RemoteSourceSettingsAndConfiguration_Error","Search result":"ASPxReportsStringId.WebDocumentViewer_SearchResultText","Last Page":"ASPxReportsStringId.ToolBarItemText_LastPage","Insert Group Header Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertGroupHeaderBand","The value cannot be empty.":"ASPxReportsStringId.ParametersPanel_DateTimeValueValidationError",Finish:"ASPxReportsStringId.ReportDesigner_Wizard_Finish","To be able to run the Report Designer, the client web browser must support HTML5.":"ASPxReportsStringId.ReportDesigner_PlatformNotSupported_Error","Size to Control Height":"ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControlHeight","Display the specified page.":"ASPxReportsStringId.DocumentViewer_RibbonCurrentPageToolTip",of:"ASPxReportsStringId.ToolBarItemText_OfLabel","Delete Row":"ASPxReportsStringId.ReportDesigner_TableActions_DeleteRow","Remove calculated field":"ASPxReportsStringId.ReportDesigner_FieldListActions_RemoveCalculatedField","Insert Page Header Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertPageHeaderBand","Choose a Report Layout":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Title","Choose a Table or View":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseDataMember_Title","Guid should contain 32 digits delimited with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).":"ASPxReportsStringId.ParametersPanel_GuidValidationError","The report style specifies the appearance of your report.":"ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Description","Insert Field in the Column Area":"ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheColumnArea",Formal:"ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Formal","Specify the print settings and print the document.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_PrintReport","Outline 2":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Outline2","Outline 1":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Outline1","Failed to log in with the specified user credentials.":"ASPxReportsStringId.DocumentViewer_RemoteAuthenticatorLogin_Error","Insert Cell":"ASPxReportsStringId.ReportDesigner_TableActions_InsertCell","Create Groups":"ASPxReportsStringId.ReportDesigner_Wizard_CreateGroups_Title","Cannot create a document for the current report":"ASPxReportsStringId.WebDocumentViewer_DocumentCreationError",Casual:"ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Casual","The report does not contain any parameters.":"ASPxReportsStringId.WebDocumentViewer_NoParameters",Mht:"ASPxReportsStringId.ExportName_mht",Csv:"ASPxReportsStringId.ExportName_csv",Xls:"ASPxReportsStringId.ExportName_xls",Rtf:"ASPxReportsStringId.ExportName_rtf",Pdf:"ASPxReportsStringId.ExportName_pdf","Save To File":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_SaveToFile","Error obtaining a build status":"ASPxReportsStringId.WebDocumentViewer_GetBuildStatusError","An error occurred during search":"ASPxReportsStringId.WebDocumentViewer_SearchError","Insert Group Footer Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertGroupFooterBand","Match whole word only":"ASPxReportsStringId.SearchDialog_WholeWord","Insert Sub-Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertSubBand","Select the columns you want to display within your report.":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseColumns_Description",Down:"ASPxReportsStringId.SearchDialog_Down","Match Case":"ASPxReportsStringId.SearchDialog_Case","The DocumentViewerRemoteSourceSettings.CustomTokenStorage property is not assigned.":"ASPxReportsStringId.DocumentViewer_RemoteSourceSettings_CustomTokenStorage_Error","Print the report":"ASPxReportsStringId.ToolBarItemText_PrintReport","Parameters Panel":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_ParametersPanel",Portrait:"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Portrait","There are no parameters available yet.":"ASPxReportsStringId.ReportDesigner_FieldList_Parameters","Page Count:":"ASPxReportsStringId.DocumentViewer_RibbonPageCountText","Size to Control":"ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControl","Current Page":"ASPxReportsStringId.DocumentViewer_RibbonCurrentPageText","Insert Field in the Data Area":"ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheDataArea","Create a New Style":"ASPxReportsStringId.ReportDesigner_StylesEditor_CreateNew","Choose a Report Style":"ASPxReportsStringId.ReportDesigner_Wizard_Report_Style","Insert Field in the Filter Area":"ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheFilterArea","Insert Page Footer Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertPageFooterBand","Display the last document page.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_LastPage","Finished searching the document.":"ASPxReportsStringId.SearchDialog_Finished","Find Next":"ASPxReportsStringId.SearchDialog_FindNext","Findnbsp;what":"ASPxReportsStringId.SearchDialog_FindWhat","Export a report and save it to the disk":"ASPxReportsStringId.ToolBarItemText_SaveToDisk","Export a report and show it in a new window":"ASPxReportsStringId.ToolBarItemText_SaveToWindow","Add parameter":"ASPxReportsStringId.ReportDesigner_FieldListActions_AddParameter","Delete Column":"ASPxReportsStringId.ReportDesigner_TableActions_DeleteColumn","Insert Top Margin Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertTopMarginBand","Find Text":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_FindText","The report preview initialization has failed":"ASPxReportsStringId.WebDocumentViewer_InitializationError","Toggle Multipage Mode":"ASPxReportsStringId.WebDocumentViewer_ToggleMultipageMode","Next Page":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_NextPage","First Page":"ASPxReportsStringId.ToolBarItemText_FirstPage","Display the search window":"ASPxReportsStringId.ToolBarItemText_Search","Preview Parameters":"ASPxReportsStringId.ReportDesigner_Preview_ParametersTitle","Display the first document page.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_FirstPage",Stepped:"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Stepped","Delete Cell":"ASPxReportsStringId.ReportDesigner_TableActions_DeleteCell","Choose a Data Source to use in your report.":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseDataSource_Description","Specify the report's title":"ASPxReportsStringId.ReportDesigner_Wizard_ReportComplete_SpecifyTitle","It is only possible to assign either the Local Report or Remote Source of ASPxDocumentViewer at a time.":"ASPxReportsStringId.DocumentViewer_LocalAndRemoteSource_Error","Save the document to a file in a specified format.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_SaveToFile","Previous Page":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_PreviousPage","Display the next document page.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_NextPage","Find text in the document.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_FindText","Print Page":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_PrintPage","Save To Window":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_SaveToWindow","Adjust the field width so all fields fit onto a page":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_AdjustFieldWidth","The RequestCredentials event has not been subscribed to.":"ASPxReportsStringId.DocumentViewer_RemoteRequestCredentials_Error","To view the remote report, specify the ServerUri or EndpointConfigurationName property of the ASPxDocumentViewer.SettingsRemoteSource.":"ASPxReportsStringId.DocumentViewer_RemoteSourceSettings_Error","Insert Detail Report Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertDetailReportBand","To display a report, only one of the following actions can be performed at a time:\r\n- assigning the ASPxWebDocumentViewer.ReportSourceId property;\r\n- calling the ASPxWebDocumentViewer.OpenReport method;\r\n- calling the ASPxWebDocumentViewer.OpenReportXmlLayout method.":"ASPxReportsStringId.WebDocumentViewer_OpenReport_Error","Specify the print settings and print the current page.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_PrintPage",Groups:"ASPxReportsStringId.ReportDesigner_Groups","Insert Column To the Left":"ASPxReportsStringId.ReportDesigner_TableActions_InsertColumnToLeft",Columnar:"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Columnar","Cannot find a toolbar control with the specified name: '{0}'.":"ASPxReportsStringId.DocumentViewer_ExternalRibbonNotFound_Error","The report layout specifies the manner in which selected data fields are arranged on individual pages.":"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Description","Run Wizard":"ASPxReportsStringId.ReportDesigner_MenuButtons_RunWizard",Compact:"ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Compact","The table or view you choose determines wich columns will be available in your report.":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseDataMember_Description","Insert Bottom Margin Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertBottomMarginBand","To view a remote report, enable the PageByPage property of the SettingsReportViewer.":"ASPxReportsStringId.DocumentViewer_RemotePageByPage_Error","Access and modify the report parameter values.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_ParametersPanel","Insert Detail Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertDetailBand","To create a new item, click Add.":"ASPxReportsStringId.ReportDesigner_GroupFields_Empty","Insert Report Footer Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertReportFooterBand","Choose Columns to Display in Your Report":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseColumns_Title","Insert Field in the Row Area":"ASPxReportsStringId.ReportDesigner_PivotActions_InsertFieldInTheRowArea","The user credentials cannot be empty.":"ASPxReportsStringId.DocumentViewer_RemoteAuthenticatorCredential_Error","This command cannot be executed because a document has not yet been generated.":"ASPxReportsStringId.DocumentViewer_NoRemoteDocumentInformation_Error","Print the current page":"ASPxReportsStringId.ToolBarItemText_PrintPage","Export To":"ASPxReportsStringId.WebDocumentViewer_ExportToText","Display the previous document page.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_PreviousPage","Add Data Items Here":"ASPxReportsStringId.ReportDesigner_Pivot_AddDataItems","Document is building...":"ASPxReportsStringId.WebDocumentViewer_DocumentBuilding","Remove parameter":"ASPxReportsStringId.ReportDesigner_FieldListActions_RemoveParameter","Navigate through the report's hierarchy of bookmarks.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_DocumentMap",Tables:"ASPxReportsStringId.ReportDesigner_Tables","The report does not have any parameters yet. To create a new parameter, click Add Parameter.":"ASPxReportsStringId.ReportDesigner_Parameters_CreateParameters","Insert Column To the Right":"ASPxReportsStringId.ReportDesigner_TableActions_InsertColumnToRight",Corporate:"ASPxReportsStringId.ReportDesigner_Wizard_ReportStyle_Corporate","Size to Control Width":"ASPxReportsStringId.ReportDesigner_ElementsAction_SizeToControlWidth",Html:"ASPxReportsStringId.ExportName_html",Xlsx:"ASPxReportsStringId.ExportName_xlsx",Submit:"ASPxReportsStringId.ParametersPanel_Submit",Previous:"ASPxReportsStringId.ReportDesigner_Wizard_Previous","Selected fields":"ASPxReportsStringId.ReportDesigner_Wizard_SelectedFields","Save the document in a specified format and display the result in a new window.":"ASPxReportsStringId.DocumentViewer_RibbonCommandToolTip_SaveToWindow","Insert Row Below":"ASPxReportsStringId.ReportDesigner_TableActions_InsertRowBelow","Insert Row Above":"ASPxReportsStringId.ReportDesigner_TableActions_InsertRowAbove","Available fields":"ASPxReportsStringId.ReportDesigner_Wizard_AvailableFields","Add Filter Fields Here":"ASPxReportsStringId.ReportDesigner_Pivot_AddFilterFields","Cannot obtain additional document data for the current document":"ASPxReportsStringId.WebDocumentViewer_GetDocumentDataError","Cannot supply filtered lookup values to a report parameter editor":"ASPxReportsStringId.WebDocumentViewer_GetLookUpValuesError","Add calculated field":"ASPxReportsStringId.ReportDesigner_FieldListActions_AddCalculatedField","Data Source Wizard":"ASPxReportsStringId.ReportDesigner_Wizard_DataSourceHeader","Add Row Fields Here":"ASPxReportsStringId.ReportDesigner_Pivot_AddRowFields","0 pages":"ASPxReportsStringId.WebDocumentViewer_0Pages",Tabular:"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Tabular","Create multiple groups, each with a single field value, or define several fields in the same group.":"ASPxReportsStringId.ReportDesigner_Wizard_CreateGroups_Description",Up:"ASPxReportsStringId.SearchDialog_Up",Justified:"ASPxReportsStringId.ReportDesigner_Wizard_ReportLayout_Justified","Insert Report Header Band":"ASPxReportsStringId.ReportDesigner_ReportActions_InsertReportHeaderBand","The Report is Complete":"ASPxReportsStringId.ReportDesigner_Wizard_ReportComplete_Title",
"The value is not valid.":"ASPxReportsStringId.ParametersPanel_GenericRegexValidationError","Choose summary options":"ASPxReportsStringId.ReportDesigner_Wizard_SummaryOptions_Title","Print Report":"ASPxReportsStringId.DocumentViewer_RibbonCommandText_PrintReport","Add Column Fields Here":"ASPxReportsStringId.ReportDesigner_Pivot_AddColumnFields","Choose a Data Source":"ASPxReportsStringId.ReportDesigner_Wizard_ChooseDataSource_Title"}}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){function b(b){return window.Globalize&&(Globalize.localize(a.localization_values[b])||Globalize.localize(b))||b}function c(b){var c={};$.each(b,function(b,d){c[a.localization_values[b]?a.localization_values[b]:b]=d}),Globalize.addCultureInfo("default",{messages:c})}a.getLocalization=b,a.updateLocalization=c}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){function c(a,b,c){var f=$.Deferred();return $.post(a,{actionKey:b,arg:c}).fail(function(a,b,c){var g=c,h=e(a);h&&(g+=": "+h),d(g),f.reject(a,b,c)}).done(function(a){a.success?f.resolve(a.result):d(a.error)}),f.promise()}function d(a,c){if(void 0===c&&(c=!1),c&&f(a),b.DEBUG)throw new Error(a);console.warn(a)}function e(a){return a&&a.responseJSON&&a.responseJSON.error?a.responseJSON.error:""}function f(b,c,d){void 0===c&&(c="error"),a.ui.notify({message:b,type:c,position:{of:$(".dx-designer")[0],my:"bottom",at:"bottom",offset:"0 -10"},targetContainer:$(".dx-designer")[0],closeOnOutsideClick:!0,displayTime:d||("error"===c?6e4:3e3)})}function g(a){return a.isModelReady?a.isModelReady():!0}function h(a){return a&&/^[A-Za-z][A-Za-z0-9_]+$/.test(a)}function i(a){return a.replace(/[\W_]+/g,"_")}function j(a){return a&&(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(a)||/^\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\}$/.test(a)||/^\([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\)$/.test(a)||/^[0-9a-fA-F]{32}$/.test(a))}function k(a){return ko.observable(void 0===a||null===a?null:parseFloat(a))}function l(a){var b=n(a);return ko.observable(this.values&&void 0!==this.values[b]?b:a)}function m(a){return a.split(",")[0].trim()}function n(a){var b=m(a),c=b.split(".");return c[c.length-1]}function o(a){var c=a&&(ko.unwrap(a.name)||ko.unwrap(a.displayName)),d=a&&a.controlType;return c+(d?" ("+b.getLocalization(n(d))+")":"")}function p(a){var b=a.toLowerCase(),c=!1;return $.each(document.styleSheets||[],function(a,d){var e=d.rules?d.rules:d.cssRules;return $.each(e||[],function(a,d){return d.selectorText&&d.selectorText.toLowerCase()===b&&(c=!0),!c}),!c}),c}function q(a){return ko.observable(void 0!==a?"true"===String(a).toLowerCase():a)}function r(a){var b=(a||"").split(","),c=ko.observable(a);if(b.length>1){var d=(parseFloat(b[0])/255).toFixed(2);b.shift(),b.push(d.toString()),c=ko.observable("rgba("+b.join(", ")+")")}return c}function s(a){return Math.round(a).toString()}function t(a){var b=(a||"").split(", "),c=a;if(b.length>1){var d=Math.round(255*parseFloat(b[3]));b.pop(),b[0]=b[0].split("(")[1],c=d.toString()+","+b.join(",")}return c}function u(a,c,d,e,f){d&&$.each(d,function(d,g){var h=0;c[d]=ko.pureComputed({read:function(){var c=g(a)(),d=b.unitsToPixel(c,e.peek(),f());return Math.abs(d-h)>.2?h=d:h},write:function(c){h=c;var d=b.pixelToUnits(c,e.peek(),f());g(a)(d)}})})}function v(a,b,c,d){if(void 0===c&&(c=[]),void 0===d&&(d=["surface"]),a&&void 0!==a){var e=[];for(var f in a)if(0!==f.indexOf("_")&&-1===d.indexOf(f)){var g=f;ko.isComputed(a[f])&&ko.isWriteableObservable(a["_"+f])&&(g="_"+g),-1!==c.indexOf(a[g])||ko.isComputed(a[g])||e.push(a[g])}b(e),c.push.apply(c,e),$.each(e,function(a,e){e=ko.unwrap(e),"object"==typeof e&&v(e,b,c,d)})}}function w(a,b,c,d){if(void 0===c&&(c=[]),void 0===d&&(d=["surface","reportSource"]),-1===c.indexOf(a)&&a&&void 0!==a){var e=[];for(var f in a)-1===c.indexOf(a[f])&&0!==f.indexOf("_")&&-1===d.indexOf(f)&&e.push(a[f]);b(a),c.push(a),$.each(e,function(a,e){e=ko.unwrap(e),"object"==typeof e&&w(e,b,c,d)})}}function x(a,b,c,d){if(void 0===c&&(c=["controls","bands","subBands","crossBandControls","rows","cells","fields"]),void 0===d&&(d=[]),-1===d.indexOf(a)&&a&&void 0!==a){d.push(a);for(var e in a)-1!==c.indexOf(e)&&(b(a[e]),(a[e]()||[]).forEach(function(a){return x(a,b,c,d)}))}}function y(a){var b,a=m(a||"").split(".").join("_");return-1!==a.indexOf("XR")?b=a.slice(2).toLowerCase():"DevExpress_XtraReports_UI_XtraReport"===a&&(b="master_report"),"dxrd-image-"+(b?b:a.toLowerCase())}function z(a,b){if(0===b.indexOf("XR"))b=b[2].toLowerCase()+b.slice(3);else{var c=b.indexOf("Band");-1!==c&&"SubBand"!==b&&(b=b.slice(0,c)+b.slice(c+4))}return A(a.map(function(a){return ko.unwrap(a.name)}),b)}function A(a,b){for(var c=1,d=b+c;a.filter(function(a){return a===d}).length>0;)c++,d=b+c;return d}function B(a){return w(a,function(a){delete a["@Ref"]}),a}function C(a,b,c,d){for(var d=d||0,e=d;e<a.length;e++){var f=ko.isObservable(a[e][b])?a[e][b].peek():a[e][b];if(f===c)return a[e]}return null}function D(a,b){var c=null;return a.some(function(a){return b(a)&&(c=a),!!c}),c}function E(a,b){return function(){var c=$(b),d=c.find(".dxrd-surface-wrapper"),e=c.find(".dxrd-designer .dxrd-right-panel").outerWidth()+c.find(".dxrd-right-tabs").outerWidth();d.css("right",e);var f=e+c.find(".dxrd-toolbox-wrapper").outerWidth(),g=c.find(".dxrd-designer").width()-(f+5);d.css("width",g),a(g);var h=c.find(".dxrd-navigation-panel-wrapper").outerHeight();d.css("bottom",h||0)}}function F(a,b){var c=[];return b.forEach(function(b){var d=a.filter(function(a){return a.propertyName===b})[0];d&&c.push(d)}),c}function G(a){return[{templateName:"dxrd-menubutton-template-base",model:a},{templateName:"dxrd-toolbar-template-base",model:a},{templateName:"dxrd-toolbox-template-base",model:a},{templateName:"dxrd-surface-template-base",model:a},{templateName:"dxrd-right-panel-template-base",model:a}]}function H(a){var b=a.focused();a.selectedItems.forEach(function(a){var c=a.getControlModel(),d=c.parentModel();!a.getControlModel().getMetaData().isDeleteDeny&&d&&a!==b&&d.removeChild(c)}),b.getControlModel().parentModel().removeChild(b.getControlModel()),a.focused(I(b))}function I(a){var b=a.parent,c=b;if(b){var d=b.getChildrenCollection()(),e=d.indexOf(a);-1===e&&d.length>0?c=d[d.length-1]:d.length>1&&e===d.length-1?c=d[e-1]:d.length>1&&0===e?c=d[d.length-1]:d.length>1?c=d[d.length-1]:-1===e&&c.parent&&-1===c.parent.getChildrenCollection()().indexOf(c)&&(c=I(c))}return c}function J(b){return"multiValueWithLookUp"===b?a.Designer.Widgets.editorTemplates.multiValue:"multiValue"===b?a.Designer.Widgets.editorTemplates.multiValueEditable:"Enum"===b?a.JS.Widgets.editorTemplates.combobox:"System.String"===b?a.JS.Widgets.editorTemplates.text:"System.Guid"===b?a.Designer.Widgets.editorTemplates.guid:"System.SByte"===b||"System.Int32"===b||"System.Int16"===b||"System.Single"===b||"System.Double"===b||"System.Byte"===b||"System.UInt16"===b||"System.UInt32"===b||"System.Byte"===b?a.JS.Widgets.editorTemplates.numeric:"System.Boolean"===b?a.JS.Widgets.editorTemplates.boolSelect:"System.DateTime"===b?a.JS.Widgets.editorTemplates.date:"DevExpress.DataAccess.Expression"===b?a.Designer.Widgets.editorTemplates.expressionEditor:a.JS.Widgets.editorTemplates.text}function K(a,b){return function(c){c.forEach(function(c){if(!c.wrappedWith||-1===c.wrappedWith.indexOf(a)){var d=c.clickAction;c.clickAction=function(a){return b(a,d)},c.wrappedWith=c.wrappedWith||[],c.wrappedWith.push(a)}})}}function L(c,d,e,f,g,h){void 0===f&&(f={}),void 0===g&&(g=[]);var i=ko.observable(new a.JS.Utils.UndoEngine(c)),j=K("WrapWithUndoEngine",function(a,b){i().start(),b(a),i().end()}),k=new b.SurfaceSelection,l=[],m=new b.SnapLinesHelper(d),n=ko.pureComputed(function(){return new T(c,[{added:function(){},deleted:function(a){a.surface==k.focused()&&k.focused(I(a.surface))}}])}),o=new b.DragHelperContent(k),p=b.getToolboxItems(e.controlsMap),q=ko.observable(!1),r=new S(k),s=b.CombinedObject.getEditableObject(k,i).extend({throttle:1}),t=new a.JS.Widgets.ObjectProperties(ko.pureComputed(function(){var a={getInfo:function(){return[]}},b=s();if(b){var c=e.controlsMap[b.controlType],d=F(c&&c.info||[],c&&c.popularProperties||[]);b.lockedInUserDesigner&&(a.isPropertyDisabled=function(){return b.lockedInUserDesigner()}),d.forEach(function(c){a[c.propertyName]=b[c.propertyName]}),a.getInfo=function(){return d},a.actions=b.actions,a.getPath=function(a){return b.getPath&&b.getPath(a)||""},a.isPropertyModified=function(a){return b.isPropertyModified?b.isPropertyModified(a):!1},a.getActionClassName=function(a){return b.getActionClassName?b.getActionClassName(a):""}}return a})),u=new ca([new da("Properties","dxrd-propertiestab",new b.Widgets.ControlProperties(s,{groups:f,editors:g}),void 0)]),v={parts:h,model:c,isLoading:ko.observable(!0),surface:d,surfaceSize:ko.observable(0),controlsHelper:n,selection:k,undoEngine:i,toolboxItems:p,editableObject:s,popularProperties:t,tabPanel:u,getControlsDS:function(){return new ea(n().allControls())},appMenuVisible:q,toggleAppMenu:function(){q(!q())},actionLists:new b.ActionLists(d,k,i,function(){}),contextActionProviders:l,contextActions:ko.pureComputed(function(){var a=s(),b=[];return l.forEach(function(c){b.push.apply(b,c.getActions(a))}),j(b),b}),inlineTextEdit:r,resizeHandler:{starting:function(){k.expectClick=!0,i().start()},stopped:function(){i().end(),setTimeout(function(){k.expectClick=!1},100)}},snapHelper:m,dragHelperContent:o,dragHandler:new b.SelectionDragDropHandler(d,k,i,m,o),toolboxDragHandler:new b.ToolboxDragDropHandler(d,k,i,m,o,e),updateFont:function(b){$.extend(a.JS.Widgets.availableFonts,b)}};return v.popularVisible=ko.pureComputed(function(){return v.popularProperties._editors().some(function(a){return a.visible()})||v.contextActions().length>0}),v.parts=v.parts||G(v),v}function M(a){var c=ko.unwrap(a);return"none"===c?b.getLocalization("none"):"(none)"===c?b.getLocalization("(none)")?b.getLocalization("(none)"):"("+b.getLocalization("none")+")":c}b.DEBUG=!0,b.ajax=c,b.NotifyAboutWarning=d,b.getErrorMessage=e,b.ShowMessage=f,b.checkModelReady=g;var N=function(){function a(a,b,c){var d=this;this._extenders=c,this.getItems=function(c){var e=$.Deferred(),f=[];return d._beforeFieldListCallback(c,f)?e.resolve(f):b&&!c.fullPath?(f.push.apply(f,$.map(b(),function(a){return{name:a.id||a.ref,displayName:a.name,isList:!0,specifics:a.specifics||"ListSource",dragData:{noDragable:!0}}})),d._afterFieldListCallBack(c,f),e.resolve(f)):(d._patchRequest(c,b),a(c).done(function(a){f.push.apply(f,a),d._afterFieldListCallBack(c,f),e.resolve(f)})),e.promise()}}return a.prototype._patchRequest=function(a,b){if(b)for(var c=b.peek(),d=0;d<c.length;d++){if(c[d].id===a.id)return void(a.ref=void 0);if(c[d].ref===a.ref)return void(a.id=void 0)}},a.prototype._beforeFieldListCallback=function(a,b){return!!this._extenders&&this._extenders.some(function(c){return c.beforeItemsFilled(a,b)})},a.prototype._afterFieldListCallBack=function(a,b){this._extenders&&this._extenders.forEach(function(c){c.afterItemsFilled&&c.afterItemsFilled(a,b)})},a}();b.FieldListProvider=N,b.validateName=h,b.replaceInvalidSymbols=i,b.validateGuid=j,b.nameValidationRules=[{type:"custom",validationCallback:function(a){return h(a.value)},message:a.Designer.getLocalization("Name is required and should be a valid identifier.")}],b.guidValidationRules=[{type:"custom",validationCallback:function(a){return j(a.value)},message:a.Designer.getLocalization("Guid is required and should have a valid format.")}],b.floatFromModel=k,b.papperKindMapper={A2:{width:1654,height:2339},A3:{width:1169,height:1654},A3Extra:{width:1268,height:1752},A3ExtraTransverse:{width:1268,height:1752},A3Rotated:{width:1654,height:1169},A3Transverse:{width:1169,height:1654},A4:{width:827,height:1169},A4Extra:{width:929,height:1268},A4Plus:{width:827,height:1299},A4Rotated:{width:1169,height:827},A4Small:{width:827,height:1169},A4Transverse:{width:827,height:1169},A5:{width:583,height:827},A5Extra:{width:685,height:925},A5Rotated:{width:827,height:583},A5Transverse:{width:583,height:827},A6:{width:413,height:583},A6Rotated:{width:583,height:413},APlus:{width:894,height:1402},B4:{width:984,height:1390},B4Envelope:{width:984,height:1390},B4JisRotated:{width:1433,height:1012},B5:{width:693,height:984},B5Envelope:{width:693,height:984},B5Extra:{width:791,height:1087},B5JisRotated:{width:1012,height:717},B5Transverse:{width:717,height:1012},B6Envelope:{width:693,height:492},B6Jis:{width:504,height:717},B6JisRotated:{width:717,height:504},BPlus:{width:1201,height:1917},C3Envelope:{width:1276,height:1803},C4Envelope:{width:902,height:1276},C5Envelope:{width:638,height:902},C65Envelope:{width:449,height:902},C6Envelope:{width:449,height:638},CSheet:{width:1700,height:2200},DLEnvelope:{width:433,height:866},DSheet:{width:2200,height:3400},ESheet:{width:3400,height:4400},Executive:{width:725,height:1050},Folio:{width:850,height:1300},GermanLegalFanfold:{width:850,height:1300},GermanStandardFanfold:{width:850,height:1200},InviteEnvelope:{width:866,height:866},IsoB4:{width:984,height:1390},ItalyEnvelope:{width:433,height:906},JapaneseDoublePostcard:{width:787,height:583},JapaneseDoublePostcardRotated:{width:583,height:787},JapanesePostcard:{width:394,height:583},Ledger:{width:1700,height:1100},Legal:{width:850,height:1400},LegalExtra:{width:927,height:1500},Letter:{width:850,height:1100},LetterExtra:{width:927,height:1200},LetterExtraTransverse:{width:927,height:1200},LetterPlus:{width:850,height:1269},LetterRotated:{width:1100,height:850},LetterSmall:{width:850,height:1100},LetterTransverse:{width:827,height:1100},MonarchEnvelope:{width:388,height:750},Note:{width:850,height:1100},Number10Envelope:{width:412,height:950},Number11Envelope:{width:450,height:1038},Number12Envelope:{width:475,height:1100},Number14Envelope:{width:500,height:1150},Number9Envelope:{width:388,height:888},PersonalEnvelope:{width:362,height:650},Prc16K:{width:575,height:846},Prc16KRotated:{width:575,height:846},Prc32K:{width:382,height:594},Prc32KBig:{width:382,height:594},Prc32KBigRotated:{width:382,height:594},Prc32KRotated:{width:382,height:594},PrcEnvelopeNumber1:{width:402,height:650},PrcEnvelopeNumber10:{width:1276,height:1803},PrcEnvelopeNumber10Rotated:{width:1803,height:1276},PrcEnvelopeNumber1Rotated:{width:650,height:402},PrcEnvelopeNumber2:{width:402,height:693},PrcEnvelopeNumber2Rotated:{width:693,height:402},PrcEnvelopeNumber3:{width:492,height:693},PrcEnvelopeNumber3Rotated:{width:693,height:492},PrcEnvelopeNumber4:{width:433,height:819},PrcEnvelopeNumber4Rotated:{width:819,height:433},PrcEnvelopeNumber5:{width:433,height:866},PrcEnvelopeNumber5Rotated:{width:866,height:433},PrcEnvelopeNumber6:{width:472,height:906},PrcEnvelopeNumber6Rotated:{width:906,height:472},PrcEnvelopeNumber7:{width:630,height:906},PrcEnvelopeNumber7Rotated:{width:906,height:630},PrcEnvelopeNumber8:{width:472,height:1217},PrcEnvelopeNumber8Rotated:{width:1217,height:472},PrcEnvelopeNumber9:{width:902,height:1276},PrcEnvelopeNumber9Rotated:{width:1276,height:902},Quarto:{width:846,height:1083},Standard10x11:{width:1e3,height:1100},Standard10x14:{width:1e3,height:1400},Standard11x17:{width:1100,height:1700},Standard12x11:{width:1200,height:1100},Standard15x11:{width:1500,height:1100},Standard9x11:{width:900,height:1100},Statement:{width:550,height:850},Tabloid:{width:1100,height:1700},TabloidExtra:{width:1169,height:1800},USStandardFanfold:{width:1488,height:1100}},b.fromEnum=l,b.getTypeNameFromFullName=m,b.getShortTypeName=n,b.getControlFullName=o,b.classExists=p,b.parseBool=q,b.colorFromString=r,b.saveAsInt=s,b.colorToString=t;var O=function(){function a(a,b){this.x=ko.observable(a),this.y=ko.observable(b)}return a.prototype.getInfo=function(){return b.locationFake},a.fromString=function(b){void 0===b&&(b="0, 0");var c=b.split(",");return new a(parseFloat(c[0]),parseFloat(c[1]))},a.prototype.toString=function(){return this.x()+", "+this.y()},a.unitProperties=["x","y"],a}();b.Point=O;var P=function(){function a(a,b){this.isPropertyDisabled=function(){return void 0},this.width=ko.observable(a),this.height=ko.observable(b)}return a.prototype.getInfo=function(){return b.sizeFake},a.fromString=function(b){void 0===b&&(b="0, 0");var c=b.split(",");return new a(parseFloat(c[0]),parseFloat(c[1]))},a.prototype.toString=function(){return this.width()+", "+this.height()},a.unitProperties=["width","height"],a}();b.Size=P;var Q=function(){function a(a,b,c,d){this.bottom=ko.observable(d),this.left=ko.observable(a),this.right=ko.observable(b),this.top=ko.observable(c)}return a.prototype.isEmpty=function(){return this.toString()===a.defaultVal},a.fromString=function(b){void 0===b&&(b=a.defaultVal);var c=b.split(",");return new a(parseInt(c[0]),parseInt(c[1]),parseInt(c[2]),parseInt(c[3]))},a.prototype.toString=function(){var a=Math.round(this.left())+", "+Math.round(this.right())+", "+Math.round(this.top())+", "+Math.round(this.bottom());return a},a.defaultVal="100, 100, 100, 100",a.unitProperties=["left","right"],a}();b.Margins=Q;var R=function(){function a(a,b,c,d){void 0===a&&(a=0),void 0===b&&(b=0),void 0===c&&(c=0),void 0===d&&(d=0),this.left=ko.observable(0),this.top=ko.observable(0),this.width=ko.observable(0),this.height=ko.observable(0),this.className="dxrd-drag-helper-item",this.left(a),this.top(b),this.width(c),this.height(d)}return a}();b.Rectangle=R,b.createUnitProperties=u,b.propertiesVisitor=v,b.objectsVisitor=w,b.collectionsVisitor=x,b.getImageClassName=y,b.getUniqueNameForNamedObjectsArray=z,b.getUniqueName=A;var S=function(a){function b(b){var c=this;a.call(this),this._showInline=ko.observable(!1),this.text=ko.observable();var d;this._disposables.push(b.focused.subscribe(function(){c._showInline()&&d&&(d(c.text()),c._showInline(!1)),d=b.focused()&&b.focused().getControlModel().text})),this.visible=ko.pureComputed(function(){return c._showInline()}),this.show=function(a){if(!c._showInline()){var e=b.selectedItems?1===b.selectedItems.length:!!b.focused();if(e&&d&&!b.focused().locked){if(c.text(d()),c._showInline(!0),a){var f=$(a).find("textarea")[0];f&&f.select()}}else c._showInline(!1)}},this.keypressAction=function(a){27===a.jQueryEvent.keyCode&&c._showInline(!1),13===a.jQueryEvent.keyCode&&(d(c.text()),c._showInline(!1))}}return __extends(b,a),b}(b.Disposable);b.InlineTextEdit=S;var T=function(b){function c(c,d){var e=this;b.call(this),this._handlers=[],this._visitedCollections=[],this._setName=function(a){if(!a.name()){var b=a.controlType||"Unknown",c=a.getControlInfo&&a.getControlInfo().defaultVal&&a.getControlInfo().defaultVal["@Text"],d=z(e.allControls(),b);a.name(d),!a.text||a.text()||null!==c&&void 0!==c||a.text(a.name())}},this.added=function(a){e._collectControls(a)},this.deleted=function(b){var c=e.allControls.indexOf(b);e.allControls.splice(c,1),a.Designer.collectionsVisitor(b,function(a){a().forEach(function(a){e.allControls.splice(e.allControls.indexOf(a),1)})})},this.allControls=ko.observableArray();var f=c;ko.isSubscribable(c)&&(this._disposables.push(c.subscribe(function(a){e._visitedCollections=[],e.allControls([]),e._collectControls(a)})),f=c.peek()),this._disposables.push(this.allControls.subscribe(function(a){a.forEach(function(a){e._setName(a)})})),this._collectControls(f),this._handlers.push.apply(this._handlers,d)}return __extends(c,b),c.prototype._collectControls=function(b){var c=this;this.allControls.push(b),a.Designer.collectionsVisitor(b,function(a){-1===c._visitedCollections.indexOf(a)&&(c._visitedCollections.push(a),c._disposables.push(a.subscribe(function(a){a.forEach(function(a){c[a.status]&&c[a.status](a.value),c._handlers.forEach(function(b){b[a.status]&&b[a.status](a.value)})})},null,"arrayChange"))),c.allControls.push.apply(c.allControls,a())})},c.prototype.getControls=function(b){var c=ko.observableArray();return a.Designer.collectionsVisitor(b,function(a){c.push.apply(c,a())}),c},c}(b.Disposable);b.DesignControlsHelper=T;var U=function(){function a(){this.controlsMap={}}return a.prototype.getControlType=function(a){var b=m(a["@ControlType"]||"");return this.controlsMap[b]?b:"Unknown"},a.prototype.createControl=function(a,c,d){var e=this.getControlType(a);return new(this.controlsMap[e]&&this.controlsMap[e].type||b.ElementViewModel)(a,c,d)},a.prototype.registerControl=function(a,b){this.controlsMap[a]=b,this.controlsMap[a].info=$.extend(!0,[],b.info)},a.prototype.getPropertyInfo=function(a,b){return this.controlsMap[a].info.filter(function(a){return a.displayName===b})[0]},a}();b.ControlsFactory=U;var V=function(b){function c(c,d,e){b.call(this),e&&(this.getInfo=function(){return e}),d=d||new a.JS.Utils.ModelSerializer,d.deserialize(this,c,e)}return __extends(c,b),c}(b.Disposable);b.SerializableModel=V,b.cutRefs=B;var W=function(){function a(a){var b=this;this.borderCss=function(c){var d=a.borderWidth&&a.borderWidth()||"";d&&c&&(d*=c);var e=a.borderColor&&a.borderColor()||"",f=a.borders&&a.borders()||"",g=a.borderDashStyle&&a.borderDashStyle()||"";return b.createBorders(g,d,e,f)},this.backGroundCss=function(){return{backgroundColor:a.backColor&&a.backColor()||"transparent"}},this.foreColorCss=function(){var b="transparent"===(a.foreColor&&a.foreColor()||"transparent")?"black":a.foreColor();return{color:b}},this.fontCss=function(){return b.createFont(a.font&&a.font()||"")},this.paddingsCss=function(){return b.createPadding(a.padding&&a.padding()||"")},this.textAlignmentCss=function(){var c=a.textAlignment&&a.textAlignment()||"";return $.extend(b.createVerticalAlignment(c),b.createHorizontalAlignment(c))},this.stroke=function(){var b="transparent"===(a.foreColor&&a.foreColor()||"transparent")?"black":a.foreColor();return{stroke:b}},this.strokeWidth=function(){var b=a.lineWidth&&a.lineWidth()||"";return{strokeWidth:b}},this.strokeWidthWithWidth=function(){var b=a.width&&a.width()||"";return{strokeWidth:b}},this.strokeDashArray=function(){var c=b.createStrokeDashArray(a.lineStyle&&a.lineStyle()||"",a.lineWidth&&a.lineWidth()||"");return{strokeDasharray:c}},this.strokeDashArrayWithWidth=function(){var c=b.createStrokeDashArray(a.lineStyle&&a.lineStyle()||"",a.width&&a.width()||"");return{strokeDasharray:c}},this.crossBandBorder=function(c){return b.createBorder(a.borderDashStyleCrossband&&a.borderDashStyleCrossband()||"solid",a.borderWidth&&a.borderWidth()||"",a.borderColor&&a.borderColor()||"",a.borders&&a.borders()||"",c)},this.angle=function(){return b.createAngle(a.angle&&a.angle()||0)},this.cellBorder=function(c,d){return void 0===d&&(d="solid 1px Silver"),b.createControlBorder(a.borderDashStyle&&a.borderDashStyle()||"solid",a.borderWidth&&a.borderWidth()||"",a.borderColor&&a.borderColor()||"",a.borders&&a.borders()||"",c,d)},this.zipCodeFontCss=function(c){return b.createZipCodeFont(c||a.size.height())},this.zipCodeAlignment=function(){var a="TopLeft";return $.extend(b.createVerticalAlignment(a),b.createHorizontalAlignment(a))}}return a.prototype.createBorder=function(a,b,c,d,e){var f={};d=d||"All",f={stroke:"Silver",strokeWidth:2};var g=this.createStrokeDashArray(a,b);return(-1!==d.indexOf(e)||-1!==d.indexOf("All"))&&(f.stroke=c,f.strokeWidth=b,f.strokeDasharray=g),f},a.prototype.createControlBorder=function(a,b,c,d,e,f){void 0===f&&(f="solid 1px Silver");var g={};return d=d||"",g["border"+e]=f,a="Dash"===a?"dashed":"Dot"===a?"dotted":"Double"===a?"double":"solid",(-1!==d.indexOf(e)||-1!==d.indexOf("All"))&&(g["border"+e]=a+" "+b+"px "+c),g},a.prototype.createBorders=function(a,b,c,d,e){void 0===e&&(e="solid 1px Silver");var f=this.createControlBorder(a,b,c,d,"Left",e),g=this.createControlBorder(a,b,c,d,"Right",e),h=this.createControlBorder(a,b,c,d,"Top",e),i=this.createControlBorder(a,b,c,d,"Bottom",e),j=$.extend({},f,g,h,i);return j},a.prototype.createZipCodeFont=function(a){var b={};return b.fontFamily="Impact",b.fontSize=a+"px",b},a.prototype.createFont=function(a){var b={};a=a||"";var c=a.split(",");if(b.fontFamily=c[0],b.fontSize=c[1],c.length>2)for(var d=2;d<c.length;d++)-1!==c[d].indexOf("Bold")&&(b.fontWeight="Bold"),-1!==c[d].indexOf("Italic")&&(b.fontStyle="Italic"),-1!=c[d].indexOf("Underline")&&(b.textDecoration="Underline"),-1!=c[d].indexOf("Strikeout")&&(b.textDecoration=(b.textDecoration?b.textDecoration+" ":"")+"Line-through");return b.fontWeight||(b.fontWeight=""),b.fontStyle||(b.fontStyle=""),b.textDecoration||(b.textDecoration=""),b},a.prototype.createPadding=function(a){var c={},d=new b.Widgets.PaddingModel({value:ko.observable(a)});return c.paddingLeft=d.left()+"px",c.paddingTop=d.top()+"px",c.paddingRight=d.right()+"px",c.paddingBottom=d.bottom()+"px",c},a.prototype.createVerticalAlignment=function(a){var b={};return-1!==a.indexOf("Top")&&(b.verticalAlign="top"),-1!==a.indexOf("Middle")&&(b.verticalAlign="middle"),-1!==a.indexOf("Bottom")&&(b.verticalAlign="bottom"),b},a.prototype.createHorizontalAlignment=function(a){var b={};return-1!==a.indexOf("Left")&&(b.textAlign="left"),-1!==a.indexOf("Right")&&(b.textAlign="right"),-1!==a.indexOf("Center")&&(b.textAlign="center"),-1!==a.indexOf("Justify")&&(b.textAlign="justify"),b},a.prototype.createStrokeDashArray=function(a,b){return"Solid"===a?"":"Dot"===a?[b,2*b].join("px, ")+"px":"Dash"===a?[4*b,4*b].join("px, ")+"px":"DashDot"===a?[4*b,2*b,b,2*b].join("px, ")+"px":"DashDotDot"===a?[4*b,2*b,b,2*b,b,2*b].join("px, ")+"px":""},a.prototype.createAngle=function(a){return a=-a,{"-webkit-transform":"rotate("+a+"deg)","-moz-transform":"rotate("+a+"deg)","-o-transform":"rotate("+a+"deg)","-ms-transform":"rotate("+a+"deg)",transform:"rotate("+a+"deg)"}},a}();b.CssCalculator=W;var X=function(a){function c(){a.apply(this,arguments),this.selectedPath=ko.observable(""),this.selectedMember=ko.observable()}return __extends(c,a),c.prototype.getClassName=function(a){if(a.className&&a.className())return a.className();var b=/function (.{1,})\(/,c=b.exec(a.constructor.toString());return c&&c.length>1?c[1]:""},c.prototype.createItem=function(a,c,d,e){var f=a.getInfo&&a.getInfo(),g=f&&f.filter(function(a){return a.propertyName===c})[0],h=ko.unwrap(d);g&&null!==h&&"object"==typeof h&&e.push({name:c,displayName:b.getLocalization(g.displayName),specifics:c,innerActions:h.innerActions,isList:!!h.push})},c.prototype.getMemberByPath=function(a,b){var c=b.split("."),d=a;return c.splice(0,1),c.forEach(function(a){d&&d[a]&&(d=ko.unwrap(d[a]))}),d},c.prototype.getObjectPropertiesForPath=function(a,b,c){var d=this,e=this.getMemberByPath(a,b),f=[];return e&&(e.push?this.createArrayItem(e,f,c):$.each(e,function(a,b){d.createItem(e,a,b,f)})),f},c.prototype.createArrayItem=function(a,b,c){var d=this;$.each(a,function(a,e){var f=ko.unwrap(e);b.push({name:c?c+"."+a.toString():a.toString(),displayName:ko.unwrap(f.displayName||f.name),specifics:d.getClassName(f),innerActions:f.innerActions,isList:!!f.push})})},c}(b.Disposable);b.ObjectStructureProviderBase=X;var Y=function(a){function c(c,d,e){var f=this;a.call(this),e&&(this.selectedMember=e),this.listPropertyNames=d||[],this.getItems=function(a){var d=$.Deferred();if(a.fullPath){var e=c.filter(function(b){return b.displayName===a.fullPath.split(".")[0]})[0];d.resolve(f.getObjectPropertiesForPath(ko.unwrap(e.model),a.fullPath,e.displayName))}else d.resolve((c||[]).map(function(a){return{name:a.displayName,displayName:b.getLocalization(a.displayName),isList:!0,specifics:a.className,dragData:{noDragable:!0}}}));return d.promise()},this._disposables.push(this.selectedMember.subscribe(function(a){var b=f.getPathByMember&&f.getPathByMember(a);b!==f.selectedPath()&&b&&f.selectedPath(b)}))}return __extends(c,a),c.prototype.createArrayItem=function(a,b,c){var d=this;$.each(a,function(a,e){var f=ko.unwrap(e),g=!1;d.listPropertyNames.forEach(function(a){!g&&f[a]&&ko.unwrap(f[a]).length>0&&(g=!0)}),b.push({name:c?c+"."+a.toString():a.toString(),displayName:ko.unwrap(f.displayName||f.name),specifics:d.getClassName(f),isList:g,data:f,dragData:{noDragable:!("Styles"===c||"Formatting Rules"===c)}})})},c.prototype.createItem=function(b,c,d,e){var f=this.listPropertyNames.length>0?this.listPropertyNames.indexOf(c)>-1:!0;d&&d.push&&f?this.createArrayItem(ko.unwrap(d),e,c):a.prototype.createItem.call(this,b,c,d,e)},c}(X);b.ObjectExplorerProvider=Y;var Z=function(a){function c(c,d){var e=this;a.call(this),this.getItems=function(a){var f=$.Deferred();return f.resolve(a.fullPath?e.getObjectPropertiesForPath(ko.unwrap(c),a.fullPath):[{name:d||ko.unwrap(c.name),displayName:b.getLocalization(d||ko.unwrap(c.name)),isList:!0,specifics:c.className&&c.className(),dragData:{noDragable:!0}}]),f.promise()},this._disposables.push(this.selectedPath.subscribe(function(a){e.selectedMember(ko.unwrap(e.getMemberByPath(ko.unwrap(c),a)))}))}return __extends(c,a),c}(X);b.ObjectStructureProvider=Z;var _=function(){function a(a,b){var c=this;this.selectedItem=null,this.itemsFilter=function(b){var c=b.name.split(".")[0];return a?-1!==a.indexOf(c)||$.isNumeric(c):!0},this.hasItems=function(a){var c=a.name.split(".")[0];return a.isList||(b?-1!==b.indexOf(c):!1)},this.getActions=function(a){return a.isSelected()&&a.data.innerActions||[]},this.select=function(a){c.selectedItem&&c.selectedItem.isSelected(!1),c.selectedItem=a,a.isSelected(!0)}}return a.prototype.canSelect=function(){return!0},a}();b.ObjectStructureTreeListController=_;var aa=function(a){function b(b,c,d){a.call(this,c,d),this.clickHandler=function(a){a.data&&a.data.data&&b(a.data.data)}}return __extends(b,a),b}(_);b.ObjectExplorerTreeListController=aa;var ba=function(){function a(){this.selectedItem=null,this.suppressActions=!0}return a.prototype.itemsFilter=function(a){return"parameters"!==a.specifics&&("List"===a.specifics||"ListSource"===a.specifics||a.isList===!0||"none"===a.specifics)},a.prototype.hasItems=function(a){return"none"!==a.specifics},a.prototype.canSelect=function(a){return a.hasItems&&!!a.path||"none"===a.data.specifics},a.prototype.select=function(a){this.canSelect(a)&&(this.selectedItem&&this.selectedItem.isSelected(!1),this.selectedItem=a,a.isSelected(!0))},a}();b.DataMemberTreeListController=ba;var ca=function(a){function b(b,c){var d=this;void 0===c&&(c=!1),a.call(this),this.tabs=[],this.collapsed=ko.observable(!1),this.toggleCollapsedImageClassName=ko.pureComputed(function(){return d.collapsed()?"dxrd-image-propertygrid-expand":"dxrd-image-propertygrid-collapse"}),this.toggleCollapsedText=ko.pureComputed(function(){return d.collapsed()?"Open":"Collapse"}),this.tabs=b,this._disposables.push(ko.computed(function(){var a=b.filter(function(a){return a.visible()});0!==a.length?0===a.filter(function(a){return a.active.peek()}).length&&(a[0].active(!0),c&&d.collapsed(!0)):d.collapsed(!0)})),c&&this.tabs.forEach(function(a){d._disposables.push(a.active.subscribe(function(b){b&&d.selectTab({model:a})}))}),this.selectTab=function(a){var b=a.model;d.tabs.forEach(function(a){a.active(a===b)}),d.collapsed(!1)};var e=ko.observable(340);this.width=ko.pureComputed({read:function(){return d.collapsed()?0:e()},write:function(a){e(a)}}),this.headerWidth=ko.pureComputed(function(){return 50+d.width()})}return __extends(b,a),b}(b.Disposable);b.TabPanel=ca;var da=function(a){function b(b,c,d,e,f){var g=this;a.call(this),this.active=ko.observable(!1),this.visible=ko.observable(),e=e||b.toLowerCase(),this.text=b,this.imageClassName=ko.pureComputed(function(){return"dxrd-image-"+e+(g.active()?"-active":"-inactive")}),this.template=c,this.visible=ko.pureComputed(function(){return void 0!==f?f():!0}),this._disposables.push(this.visible.subscribe(function(a){a||g.active(!1)})),this.model=d}return __extends(b,a),b}(b.Disposable);b.TabInfo=da,b.getFirstItemByPropertyValue=C,b.findFirstItemMatchesCondition=D;var ea=function(a){function b(b){b&&b instanceof Array&&(this.visible=b.length>1,b.sort(function(a,b){if(a.name&&a.name()&&b.name&&b.name()){var c=a.name().toLowerCase(),d=b.name().toLowerCase();

return d>c?-1:c>d?1:0}})),a.call(this,b)}return __extends(b,a),b.prototype.load=function(b){return b&&b.filter&&2===b.filter.length?$.Deferred().resolve([b.filter[1]]).promise():a.prototype.load.call(this,b)},b}(a.data.ArrayStore);b.ControlsStore=ea,b.updateSurfaceContentSize=E;var fa=function(){function a(){this.data=ko.observable(),this.title=ko.observable(),this.visible=ko.observable(!1),this.actions=ko.observableArray([]),this.target=ko.observable()}return a}();b.PopupService=fa,b.generateDefaultParts=G,b.deleteSelection=H,b.getEditorType=J,b.createActionWrappingFunction=K,b.createDesigner=L,b.localizeNoneString=M}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b=function(b){function c(c,d,e,f,g){var h=this;void 0===d&&(d=ko.observable(0)),void 0===e&&(e=!0),void 0===f&&(f=ko.observable(1001)),void 0===g&&(g=ko.observable(1001)),b.call(this),this.originalX=ko.observable(0),this.originalY=ko.observable(0),this.active=ko.observable(!1),this.position=new a.Rectangle,this.isVertical=!0,this.maxHeight=ko.observable(0),this.maxWidth=ko.observable(0),this.isVertical=e,this._disposables.push(ko.computed(function(){h.maxHeight(f()),h.maxWidth(g()),h.originalX(c()),h.originalY(d()),e?(h.position.left(c()),h.position.height(f())):(h.position.top(d()),h.position.width(g()))}))}return __extends(c,b),c.prototype.activate=function(a){if(this.isVertical){var b=Math.min(this.originalY(),a.top),c=Math.max(this.originalY(),a.top);this.position.height(c-b),this.position.top(b)}else{var d=Math.min(this.originalX(),a.left),e=Math.max(this.originalX(),a.left);this.position.width(e-d),this.position.left(d)}this.active(this.position.left()+this.position.width()<this.maxWidth()&&this.position.height()+this.position.top()<this.maxHeight()&&this.position.left()>=0&&this.position.top()>=0)},c}(a.Disposable);a.SnapLine=b;var c=function(){function b(a){void 0===a&&(a=null),this.snapLines=ko.observableArray([]),this._surfaceContext=a}return b.prototype._getActiveSnapLines=function(a,c){void 0===c&&(c=b.snapTolerance);var d=[],e=[],f=[];return this.snapLines().forEach(function(b){if(b.isVertical){var d=Math.abs(b.position.left()-a.left);c>d&&f.push({snapLine:b,distance:d})}else{var d=Math.abs(b.position.top()-a.top);c>d&&e.push({snapLine:b,distance:d})}}),f.sort(function(a,b){return a.distance-b.distance}),e.sort(function(a,b){return a.distance-b.distance}),0!==f.length&&d.push(f[0].snapLine),0!==e.length&&d.push(e[0].snapLine),d},b.prototype.updateSnapLines=function(){var b=[],c=[];a.collectionsVisitor(this._surfaceContext(),function(a){b.push.apply(b,a())},["bands","controls","rows","cells"]),b.forEach(function(a){a.isSnapTarget&&Array.prototype.push.apply(c,a.snapLines())}),this.snapLines(c)},b.prototype.deactivateSnapLines=function(){this.snapLines().forEach(function(a){a.active(!1)})},b.prototype.activateSnapLines=function(a){var b=this._getActiveSnapLines(a);b.forEach(function(b){b.activate(a)})},b.snapTolerance=10,b}();a.SnapLinesHelper=c;var d=function(b){function c(a){b.call(this),this.controls=ko.observableArray([]),this.isLocked=ko.observable(!1),this._selectionProvider=a}return __extends(c,b),c.prototype.update=function(b){var c=this;this.controls([]),this.left(b.absolutePosition.x()),this.top(b.absolutePosition.y()),this.width(b.rect().width),this.height(b.rect().height),this._selectionProvider.selectedItems.filter(function(a){return!a.locked}).forEach(function(d){d.parent===b.parent&&c.controls.push(new a.Rectangle(d.absolutePosition.x()-c.left(),d.absolutePosition.y()-c.top(),d.rect().width,d.rect().height))})},c.prototype.setContent=function(a){this.controls([]),this.left(a.left()),this.top(a.top()),this.width(a.width()),this.height(a.height()),this.controls.push(a)},c}(a.Rectangle);a.DragHelperContent=d;var e=function(){function b(b,c,d,e,f){var g=this;this._size=new a.Size(0,0),this.alwaysAlt=!1,this.surface=b,this.selection=c,this.snapHelper=e,this.dragHelperContent=f,this.stopDrag=function(a,b){d().start(),g.doStopDrag(a,b),d().end(),e&&e.deactivateSnapLines()}}return b.prototype._getAbsoluteSurfacePosition=function(a){return{left:a.position.left-a.delta.left,top:a.position.top-a.delta.top}},b.prototype.addControl=function(b,c,d){var e=c.width&&c.width()||c._width&&c._width(),f=c.underCursor();if(f.x<e){c.getControlModel().addChild(b);var g=a.findSurface(b),h=d.width(),i=d.height();g.rect(f.x+h>e?{left:e-h-1,top:f.y,width:h,height:i}:{left:f.x,top:f.y,width:h,height:i}),this.selection.initialize(g)}},b.prototype.recalculateSize=function(b){var c=ko.unwrap(this.surface);this._size.width(a.unitsToPixel(ko.unwrap(b.width)*c.dpi()/100,c.measureUnit(),c.zoom())),this._size.height(a.unitsToPixel(ko.unwrap(b.height)*c.dpi()/100,c.measureUnit(),c.zoom()))},b.prototype.helper=function(){this.snapHelper&&this.snapHelper.updateSnapLines()},b.prototype.startDrag=function(){},b.prototype.drag=function(a,b){if(this.snapHelper&&this.snapHelper.deactivateSnapLines(),a.altKey!==!0){var c=this._getAbsoluteSurfacePosition(b);this.snapHelper&&this.snapHelper.activateSnapLines(c),0!==this._size.width()&&(this.snapHelper&&this.snapHelper.activateSnapLines({left:c.left+this._size.width(),top:c.top}),this.snapHelper&&this.snapHelper.activateSnapLines({left:c.left,top:c.top+this._size.height()}))}if(this.selection.dropTarget){var d=(this.selection.dropTarget.getControlModel().getMetaData().isContainer?this.selection.dropTarget:this.selection.dropTarget.parent).locked;d?(this.snapHelper&&this.snapHelper.deactivateSnapLines(),this.dragHelperContent&&this.dragHelperContent.isLocked(!0)):this.dragHelperContent&&this.dragHelperContent.isLocked(!1)}},b.prototype.doStopDrag=function(){},b}();a.DragDropHandler=e;var f=function(b){function c(a,c,d,e,f){var g=this;b.call(this,a,c,d,e,f),this.cursor="move",this.containment=".dxrd-ghost-container",this.helper=function(a){b.prototype.helper.call(g,a),f.update(a),g._size.width(f.width()),g._size.height(f.height())}}return __extends(c,b),c.prototype.adjustDropTarget=function(a){for(var b=a;null!=b;){if(b.selected&&b.selected()){a=b.parent;break}b=b.parent}return a},c.prototype.startDrag=function(a){this.selection.swapFocusedItem(a);var b=this.selection.focused(),c=b.rect().left+b.underCursor().x,d=b.rect().top+b.underCursor().y;this.selection.selectedItems.filter(function(a){return!a.locked}).forEach(function(a){a.parent===b.parent&&(a.underCursor().offsetX=a.rect().left-c,a.underCursor().offsetY=a.rect().top-d)})},c.prototype.drag=function(a,c){c.position.left+=c.scroll.left,c.position.top+=c.scroll.top,b.prototype.drag.call(this,a,c)},c.prototype.doStopDrag=function(b){var c=this;if(this.selection.dropTarget){var d=this.selection.dropTarget.getControlModel(),e=d.getMetaData().isContainer?this.selection.dropTarget:this.selection.dropTarget.parent;if(!e||!e.canDrop())return;var f=b.position.left-e.absolutePosition.x(),g=b.position.top-e.absolutePosition.y(),h=this.selection.focused();e.underCursor().x=f-h.underCursor().offsetX,e.underCursor().y=g-h.underCursor().offsetY;var i=[h];this.selection.selectedItems.filter(function(a){return!a.locked}).forEach(function(a){h!==a&&a.parent===h.parent&&i.push(a)}),i.forEach(function(b){var d=c.adjustDropTarget(e),f=b.getControlModel().getNearestParent(d.getControlModel());d=a.findSurface(f);var g=function(){var a=d.underCursor().x+b.underCursor().offsetX,c=d.underCursor().y+b.underCursor().offsetY;b.rect({left:a>0?a:0,top:c>0?c:0})};b.parent!==d?(b.parent.getControlModel().removeChild(b.getControlModel()),g(),f.addChild(b.getControlModel())):g()})}},c.prototype.create=function(a){ko.dataFor(a.target).locked&&$(this).draggable("disable")},c}(e);a.SelectionDragDropHandler=f;var g=function(b){function c(c,d,e,f,g,h){var i=this;b.call(this,c,d,e,f,g),this.cursor="arrow",this._controlsFactory=h,this.containment=".dxrd-designer",this.cursorAt={top:0,left:0},this.helper=function(c){b.prototype.helper.call(i,c);var d=c,e=a.Size.fromString(d.info["@SizeF"]||d.info.size||"100,23");i.recalculateSize(e),g.setContent(new a.Rectangle(0,0,i._size.width(),i._size.height()))}}return __extends(c,b),c.prototype.doStopDrag=function(b,c){if(this.selection.dropTarget){var d=c,e=this._controlsFactory.createControl($.extend({},d.info),null),f=e.getNearestParent(this.selection.dropTarget.getControlModel()),g=a.findSurface(f);if(!g.canDrop())return;var h=this._getAbsoluteSurfacePosition(b);g.underCursor().x=h.left-(g.absolutePosition&&g.absolutePosition.x()||0),g.underCursor().y=h.top-(g.absolutePosition&&g.absolutePosition.y()||0),(this.surface().isFit&&this.surface().isFit(g)||g.underCursor().isOver)&&this.addControl(e,g,this._size)}},c}(e);a.ToolboxDragDropHandler=g}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function a(a,b){var c=this;this.showPopup=function(a){c._popupService.title(c._editor.displayName),c._updateActions(c._editor._model()),c._popupService.target(a.element),c._popupService.visible(!0)},this.templateName="dxrd-editor-addons",this._editor=a,this._popupService=b,this.visible=ko.pureComputed(function(){return a.disabled()?!1:a._model()&&a._model().actions&&a._model().actions.length>0}),this.editorMenuButtonCss=ko.pureComputed(function(){return a._model()&&a._model().getActionClassName&&a._model().getActionClassName(a.name)||""})}return a.prototype._updateActions=function(a){var b=this;this._popupService.actions([]),a.actions&&a.actions.forEach(function(a){a.visible(b._editor.name)&&b._popupService.actions.push({action:function(){a.action(b._editor.name),b._popupService.visible(!1)},title:a.title,visible:function(){return!0}})})},a}();c.EditorAddOn=d;var e=function(c){function e(e,f,g){var h=this;void 0===g&&(g=0),c.call(this,e,f,g),this.focusedItem=ko.observable(),this.createEditorAddOn=function(a){var b=new d(a,h.popupService);return{templateName:b.templateName,data:b}},this.popupService=new b.PopupService,this.createGroups(f.groups),this.update(e()),this.focusedImageClassName=ko.pureComputed(function(){return b.getImageClassName(e()&&e().controlType)}),this.focusedItem=e,this.displayExpr=function(b){return a.Designer.getControlFullName(b)}}return __extends(e,c),e.prototype.update=function(a){c.prototype.update.call(this,a),a&&(this.groups||[]).forEach(function(b){b.update(a)})},e.prototype.createGroups=function(a){var b=this;this.groups=$.map(a,function(a,c){return new f(c,a,function(a){return b.createEditors(a)})})},e}(a.JS.Widgets.ObjectProperties);c.ControlProperties=e;var f=function(a){function b(b,c,d,e){var f=this;if(void 0===e&&(e=!0),a.call(this),this.editors=ko.observableArray(),this.editorsCreated=ko.observable(!1),this.displayName=b,this._serializationsInfo=c,this.collapsed=ko.observable(e),this.visible=ko.observable(!1),e)var g=this.collapsed.subscribe(function(){g.dispose(),f.editors(d(c)),f._viewModel&&f.editors().forEach(function(a){a.update(f._viewModel)})});else this.editors(d(c))}return __extends(b,a),b.prototype.update=function(a){var b=this;if(this._viewModel=a,a){var c=(a.getInfo&&a.getInfo()||this._serializationsInfo).filter(function(c){return b._serializationsInfo.filter(function(a){return a.propertyName===c.propertyName}).length>0&&!!a[c.propertyName]&&ko.unwrap(c.visible)!==!1}).length>0;this.visible(c),c&&this.editors().forEach(function(a){a.update(b._viewModel)})}else this.visible(!1)},b}(b.Disposable);c.Group=f;var g=function(){function a(a,b){var c=this;this.selectedItems=ko.observable([]);var d=a();this._items=b.map(function(a){var b=ko.observable(c._isValueSelected(a.value,d));return{selected:b,value:a.value,displayValue:a.displayValue||a.value,toggleSelected:function(){b(!b())}}}),this.selectedItems=ko.pureComputed(function(){return c._items.filter(function(a){return a.selected()})}),this.selectedValuesString=ko.pureComputed({read:function(){return c.selectedItems().map(function(a){return a.displayValue}).join(", ")},write:function(){}}),this.isSelectedAll=ko.pureComputed({read:function(){var a=c._items.filter(function(a){return a.selected()}).length;return a>0&&a<c._items.length?void 0:a===c._items.length},write:function(a){c._items.forEach(function(b){b.selected(a)})}}),this.displayItems=[{selected:this.isSelectedAll,value:null,displayValue:"(Select All)",toggleSelected:function(){c.isSelectedAll(!c.isSelectedAll())}}].concat(this._items),this.updateValue=function(){a(c._items.filter(function(a){return a.selected()}).map(function(a){return a.value}))}}return a.prototype._isValueSelected=function(a,b){return a instanceof Date?b.filter(function(b){return b-a===0}).length>0:-1!==b.indexOf(a)},a}();c.MultiValuesHelper=g;var h=function(b){function c(c,d,e){var f=this;b.call(this,c,d,e),this.path=ko.pureComputed(function(){return f._model()&&f._model().getPath&&f._model().getPath(f.name)||""}),this.treeListController=new a.JS.Widgets.TreeListController}return __extends(c,b),c}(a.JS.Widgets.Editor);c.FieldListEditor=h;var i=function(a){function c(c,d,e){a.call(this,c,d,e),this.treeListController=new b.DataMemberTreeListController}return __extends(c,a),c}(h);c.DataMemberEditor=i;var j=function(a){function b(b,c,d){var e=this;a.call(this,b,c,d),this.displayValue=ko.pureComputed({read:function(){return e.value()&&-1!==e.value().indexOf("rgba")?e.value():"rgba(0,0,0,0)"},write:function(a){e.value(a)}})}return __extends(b,a),b}(a.JS.Widgets.Editor);c.ColorPickerEditor=j}(c=b.Widgets||(b.Widgets={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){b.editorTemplates={guid:{header:"dxrd-guid"},borders:{header:"dxrd-borders"},controls:{header:"dxrd-controls"},objecteditorCustom:{custom:"dxrd-objectEditorContent",editorType:a.JS.Widgets.PropertyGridEditor},treelist:{custom:"dxrd-treelistContent",editorType:a.JS.Widgets.Editor},field:{header:"dxrd-field",editorType:b.FieldListEditor},dataMember:{header:"dxrd-field",editorType:b.DataMemberEditor},filterEditor:{header:"dxrd-filterstring"},expressionEditor:{header:"dxrd-expressionstring"},multiValue:{header:"dxrd-multivalue"},multiValueEditable:{custom:"dxrd-multivalue-editable"},customColorEditor:{header:"dxrd-colorpicker",editorType:b.ColorPickerEditor}}}(c=b.Widgets||(b.Widgets={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){b.sizeFake=[{propertyName:"height",displayName:"Height",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"width",displayName:"Width",editor:a.JS.Widgets.editorTemplates.numeric}],b.locationFake=[{propertyName:"x",displayName:"X",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"y",displayName:"Y",editor:a.JS.Widgets.editorTemplates.numeric}]}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b=function(){function a(){var a=this;this._focused=ko.observable(null),this._selectedControls=ko.observableArray(),this.focused=ko.pureComputed({read:function(){return a._focused()},write:function(b){b!==a._focused()&&(b&&(a._firstSelected=b),a.updateSelection(a._firstSelected))}}),this.dropTarget=null,this.expectClick=!1}return a.prototype._removeFromSelection=function(a){a.focused(!1),a.selected(!1),-1!==this._selectedControls.indexOf(a)&&this._selectedControls.splice(this._selectedControls.indexOf(a),1)},a.prototype._setFocused=function(a){this._focused()&&this._removeFromSelection(this._focused()),this._focused(a),a&&(a.focused(!0),-1===this._selectedControls.indexOf(a)&&this._selectedControls.push(a),a.selected(!0))},a.prototype._resetTabPanelFocus=function(){var a=document.activeElement&&0===$(document.activeElement).closest(".dxrd-surface").length;a&&document.activeElement.blur&&document.activeElement.blur()},Object.defineProperty(a.prototype,"selectedItems",{get:function(){return this._selectedControls()},enumerable:!0,configurable:!0}),a.prototype.updateSelection=function(a){this._selectedControls().forEach(function(a){a.focused(!1),a.selected(!1)}),this._selectedControls([]),this._setFocused(a)},a.prototype.swapFocusedItem=function(a){this._focused()!==a&&(this._focused().focused(!1),this._focused(a),this._focused().focused(!0))},a.prototype.initialize=function(a){a=a||this.dropTarget,this._firstSelected=a&&a.focused?a:null,this.updateSelection(this._firstSelected?this._firstSelected:null)},a.prototype.clickHandler=function(a,b){return void 0===b&&(b={ctrlKey:!1}),this.expectClick?void(this.expectClick=!1):(a=a||this.dropTarget,b.ctrlKey?this.selectionWithCtrl(a):this._selectedControls().length>1&&-1!==this._selectedControls.indexOf(a)?this.swapFocusedItem(a):this._focused()!==a&&this.initialize(a),void this._resetTabPanelFocus())},a.prototype.selecting=function(a){this._focused()?(a.cancel=!a.control.checkParent(this._firstSelected),a.cancel||(this._firstSelected&&this._firstSelected.focused()?this._setFocused(a.control):-1===this._selectedControls.indexOf(a.control)&&(a.control.selected(!0),this._selectedControls.push(a.control)))):this._setFocused(a.control)},a.prototype.unselecting=function(a){this._focused()===a?(this._setFocused(null),this._setFocused(0===this._selectedControls().length?this._firstSelected:this._selectedControls()[0])):this._removeFromSelection(a)},a.prototype.selectionWithCtrl=function(a){if(a&&a.allowMultiselect){var b=this._selectedControls();0===b.length||1===b.length&&!b[0].allowMultiselect?this.initialize(a):-1===this._selectedControls.indexOf(a)?(a.selected(!0),this._selectedControls.push(a)):this._selectedControls().length>1&&this.unselecting(a)}},a}();a.SurfaceSelection=b;var c=function(){function a(){}return a.collectProperties=function(b,c){b.forEach(function(d){for(var e in d){var f=d[e];ko.isObservable(f)&&!f.push?(c[e]=c[e]||{properties:[]},c[e].properties.push(f)):$.isPlainObject(f)&&!c[e]&&(c[e]=c[e]||{object:{}},b.filter(function(a){return a[e]}).length===b.length&&a.collectProperties(b.map(function(a){return a[e]}),c[e].object))}})},a.generateMergedObject=function(b,c,d,e){var f=!1;return $.each(c,function(c,g){if(g.object){var h={};a.generateMergedObject(h,g.object,d,e)&&(f=!0,b[c]=h)}else if(g.properties&&g.properties.length===d){f=!0;var i=g.properties[0].peek();b[c]=ko.observable(g.properties.every(function(a){return i===a.peek()})?i:null),b[c].subscribe(function(a){e&&e().start(),g.properties.forEach(function(b){b(a)}),e&&e().end()})}}),f},a.mergeControls=function(b,c){var d={},e={};return a.collectProperties(b,d),a.generateMergedObject(e,d,b.length,c),$.extend(e,{controlType:"multiselect",displayName:ko.observable("")}),e},a.getEditableObject=function(b,c){var d=ko.observable(null);return b.focused.subscribe(function(a){a&&d(a.getControlModel())}),ko.pureComputed({read:function(){return b.selectedItems.length>1?a.mergeControls(b.selectedItems.map(function(a){return a.getControlModel()}),c):d()},write:function(a){a&&a.surface?b.focused(a.surface):d(a)}})},a}();a.CombinedObject=c}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c=function(){function a(a,c,f,g){var h=this;this.toolbarItems=[],this.menuItems=[];var i=new d(c),j=[],k=ko.computed(function(){return c.selectedItems.some(function(a){return a.locked})});this.keyboardHelper=new e(c,f);var l=ko.observable(.01);j.push({text:"Cut",imageClassName:"dxrd-image-cut",disabled:ko.pureComputed(function(){return!i.canCopy()||k()}),visible:!0,clickAction:function(){f().start(),i.cut(),f().end()},hotKey:{ctrlKey:!0,keyCode:"X".charCodeAt(0)}}),j.push({text:"Copy",imageClassName:"dxrd-image-copy",disabled:ko.pureComputed(function(){return!i.canCopy()||k()}),visible:!0,clickAction:function(){i.copy()},hotKey:{ctrlKey:!0,keyCode:"C".charCodeAt(0)}}),j.push({text:"Paste",imageClassName:"dxrd-image-paste",disabled:ko.pureComputed(function(){return!i.canPaste()||k()}),visible:!0,clickAction:function(){f().start(),i.paste(),f().end()},hotKey:{ctrlKey:!0,keyCode:"V".charCodeAt(0)}}),j.push({text:"Delete",imageClassName:"dxrd-image-delete",disabled:ko.pureComputed(function(){return c.focused()?c.focused().getControlModel().getMetaData().isDeleteDeny||k():!1}),visible:!0,hotKey:{ctrlKey:!1,keyCode:46},clickAction:function(){f().start(),b.deleteSelection(c),f().end()}}),j.push({text:"Undo",imageClassName:"dxrd-image-undo",disabled:ko.pureComputed(function(){return!f().undoEnabled()||k()}),visible:!0,clickAction:function(){f().undo()},hotKey:{ctrlKey:!0,keyCode:"Z".charCodeAt(0)},hasSeparator:!0}),j.push({text:"Redo",imageClassName:"dxrd-image-redo",disabled:ko.pureComputed(function(){return!f().redoEnabled()||k()}),visible:!0,clickAction:function(){f().redo()},hotKey:{ctrlKey:!0,keyCode:"Y".charCodeAt(0)}}),j.push({text:"Zoom Out",imageClassName:"dxrd-image-zoomout",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:109},zoomStep:l,clickAction:function(){a().zoom(Math.max(a().zoom()-l(),.01))},hasSeparator:!0}),j.push({text:"Zoom 100%",imageClassName:"dxrd-image-zoom",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:187},clickAction:function(){a().zoom(1)},templateName:"dxrd-zoom-select-template",zoomLevels:ko.observableArray([5,2,1.5,1,.75,.5,.25]),zoom:ko.pureComputed({read:function(){return a().zoom()},write:function(b){a().zoom(b)}})}),j.push({text:"Zoom In",imageClassName:"dxrd-image-zoomin",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:107},zoomStep:l,clickAction:function(){a().zoom(a().zoom()+l())}}),g&&g(j),j.forEach(function(a){h._registerAction("menu"===a.container?h.menuItems:h.toolbarItems,a)})}return a.prototype._registerAction=function(a,b){b.index?a.splice(b.index,0,b):a.push(b)},a.prototype.processShortcut=function(a,b){var c=$(document.activeElement);c.is("textarea")||c.is(":input")&&("text"===c.attr("type")||"number"===c.attr("type"))||(this.keyboardHelper.processShortcut(b)?b.preventDefault():$.each(a,function(a,c){c.hotKey&&(c.disabled&&!c.disabled()||!c.disabled)&&c.hotKey.ctrlKey===b.ctrlKey&&c.hotKey.keyCode===b.keyCode&&(c.clickAction(),b.preventDefault())}))},a}();b.ActionLists=c;var d=function(){function c(a){var b=this;this._copyInfo=ko.observable(null),this.hasPasteInfo=ko.pureComputed(function(){return null!==b._copyInfo()}),this._selectionProvider=a}return c.prototype.canCopy=function(){return null!==this._selectionProvider.focused()&&!this._selectionProvider.focused().getControlModel().getMetaData().isCopyDeny},c.prototype.canPaste=function(){var a=this._selectionProvider.focused();return null!==a&&this.hasPasteInfo()&&a.getControlModel().getMetaData().isContainer},c.prototype.copy=function(){if(this.canCopy()){var b=new a.JS.Utils.ModelSerializer,c={focused:this._selectionProvider.focused(),objects:$.map(this._selectionProvider.selectedItems,function(a){return b.serialize(a.getControlModel())})};this._copyInfo(c)}},c.prototype.cut=function(){var b=new a.JS.Utils.ModelSerializer,c={focused:this._selectionProvider.focused(),objects:$.map(this._selectionProvider.selectedItems,function(a){return a.getControlModel().parentModel().removeChild(a.getControlModel()),b.serialize(a.getControlModel())})};this._copyInfo(c)},c.prototype.paste=function(){var a=this;if(this.canPaste()){var c=this._selectionProvider.focused(),d=c.getControlModel(),e=[];c===this._copyInfo().focused&&(c=c.parent,d=c.getControlModel()),d.getMetaData().isContainer||(c=c.parent,d=c.getControlModel()),$.each(this._copyInfo().objects,function(a,f){f["@Name"]=void 0;var g=d.createChild(f),h=b.findSurface(g);h.rect({left:c.rect().width/2,top:c.rect().height/2}),e.push(h)}),this._selectionProvider.initialize(),e.forEach(function(b){a._selectionProvider.selecting({control:b,cancel:!1})})}},c}();b.CopyPasteHandler=d;var e=function(){function a(a,b){var c=this;this._selection=a,this._undoEngine=b,this.shortcutMap={27:function(){return c.processEsc(),!0},37:function(){return c.moveSelectedControls(!0,!0,-1),!0},38:function(){return c.moveSelectedControls(!0,!1,-1),!0},39:function(){return c.moveSelectedControls(!1,!0,1),!0},40:function(){return c.moveSelectedControls(!1,!1,1),!0}}}return a.prototype.processShortcut=function(a){var b=this.shortcutMap[a.keyCode];return b?b(a):!1},a.prototype.processEsc=function(){var a=this._selection.focused()&&this._selection.focused().parent;a&&this._selection.focused(a)},a.prototype.moveSelectedControls=function(a,b,c){var d=this._selection.focused();if(!(!d||d&&d.getControlModel().getMetaData().isCopyDeny)){this._undoEngine&&this._undoEngine().start();var e,f,g,h=1,i=b?"left":"top",j=b?"width":"height";d.rect&&(e=d.rect()[i],f=d.rect()[i]+d.rect()[j],this._selection.selectedItems.filter(function(a){return!a.locked}).forEach(function(a){var b=a.rect()[i];e>b&&(e=b)}),this._selection.selectedItems.filter(function(a){return!a.locked}).forEach(function(a){var b=a.rect()[i]+a.rect()[j];b>f&&(f=b)}),a&&0>=e||!d.parent.rect||!a&&f.toFixed(5)>=d.parent.rect()[j]||(this._selection.selectedItems.filter(function(a){return!a.locked}).filter(function(a){return!!a.rect}).forEach(function(b){var d={},e=b.rect()[i],f=b.rect()[j],k=b.parent.rect()[j];g=e+c*h,(a&&g>=0||!a&&k>=g+f)&&(d[i]=g),!a&&g+f>k&&(d[i]=k-f),a&&0>g&&e>0&&(d[i]=0),b.rect(d)}),this._undoEngine&&this._undoEngine().end()))}},a}();b.KeyboardHelper=e}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){function b(a){var b=[];return $.each(a,function(a,d){if(!d.nonToolboxItem){var e={"@ControlType":a,index:d.toolboxIndex||0};d.size&&(e.size=d.size),d.defaultVal&&$.each(d.defaultVal,function(a,b){e[a]=b}),b.push(new c(e))}}),b.sort(function(a,b){return a.index-b.index})}var c=function(){function b(a){this.info=a}return Object.defineProperty(b.prototype,"type",{get:function(){return a.getTypeNameFromFullName(this.info["@ControlType"])},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"imageClassName",{get:function(){return a.getImageClassName(this.type)},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"index",{get:function(){return this.info.index},enumerable:!0,configurable:!0}),b}();a.ToolboxItem=c,a.getToolboxItems=b}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(a){function b(b,c){var d=this;void 0===c&&(c=ko.observable(!1)),a.call(this);var e=!1;this.disabled=c,this.left=ko.observable(!1),this.right=ko.observable(!1),this.top=ko.observable(!1),this.setAll=function(){d.disabled()||(e=!0,d.left(!0),d.bottom(!0),d.right(!0),e=!1,d.top(!0))},this.setValue=function(a){d.disabled()||d[a](!d[a]())},this.setNone=function(){d.disabled()||(e=!0,d.left(!1),d.bottom(!1),d.right(!1),e=!1,d.top(!1))},this.bottom=ko.observable(!1),this._disposables.push(ko.computed(function(){if(!e){e=!0;{var a=b.value()||"None";a.split(",")}-1!==a.indexOf("All")?(d.left(!0),d.bottom(!0),d.right(!0),d.top(!0)):-1!==a.indexOf("None")?(d.left(!1),d.bottom(!1),d.right(!1),d.top(!1)):(d.left(-1!==a.indexOf("Left")),d.top(-1!==a.indexOf("Top")),d.right(-1!==a.indexOf("Right")),d.bottom(-1!==a.indexOf("Bottom"))),e=!1}})),this._disposables.push(ko.computed(function(){var a=[];d.left()&&d.right()&&d.top()&&d.bottom()?a.push("All"):d.left()||d.right()||d.top()||d.bottom()?(d.left()?a.push("Left"):null,d.right()?a.push("Right"):null,d.top()?a.push("Top"):null,d.bottom()?a.push("Bottom"):null):a.push("None"),e||b.value(a.join(","))}))}return __extends(b,a),b}(a.Disposable);b.BordersModel=c,ko.bindingHandlers.dxBorderEditor={init:function(a,b,d,e){$(a).children().remove();var f=$("#dxrd-bordereditor").text(),g=$(a).append(f);return ko.applyBindings({value:new c(b(),e.disabled)},g.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Widgets||(a.Widgets={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c=function(a){function b(b,c){a.call(this,b,c),this._path=ko.observable(""),this._value=ko.observable(""),this.option("path")&&this._path(this.option("path")),this.option("value")&&this._value(this.option("value"))}return __extends(b,a),b.prototype._renderValue=function(){this.option("text",this.option("displayExpr")||this.option("value")),a.prototype._renderValue.call(this)},b.prototype._showDropDown=function(){if(this._popup){this._popup.option("width",this.element().width());var a=this._popup.content()&&this._popup.content()[0];a.style.maxHeight="none",a.style.height="auto"}},b.prototype._closeOutsideDropDownHandler=function(b){a.prototype._closeOutsideDropDownHandler.call(this,b,!0)},b.prototype._hideOnBlur=function(){return!1},b.prototype._popupConfig=function(){return $.extend(a.prototype._popupConfig.call(this),{container:".dx-viewport",contentTemplate:this._options._templates.template,closeOnOutsideClick:!0})},b.prototype._optionChanged=function(b,c){var d=this,e=b.name||b,f=c||b.value;switch(e){case"value":a.prototype._optionChanged.apply(this,arguments),setTimeout($.proxy(function(){d.option("opened",!1)},this),50);break;case"path":this._input().val(f?this.option("displayExpr")||this.option("value"):""),this._path(f);break;case"displayExpr":this._input().val(f);break;default:a.prototype._optionChanged.apply(this,arguments),"opened"===e&&f&&this._showDropDown()}},b.prototype._renderPopupContent=function(){var b=this;a.prototype._renderPopupContent.call(this);var c=ko.pureComputed({read:function(){return b._path()?b._path()+"."+b._value():b._value()},write:function(a){b._path()&&b._path().length>0?(b._value(a.substr(b._path().length+1)),b.option("value",b._value())):(b._value(a),b.option("value",b._value()))}}),d=$("<div>").addClass("dx-treelist-wrapper").dxScrollView({scrollByThumb:!0}),e=this._createComponent(d,"dxScrollView");e.content().append('<div data-bind="treelist: $data"></div>');var f=ko.contextFor(this.element()[0]),g=f.createChildContext({itemsProvider:this.option("itemsProvider"),selectedPath:c,treeListController:this.option("treeListController"),path:this._path});ko.applyBindings(g,e.content()[0]),this._popup.content().append(d)},b}(a.ui.dxDropDownEditor);b.dxFieldListPicker=c,a.registerComponent("dxFieldListPicker",c)}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(a){function b(b){var c=this;a.call(this);var d=!1;this.left=ko.observable(0),this.right=ko.observable(0),this.top=ko.observable(0),this.bottom=ko.observable(0),this.dpi=100,this._disposables.push(ko.computed(function(){if(!d){if(d=!0,b.value()){var a=b.value(),e=a.split(",");c.left(parseFloat(e[0])||0),c.right(parseFloat(e[1])||0),c.top(parseFloat(e[2])||0),c.bottom(parseFloat(e[3])||0),c.dpi=parseFloat(e[4])||100}d=!1}})),this._disposables.push(ko.computed(function(){if(c.left()||c.right()||c.top()||c.bottom()){var a=c.left()+","+c.right()+","+c.top()+","+c.bottom()+",100";d||b.value(a)}}))}return __extends(b,a),b}(a.Disposable);b.PaddingModel=c}(b=a.Widgets||(a.Widgets={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){function b(a){return a.isModelReady?a.isModelReady():!0}function c(b){if(a.DEBUG)throw new Error(b);console.warn(b)}function d(a,b,c,e){if(void 0===c&&(c=[]),void 0===e&&(e=["surface"]),a&&void 0!==a){var f=[];for(var g in a)if(0!==g.indexOf("_")&&-1===e.indexOf(g)){var h=g;ko.isComputed(a[g])&&ko.isWriteableObservable(a["_"+g])&&(h="_"+h),-1!==c.indexOf(a[h])||ko.isComputed(a[h])||f.push(a[h])}b(f),c.push.apply(c,f),f.forEach(function(a){a=ko.unwrap(a),"object"==typeof a&&d(a,b,c,e)})}}a.DEBUG=!0,a.propertiesVisitor=d;var e=function(){function a(a,b){var c=this;if(void 0===b&&(b=["surface"]),this._groupObservers=[],this._groupPosition=-1,this._observers=[],this._subscriptions=[],this._visited=[],this._position=-1,this._inUndoRedo=!1,this.redoEnabled=ko.observable(!1),this.undoEnabled=ko.observable(!1),this.isIngroup=-1,this._model=ko.unwrap(a),
this._ignoredProperties=b,this.subscribe(this._model),ko.isSubscribable(a)){var d=a();this._targetSubscription=a.subscribe(function(b){c._removePropertiesSubscriptions(),c._inUndoRedo||(c.properyChanged({observable:a,propertyChanged:{oldVal:d,val:b}}),d=b),c._model=b,c.subscribe(c._model)})}}return Object.defineProperty(a.prototype,"_modelReady",{get:function(){return b(this._model)},enumerable:!0,configurable:!0}),a.prototype.properyChanged=function(a){if(!this._inUndoRedo){var b=this._position+1;b<this._observers.length&&(this._observers=this._observers.splice(0,b)),this._observers.push(a),this._position=b,this.undoEnabled(!0),this.redoEnabled(!1)}},a.prototype.undoChangeSet=function(a){if(a.propertyChanged)a.observable(a.propertyChanged.oldVal);else{var b=a.observable;"added"===a.arrayChanges.status?b.splice(a.arrayChanges.index,1):"deleted"===a.arrayChanges.status?b.splice(a.arrayChanges.index,0,a.arrayChanges.value):c("Unsupported array modification status: "+a.arrayChanges.status)}},a.prototype.redoChangeSet=function(a){if(a.propertyChanged)a.observable(a.propertyChanged.val);else{var b=a.observable;"added"===a.arrayChanges.status?b.splice(a.arrayChanges.index,0,a.arrayChanges.value):"deleted"===a.arrayChanges.status?b.splice(a.arrayChanges.index,1):c("Unsupported array modification status: "+a.arrayChanges.status)}},a.prototype.subscribe=function(a){var b=this;d(a,function(a){a.forEach(function(a){if(ko.isObservable(a)){var d=a();a.push?b._subscriptions.push(a.subscribe(function(d){b._modelReady&&(b._inUndoRedo||(d.length>1&&c("Multiple array changes isn't supported"),b.properyChanged({observable:a,arrayChanges:d[0]}),b.subscribe(d[0].value)))},null,"arrayChange")):ko.isWriteableObservable(a)&&b._subscriptions.push(a.subscribe(function(c){b._modelReady&&(b.properyChanged({observable:a,propertyChanged:{oldVal:d,val:c}}),d=a())}))}})},this._visited,this._ignoredProperties)},a.prototype._removePropertiesSubscriptions=function(){this._subscriptions.forEach(function(a){return a.dispose()}),this._subscriptions=[],this._visited=[]},a.prototype.removeTargetSubscription=function(){this._targetSubscription.dispose(),this.reset()},a.prototype.undoAll=function(){this.undoEnabled()&&(this.undo(),this.undoAll())},a.prototype.reset=function(){this._removePropertiesSubscriptions(),this.clearHistory()},a.prototype.clearHistory=function(){this._groupObservers=[],this._observers=[],this.redoEnabled(!1),this.undoEnabled(!1),this._inUndoRedo=!1,this._groupPosition=-1,this._position=-1},a.prototype.undo=function(){var a=this;try{if(this._inUndoRedo=!0,this.undoEnabled()){var b=this._observers[this._position];Array.isArray(b)?b.reverse().forEach(function(b){return a.undoChangeSet(b)}):this.undoChangeSet(b),this._position=this._position-1,this.undoEnabled(0!==this._observers.length&&this._position>=0),this.redoEnabled(!0)}}finally{this._inUndoRedo=!1}},a.prototype.redo=function(){var a=this;try{if(this._inUndoRedo=!0,this.redoEnabled()){var b=this._observers[this._position+1];Array.isArray(b)?b.reverse().forEach(function(b){return a.redoChangeSet(b)}):this.redoChangeSet(b),this._position=this._position+1,this.undoEnabled(0!==this._observers.length&&this._position>=0),this.redoEnabled(this._position+1<this._observers.length)}}finally{this._inUndoRedo=!1}},a.prototype.start=function(){this.isIngroup++,0===this.isIngroup&&(this._groupObservers=this._observers,this._observers=[],this._groupPosition=this._position,this._position=-1)},a.prototype.end=function(){this.isIngroup--,-1===this.isIngroup&&(this._observers.length>0?(this._position=this._groupPosition+1,this._groupObservers.splice(this._position,this._groupObservers.length-this._position,this._observers)):this._position=this._groupPosition,this._observers=this._groupObservers)},a}();a.UndoEngine=e}(b=a.Utils||(a.Utils={}))}(b=a.JS||(a.JS={}))}(DevExpress||(DevExpress={}));
/*! DevExpress HTML/JS Designer - v15.2.6 - 2016-02-29
* http://www.devexpress.com
* Copyright (c) 2016 Developer Express Inc; Licensed Commercial */

var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.name={propertyName:"name",modelName:"@Name",displayName:"Name",editor:a.JS.Widgets.editorTemplates.text,validationRules:b.nameValidationRules},c.text={propertyName:"text",modelName:"@Text",displayName:"Text",editor:a.JS.Widgets.editorTemplates.text},c.size={propertyName:"size",modelName:"@Size",defaultVal:"100,50",from:b.Size.fromString,displayName:"Size",editor:a.JS.Widgets.editorTemplates.objecteditor},c.location={propertyName:"location",modelName:"@Location",from:b.Point.fromString,displayName:"Location",editor:a.JS.Widgets.editorTemplates.objecteditor},c.sizeLocation=[c.size,c.location],c.unknownSerializationsInfo=[c.name].concat(c.sizeLocation)}(c=b.Diagram||(b.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var __extends=this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,c,d){a.call(this,b,c,d)}return __extends(b,a),b.prototype.getControlFactory=function(){return c.controlsFactory},b}(b.ElementViewModel);c.DiagramElementBaseViewModel=d;var e=function(a){function b(c,d,e){a.call(this,c,d,$.extend({},b._unitProperties,e)),this.template="dx-diagram-element",this.selectiontemplate="dx-diagram-element-selection",this.contenttemplate="dx-diagram-element-content",this.isSnapTarget=!0,this.margin=ko.observable(0)}return __extends(b,a),b._unitProperties={_height:function(a){return a.size.height},_width:function(a){return a.size.width},_x:function(a){return a.location.x},_y:function(a){return a.location.y}},b}(b.SurfaceElementBase);c.DiagramElementBaseSurface=e,c.diagramElementSerializationInfo=[c.size,c.location,c.name,c.text,{propertyName:"type",modelName:"@Type"}];var f=function(b){function c(c,d,e){var f=this;b.call(this,$.extend({"@ControlType":"DiagramElement"},c),d,e),this.connectingPoints=a.JS.Utils.deserializeArray(c&&c.ConnectingPoints||[],function(a){return new h(a,f,e)}),void 0===this.text()&&this.text(this.name())}return __extends(c,b),c}(d);c.DiagramElementViewModel=f;var g=function(a){function b(b,c){a.call(this,b,c,null),this.contenttemplate="dxdd-element-content-with-connecting-points"}return __extends(b,a),b.prototype._getChildrenHolderName=function(){return"connectingPoints"},b}(e);c.DiagramElementSurface=g;var h=function(a){function c(c,d,e){var f=this;a.call(this,$.extend({"@ControlType":"ConnectingPoint"},c),d,e),this.side=ko.pureComputed(function(){return f.percentOffsetY()>=f.percentOffsetX()?f.percentOffsetY()>1-f.percentOffsetX()?1:3:f.percentOffsetY()>1-f.percentOffsetX()?0:2}),this.size=new b.Size(7,7),this.location=new b.Point(0,0),this.location.x=ko.pureComputed(function(){var a=f.parentModel();return a.location.x()+a.size.width()*f.percentOffsetX()}),this.location.y=ko.pureComputed(function(){var a=f.parentModel();return a.location.y()+a.size.height()*f.percentOffsetY()})}return __extends(c,a),c}(d);c.ConnectingPointViewModel=h,c.connectingPointSerializationInfo=[{propertyName:"percentOffsetX",modelName:"@PercentOffsetX",defaultVal:.5,from:b.floatFromModel},{propertyName:"percentOffsetY",modelName:"@PercentOffsetY",defaultVal:.5,from:b.floatFromModel}];var i=function(a){function b(c,d){a.call(this,c,d,b._unitProperties),this.template="dxdd-connecting-point",this.selectiontemplate="dxdd-connection-point-selection",this.contenttemplate=""}return __extends(b,a),b._unitProperties={_x:function(a){return ko.pureComputed(function(){return a.location.x()-a.parentModel().location.x()})},_y:function(a){return ko.pureComputed(function(){return a.location.y()-a.parentModel().location.y()})}},b}(e);c.ConnectingPointSurface=i}(c=b.Diagram||(b.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){function c(a,c){var d={start:null,end:null};if(c.leftConnectionPoint.location.x()>a.rightConnectionPoint.location.x()+2*b.RoutedConnectorViewModel.GRID_SIZE)d.start=a.rightConnectionPoint,d.end=c.leftConnectionPoint;else if(a.leftConnectionPoint.location.x()>c.rightConnectionPoint.location.x()+2*b.RoutedConnectorViewModel.GRID_SIZE)d.start=a.leftConnectionPoint,d.end=c.rightConnectionPoint;else{var e=(a.rightConnectionPoint.location.x()+a.rightConnectionPoint.location.x())/2,f=(c.rightConnectionPoint.location.x()+c.rightConnectionPoint.location.x())/2;e>f?(d.start=a.rightConnectionPoint,d.end=c.rightConnectionPoint):(d.start=a.leftConnectionPoint,d.end=c.leftConnectionPoint)}return d}function d(){var a=-1;if("Microsoft Internet Explorer"==navigator.appName){var b=new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");null!=b.exec(navigator.userAgent)&&(a=parseFloat(RegExp.$1))}else if("Netscape"==navigator.appName){var b=new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})");null!=b.exec(navigator.userAgent)&&(a=parseFloat(RegExp.$1))}return a}var e=function(a){function b(b,c,d){var e=this;a.call(this,$.extend(b,{"@ControlType":"ConnectionPoint"}),c,d);var f=this.location.x,g=this.location.y;this.location.x=ko.pureComputed({read:function(){return e.connectingPoint()&&e.connectingPoint().location.x()||f()},write:function(a){e.connectingPoint(null),f(a)}}),this.location.y=ko.pureComputed({read:function(){return e.connectingPoint()&&e.connectingPoint().location.y()||g()},write:function(a){e.connectingPoint(null),g(a)}})}return __extends(b,a),b}(b.DiagramElementBaseViewModel);b.ConnectionPointViewModel=e,b.connectionPointSerializationInfo=[b.location,{propertyName:"connectingPoint",modelName:"@ConnectingPoint",link:!0}];var f=function(a){function b(c,d){var e=this;a.call(this,c,d,b._unitProperties),this.template="dx-diagram-connection-point",this.selectiontemplate="dx-diagram-connection-point",this.relativeX=ko.pureComputed(function(){return e.rect().left-e.parent.rect().left}),this.relativeY=ko.pureComputed(function(){return e.rect().top-e.parent.rect().top})}return __extends(b,a),b._unitProperties={_x:function(a){return a.location.x},_y:function(a){return a.location.y}},b}(a.SurfaceElementBase);b.ConnectionPointSurface=f;var g=function(b){function c(c,d,f){var g=this;b.call(this,$.extend({"@ControlType":"Connector"},c),d,f),this.startPoint(this.startPoint()||new e({"@Location":"0, 0"},this,f)),this.endPoint(this.endPoint()||new e({"@Location":"150, 75"},this,f)),this.location=new a.Point(0,0),this.location.x=ko.pureComputed({read:function(){return g.getX()},write:function(a){var b=g.startPoint().location.x()<g.endPoint().location.x()?g.startPoint().location.x():g.endPoint().location.x(),c=a-b;g.startPoint().location.x(g.startPoint().location.x()+c),g.endPoint().location.x(g.endPoint().location.x()+c)}}),this.location.y=ko.pureComputed({read:function(){return g.getY()},write:function(a){var b=g.startPoint().location.y()<g.endPoint().location.y()?g.startPoint().location.y():g.endPoint().location.y(),c=a-b;g.startPoint().location.y(g.startPoint().location.y()+c),g.endPoint().location.y(g.endPoint().location.y()+c)}}),this.size=new a.Size(0,0),this.size.width=ko.pureComputed({read:function(){return g.getWidth()},write:function(a){g.startPoint().location.x()<g.endPoint().location.x()?g.endPoint().location.x(g.startPoint().location.x()+a):g.startPoint().location.x(g.endPoint().location.x()+a)}}),this.size.height=ko.pureComputed({read:function(){return g.getHeight()},write:function(a){g.startPoint().location.y()<g.endPoint().location.y()?g.endPoint().location.y(g.startPoint().location.y()+a):g.startPoint().location.y(g.endPoint().location.y()+a)}})}return __extends(c,b),c.prototype.getX=function(){return this.startPoint().location.x()<this.endPoint().location.x()?this.startPoint().location.x():this.endPoint().location.x()},c.prototype.getY=function(){return this.startPoint().location.y()<this.endPoint().location.y()?this.startPoint().location.y():this.endPoint().location.y()},c.prototype.getWidth=function(){return Math.abs(this.startPoint().location.x()-this.endPoint().location.x())||c.MIN_LINE_THICKNESS},c.prototype.getHeight=function(){return Math.abs(this.startPoint().location.y()-this.endPoint().location.y())||c.MIN_LINE_THICKNESS},c.MIN_LINE_THICKNESS=3,c}(b.DiagramElementBaseViewModel);b.ConnectorViewModel=g;var h=function(a){function b(b,c){a.call(this,b,c,null),this.template="dxdd-connector",this.selectiontemplate="dxdd-connector-selection",this.startPoint=ko.pureComputed(function(){return new f(b.startPoint(),c)}),this.endPoint=ko.pureComputed(function(){return new f(b.endPoint(),c)})}return __extends(b,a),b}(b.DiagramElementBaseSurface);b.ConnectorSurface=h,function(a){a[a.East=0]="East",a[a.South=1]="South",a[a.North=2]="North",a[a.West=3]="West"}(b.PointSide||(b.PointSide={}));b.PointSide;b.determineConnectingPoints=c;var i=function(b){function c(c,d,e){var f=this;b.call(this,$.extend({"@ControlType":"RoutedConnector"},c),d,e),this._isUpdating=!1,this.routePoints=ko.observable([]),this.freezeRoute=ko.observable(!1),this._disposables.push(ko.computed(function(){var a=!(1+f.startPoint().location.x()+f.startPoint().location.y()+f.endPoint().location.x()+f.endPoint().location.y());f._isUpdating||f.freezeRoute(a)})),this._disposables.push(ko.computed(function(){if(!f.freezeRoute()){var b=[],c=f._getStartPointSide(),d=f._getEndPointSide(),e=new a.Point(f.startPoint().location.x(),f.startPoint().location.y()),g=new a.Point(f.endPoint().location.x(),f.endPoint().location.y());f.startPoint().connectingPoint()&&(f._fixPoint(e,f.startPoint().connectingPoint().side()),b.push(e)),f.endPoint().connectingPoint()&&f._fixPoint(g,f.endPoint().connectingPoint().side());var h=Math.min(e.x(),g.x()),i=Math.min(e.y(),g.y()),j=Math.abs(e.x()-g.x()),k=Math.abs(e.y()-g.y());e.y()-g.y()>0?e.x()-g.x()>0?2===c||0===c?2===d||0===d?b.push(new a.Point(h+j,i)):(b.push(new a.Point(h+j,i+k/2)),b.push(new a.Point(h,i+k/2))):1===d||3===d?b.push(new a.Point(h,i+k)):(b.push(new a.Point(h+j/2,i+k)),b.push(new a.Point(h+j/2,i))):2===c||3===c?2===d||3===d?b.push(new a.Point(h,i)):(b.push(new a.Point(h,i+k/2)),b.push(new a.Point(h+j,i+k/2))):1===d||0===d?b.push(new a.Point(h+j,i+k)):(b.push(new a.Point(h+j/2,i+k)),b.push(new a.Point(h+j/2,i))):e.x()-g.x()>0?1===c||0===c?1===d||0===d?b.push(new a.Point(h+j,i+k)):(b.push(new a.Point(h+j,i+k/2)),b.push(new a.Point(h,i+k/2))):2===d||3===d?b.push(new a.Point(h,i)):(b.push(new a.Point(h+j/2,i)),b.push(new a.Point(h+j/2,i+k))):1===c||3===c?1===d||3===d?b.push(new a.Point(h,i+k)):(b.push(new a.Point(h,i+k/2)),b.push(new a.Point(h+j,i+k/2))):2===d||0===d?b.push(new a.Point(h+j,i)):(b.push(new a.Point(h+j/2,i)),b.push(new a.Point(h+j/2,i+k))),f.endPoint().connectingPoint()&&b.push(g),f.routePoints(b)}}))}return __extends(c,b),c.prototype.getX=function(){var a=b.prototype.getX.call(this);return this.routePoints&&this.routePoints().forEach(function(b){b.x()<a&&(a=b.x())}),a},c.prototype.getY=function(){var a=b.prototype.getY.call(this);return this.routePoints&&this.routePoints().forEach(function(b){b.y()<a&&(a=b.y())}),a},c.prototype.getWidth=function(){var a=b.prototype.getWidth.call(this),c=this.getX();return this.routePoints&&[this.startPoint().location,this.endPoint().location].concat(this.routePoints()).forEach(function(b){b.x()-c>a&&(a=b.x()-c)}),a},c.prototype.getHeight=function(){var a=b.prototype.getHeight.call(this),c=this.getY();return this.routePoints&&[this.startPoint().location,this.endPoint().location].concat(this.routePoints()).forEach(function(b){b.y()-c>a&&(a=b.y()-c)}),a},c.prototype._fixPoint=function(a,b){switch(b){case 2:a.y(a.y()-c.GRID_SIZE);break;case 0:a.x(a.x()+c.GRID_SIZE);break;case 3:a.x(a.x()-c.GRID_SIZE);break;case 1:a.y(a.y()+c.GRID_SIZE)}},c.prototype._getStartPointSide=function(){return this.startPoint().connectingPoint()?this.startPoint().connectingPoint().side():this.startPoint().location.y()!==this.endPoint().location.y()?this.startPoint().location.y()>this.endPoint().location.y()?2:1:this.startPoint().location.x()>this.endPoint().location.x()?3:0},c.prototype._getEndPointSide=function(){return this.endPoint().connectingPoint()?this.endPoint().connectingPoint().side():this.startPoint().location.y()!==this.endPoint().location.y()?this.startPoint().location.y()>this.endPoint().location.y()?1:2:this.startPoint().location.x()>this.endPoint().location.x()?0:3},c.prototype.beginUpdate=function(){this._isUpdating=!0},c.prototype.endUpdate=function(){this._isUpdating=!1},c.GRID_SIZE=10,c}(g);b.RoutedConnectorViewModel=i;var j=function(a){function b(b,c){var d=this;a.call(this,b,c,null),this.template="dxdd-routed-connector",this.selectiontemplate="dxdd-routed-connector-selection",this.showArrow=ko.observable(!1),this.routePoints=ko.observableArray(),this.routePointsSet=ko.pureComputed(function(){var a=[];return d.routePoints().forEach(function(b){a.push(b.x()+" "+b.y())}),a.join(", ")}),this.routeLineWrappers=ko.pureComputed(function(){for(var a=[],b=1;b<d.routePoints().length;b++)a.push(d._createRouteLineWrapper(d.routePoints()[b-1],d.routePoints()[b],1===b||b===d.routePoints().length-1));return a}),this.startPoint=ko.pureComputed(function(){return new f(b.startPoint(),c)}),this.endPoint=ko.pureComputed(function(){return new f(b.endPoint(),c)}),this._disposables.push(b.routePoints.subscribe(function(){d._updateRoutePoints()})),this._updateRoutePoints()}return __extends(b,a),b.prototype._createRoutePoint=function(a,b){return{x:ko.pureComputed(function(){return Math.round(a.x()-b.x())}),y:ko.pureComputed(function(){return Math.round(a.y()-b.y())}),modelPoint:a}},b.prototype._createRouteLineWrapper=function(a,b,c){void 0===c&&(c=!1);var d=this,e=Math.abs(a.x.peek()-b.x.peek())<1,f=a.modelPoint.y.peek(),g=a.modelPoint.x.peek(),h={top:Math.min(a.y.peek(),b.y.peek())-4,left:Math.min(a.x.peek(),b.x.peek())-4,width:Math.abs(a.x.peek()-b.x.peek())+6,height:Math.abs(a.y.peek()-b.y.peek())+6},i=function(c){d._control.freezeRoute(!0);try{if(d._control.beginUpdate(),e){var h=g+c.delta.dx;a.modelPoint.x(h),b.modelPoint.x(h)}else{var i=f+c.delta.dy;a.modelPoint.y(i),b.modelPoint.y(i)}}finally{d._control.endUpdate()}};return{position:h,isVerticalLine:e,resizeHandler:i,resizeStopped:function(){d._control.routePoints.notifySubscribers()},isLocked:ko.observable(c)}},b.prototype._updateRoutePoints=function(){var a=this,b=[],c=this.getControlModel(),d=c.location;b.push(this._createRoutePoint(c.startPoint().location,d)),c.routePoints().forEach(function(c){b.push(a._createRoutePoint(c,d))}),b.push(this._createRoutePoint(c.endPoint().location,d)),this.routePoints(b)},b}(b.DiagramElementBaseSurface);b.RoutedConnectorSurface=j,ko.bindingHandlers.routeLineDraggable={init:function(b,c){var d=c(),e=$.extend({snap:".dxrd-drag-snap-line",snapTolerance:a.SnapLinesHelper.snapTolerance},ko.unwrap(d),{start:function(){d.starting()},stop:function(){d.stopped()},drag:function(a,b){var c=b.position.left-b.originalPosition.left,e=b.position.top-b.originalPosition.top;d.forceResize({delta:{dx:c,dy:e}})}});$(b).draggable(e)}},ko.bindingHandlers.updateConnectorArrow={init:function(a,b,c,e,f){var g=d();if(g>-1&&11>=g){var h=f.$data.routePointsSet.subscribe(function(){f.$data.showArrow()&&a.parentNode.insertBefore(a,a)});ko.utils.domNodeDisposal.addDisposeCallback(a.parentNode,function(){return h.dispose()})}}}}(b=a.Diagram||(a.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function d(c){var d=new a.JS.Utils.ModelSerializer;b.call(this,c,null,d),this.controlType="Diagram",this.controls=ko.observableArray(),this.name("Diagram")}return __extends(d,b),d.prototype.getInfo=function(){return c.diagramSerializationsInfo},d}(c.DiagramElementBaseViewModel);c.DiagramViewModel=d,c.margins={propertyName:"margins",modelName:"@Margins",from:b.Margins.fromString,displayName:"Margins"},c.pageWidth={propertyName:"pageWidth",modelName:"@PageWidth",defaultVal:850,from:b.floatFromModel,displayName:"Page Width",editor:a.JS.Widgets.editorTemplates.numeric},c.pageHeight={propertyName:"pageHeight",modelName:"@PageHeight",defaultVal:1250,from:b.floatFromModel,displayName:"Page Height",editor:a.JS.Widgets.editorTemplates.numeric},c.diagramSerializationsInfo=[c.name,c.pageWidth,c.pageHeight,c.margins];var e=function(a){function c(d,e){void 0===e&&(e=ko.observable(1)),a.call(this,d,{measureUnit:ko.observable("Pixels"),zoom:e,dpi:ko.observable(100)},c._unitProperties),this.measureUnit=ko.observable("Pixels"),this.dpi=ko.observable(100),this.controls=ko.observableArray(),this.allowMultiselect=!1,this.focused=ko.observable(!1),this.selected=ko.observable(!1),this.underCursor=ko.observable(new b.HoverInfo),this.parent=null,this.templateName="dx-diagram-surface",this.margins={bottom:this._bottom,left:this._left,right:this._right,top:this._top},this.zoom=e,this._context=this,b.createObservableArrayMapCollection(d.controls,this.controls,this._createSurface)}return __extends(c,a),c.prototype.checkParent=function(){return!1},c.prototype.getChildrenCollection=function(){return ko.observableArray([])},c._unitProperties={_width:function(a){return a.pageWidth},_height:function(a){return a.pageWidth},pageWidth:function(a){return a.pageWidth},pageHeight:function(a){return a.pageHeight},_bottom:function(a){return a.margins.bottom},_left:function(a){return a.margins.left},_right:function(a){return a.margins.right},_top:function(a){return a.margins.top}},c}(b.SurfaceElementBase);c.DiagramSurface=e}(c=b.Diagram||(b.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(a){function c(b,c,d,e,f){a.call(this,b,c,d,e),this.currentConnectionPoint=null,this.cursor="arrow",this.containment=".dxrd-ghost-container",this.helper=function(a){f.update(a)}}return __extends(c,a),c.prototype.startDrag=function(a){if(!(a instanceof b.ConnectionPointSurface))throw new Error("ConnectionPointDragHandler can be applied to the ConnectionPoint only.");this.currentConnectionPoint=a},c.prototype.drag=function(a,b){b.position.left+=b.scroll.left,b.position.top+=b.scroll.top;var c=this._getAbsoluteSurfacePosition(b);this.currentConnectionPoint.rect({top:c.top,left:c.left})},c.prototype.doStopDrag=function(){if(this.selection.dropTarget){var a=this.selection.dropTarget.getControlModel();if(a instanceof b.ConnectingPointViewModel){var c=this.currentConnectionPoint.parent.getControlModel();this.currentConnectionPoint.getControlModel()===c.startPoint()?c.startPoint().connectingPoint(a):c.endPoint().connectingPoint(a)}else if(a instanceof b.DiagramElementViewModel){var c=this.currentConnectionPoint.parent.getControlModel(),d=a.connectingPoints();this.currentConnectionPoint.getControlModel()===c.startPoint()?c.startPoint().connectingPoint(d[0]):c.endPoint().connectingPoint(d[0])}}},c}(a.DragDropHandler);b.ConnectionPointDragHandler=c;var d=function(c){function d(a,b,d,e,f){c.call(this,a,b,d,e),this.startConnectingPoint=null,this.newConnector=null,this.cursor="arrow",this.containment=".dxrd-ghost-container",this.helper=function(a){f.update(a)}}return __extends(d,c),d.prototype.startDrag=function(a){if(!(a instanceof b.ConnectingPointSurface))throw new Error("ConnectingPointDragHandler can be applied to the ConnectingPoint only.");this.startConnectingPoint=a;var c=this.startConnectingPoint.parent.getControlModel();this.newConnector=c.parentModel().createChild({"@ControlType":"RoutedConnector"}),this.newConnector.startPoint().connectingPoint(this.startConnectingPoint.getControlModel())},d.prototype.drag=function(a,b){b.position.left+=b.scroll.left,b.position.top+=b.scroll.top;var c=this._getAbsoluteSurfacePosition(b);this.newConnectorSurface.endPoint().rect({top:c.top,left:c.left})},d.prototype.doStopDrag=function(){if(this.selection.dropTarget){var a=this.selection.dropTarget.getControlModel();if(a instanceof b.ConnectingPointViewModel)this.newConnector.endPoint().connectingPoint(a);else if(a instanceof b.DiagramElementViewModel){var c=a.connectingPoints();this.newConnector.endPoint().connectingPoint(c[0])}this.selection.initialize(this.newConnectorSurface)}},Object.defineProperty(d.prototype,"newConnectorSurface",{get:function(){return this.newConnector&&a.findSurface(this.newConnector)},enumerable:!0,configurable:!0}),d}(a.DragDropHandler);b.ConnectingPointDragHandler=d}(b=a.Diagram||(a.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(){c.controlsFactory.registerControl("Unknown",{info:c.unknownSerializationsInfo,type:b.ElementViewModel,nonToolboxItem:!0,surfaceType:b.SurfaceElementBase}),c.controlsFactory.registerControl("Connector",{info:[c.name,{propertyName:"location",displayName:"Location",editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"startPoint",modelName:"@StartPoint",link:!0},{propertyName:"endPoint",modelName:"@EndPoint",link:!0}],surfaceType:c.ConnectorSurface,type:c.ConnectorViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!1}),c.controlsFactory.registerControl("RoutedConnector",{info:[c.name,{propertyName:"location",displayName:"Location",editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"startPoint",modelName:"@StartPoint",link:!0},{propertyName:"endPoint",modelName:"@EndPoint",link:!0}],surfaceType:c.RoutedConnectorSurface,type:c.RoutedConnectorViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!1}),c.controlsFactory.registerControl("ConnectionPoint",{info:c.connectionPointSerializationInfo,surfaceType:c.ConnectionPointSurface,type:c.ConnectionPointViewModel,elementActionsTypes:[],nonToolboxItem:!0}),c.controlsFactory.registerControl("Diagram",{info:c.diagramSerializationsInfo,surfaceType:c.DiagramSurface,popularProperties:["name"],type:c.DiagramViewModel,elementActionsTypes:[],isContainer:!0,nonToolboxItem:!0}),c.controlsFactory.registerControl("DiagramElement",{info:c.diagramElementSerializationInfo,defaultVal:{"@SizeF":"150,50",ConnectingPoints:{Item1:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"1","@PercentOffsetY":"0.5"},Item2:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"1"},Item3:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"0"},Item4:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0","@PercentOffsetY":"0.5"}}},surfaceType:c.DiagramElementSurface,popularProperties:["text"],type:c.DiagramElementViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!1}),c.controlsFactory.registerControl("Ellipse",{info:c.diagramElementSerializationInfo,defaultVal:{"@SizeF":"150,50","@Type":"Ellipse",ConnectingPoints:{Item1:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"1","@PercentOffsetY":"0.5"},Item2:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"1"},Item3:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"0"},Item4:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0","@PercentOffsetY":"0.5"}}},surfaceType:c.DiagramElementSurface,popularProperties:["text"],type:c.DiagramElementViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!1}),c.controlsFactory.registerControl("Condition",{info:c.diagramElementSerializationInfo,defaultVal:{"@SizeF":"150,50","@Type":"Condition",ConnectingPoints:{Item1:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"1","@PercentOffsetY":"0.5"},Item2:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"1"},Item3:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0.5","@PercentOffsetY":"0"},Item4:{"@ControlType":"ConnectingPoint","@PercentOffsetX":"0","@PercentOffsetY":"0.5"}}},surfaceType:c.DiagramElementSurface,popularProperties:["text"],type:c.DiagramElementViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!1}),c.controlsFactory.registerControl("ConnectingPoint",{info:c.connectingPointSerializationInfo,surfaceType:c.ConnectingPointSurface,type:c.ConnectingPointViewModel,elementActionsTypes:[],nonToolboxItem:!0})}function e(a,e,f){f&&Globalize.addCultureInfo("default",{messages:f}),d();var g=ko.pureComputed(function(){return new c.DiagramViewModel(e())}),h=ko.pureComputed(function(){var a=new c.DiagramSurface(g());return a}),i=b.createDesigner(g,h,c.controlsFactory,c.groups);i.connectionPointDragHandler=new c.ConnectionPointDragHandler(h,i.selection,i.undoEngine,i.snapHelper,i.dragHelperContent),i.connectingPointDragHandler=new c.ConnectingPointDragHandler(h,i.selection,i.undoEngine,i.snapHelper,i.dragHelperContent),i.isLoading(!1),i.selection.focused(h()),$(a).children().remove(),ko.applyBindings(i,a);var j=b.updateSurfaceContentSize(i.surfaceSize,a);return $(window).bind("resize",function(){j()}),i.tabPanel.width.subscribe(function(){j()}),j(),i}c.controlsFactory=new b.ControlsFactory,c.registerControls=d,c.groups={Appearance:[],Behavior:[],Design:[c.name],Layout:[c.location,c.size,c.pageWidth,c.pageHeight]},c.createDiagramDesigner=e}(c=b.Diagram||(b.Diagram={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){b.editorTemplates={bool:{header:"dx-boolean",custom:"dxqb-property-editor"},combobox:{header:"dx-combobox",custom:"dxqb-property-editor"},text:{header:"dx-text",custom:"dxqb-property-editor"},filterEditor:{header:"dxrd-filterstring",custom:"dxqb-property-editor"},numeric:{header:"dx-numeric",custom:"dxqb-property-editor"}},b.name={propertyName:"name",modelName:"@Name",displayName:"Name",disabled:!0,editor:b.editorTemplates.text},b.alias={propertyName:"alias",modelName:"@Alias",displayName:"Alias",defaultVal:null,editor:b.editorTemplates.text},b.text={propertyName:"text",modelName:"@Text",displayName:"Text",editor:b.editorTemplates.text},b.selected={propertyName:"selected",displayName:"Output",editor:b.editorTemplates.bool},b.size={propertyName:"size",modelName:"@Size",defaultVal:"100,125",from:a.Size.fromString},b.location={propertyName:"location",modelName:"@Location",from:a.Point.fromString},b.sizeLocation=[b.size,b.location],b.unknownSerializationsInfo=[b.name].concat(b.sizeLocation)}(b=a.QueryBuilder||(a.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){function b(a,b,c,d){var d=d||[];return a?(b.forEach(function(b){$.each(a[b]||[],function(a,b){d.push(c(b))})}),d):d}var c=function(){function a(a){var c=b(a.Tables,["DBTable","DBTableWithAlias"],function(a){return new d(a)});c.sort(function(a,b){return a.name.localeCompare(b.name)});var e=b(a.Views,["DBTable","DBTableWithAlias"],function(a){return new d(a)});e.sort(function(a,b){return a.name.localeCompare(b.name)}),this.tables=c.concat(e),this.procedures=b(a.Procedures,["DBStoredProcedure"],function(a){return new f(a)})}return a}();a.DBSchema=c;var d=function(){function a(a){this.name=a["@Name"],this.isView="true"===a["@IsView"]||a["@IsView"]===!0,this.columns=b(a.Columns,["DBColumn","DBColumnWithAlias"],function(a){return new h(a)}),this.foreignKeys=b(a.ForeignKeys,["DBForeignKey"],function(a){return new e(a)})}return a}();a.DBTable=d;var e=function(){function a(a){this.name=a["@Name"],this.primaryKeyTable=a["@PrimaryKeyTable"],this.column=a.Columns.string,this.primaryKeyColumn=a.PrimaryKeyTableKeyColumns.string}return a}();a.DBForeignKey=e;var f=function(){function a(a){this.name=a["@Name"],this.arguments=b(a.Arguments,["DBStoredProcedureArgument"],function(a){return new g(a)})}return a}();a.DBStoredProcedure=f;var g=function(){function a(a){this.name=a["@Name"],this.type=a["@Type"],this.direction=a["@Direction"]}return a.directions={"in":"In",out:"Out",inOut:"InOut"},a}();a.DBStoredProcedureArgument=g;var h=function(){function a(a){this.name=a["@Name"],this.type=a["@ColumnType"],this.size=a["@Size"]}return a.GetType=function(a){switch(a){case"Boolean":return"System.Boolean";case"Byte":return"System.Byte";case"SByte":return"System.SByte";case"Char":return"System.Char";case"Decimal":return"System.Decimal";case"Double":return"System.Double";case"Single":return"System.Single";case"Int32":return"System.Int32";case"UInt32":return"System.UInt32";case"Int16":return"System.Int16";case"UInt16":return"System.UInt16";case"Int64":return"System.Int64";case"UInt64":return"System.UInt64";case"String":return"System.String";case"DateTime":return"System.DateTime";case"Guid":return"System.Guid";case"TimeSpan":return"System.TimeSpan";case"ByteArray":return"System.Byte[]";default:return"System.Object"}},a.GetSpecific=function(a){switch(a){case"System.Boolean":return"Bool";case"System.Byte":case"System.SByte":case"System.Int16":case"System.UInt16":case"System.Int32":case"System.UInt32":return"Integer";case"System.Char":case"System.Decimal":case"System.Guid":case"System.ByteArray":case"System.Int64":case"System.UInt64":case"System.String":return"String";case"System.Double":case"System.Single":return"Float";case"System.DateTime":case"System.TimeSpan":return"Date";default:return"String"}},a}();a.DBColumn=h}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){function c(b,c,d){return a.Designer.ajax(a.Designer.QueryBuilder.HandlerUri,"getDBSchema",encodeURIComponent(JSON.stringify({connectionString:this._connectionString(),dataSourceBase64:this._dataSource.base64(),tableName:d&&d.name,isView:d&&d.isView}))).fail(function(b){a.Designer.ShowMessage("Schema loading failed. "+a.Designer.getErrorMessage(b))})}b.getDBSchemaCallback=c;var d=function(c){function d(a,d){var e=this;void 0===d&&(d=b.getDBSchemaCallback),c.call(this),this._dataSource=a,this._getDBShcemaCallBack=d,this._tables={},this._connectionString=this._dataSource.connection.name,this._disposables.push(this._connectionString.subscribe(function(){e._tables={},e._dbSchema=null})),this.getItems=function(a){var b=$.Deferred();return a.fullPath?b.resolve([]):e.getDbSchema().done(function(a){b.resolve($.map(a.tables,function(a){var b={name:a.name,displayName:a.name,isList:!1,specifics:"list",dragData:{noDragable:!1}};return b}))}),b.promise()}}return __extends(d,c),d.prototype._getDBSchema=function(a){return this._getDBShcemaCallBack(this._connectionString(),this._dataSource.base64(),a)},d.prototype.getDbSchema=function(){if(!this._dbSchema){var a=$.Deferred();this._dbSchema=a.promise(),this._getDBSchema().done(function(c){a.resolve(new b.DBSchema(JSON.parse(c.dbSchemaJSON).DBSchema))}).fail(function(){a.reject()})}return this._dbSchema},d.prototype.getDbTable=function(c){var d=this;if(!this._tables[c]){var e=$.Deferred();this._tables[c]=e.promise(),this.getDbSchema().done(function(f){var g=a.Designer.findFirstItemMatchesCondition(f.tables,function(a){return a.name===c});g?g.columns.length>0?e.resolve(g):d._getDBSchema(g).done(function(a){var c=new b.DBSchema(JSON.parse(a.dbSchemaJSON).DBSchema);g.columns=c.tables[0].columns,e.resolve(g)}).fail(function(){return e.reject()}):e.reject()}).fail(function(){return e.reject()})}return this._tables[c]},d.prototype.dataSource=function(){return this._dataSource},d}(a.Designer.Disposable);b.DBSchemaProvider=d}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(a){function c(b,c,d){a.call(this,b,c,d)}return __extends(c,a),c.prototype.getControlFactory=function(){return b.controlsFactory},c}(a.ElementViewModel);b.QueryElementBaseViewModel=c;var d=function(a){function b(c,d,e){a.call(this,c,d,$.extend({},b._unitProperties,e)),this.template="dx-diagram-element",this.selectiontemplate="dx-diagram-element-selection",this.contenttemplate="dx-diagram-element-content",this.isSnapTarget=!0,this.margin=ko.observable(0)}return __extends(b,a),b._unitProperties={_height:function(a){return a.size.height},_width:function(a){return a.size.width},_x:function(a){return a.location.x},_y:function(a){return a.location.y}},b}(a.SurfaceElementBase);

b.QueryElementBaseSurface=d}(b=a.QueryBuilder||(a.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.joinType={propertyName:"joinType",modelName:"@Type",displayName:"Join Type",defaultVal:"Inner"},c.relationSerializationInfo=[{propertyName:"joinType",modelName:"@Type"},{propertyName:"parentTableName",modelName:"@Parent"},{propertyName:"nestedTableName",modelName:"@Nested"},{propertyName:"conditions",modelName:"KeyColumn",defaultVal:[],array:!0}];var d=function(b){function d(c,d,e){var g=this;b.call(this,$.extend(c,{"@ControlType":"Relation"}),d,e),this.parentTable=ko.observable(d.getTable(this.parentTableName.peek())),this.nestedTable=ko.observable(d.getTable(this.nestedTableName.peek())),this.parentTableName=ko.pureComputed(function(){return g.parentTable().actualName()}),this.nestedTableName=ko.pureComputed(function(){return g.nestedTable().actualName()}),this.conditions=a.JS.Utils.deserializeArray(c.KeyColumn,function(a){return new f(a,g,e)})}return __extends(d,b),d.prototype.getInfo=function(){return c.relationSerializationInfo},d.prototype.addChild=function(a){var b=a;this.conditions&&-1===this.conditions.indexOf(b)&&(b.parentModel(this),this.conditions.push(b))},d.prototype.removeChild=function(a){var b=this.conditions().indexOf(a);b>-1&&this.conditions.splice(b,1),0===this.conditions().length&&this.parentModel().removeChild(this)},d}(c.QueryElementBaseViewModel);c.RelationViewModel=d;var e=function(a){function c(c,d){a.call(this,c,d,null),this.conditions=ko.observableArray(),this.template="dxqb-relation",b.createObservableArrayMapCollection(c.conditions,this.conditions,this._createSurface)}return __extends(c,a),c.prototype._getChildrenHolderName=function(){return"conditions"},c}(b.SurfaceElementBase);c.RelationSurface=e,c.ConditionType={Equal:"Equal",NotEqual:"NotEqual",Greater:"Greater",GreaterOrEqual:"GreaterOrEqual",Less:"Less",LessOrEqual:"LessOrEqual"},c.joinConditionSerializationInfo=[{propertyName:"left",displayName:"Left",editor:c.editorTemplates.text,disabled:!0},{propertyName:"right",displayName:"Right",editor:c.editorTemplates.text,disabled:!0},{propertyName:"parentColumnName",modelName:"@Parent"},{propertyName:"nestedColumnName",modelName:"@Nested"},{propertyName:"joinType",displayName:"Join Type",editor:c.editorTemplates.combobox,defaultVal:"Inner",values:{Inner:"Inner",LeftOuter:"Left Outer"}},{propertyName:"operator",modelName:"@Operator",displayName:"Operator",editor:c.editorTemplates.combobox,defaultVal:c.ConditionType.Equal,values:{Equal:"Equals to",NotEqual:"Does not equal to",Greater:"Is greater than",GreaterOrEqual:"Is greater than or equal to",Less:"Is less than",LessOrEqual:"Is less than or equal to"}}];var f=function(a){function d(c,d,e){var f=this;this.startPoint=ko.observable(),this.endPoint=ko.observable(),a.call(this,$.extend(c,{"@ControlType":"JoinCondition"}),d,e),this.parentColumn=ko.pureComputed(function(){return d.parentTable().getColumn(f.parentColumnName())}),this.nestedColumn=ko.pureComputed(function(){return d.nestedTable().getColumn(f.nestedColumnName())}),this.joinType=d.joinType,this.left=ko.pureComputed(function(){return d.parentTableName()+"."+f.parentColumnName()}),this.right=ko.pureComputed(function(){return d.nestedTableName()+"."+f.nestedColumnName()}),this._disposables.push(ko.computed(function(){if(f.parentColumn()&&f.nestedColumn()){var a=b.Diagram.determineConnectingPoints(f.parentColumn(),f.nestedColumn());f.startPoint().connectingPoint(a.start),f.endPoint().connectingPoint(a.end)}}))}return __extends(d,a),d.prototype.getControlFactory=function(){return c.controlsFactory},d}(b.Diagram.RoutedConnectorViewModel);c.JoinConditionViewModel=f;var g=function(a){function b(b,c){a.call(this,b,c),this.showArrow=ko.pureComputed(function(){return"LeftOuter"===b.joinType()})}return __extends(b,a),b}(b.Diagram.RoutedConnectorSurface);c.JoinConditionSurface=g}(c=b.QueryBuilder||(b.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){b.tableSerializationInfo=[b.name,b.alias,{propertyName:"selectedColumns",modelName:"Column",array:!0}];var c=function(c){function d(b,e,f){var g=this;c.call(this,b,e,f),this.size=new a.Size(135,123),this.location=new a.Point(0,0),this._columnsConnectionPointLeftX=ko.pureComputed(function(){return g.location.x()}),this._columnsConnectionPointRightX=ko.pureComputed(function(){return g.location.x()+g.size.width()}),this._columns=ko.observableArray(),this._initialized=ko.observable(!1),this.actualName=ko.pureComputed(function(){return g.alias()||g.name()}),this.selectedColumns=ko.observableArray(),this.allColumnsSelected=ko.pureComputed({read:function(){var a=g.selectedColumns();return 0===a.length?!1:a.length===g._columns.peek().length?!0:!1},deferEvaluation:!0}),this.isDisabled=ko.observable(!0),this.isInitialized=ko.pureComputed(function(){return g._initialized()}),this._retreiveDbTableProperties(b,f),this.size.height=ko.pureComputed({read:function(){return d.COLUMNS_OFFSET+(d.COLUMN_HEIGHT+d.COLUMN_MARGIN)*g._columns().length+4},write:function(){}}),this.controlType="Table"}return __extends(d,c),d.prototype._retreiveDbTableProperties=function(c,d){var e=this;this.parentModel().dbSchemaProvider.getDbTable(this.name()).done(function(f){var g=$.isPlainObject(c.Column)?$.map(c.Column,function(a){return a}):[];f.columns.forEach(function(f){var h=c.Column?a.getFirstItemByPropertyValue(g,"@Name",f.name):null,i=new b.ColumnViewModel(h||{"@Name":f.name},f,e,d);i.selected(!!h),e._columns.push(i)}),e._initialized(!0)})},d.prototype.columns=function(){return this._columns()},d.prototype.toggleSelectedColumns=function(){var a=!this.allColumnsSelected.peek();this._columns.peek().forEach(function(b){b.selected(a)})},d.prototype.getColumnConnectionPoints=function(a){var b=this,c=ko.pureComputed({read:function(){var c=b._columns.indexOf(a);return b.location.y()+d.COLUMNS_OFFSET+d.COLUMN_MARGIN*c+d.COLUMN_HEIGHT*(c+.5)},deferEvaluation:!0});return{left:{x:this._columnsConnectionPointLeftX,y:c},right:{x:this._columnsConnectionPointRightX,y:c}}},d.prototype.getInfo=function(){return b.tableSerializationInfo},d.prototype.getColumn=function(b){return a.getFirstItemByPropertyValue(this._columns(),"name",b)},d.COLUMNS_OFFSET=55,d.COLUMN_HEIGHT=20,d.COLUMN_MARGIN=3,d.TABLE_MIN_WIDTH=80,d}(b.QueryElementBaseViewModel);b.TableViewModel=c;var d=function(a){function c(c,d){var e=this;a.call(this,c,d,null),this.contenttemplate="dxqb-table",this.toggleSelected=function(){e.getControlModel().toggleSelectedColumns()},this.selectedWrapper=ko.pureComputed(function(){return e.getControlModel().allColumnsSelected()}),this.columns=ko.pureComputed(function(){return c.columns().map(function(a){return new b.ColumnSurface(a,d)})})}return __extends(c,a),c}(b.QueryElementBaseSurface);b.TableSurface=d}(b=a.QueryBuilder||(a.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function c(a,c,d,e){b.call(this,a,c,d,e)}return __extends(c,b),c.prototype._updateSpecifics=function(){var b=this;if(ko.unwrap(this.fieldListProvider)){var c=this.propertyName().split(".")[0];ko.unwrap(this.fieldListProvider).getItems(new a.JS.Widgets.PathRequest(c)).done(function(a){var c=a.filter(function(a){return a.name===b.propertyName()})[0];c&&b.specifics(c.specifics.toLowerCase())})}},c}(a.JS.Widgets.OperandPropertySurface);c.OperandPropertyQBSurface=d;var e=function(a){function b(c,d,e,f){var g=this;a.call(this,c,d,e,f),this.createParameter=function(){g.model.parameterName=g.parameterName(),ko.unwrap(g.fieldListProvider).createParameter(g.parameterName(),g.fieldsOptions()&&g.fieldsOptions().selected()&&g.fieldsOptions().selected().dataType||"System.String")},this._parameterName=ko.observable(""),this.isEditable=ko.observable(!1),this._parameterName(c.parameterName),this.fieldsOptions=d.leftPart.fieldsOptions,this.parameterName=ko.pureComputed({read:function(){return g._parameterName()||b.defaultDisplay},write:function(a){a!==b.defaultDisplay&&(g.model.parameterName=ko.unwrap(a),g._parameterName(g.model.parameterName))}})}return __extends(b,a),b.defaultDisplay="Create new parameter",b}(a.JS.Widgets.OperandParameterSurface);c.OperandParameterQBSurface=e;var f=function(){function b(b){this.getItems=function(a){var c=$.Deferred(),d=[];if(""===a.fullPath)d=b().tables().map(function(a){return{displayName:a.actualName(),name:a.actualName(),isList:!0,specifics:"Default",collapsed:ko.observable(!0)}});else{var e=b().tables().filter(function(b){return b.actualName()===a.fullPath})[0],f=e&&e.columns()||[];d=f.map(function(a){return{displayName:a.name.peek(),isList:!1,specifics:a.specifics,dataType:a.dataType.peek(),name:e.actualName()+"."+a.name.peek()}})}return c.resolve(d),c.promise()},this.createParameter=function(c,d){if(""!==c&&c!==e.defaultDisplay&&0===b().parameters().filter(function(a){return a.name()===c}).length){var f=new a.Data.DataSourceParameter({"@Name":c,"@Type":d});b().parameters.push(f)}}}return b}();c.QBTablesProvider=f;var g=function(f){function g(b,g,h){var j=this;f.call(this,b,null,h),this._findAncestorsRelations=function(a){var b={inner:0,outer:0,relations:[]};return j.relations().forEach(function(c){if(c.nestedTable()===a){b.relations.push(c),"LeftOuter"===c.joinType()?b.outer++:b.inner++;var d=j._findAncestorsRelations(c.parentTable());b.inner+=d.inner,b.outer+=d.outer,b.relations.push.apply(b.relations,d.relations)}}),b},this.type("TableQuery"),this.controlType="Query",this.dbSchemaProvider=g,this.orderBy=a.JS.Utils.deserializeArray(b.OrderBy,function(a){return new i(a,h)}),this.tables=a.JS.Utils.deserializeArray(b.Table,function(a){return new c.TableViewModel(a,j,h)}),this.filterString=new a.JS.Widgets.FilterStringOptions(this._filterString,null,ko.pureComputed(function(){return 0===j.tables().length})),this.filterString.helper.handlers.changeParameter=function(b,c){return{data:new a.JS.Widgets.FilterEditorAddOn(b,c,"changeParameter","items","dxqb-filtereditor-parameterspopup"),templateName:"dxqb-filtereditor-changeparameter"}},this.filterString.helper.mapper.Parameter=e,this.filterString.helper.mapper.Property=d,this.filterString.helper.canCreateParameters=!0,this.filterString.helper.canSelectLists=!1,this.tables().reduce(function(a,b){return b.location.x(a),b.location.y(65),a+b.size.width()+b.size.width()/2},30),this.relations=a.JS.Utils.deserializeArray(b.Relation,function(a){return new c.RelationViewModel(a,j,h)}),this.parameters=a.JS.Utils.deserializeArray(b.Parameter,function(b){return new a.Data.DataSourceParameter(b,h)}),this.filterString.helper.parameters=this.parameters,this.pageWidth=ko.pureComputed(function(){var a=500;return j.tables().forEach(function(b){var c=b.location.x()+b.size.width();c>a&&(a=c)}),a}),this.pageHeight=ko.pureComputed(function(){var a=500;return j.tables().forEach(function(b){var c=b.location.y()+b.size.height();c>a&&(a=c)}),a}),this.isValid=ko.pureComputed(function(){return j._validate()})}return __extends(g,f),g.prototype.getInfo=function(){return c.querySerializationsInfo},g.prototype.createChild=function(a){if("Table"!==a["@ControlType"])return f.prototype.createChild.call(this,a);var b=new c.TableViewModel(a,this);return this.addChild(b),b},g.prototype.tryToCreateRelationsByFK=function(a){var d=this;c.isJoinsResolvingDisabled||this.dbSchemaProvider.getDbSchema().done(function(c){var e=c.tables.filter(function(b){return b.name===a.name()})[0];e&&e.foreignKeys.forEach(function(c){var e=b.getFirstItemByPropertyValue(d.tables.peek(),"name",c.primaryKeyTable);if(e){var f=b.getFirstItemByPropertyValue(a.columns(),"name",c.column),g=b.getFirstItemByPropertyValue(e.columns(),"name",c.primaryKeyColumn);f&&g&&d.cerateJoinCondition(f,g)}}),d.tables.peek().forEach(function(e){var f=c.tables.filter(function(a){return a.name===e.name()})[0];f&&f.foreignKeys.forEach(function(c){if(c.primaryKeyTable===a.name()){var f=b.getFirstItemByPropertyValue(a.columns(),"name",c.primaryKeyColumn),g=b.getFirstItemByPropertyValue(e.columns(),"name",c.column);f&&g&&d.cerateJoinCondition(g,f)}})})})},g.prototype.addChild=function(a){if(a instanceof c.RelationViewModel){if(this.relations.indexOf(a)>-1)return;a.parentModel(this),this.relations.push(a)}else if(a instanceof c.TableViewModel){if(this.tables.indexOf(a)>-1)return;a.parentModel(this),null!==b.getFirstItemByPropertyValue(this.tables(),"actualName",a.name())&&a.alias(b.getUniqueName(this.tables().map(function(a){return a.actualName()}),a.name()+"_")),this.tables.push(a)}else b.NotifyAboutWarning("Attempt to add wrong child control.")},g.prototype.removeChild=function(a){if(a instanceof c.RelationViewModel){if(this.relations().length<1)return;this.relations.splice(this.relations().indexOf(a),1)}else if(a instanceof c.TableViewModel){if(this.tables().length<1)return;this.tables.splice(this.tables().indexOf(a),1);for(var d=this.relations(),e=d.length-1;e>-1;e--)(d[e].parentTable()===a||d[e].nestedTable()===a)&&this.removeChild(d[e]);for(var e=this.orderBy().length-1;e>-1;e--)this.orderBy()[e].table()===a.name()&&this.orderBy.remove(this.orderBy()[e]);for(var e=this.groupBy().length-1;e>-1;e--)this.groupBy()[e].table()===a.name()&&this.groupBy.remove(this.groupBy()[e])}else b.NotifyAboutWarning("Attempt to remove wrong child control.")},g.prototype.getTable=function(a){return b.getFirstItemByPropertyValue(this.tables(),"actualName",a)},g.prototype._findTableInAncestors=function(a,b){var c=this;return this.relations().some(function(d){return d.nestedTable()===a&&(d.parentTable()===b||c._findTableInAncestors(d.parentTable(),b))})},g.prototype._findHead=function(a){var b=null;return this.relations().some(function(c){return c.nestedTable()===a&&(b=c),!!b}),b?this._findHead(b.parentTable()):a},g.prototype._isHead=function(a){return!this.relations().some(function(b){return b.nestedTable()===a})},g.prototype._reverseRelations=function(a,b){b.forEach(function(a){var b=a.parentTable();a.parentTable(a.nestedTable()),a.nestedTable(b),a.conditions().forEach(function(a){var b=a.parentColumnName();a.parentColumnName(a.nestedColumnName()),a.nestedColumnName(b)})})},g.prototype.cerateJoinCondition=function(a,c){var d=a.parentModel(),e=c.parentModel();if(d===e)return null;var f=!1,g=b.findFirstItemMatchesCondition(this.relations(),function(a){return f=a.parentTable()===e&&a.nestedTable()===d,a.parentTable()===d&&a.nestedTable()===e||f});if(g);else if(this._findTableInAncestors(d,e))f=!0;else if(this._findHead(d)!==this._findHead(e)&&!this._isHead(e)){var h=this._findAncestorsRelations(d),i=this._findAncestorsRelations(e);h.outer>i.outer?this._reverseRelations(e,i.relations):h.outer<i.outer?(this._reverseRelations(d,h.relations),f=!0):h.inner>=i.inner?this._reverseRelations(e,i.relations):h.inner<i.inner&&(this._reverseRelations(d,h.relations),f=!0)}if(f){var j=d;d=e,e=j;var k=a;a=c,c=k}g=g||this.createChild({"@ControlType":"Relation","@Parent":d.actualName(),"@Nested":e.actualName(),"@Type":"Inner",KeyColumn:[]});var l=b.findFirstItemMatchesCondition(g.conditions(),function(b){return b.parentColumn()===a&&b.nestedColumn()===c});return l||(l=g.createChild({"@ControlType":"JoinCondition","@Parent":a.name(),"@Nested":c.name()})),l},g.prototype._validate=function(){if(0===this.tables().length)return!1;var a=this.tables().map(function(a){return a.actualName()});return this._validateTable(a,a[0]),a.length<1},g.prototype._validateTable=function(a,b){var c=this,d=a.indexOf(b);if(!(0>d)){a.splice(d,1);var e=this.relations().map(function(a){return a.parentTableName()===b?a.nestedTableName():a.nestedTableName()===b?a.parentTableName():null});e.forEach(function(b){return c._validateTable(a,b)})}},g.prototype.serialize=function(b){return void 0===b&&(b=!1),b?{Query:this.serialize()}:(new a.JS.Utils.ModelSerializer).serialize(this)},g.prototype.save=function(){var a=this.serialize(!0);return this.onSave&&this.onSave(a),a},g}(c.QueryElementBaseViewModel);c.QueryViewModel=g,c.margins={propertyName:"margins",modelName:"@Margins",from:b.Margins.fromString},c.querySerializationsInfo=[c.margins,{propertyName:"tables",modelName:"Table",array:!0},{propertyName:"relations",modelName:"Relation",array:!0},{propertyName:"parameters",modelName:"Parameter",array:!0},{propertyName:"type",modelName:"@Type"},{propertyName:"name",modelName:"@Name",displayName:"Name",editor:c.editorTemplates.text},{propertyName:"_filterString",modelName:"Filter",defaultVal:""},{propertyName:"filterString",defaultVal:"",displayName:"Filter",editor:c.editorTemplates.filterEditor},{propertyName:"orderBy",modelName:"OrderBy",array:!0},{propertyName:"groupBy",modelName:"GroupBy",array:!0,info:[{propertyName:"table",modelName:"@Table"},{propertyName:"column",modelName:"@Column"}]}];var h=function(a){function c(d,e){void 0===e&&(e=ko.observable(1)),a.call(this,d,{measureUnit:ko.observable("Pixels"),zoom:e,dpi:ko.observable(100)},c._unitProperties),this.tables=ko.observableArray(),this.relations=ko.observableArray(),this.allowMultiselect=!1,this.focused=ko.observable(!1),this.selected=ko.observable(!1),this.underCursor=ko.observable(new b.HoverInfo),this.templateName="dx-query-surface",this.measureUnit=this._context.measureUnit,this.dpi=this._context.dpi,this._context=this,this.margins={bottom:this._bottom,left:this._left,right:this._right,top:this._top},this.zoom=e,b.createObservableArrayMapCollection(d.tables,this.tables,this._createSurface),b.createObservableArrayMapCollection(d.relations,this.relations,this._createSurface)}return __extends(c,a),c.prototype.checkParent=function(){return!1},c.prototype.getChildrenCollection=function(){return this.tables},c._unitProperties={_width:function(a){return a.pageWidth},_height:function(a){return a.pageWidth},pageWidth:function(a){return a.pageWidth},pageHeight:function(a){return a.pageHeight},_bottom:function(a){return a.margins.bottom},_left:function(a){return a.margins.left},_right:function(a){return a.margins.right},_top:function(a){return a.margins.top}},c}(b.SurfaceElementBase);c.QuerySurface=h,c.orderByItemSerializationsInfo=[{propertyName:"table",modelName:"@Table"},{propertyName:"column",modelName:"@Column"},{propertyName:"descending",modelName:"@Descending",defaultVal:!1}];var i=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.prototype.getInfo=function(){return c.orderByItemSerializationsInfo},b}();c.OrderByItem=i}(c=b.QueryBuilder||(b.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(c){function d(a,b,d,e,f){c.call(this,a,b,d,e),this._dragColumn=null,this.dragDropConnector=ko.observable(null),this.cursor="arrow",this.containment=".dxrd-ghost-container",this.helper=function(a){f.update(a)}}return __extends(d,c),d.prototype._needToCreateRelation=function(){if(!(this.selection.dropTarget&&this.selection.dropTarget instanceof b.ColumnSurface))return!1;var a=this.selection.dropTarget.getControlModel().parentModel();return!a.isDisabled()},d.prototype.startDrag=function(c){if(!(c instanceof b.ColumnSurface))throw new Error("ColumnDragHandler can be applied to the Column only.");this._dragColumn=c,d.setDisableStateForTables(this._dragColumn.getControlModel().root,this._dragColumn.getControlModel().parentModel());var e=new a.Diagram.RoutedConnectorViewModel({},this._dragColumn.getControlModel().root);this.dragDropConnector(new a.Diagram.RoutedConnectorSurface(e,this.surface()))},d.prototype.setConnectorPoints=function(b){var c=this._dragColumn.getControlModel(),d=this.dragDropConnector().getControlModel();if(this._needToCreateRelation()){var e=a.Diagram.determineConnectingPoints(c,this.selection.dropTarget.getControlModel());d.startPoint().connectingPoint(e.start),d.endPoint().connectingPoint(e.end)}else{var f=Math.abs(c.leftConnectionPoint.location.x()-b.left)>Math.abs(c.rightConnectionPoint.location.x()-b.left)?c.rightConnectionPoint:c.leftConnectionPoint;d.startPoint().connectingPoint(f),this.dragDropConnector().endPoint().rect({top:b.top,left:b.left})}},d.prototype.drag=function(a,b){b.position.left+=b.scroll.left,b.position.top+=b.scroll.top,this.setConnectorPoints(this._getAbsoluteSurfacePosition(b))},d.prototype.doStopDrag=function(){this.dragDropConnector(null);var b=this._dragColumn.getControlModel(),c=b.root;if(this._needToCreateRelation()){var e=this.selection.dropTarget.getControlModel(),f=c.cerateJoinCondition(b,e);null!==f&&this.selection.initialize(a.findSurface(c.cerateJoinCondition(b,e)))}d.resetTablesDisabledState(c)},d.prototype.dragColumn=function(){return this._dragColumn},d.setDisableStateForTables=function(a,b){a.tables().forEach(function(a){return a.isDisabled(b===a)})},d.resetTablesDisabledState=function(a){a.tables().forEach(function(a){return a.isDisabled(!0)})},d}(a.DragDropHandler);b.ColumnDragHandler=c;var d=function(c){function d(d,e,f,g,h){var i=this;c.call(this,d,e,f,g),this._undoEngine=f,this._query=function(){return i._querySurface().getControlModel()},this._querySurface=d,this.cursor="arrow",this.containment=".dxrd-designer",this.cursorAt={top:0,left:0},this.helper=function(b){c.prototype.helper.call(i,b);b.data.isList?"List":b.data.specifics;i.recalculateSize(a.Size.fromString("135, 123")),h.setContent(new a.Rectangle(0,0,i._size.width(),i._size.height()))},this._drop=function(a,c){var d=c.createChild($.extend({"@ControlType":"Table","@Name":a.name},b.controlsFactory.controlsMap.Table.defaultVal));return d.isInitialized()?c.tryToCreateRelationsByFK(d):d.isInitialized.subscribe(function(){i._undoEngine().start(),c.tryToCreateRelationsByFK(d),i._undoEngine().end()}),d}}return __extends(d,c),d.prototype.startDrag=function(a){a&&a.name&&this._query().dbSchemaProvider.getDbTable(a.name)},d.prototype.doStopDrag=function(a,b){if(this._querySurface().underCursor()&&this._querySurface().underCursor().isOver){var c=this._getAbsoluteSurfacePosition(a);this._querySurface().underCursor().x=c.left-this._querySurface().absolutePosition.x(),this._querySurface().underCursor().y=c.top-this._querySurface().absolutePosition.y();var d=b,e=(b.data.isList?"List":b.data.specifics,this._drop(d.data,this._query()));this.addControl(e,this._querySurface(),this._size)}},d.prototype.addControl=function(b,c,d){c.getControlModel().addChild(b);var e=a.findSurface(b);e.rect({left:c.underCursor().x,top:c.underCursor().y,width:d.width()}),this.selection.initialize(e)},d}(a.DragDropHandler);b.DbObjectDragDropHandler=d}(b=a.QueryBuilder||(a.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(){b.Diagram.registerControls(),c.controlsFactory.registerControl("Unknown",{info:c.unknownSerializationsInfo,type:b.ElementViewModel,nonToolboxItem:!0,surfaceType:b.SurfaceElementBase,isDeleteDeny:!0}),c.controlsFactory.registerControl("Relation",{info:c.relationSerializationInfo,defaultVal:{},surfaceType:c.RelationSurface,popularProperties:[],type:c.RelationViewModel,elementActionsTypes:[],nonToolboxItem:!0}),c.controlsFactory.registerControl("JoinCondition",{info:c.joinConditionSerializationInfo,defaultVal:{},surfaceType:c.JoinConditionSurface,popularProperties:["_parentColumnName","_nestedColumnName","joinType"],type:c.JoinConditionViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!0}),c.controlsFactory.registerControl("Table",{info:c.tableSerializationInfo,defaultVal:{Column:[]},surfaceType:c.TableSurface,popularProperties:["name","alias","columns"],type:c.TableViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!0}),c.controlsFactory.registerControl("Column",{info:c.columnSerializationInfo,defaultVal:{},surfaceType:c.ColumnSurface,popularProperties:["name","alias","selected"],type:c.ColumnViewModel,elementActionsTypes:[b.ElementActions],nonToolboxItem:!0,isDeleteDeny:!0}),c.controlsFactory.registerControl("Query",{info:c.querySerializationsInfo,surfaceType:c.QuerySurface,popularProperties:["name","filterString"],type:c.QueryViewModel,elementActionsTypes:[b.ElementActions],isContainer:!0,nonToolboxItem:!0,isDeleteDeny:!0})}function e(a,c){var d=a.model;return function(e){var f=b.findFirstItemMatchesCondition(e,function(a){return"Delete"===a.text});f.imageClassName="dx-icon-dxrd-image-recycle-bin";var g=b.findFirstItemMatchesCondition(e,function(a){return"Undo"===a.text});g.disabled=ko.pureComputed(function(){return a.isLoading()||!a.undoEngine().undoEnabled()});var h=b.findFirstItemMatchesCondition(e,function(a){return"Redo"===a.text});e.splice(0,e.length,f,g,h),e.push({text:"Save",imageClassName:"dxqb-image-save",disabled:a.isLoading,visible:!0,hotKey:{ctrlKey:!0,keyCode:"S".charCodeAt(0)},clickAction:function(){d().save()},hasSeparator:!0}),e.push({text:"Preview Results",imageClassName:"dxrd-image-data-preview",disabled:a.isLoading,visible:!0,hotKey:{ctrlKey:!0,keyCode:"P".charCodeAt(0)},clickAction:function(){a.showPreview()},hasSeparator:!0}),c&&c(e)}}function f(a){return function(){var b=$(".dxqb-designer .dxrd-right-panel").outerWidth();$(".dxqb-designer .dxrd-surface-wrapper").css("right",b);var c=$(".dxqb-designer").width()-(b+5);$(".dxqb-designer .dxrd-surface-wrapper").css("width",c),a(c)}}function g(a,b){var c=ko.observable(!1);return b.subscribe(function(){c(!1)}),ko.pureComputed(function(){return b.peek().getDbSchema().done(function(){c(!0)}),c()?a().tables.peek().some(function(a){return!a.isInitialized()}):!0})}function h(h,i,j,k){k&&Globalize.addCultureInfo("default",{messages:k}),d();var l=ko.observable(),m=ko.observable(),n=ko.observable();l.subscribe(function(a){m(new c.QuerySurface(a))});var o=function(a){var b=new c.QueryViewModel(a,i.dbSchemaProvider());b.filterString.helper.canChoiceParameters=!!i.parametersEditingEnabled,l(b),n({itemsProvider:i.dbSchemaProvider(),selectedPath:ko.observable()})};i.querySource.subscribe(function(a){o(a)}),o(i.querySource());var p=b.createDesigner(l,m,c.controlsFactory);p.rootStyle="dxqb-designer",p.dataPreview={isLoading:ko.observable(!1),isVisible:ko.observable(!1),data:ko.observable(),okButtonHandler:function(a){a.model.isVisible(!1)}},p.parts=[{templateName:"dxqb-toolbar",model:p},{templateName:"dxrd-surface-template-base",model:p},{templateName:"dx-right-panel-lightweight",model:p},{templateName:"dxqb-data-preview",model:p.dataPreview}],p.columnDragHandler=new c.ColumnDragHandler(m,p.selection,p.undoEngine,p.snapHelper,p.dragHelperContent),p.resizeHandler.handles="e, w";var q=ko.observable(0);p.tabPanel.tabs.length=0,p.tabPanel.tabs.push(new b.TabInfo("Properties","dxqb-properties-wrapper",{editableObject:p.editableObject,properties:new a.JS.Widgets.ObjectProperties(ko.pureComputed(function(){return p.selection.focused()&&p.selection.focused().getControlModel()}),null,1),fieldListModel:{treeListOptions:n},tablesTop:q})),p.fieldDragHandler=new c.DbObjectDragDropHandler(m,p.selection,p.undoEngine,p.snapHelper,p.dragHelperContent),p.dataBindingsProvider=p.fieldListProvider=new c.QBTablesProvider(l),p.isLoading=g(p.model,i.dbSchemaProvider),p.actionLists=new b.ActionLists(m,p.selection,p.undoEngine,e(p,j&&j.customizeActions)),p.selection.focused(m()),m.subscribe(function(a){p.selection.focused(a)}),p.isLoading()||p.undoEngine&&p.undoEngine().clearHistory(),p.isLoading.subscribe(function(){p.undoEngine&&p.undoEngine().clearHistory()}),p.selection.focused.subscribe(function(){q(null),q.notifySubscribers()}),h&&($(h).children().remove(),ko.cleanNode(h),ko.applyBindings(p,h));var r=f(p.surfaceSize);return $(window).bind("resize",function(){r()}),p.tabPanel.width.subscribe(function(){r()}),p.updateSurfaceSize=function(){r()},p.updateSurface=function(){r(),q(167)},p.updateSurface(),p.showPreview=function(){p.dataPreview.isLoading(!0),p.dataPreview.isVisible(!0),c.previewDataCallback(i.dbSchemaProvider().dataSource(),JSON.stringify(l().serialize(!0))).done(function(a){p.dataPreview.data(JSON.parse(a)),p.dataPreview.isLoading(!1)}).fail(function(a){p.dataPreview.isVisible(!1),b.ShowMessage(b.getErrorMessage(a))})},p}c.controlsFactory=new b.ControlsFactory,c.registerControls=d,c.HandlerUri="DXQB.axd",c.previewDataCallback=function(a,c){return b.ajax(b.QueryBuilder.HandlerUri,"getDataPreview",encodeURIComponent(JSON.stringify({connectionString:a.connection.name(),dataSourceBase64:a.base64(),sqlQueryJSON:c})))},c.updateQueryBuilderSurfaceContentSize=f,c.createIsLoadingFlag=g,c.isJoinsResolvingDisabled=!1,c.createQueryBuilder=h,ko.bindingHandlers.dxQueryBuilder={init:function(a,b){var c=$("#dxrd-querybuilder").text(),d=$(a).append(c);return ko.applyBindings(ko.unwrap(b()),d.children()[0]),{controlsDescendantBindings:!0}}},ko.bindingHandlers.dxdTableView={init:function(a,b){var c=$("#dxd-tableview").text(),d=$(a).append(c),e=ko.unwrap(b()),f=ko.observable(!1);ko.applyBindings({data:e,appendFakeRow:f},d.children()[0]);var g=d.find(".dxd-tableview-titles"),h=d.find(".dxd-tableview-data table");return f(d.height()>g.height()+h.height()),d.find(".dxd-tableview-titles .dxd-tableview-resizable").each(function(a,b){var c=$(b).find(".dxd-tableview-cell-text"),f=d.find(".dxd-tableview-data .dxd-tableview-resizable"+a);a<e.schema.length-1&&$(b).resizable({handles:"e",alsoResize:f.parent(),resize:function(a,b){c.outerWidth(b.size.width),f.outerWidth(b.size.width)}});var g=Math.max(c.width(),f.width());c.width(g),f.width(g)}),$(".dxd-tableview-data").dxScrollView({onScroll:function(a){a.scrollOffset.left>=0&&g.offset({left:h.offset().left,top:g.offset().top})}}),{controlsDescendantBindings:!0}}}}(c=b.QueryBuilder||(b.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){b.dsParameterNameValidationRules=[{type:"custom",validationCallback:function(a){return d.validateName(a.value)},message:a.Designer.getLocalization("Name is required and should be a valid identifier.")}],b.parameterValueSerializationsInfo={propertyName:"value",displayName:"Value",editor:a.JS.Widgets.editorTemplates.text},b.dsParameterSerializationInfo=[{propertyName:"_name",modelName:"@Name"},{propertyName:"name",displayName:"Name",validationRules:b.dsParameterNameValidationRules,editor:a.JS.Widgets.editorTemplates.text},{propertyName:"type",displayName:"Type",modelName:"@Type",editor:a.JS.Widgets.editorTemplates.combobox,values:{"System.String":"String","System.DateTime":"Date","System.Int16":"Number (16 bit integer)","System.Int32":"Number (32 bit integer)","System.Int64":"Number (64 bit integer)","System.Single":"Number (floating-point)","System.Double":"Number (double-precision floating-point)","System.Decimal":"Number (decimal)","System.Boolean":"Boolean","System.Guid":"Guid","DevExpress.DataAccess.Expression":"Expression"}},{propertyName:"_value",modelName:"Value"},b.parameterValueSerializationsInfo];var c=function(){function a(a,b,c){this.name=a,this.defaultValue=b,this.valueConverter=c}return Object.defineProperty(a.prototype,"specifics",{get:function(){return b.DBColumn.GetSpecific(this.name)},enumerable:!0,configurable:!0}),a}(),d=function(d){function e(c,f){var g=this;d.call(this),this._valueInfo=ko.observable(b.parameterValueSerializationsInfo),f=f||new a.JS.Utils.ModelSerializer,f.deserialize(this,c),this.name=ko.pureComputed({read:function(){return g._name()},write:function(a){e.validateName(a)&&g._name(a)}}),this._expressionValue=ko.observable({value:this._value}),this._disposables.push(this.type.subscribe(function(a){g._updateValueInfo(a)})),this.value=ko.pureComputed({read:function(){return"DevExpress.DataAccess.Expression"===g.type()?g._expressionValue():g._value()},write:function(a){g._value(a)}}),this._updateValueInfo(this.type.peek())}return __extends(e,d),e.prototype._getTypeValue=function(a){var b=e.typeValues.filter(function(b){return b.name===a});return b.length>0?b[0]:{
name:a,defaultValue:null,specifics:"String",disableEditor:!0}},e.prototype._tryConvertValue=function(a,b){if(!e._isValueValid(a))return b.defaultValue;var c=b.valueConverter||function(a){return a},d=c(a);return e._isValueValid(a)?d:b.defaultValue},e._isValueValid=function(a){return void 0!==a&&null!==a&&!isNaN("string"==typeof a?"":a)},e.prototype._updateValueInfo=function(c){var d=this._getTypeValue(c);this.value(this._tryConvertValue(this._value(),d)),this._valueInfo($.extend({},b.parameterValueSerializationsInfo,{editor:a.Designer.getEditorType(d.name),disabled:d.disableEditor===!0}))},Object.defineProperty(e.prototype,"specifics",{get:function(){var a=this,b=e.typeValues.filter(function(b){return b.name===a.type()});return b.length>0?b[0].specifics:"string"},enumerable:!0,configurable:!0}),e.validateName=function(a){return a&&!a.match(/[~`!"№;%\^:\?*\(\)&\-\+={}\[\]\|\\\/,\.<>'\s]/)},e.prototype.getInfo=function(){if(this.type){var a=$.extend(!0,[],b.dsParameterSerializationInfo);return a.splice(a.indexOf(a.filter(function(a){return"value"===a.propertyName})[0]),1,this._valueInfo()),a}return b.dsParameterSerializationInfo},e.typeValues=[new c("System.DateTime",new Date((new Date).setHours(0,0,0,0)),function(a){return Globalize.parseDate(a,["yyyy-MM-dd","MM/dd/yyyy HH:mm:ss"])}),new c("System.String",""),new c("System.SByte",0,function(a){return parseInt(a)}),new c("System.Int16",0,function(a){return parseInt(a)}),new c("System.Int32",0,function(a){return parseInt(a)}),new c("System.Int64","0"),new c("System.Byte",0,function(a){return parseInt(a)}),new c("System.UInt16",0,function(a){return parseInt(a)}),new c("System.UInt32",0,function(a){return parseInt(a)}),new c("System.UInt64","0"),new c("System.Decimal","0"),new c("System.Double",0,function(a){return parseFloat(a)}),new c("System.Single",0,function(a){return parseFloat(a)}),new c("System.Boolean",!1,function(a){return void 0!==a?"true"===String(a).toLowerCase():a}),new c("System.Guid","00000000-0000-0000-0000-000000000000"),new c("DevExpress.DataAccess.Expression",""),new c("System.Char","")],e}(a.Designer.Disposable);b.DataSourceParameter=d}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c=function(){function a(a,b,c,d){var e=this;this.showPopup=function(a){e._popupService.title(""),e._updateActions(e.target),e._popupService.target(a.element),e._popupService.visible(!0)},this.target=a,this._action=c,this._popupService=b,this._popupItems=d}return a.prototype._updateActions=function(a){var b=this;this._popupService.data({data:this._popupItems,template:"dx-filtereditor-popup-common",click:function(c){a[b._action](c),b._popupService.visible(!1)}})},a}();b.MasterDetailEditorPopupManager=c;var d=function(){function b(b,d){var f=this;this.isValid=ko.observable(!0),this.popupVisible=ko.observable(!1),this.loadPanelVisible=ko.observable(!1),this.buttonItems=[],this.masterQueries=ko.observableArray(),this.popupService=new a.Designer.PopupService,this.save=function(){var c=b.relations().some(function(a){return!a.detailQuery()||!a.masterQuery()||a.keyColumns().some(function(a){return!a.detailColumn()||!a.masterColumn()})});c?a.Designer.ShowMessage(a.Designer.getLocalization("Some fields are empty. Please fill all empty fields or remove the corresponding conditions to proceed.")):d().done(function(){f.popupVisible(!1)})},this.createRelation=function(a){var d=b.resultSet.tables().filter(function(b){return b.tableName()!==a.queryName}).map(function(a){return{name:a.tableName()}});return{data:new c(a,f.popupService,"create",d),templateName:"dx-filtereditor-create"}},this.setColumn=function(d){var e=a.Designer.getFirstItemByPropertyValue(b.resultSet.tables(),"tableName",d.queryName);return{data:new c(d,f.popupService,"setColumn",e?e.columns():[]),templateName:"dx-masterdetail-editor-setColumn"}},this._createMainPopupButtons();var g={};b.resultSet.tables().forEach(function(a){g[a.tableName()]=new e(a.tableName(),b.relations)}),b.relations().forEach(function(a){g[a.masterQuery()]=g[a.masterQuery()]||new e(a.masterQuery(),b.relations),g[a.masterQuery()].add(a)}),this.masterQueries($.map(g,function(a){return a}))}return b.prototype._createMainPopupButtons=function(){var b=this;this.buttonItems=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Designer.getLocalization("Save"),onClick:function(){b.save()}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.Designer.getLocalization("Cancel"),onClick:function(){b.popupVisible(!1)}}}]},b}();b.MasterDetailEditor=d;var e=function(){function c(c,d){var e=this;this.relations=ko.observableArray(),this.queryName=c,this.add=function(a){e.relations.push(new f(a,e))},this.create=function(c){var f=new b.MasterDetailRelation({"@Master":e.queryName,"@Detail":c.name});a.Designer.getFirstItemByPropertyValue(e.relations(),"relationName",f.name())&&f.name(a.Designer.getUniqueName(e.relations().map(function(a){return a.relationName()}),f.name()+"_")),f.keyColumns.push({masterColumn:ko.observable(),detailColumn:ko.observable()}),e.add(f),d.push(f)},this.remove=function(a){e.relations.remove(a),d.remove(function(b){return b.name===a.relationName})}}return c}();b.MasterQuerySurface=e;var f=function(){function a(a,b){var c=this;this.isEditable=ko.observable(!1),this.relationName=a.name,this.keyColumns=ko.pureComputed(function(){return a.keyColumns().map(function(b){return{master:new g(b.masterColumn,a.masterQuery()),detail:new g(b.detailColumn,a.detailQuery())}})}),this.create=function(){a.keyColumns.push({masterColumn:ko.observable(),detailColumn:ko.observable()})},this.remove=function(d){a.keyColumns.remove(function(a){return a.masterColumn===d.master.column&&a.detailColumn===d.detail.column}),0===a.keyColumns().length&&b.remove(c)}}return a}();b.MasterDetailRelationSurface=f;var g=function(){function a(a,b){var c=this;this.column=a,this.queryName=b,this.setColumn=function(a){c.column(a.name())}}return a}();b.KeyColumnSurface=g}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c=[{propertyName:"name",modelName:"@Name"},{propertyName:"tables",modelName:"View",array:!0}],d=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b),this.tables=a.JS.Utils.deserializeArray(b.View,function(a){return new f(a,c)})}return b.prototype.getInfo=function(){return c},b}();b.ResultSet=d;var e=[{propertyName:"tableName",modelName:"@Name"},{propertyName:"columns",modelName:"Field",array:!0,info:[{propertyName:"name",modelName:"@Name"},{propertyName:"propertyType",modelName:"@Type"}]}],f=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.prototype.getInfo=function(){return e},b}();b.ResultTable=f}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){b.SqlQueryType={customSqlQuery:"CustomSqlQuery",tableQuery:"TableQuery",storedProcQuery:"StoredProcQuery"};var c=function(c){function d(d,e,f){var k=this;c.call(this),f=f||new a.JS.Utils.ModelSerializer,f.deserialize(this,d),this.base64=function(){return e},this.queries=a.JS.Utils.deserializeArray(d.Query,function(a){if(a["@Type"]===b.SqlQueryType.customSqlQuery)return new g(a,k,f);if(a["@Type"]===b.SqlQueryType.tableQuery)return new h(a,k,f);if(a["@Type"]===b.SqlQueryType.storedProcQuery)return new i(a,k,f);throw new Error("Unknown sql query type.")}),this.relations=a.JS.Utils.deserializeArray(d.Relation,function(a){return new j(a,f)}),this.dbSchemaProvider=new b.DBSchemaProvider(this),this._disposables.push(this.connection.name.subscribe(function(){k.queries([]),k.relations([]),k.resultSet=null}))}return __extends(d,c),d.prototype.getInfo=function(){return f},d}(a.Designer.Disposable);b.SqlDataSource=c;var d=function(){function b(b,c){this.name=ko.observable(),c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a,c)},b.prototype.getInfo=function(){return e},b}();b.SqlDataSourceConnection=d;var e=[{propertyName:"name",modelName:"@Name"},{propertyName:"fromAppConfig",modelName:"@FromAppConfig",defaultVal:!1,from:a.Designer.parseBool}];b.masterDetailRelationSerializationsInfo=[{propertyName:"masterQuery",modelName:"@Master"},{propertyName:"detailQuery",modelName:"@Detail"},{propertyName:"_customName",modelName:"@Name"},{propertyName:"keyColumns",modelName:"KeyColumn",array:!0,info:[{propertyName:"masterColumn",modelName:"@Master"},{propertyName:"detailColumn",modelName:"@Detail"}]}];var f=[{propertyName:"name",modelName:"Name"},{propertyName:"connection",modelName:"Connection",from:d.from},{propertyName:"queries",modelName:"Query",array:!0},{propertyName:"relations",modelName:"Relation",array:!0},{propertyName:"resultSet",modelName:"ResultSchema",from:function(a,c){return a?new b.ResultSet(a.DataSet,c):null}}];b.customQuerySerializationsInfo=[{propertyName:"type",modelName:"@Type"},{propertyName:"name",modelName:"@Name"},{propertyName:"sqlString",modelName:"Sql",defaultVal:""},{propertyName:"parameters",modelName:"Parameter",array:!0}];var g=function(){function c(c,d,e){this.parent=d,(e||new a.JS.Utils.ModelSerializer).deserialize(this,c),this.type=ko.pureComputed(function(){return b.SqlQueryType.customSqlQuery}),this.parameters=a.JS.Utils.deserializeArray(c.Parameter,function(a){return new b.DataSourceParameter(a,e)})}return c.prototype.getInfo=function(){return b.customQuerySerializationsInfo},c}();b.CustomSqlQuery=g,b.tableQuerySerializationsInfo=[{propertyName:"type",modelName:"@Type"},{propertyName:"name",modelName:"@Name",defaultVal:"TableQuery"},{propertyName:"parameters",modelName:"Parameter",array:!0},{propertyName:"filterString",modelName:"Filter",defaultVal:""}];var h=function(){function c(c,d,e){this.parent=d,(e||new a.JS.Utils.ModelSerializer).deserialize(this,c),this.type=ko.pureComputed(function(){return b.SqlQueryType.tableQuery}),this.parameters=a.JS.Utils.deserializeArray(c.Parameter,function(a){return new b.DataSourceParameter(a,e)})}return c.prototype.getInfo=function(){return b.tableQuerySerializationsInfo},c}();b.TableQuery=h,b.storedProcQuerySerializationsInfo=[{propertyName:"type",modelName:"@Type"},{propertyName:"name",modelName:"@Name"},{propertyName:"procName",modelName:"ProcName"},{propertyName:"parameters",modelName:"Parameter",array:!0}];var i=function(){function c(c,d,e){this.parent=d,(e||new a.JS.Utils.ModelSerializer).deserialize(this,c),this.type=ko.pureComputed(function(){return b.SqlQueryType.storedProcQuery}),this.parameters=a.JS.Utils.deserializeArray(c.Parameter,function(a){return new b.DataSourceParameter(a,e)})}return c.prototype.getInfo=function(){return b.storedProcQuerySerializationsInfo},c}();b.StoredProcQuery=i;var j=function(){function c(b,c){var d=this;this.name=ko.pureComputed({read:function(){return d._customName()||d.masterQuery()+d.detailQuery()},write:function(a){d._customName(a)},deferEvaluation:!0}),(c||new a.JS.Utils.ModelSerializer).deserialize(this,b)}return c.prototype.getInfo=function(){return b.masterDetailRelationSerializationsInfo},c}();b.MasterDetailRelation=j}(b=a.Data||(a.Data={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.AggregationType={None:"None",Count:"Count",Max:"Max",Min:"Min",Avg:"Avg",Sum:"Sum"},c.columnSerializationInfo=[c.name,{propertyName:"displayType",displayName:"Type",disabled:!0,editor:c.editorTemplates.text},c.alias,c.selected,{propertyName:"sortingType",displayName:"Sort Type",editor:c.editorTemplates.combobox,defaultVal:"Unsorted",values:{Unsorted:"Unsorted",Ascending:"Ascending",Descending:"Descending"}},{propertyName:"sortOrder",displayName:"Sort Order",editor:c.editorTemplates.numeric},{propertyName:"groupBy",displayName:"Group By",editor:c.editorTemplates.bool,defaultVal:!1},{propertyName:"aggregate",modelName:"@Aggregate",displayName:"Aggregate",editor:c.editorTemplates.combobox,values:c.AggregationType,defaultVal:c.AggregationType.None}];var d=function(d){function e(e,f,g,h){var i=this;d.call(this,$.extend({"@ControlType":"Column"},e),g,h),this.displayType=ko.pureComputed(function(){return f.type+(f.size?"("+f.size+")":"")}),this.dataType=ko.pureComputed(function(){return a.Data.DBColumn.GetType(f.type)}),this.actualName=ko.pureComputed(function(){return i.alias()||i.name()});var j=g.getColumnConnectionPoints(this);this.rightConnectionPoint={side:ko.observable(0),location:j.right},this.leftConnectionPoint={side:ko.observable(3),location:j.left};var k=g.parentModel().orderBy,l=ko.computed(function(){return b.findFirstItemMatchesCondition(k(),function(a){return a.table()===g.name()&&a.column()===i.name()})});this.sortingType=ko.computed({read:function(){return l()?l().descending()?"Descending":"Ascending":"Unsorted"},write:function(a){"Unsorted"!==a?l()?l().descending("Descending"===a):k.push(new c.OrderByItem({"@Table":g.name(),"@Column":i.name(),"@Descending":"Descending"===a})):l()&&k.remove(l())}}),this.sortOrder=ko.computed({read:function(){var a=k().indexOf(l());return 0>a?void 0:a+1},write:function(a){if(l()){a=Math.min(a,k().length),a=Math.max(a,1);var b=k().indexOf(l()),c=k.splice(b,1);k.splice(a-1,0,c[0])}}});var m=g.parentModel().groupBy,n=ko.computed(function(){return b.findFirstItemMatchesCondition(m(),function(a){return a.table()===g.name()&&a.column()===i.name()})});this.aggregate.subscribe(function(a){a!==c.AggregationType.None?(i.groupBy(!1),(!i.alias()||i._isAliasAutoGenerated())&&i.alias(i.name()+"_"+a)):i._isAliasAutoGenerated()&&i.alias(null)}),this.groupBy=ko.computed({read:function(){return!!n()},write:function(a){a?(m.push({table:ko.observable(g.name()),column:ko.observable(i.name())}),i.aggregate(c.AggregationType.None)):m.remove(n())}});var o=ko.pureComputed(function(){return g.selectedColumns.indexOf(i)>=0});this.selected=ko.pureComputed({read:function(){return o()},write:function(a){o()!==a&&(a?g.selectedColumns.push(i):g.selectedColumns.remove(i))}})}return __extends(e,d),e.prototype._isAliasAutoGenerated=function(){if(!this.alias()||0!==this.alias().indexOf(this.name()+"_"))return!1;var a=this.alias().substring(this.name().length+1);return Object.keys(c.AggregationType).indexOf(a)>0},e.prototype.getInfo=function(){return c.columnSerializationInfo},e.prototype.isPropertyDisabled=function(a){return"sortOrder"===a?"Unsorted"===this.sortingType():"aggregate"===a?!this.selected():void 0},Object.defineProperty(e.prototype,"specifics",{get:function(){return a.Data.DBColumn.GetSpecific(this.dataType())},enumerable:!0,configurable:!0}),e}(c.QueryElementBaseViewModel);c.ColumnViewModel=d;var e=function(a){function b(b,d){var e=this;a.call(this,b,d,null),this.template="dxqb-table-field",this.toggleSelected=function(){e.getControlModel().selected(!e.getControlModel().selected())},this.selectedWrapper=ko.pureComputed(function(){return e.getControlModel().selected()}),this.isAggregate=ko.pureComputed(function(){return e.getControlModel().aggregate()!==c.AggregationType.None}),this.isAscending=ko.pureComputed(function(){return"Ascending"===e.getControlModel().sortingType()}),this.isDescending=ko.pureComputed(function(){return"Descending"===e.getControlModel().sortingType()})}return __extends(b,a),b}(b.SurfaceElementBase);c.ColumnSurface=e}(c=b.QueryBuilder||(b.QueryBuilder={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(a){function b(b,c,d){a.call(this,b,c,d),this.selectedItem=ko.observable()}return __extends(b,a),b}(a.JS.Widgets.Editor);b.CollectionLookupEditorModel=c}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.editorTemplates={dataSource:{header:"dxrd-datasource"},series:{header:"dxrd-collection-lookup-header",content:"dxrd-series-item",editorType:c.CollectionLookupEditorModel},titles:{header:"dxrd-collection-lookup-header",content:"dxrd-titles-item",editorType:c.CollectionLookupEditorModel},views:{header:"dxrd-viewSelect"}},c.defaultBooleanValues={True:"True",False:"False",Default:"Default"},c.scaleTypeValues={Qualitative:"Qualitative",Numerical:"Numerical",DateTime:"DateTime",Auto:"Auto"},c.stringAlignmentValues={Near:"Near",Center:"Center",Far:"Far"},c.angle={propertyName:"angle",modelName:"@Angle",defaultVal:0,from:b.floatFromModel,displayName:"Angle",editor:a.JS.Widgets.editorTemplates.numeric},c.borderColor={propertyName:"borderColor",modelName:"@BorderColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Border Color",editor:b.Widgets.editorTemplates.customColorEditor},c.backColor={propertyName:"backColor",modelName:"@BackColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Background Color",editor:b.Widgets.editorTemplates.customColorEditor},c.dataMember={propertyName:"dataMember",modelName:"@DataMember"},c.text={propertyName:"text",modelName:"@Text",defaultVal:"",displayName:"Text",editor:a.JS.Widgets.editorTemplates.text},c.visible={propertyName:"visible",modelName:"@Visible",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Visible"},c.name={propertyName:"name",modelName:"@Name",displayName:"Name",editor:a.JS.Widgets.editorTemplates.text},c.thickness={propertyName:"thickness",modelName:"@Thickness",displayName:"Thickness",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},c.visibility={propertyName:"visibility",modelName:"@Visibility",displayName:"Visibility",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},c.color={propertyName:"color",modelName:"@Color",displayName:"Color",from:b.colorFromString,toJsonObject:b.colorToString,editor:b.Widgets.editorTemplates.customColorEditor},c.titleAlignment={propertyName:"titleAlignment",modelName:"@Alignment",displayName:"Alignment",defaultVal:"Center",editor:a.JS.Widgets.editorTemplates.combobox,values:c.stringAlignmentValues},c.textPattern={propertyName:"textPattern",modelName:"@TextPattern",displayName:"Text Pattern",editor:a.JS.Widgets.editorTemplates.text},c.textAlignment={propertyName:"textAlignment",modelName:"@TextAlignment",displayName:"Text Alignment",editor:a.JS.Widgets.editorTemplates.combobox,values:c.stringAlignmentValues},c.maxLineCount={propertyName:"maxLineCount",modelName:"@MaxLineCount",displayName:"Max Line Count",editor:a.JS.Widgets.editorTemplates.numeric},c.maxWidth={propertyName:"maxWidth",modelName:"@MaxWidth",displayName:"Max Width",editor:a.JS.Widgets.editorTemplates.numeric},c.textColor={propertyName:"textColor",modelName:"@TextColor",displayName:"Text Color",from:b.colorFromString,toJsonObject:b.colorToString,editor:b.Widgets.editorTemplates.customColorEditor},c.antialiasing={propertyName:"antialiasing",modelName:"@Antialiasing",displayName:"Antialiasing",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.font={propertyName:"font",modelName:"@Font",displayName:"Font",defaultVal:"Tahoma, 8pt",editor:a.JS.Widgets.editorTemplates.font},c.enableAxisXZooming={propertyName:"enableAxisXZooming",modelName:"@EnableAxisXZooming",displayName:"Enable Axis X Zooming"},c.enableAxisXScrolling={propertyName:"enableAxisXScrolling",modelName:"@EnableAxisXScrolling",displayName:"Enable Axis X Scrolling"},c.enableAxisYZooming={propertyName:"enableAxisYZooming",modelName:"@EnableAxisYZooming",displayName:"Enable Axis Y Zooming"},c.enableAxisYScrolling={propertyName:"enableAxisYScrolling",modelName:"@EnableAxisYScrolling",displayName:"Enable Axis Y Scrolling"},c.rotated={propertyName:"rotated",modelName:"@Rotated",displayName:"Rotated",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.typeNameNotShow={propertyName:"typeNameSerializable",modelName:"@TypeNameSerializable"},c.left={propertyName:"left",modelName:"@Left",displayName:"Left",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Left",editor:a.JS.Widgets.editorTemplates.numeric},c.right={propertyName:"right",modelName:"@Top",displayName:"Top",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Top",editor:a.JS.Widgets.editorTemplates.numeric},c.top={propertyName:"top",modelName:"@Right",displayName:"Right",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Right",editor:a.JS.Widgets.editorTemplates.numeric},c.bottom={propertyName:"bottom",modelName:"@Bottom",displayName:"Bottom",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Bottom",editor:a.JS.Widgets.editorTemplates.numeric},c.margin={propertyName:"chartMargins",modelName:"Margins",displayName:"Margins",info:[c.left,c.right,c.top,c.bottom],editor:a.JS.Widgets.editorTemplates.objecteditor},c.font18={propertyName:"font18",modelName:"@Font",displayName:"Font",defaultVal:"Tahoma, 18pt",editor:a.JS.Widgets.editorTemplates.font},c.font12={propertyName:"font12",modelName:"@Font",displayName:"Font",defaultVal:"Tahoma, 12pt",editor:a.JS.Widgets.editorTemplates.font},c.font8={propertyName:"font8",modelName:"@Font",displayName:"Font",defaultVal:"Tahoma, 8pt",editor:a.JS.Widgets.editorTemplates.font},c.paneSerializationsInfo=[c.enableAxisXScrolling,c.enableAxisYScrolling,c.enableAxisYZooming,c.enableAxisXZooming,c.backColor,c.borderColor],c.defaultPane={propertyName:"defaultPane",modelName:"DefaultPane",displayName:"Default Pane",info:c.paneSerializationsInfo,defaultVal:{},editor:a.JS.Widgets.editorTemplates.objecteditor}}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d={propertyName:"minValue",modelName:"@MinValue",displayName:"Min Value",editor:a.JS.Widgets.editorTemplates.numeric},e={propertyName:"maxValue",modelName:"@MaxValue",displayName:"Max Value",editor:a.JS.Widgets.editorTemplates.numeric},f={propertyName:"auto",modelName:"@Auto",displayName:"Auto",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},g={propertyName:"autoSideMargins",modelName:"@AutoSideMargins",displayName:"Auto Side Margins",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},h={propertyName:"sideMarginsValue",modelName:"@SideMarginsValue",displayName:"Side Margins Value",editor:a.JS.Widgets.editorTemplates.numeric};c.visualRangeSerializationsInfo=[f,g,d,e,h],c.visualRange={propertyName:"visualRange",modelName:"VisualRange",displayName:"Visual Range",info:c.visualRangeSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var i={propertyName:"alwaysShowZeroLevel",modelName:"@AlwaysShowZeroLevel",displayName:"Always Show Zero Level",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool};c.wholeRangeSerializationsInfo=c.visualRangeSerializationsInfo.concat(i),c.wholeRange={propertyName:"wholeRange",modelName:"WholeRange",displayName:"Whole Range",info:c.wholeRangeSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarWholeRange={propertyName:"radarWholeRange",modelName:"WholeRange",displayName:"Whole Range",info:c.visualRangeSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var j={propertyName:"dashStyle",modelName:"@DashStyle",displayName:"Dash Style",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Dash:"Dash",Dot:"Dot",DashDot:"DashDot",DashDotDot:"DashDotDot"}};c.lineStyleSerializationsInfo=[c.thickness,j],c.lineStyle={propertyName:"lineStyle",modelName:"LineStyle",displayName:"Line Style",info:c.lineStyleSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.minorLineStyle={propertyName:"minorLineStyle",modelName:"MinorLineStyle",displayName:"Minor Line Style",info:c.lineStyleSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var k={propertyName:"scaleName",modelName:"@ScaleMode",displayName:"ScaleMode",editor:a.JS.Widgets.editorTemplates.combobox,values:{Automatic:"Automatic",Manual:"Manual",Continuous:"Continuous"}},l={propertyName:"aggregateFunction",modelName:"@AggregateFunction",displayName:"AggregateFunction",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Average:"Average",Sum:"Sum",Minimum:"Minimum",Maximum:"Maximum",Count:"Count",Financial:"Financial"}},m={propertyName:"gridSpacing",modelName:"@GridSpacing",displayName:"Grid Spacing",editor:a.JS.Widgets.editorTemplates.numeric},n={propertyName:"autoGrid",modelName:"@AutoGrid",displayName:"Auto Grid",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},o={propertyName:"gridOffset",modelName:"@GridOffset",displayName:"Grid Offset",editor:a.JS.Widgets.editorTemplates.numeric};c.scaleOptionsBaseSerializationsInfo=[n,l,o,m,k];var p={propertyName:"measureUnit",modelName:"@MeasureUnit",displayName:"Measure Unit",editor:a.JS.Widgets.editorTemplates.combobox,values:{Ones:"Ones",Tens:"Tens",Hundreds:"Hundreds",Thousands:"Thousands",Millions:"Millions",Billions:"Billions",Custom:"Custom"}},q={propertyName:"gridAlignment",modelName:"@GridAlignment",displayName:"Grid Alignment",editor:a.JS.Widgets.editorTemplates.combobox,values:{Ones:"Ones",Tens:"Tens",Hundreds:"Hundreds",Thousands:"Thousands",Millions:"Millions",Billions:"Billions",Custom:"Custom"}},r={propertyName:"customGridAlignment",modelName:"@CustomGridAlignment",defaultVal:null,displayName:"Custom Grid Alignment",editor:a.JS.Widgets.editorTemplates.numeric},s={propertyName:"customMeasureUnit",modelName:"@CustomMeasureUnit",defaultVal:null,displayName:"Custom Measure Unit",editor:a.JS.Widgets.editorTemplates.numeric};c.numericScaleOptionsSerializationsInfo=[p,q,r,s].concat(c.scaleOptionsBaseSerializationsInfo),c.numericScaleOptions={propertyName:"numericScaleOptions",modelName:"NumericScaleOptions",displayName:"Numeric Scale Options",info:c.numericScaleOptionsSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarAxisYNumericScaleOptionsSerializationsInfo=[n,q,o,m],c.radarAxisYNumericScaleOptions={propertyName:"radarAxisYNumericScaleOptions",modelName:"NumericScaleOptions",displayName:"Numeric Scale Options",info:c.radarAxisYNumericScaleOptionsSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarAxisXNumericScaleOptionsSerializationsInfo=c.radarAxisYNumericScaleOptionsSerializationsInfo.concat(k),c.radarAxisXNumericScaleOptions={propertyName:"radarAxisXNumericScaleOptions",modelName:"NumericScaleOptions",displayName:"Numeric Scale Options",info:c.radarAxisXNumericScaleOptionsSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var t={propertyName:"measureUnit",modelName:"@MeasureUnit",displayName:"Measure Unit",editor:a.JS.Widgets.editorTemplates.combobox,values:{Millisecond:"Millisecond","Second ":"Second",Minute:"Minute",Hour:"Hour",Day:"Day",Week:"Week",Month:"Month",Quarter:"Quarter",Year:"Year"}},u={propertyName:"gridAlignment",modelName:"@GridAlignment",displayName:"Grid Alignment",editor:a.JS.Widgets.editorTemplates.combobox,values:{Millisecond:"Millisecond","Second ":"Second",Minute:"Minute",Hour:"Hour",Day:"Day",Week:"Week",Month:"Month",Quarter:"Quarter",Year:"Year"}},v={propertyName:"workdaysOnly",modelName:"@WorkdaysOnly",displayName:"Workdays Only",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool};c.dateTimeScaleOptionsSerializationsInfo=[u,t,v].concat(c.scaleOptionsBaseSerializationsInfo),c.dateTimeScaleOptions={propertyName:"dateTimeScaleOptions",modelName:"DateTimeScaleOptions",displayName:"DateTimeScaleOptions",info:c.dateTimeScaleOptionsSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var w={propertyName:"visibleInPanesSerializable",modelName:"@VisibleInPanesSerializable",displayName:"Visible In Panes Serializable",editor:a.JS.Widgets.editorTemplates.text},x={propertyName:"minorVisible",modelName:"@MinorVisible",displayName:"Minor Visible",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},y={propertyName:"minorColor",modelName:"@MinorColor",displayName:"Minor Color",from:b.colorFromString,toJsonObject:b.colorToString,editor:b.Widgets.editorTemplates.customColorEditor},z={propertyName:"chartVisible",modelName:"@Visible",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Visible"},A=[x,c.color,y,c.lineStyle,c.minorLineStyle];c.gridLinesAxisXSerializationsInfo=[z].concat(A),c.gridLinesAxisX={propertyName:"gridLinesAxisX",modelName:"GridLines",displayName:"Grid Lines",info:c.gridLinesAxisXSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.gridLinesAxisYSerializationsInfo=[c.visible].concat(A),c.gridLinesAxisY={propertyName:"gridLinesAxisY",modelName:"GridLines",displayName:"Grid Lines",info:c.gridLinesAxisYSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarGridLinesAxisXSerializationsInfo=[c.visible].concat(A),c.radarGridLinesAxisX={propertyName:"radarGridLinesAxisX",modelName:"GridLines",displayName:"Grid Lines",info:c.radarGridLinesAxisXSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var B={propertyName:"straggered",modelName:"@Straggered",displayName:"Straggered",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},C={propertyName:"allowStagger",modelName:"@AllowStagger",displayName:"Allow Stagger",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},D={propertyName:"allowRotate",modelName:"@AllowRotate",displayName:"Allow Rotate",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},E={propertyName:"allowHide",modelName:"@AllowHide",displayName:"Allow Hide",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},F={propertyName:"minIndent",modelName:"@MinIndent",displayName:"Min Indent",editor:a.JS.Widgets.editorTemplates.numeric},G=[C,D,E,F],H={propertyName:"resolveOverlappingOptions",modelName:"ResolveOverlappingOptions",displayName:"Resolve Overlapping Options",editor:a.JS.Widgets.editorTemplates.objecteditor,info:G},I={propertyName:"enableAntialiasing",modelName:"@EnableAntialiasing",displayName:"Enable Antialiasing",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},J=[I,c.font,c.maxLineCount,c.maxWidth,H,c.textAlignment,c.textColor,c.textPattern,c.visible];c.axisLabelSerializationsInfo=[c.angle,B].concat(J),c.axisLabel={propertyName:"axisLabel",modelName:"Label",displayName:"Label",editor:a.JS.Widgets.editorTemplates.objecteditor,info:c.axisLabelSerializationsInfo},c.minorCount={propertyName:"minorCount",modelName:"@MinorCount",displayName:"Minor Count",editor:a.JS.Widgets.editorTemplates.numeric},c.interlaced={propertyName:"interlaced",modelName:"@Interlaced",displayName:"Interlaced",from:b.parseBool,defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool},c.interlacedColor={propertyName:"interlacedColor",modelName:"@InterlacedColor",displayName:"Interlaced Color",editor:b.Widgets.editorTemplates.customColorEditor,from:b.colorFromString},c.axisBaseSerializationsInfo=[c.visualRange,c.wholeRange,c.numericScaleOptions,c.dateTimeScaleOptions,c.minorCount,c.interlacedColor];var K={propertyName:"fillMode",modelName:"@FillMode",displayName:"Fill Mode",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Gradient:"Gradient",Hatch:"Hatch"}},L=[K];c.rectangleFillStyleSerializationsInfo=[].concat(L),c.interlacedFillStyle={propertyName:"InterlacedFillStyle",modelName:"InterlacedFillStyle",displayName:"Interlaced Fill Style",info:c.rectangleFillStyleSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var M={propertyName:"crossAxis",modelName:"@CrossAxis",displayName:"Cross Axis",editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1,from:b.parseBool},N={propertyName:"minorThickness",modelName:"@MinorThickness",displayName:"Minor Thickness",editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:1},O={propertyName:"minorLength",modelName:"@MinorLength",displayName:"Minor Length",editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:2},P={propertyName:"lenght",modelName:"@Length",displayName:"Length",editor:a.JS.Widgets.editorTemplates.numeric,
defaultVal:5},Q={propertyName:"minorVisible",modelName:"@MinorVisible",displayName:"Minor Visible",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},R=[c.visible,Q,M,c.thickness,N,P,O],S=[].concat(R);c.tickmarks={propertyName:"tickmarks",modelName:"Tickmarks",displayName:"Tickmarks",editor:a.JS.Widgets.editorTemplates.objecteditor,info:S},c.axisAlignment={propertyName:"axisAlignment",modelName:"@AxisAlignment",displayName:"Alignment",editor:a.JS.Widgets.editorTemplates.combobox,values:{Near:"Near",Zero:"Zero",Far:"Far"}};var T={propertyName:"pattern",modelName:"@Pattern",displayName:"Pattern",editor:a.JS.Widgets.editorTemplates.text},U=[c.visibility,T,c.backColor,c.textColor,c.font];c.crosshairAxisLabelOptions={propertyName:"crosshairAxisLabelOptions",modelName:"CrosshairAxisLabelOptions",displayName:"Crosshair Axis Label Options",editor:a.JS.Widgets.editorTemplates.objecteditor,info:U};var V={propertyName:"axisTitleVisibility",modelName:"@Visibility",displayName:"Visibility",defaultVal:"False",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues};c.axisTitleSerializationsInfo=[c.text,c.titleAlignment,c.antialiasing,V,c.textColor,c.font12],c.axisTitle={propertyName:"axisTitle",modelName:"Title",displayName:"Title",defaultVal:{},info:c.axisTitleSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var W={propertyName:"crosshairLabelVisibility",modelName:"@CrosshairLabelVisibility",displayName:"Crosshair Label Visibility",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues};c.axis2DSerializationsInfo=[c.interlaced,c.interlacedFillStyle,c.tickmarks,c.axisTitle,c.visibility,c.axisAlignment,c.axisLabel,c.thickness,c.color,W,w,c.crosshairAxisLabelOptions,w].concat(c.axisBaseSerializationsInfo),c.axisY3DInterlaced={propertyName:"axisY3DInterlaced",modelName:"@Interlaced",displayName:"Interlaced",from:b.parseBool,defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool};var X=({propertyName:"fillMode",modelName:"@FillMode",displayName:"Fill Mode",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Gradient:"Gradient"}},[K]),Y=[].concat(X),Z={propertyName:"interlacedFillStyle",modelName:"InterlacedFillStyle",displayName:"Interlaced Fill Style",info:Y,editor:a.JS.Widgets.editorTemplates.objecteditor},$={propertyName:"axisLabel3DPosition",modelName:"@AxisLabel3DPosition",displayName:"Axis Label 3D Position",editor:a.JS.Widgets.editorTemplates.combobox,values:{Bottom:"Bottom",Left:"Left",Right:"Right",Top:"Top",Auto:"Auto"}};c.axisLabel3DSerializationsInfo=[$].concat(c.axisLabelSerializationsInfo),c.axisLabel3D={propertyName:"axisLabel3D",modelName:"Label",displayName:"Label",info:c.axisLabel3DSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.axis3DSerializationsInfo=[Z,c.axisLabel3D].concat(c.axisBaseSerializationsInfo);var _={propertyName:"sizeInPixels",modelName:"@SizeInPixels",displayName:"Size In Pixels",editor:a.JS.Widgets.editorTemplates.numeric},aa={propertyName:"style",modelName:"@Style",displayName:"Style",editor:a.JS.Widgets.editorTemplates.combobox,values:{Straight:"Straight",Ragged:"Ragged",Waved:"Waved"}},ba=[_,c.color,aa];c.scaleBreaksOptions={propertyName:"scaleBreakOptions",modelName:"ScaleBreakOptions",displayName:"Scale Break Options",info:ba,editor:a.JS.Widgets.editorTemplates.objecteditor};var ca={propertyName:"enabled",modelName:"@Enabled",displayName:"Enabled",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},da={propertyName:"maxCount",modelName:"@MaxCount",displayName:"Max Count",editor:a.JS.Widgets.editorTemplates.numeric},ea=[ca,da];c.autoScaleBreaks={propertyName:"autoScaleBreaks",modelName:"AutoScaleBreaks",displayName:"Auto Scale Breaks",editor:a.JS.Widgets.editorTemplates.objecteditor,info:ea},c.reverse={propertyName:"axisReverse",modelName:"@Reverse",displayName:"Reverse",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.axisSerializationsInfo=[c.reverse,c.scaleBreaksOptions,c.autoScaleBreaks].concat(c.axis2DSerializationsInfo),c.axisXYSerializationsInfo=[c.visible].concat(c.axisSerializationsInfo),c.topLevel={propertyName:"topLevel",modelName:"@TopLevel",displayName:"Top Level",editor:a.JS.Widgets.editorTemplates.numeric},c.radarAxisXLabelTextDirection={propertyName:"textDirection",modelName:"TextDirection",displayName:"Text Direction",editor:a.JS.Widgets.editorTemplates.combobox,values:{LeftToRight:"LeftToRight",TopToBottom:"TopToBottom",BottomToTop:"BottomToTop",Radial:"Radial",Tangent:"Tangent"}},c.radarAxisXLabelSerializationsInfo=J.concat(c.radarAxisXLabelTextDirection),c.radarAxisXLabel={propertyName:"radarAxisXLabel",modelName:"Label",displayName:"Label",info:c.radarAxisXLabelSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarAxisYLabel={propertyName:"radarAxisYLabel",modelName:"Label",displayName:"Label",info:J,editor:a.JS.Widgets.editorTemplates.objecteditor};var fa=[c.interlaced,c.interlacedColor,c.interlacedFillStyle,c.visualRange,c.minorCount],ga=[c.radarAxisXNumericScaleOptions,c.radarWholeRange,c.radarGridLinesAxisX,c.radarAxisXLabel].concat(fa),ha=[c.color,c.thickness,c.visible,c.radarAxisYNumericScaleOptions,c.topLevel,c.wholeRange,c.gridLinesAxisY,c.radarAxisYLabel,c.tickmarks].concat(fa);c.radarAxisX={propertyName:"axisX",modelName:"AxisX",displayName:"Axis X",info:ga,editor:a.JS.Widgets.editorTemplates.objecteditor},c.radarAxisY={propertyName:"axisY",modelName:"AxisY",displayName:"Axis Y",info:ha,editor:a.JS.Widgets.editorTemplates.objecteditor},c.axisX3D={propertyName:"axisX",modelName:"AxisX",displayName:"Axis X",info:[c.gridLinesAxisX,c.interlaced].concat(c.axis3DSerializationsInfo),editor:a.JS.Widgets.editorTemplates.objecteditor},c.axisY3D={propertyName:"axisY",modelName:"AxisY",displayName:"Axis Y",info:[c.gridLinesAxisY,c.axisY3DInterlaced].concat(c.axis3DSerializationsInfo),editor:a.JS.Widgets.editorTemplates.objecteditor},c.axisX={propertyName:"axisX",modelName:"AxisX",displayName:"Axis X",defaultVal:{},info:[c.gridLinesAxisX].concat(c.axisXYSerializationsInfo),editor:a.JS.Widgets.editorTemplates.objecteditor},c.axisY={propertyName:"axisY",modelName:"AxisY",displayName:"Axis Y",defaultVal:{},info:[c.gridLinesAxisY].concat(c.axisXYSerializationsInfo),editor:a.JS.Widgets.editorTemplates.objecteditor}}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.dimension={propertyName:"dimension",modelName:"@Dimension",displayName:"Dimension",editor:a.JS.Widgets.editorTemplates.numeric},c.equalPieSize={propertyName:"equalPieSize",modelName:"@EqualPieSize",displayName:"EqualPieSize",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.typeNameNotShowDiagram={propertyName:"typeNameSerializable",modelName:"@TypeNameSerializable"},c.diagramSerializationsInfo=[c.typeNameNotShowDiagram,c.defaultPane],c.radarSerializationsInfo=[c.radarAxisX,c.radarAxisY,c.margin,c.backColor].concat(c.diagramSerializationsInfo),c.polarSerializationsInfo=[c.radarAxisX,c.radarAxisY,c.margin,c.backColor].concat(c.diagramSerializationsInfo),c.simple3DSerializationsInfo=[c.dimension,c.margin,c.equalPieSize].concat(c.diagramSerializationsInfo),c.funnel3DSerializationsInfo=[].concat(c.simple3DSerializationsInfo),c.simpleSerializationsInfo=[c.dimension,c.margin,c.equalPieSize].concat(c.diagramSerializationsInfo),c.XY2DSerializationsInfo=[c.margin,c.defaultPane,c.enableAxisXScrolling,c.enableAxisXZooming,c.enableAxisYScrolling,c.enableAxisYZooming,c.typeNameNotShowDiagram],c.XYSerializationsInfo=[c.axisX,c.axisY,c.rotated].concat(c.XY2DSerializationsInfo),c.XY3DSerializationsInfo=[c.axisX3D,c.axisY3D,c.backColor,c.typeNameNotShowDiagram],c.GanttDiagramSerializationsInfo=[].concat(c.XYSerializationsInfo);var d={info:c.XYSerializationsInfo,type:"XYDiagram"},e={info:c.XY2DSerializationsInfo,type:"SwiftPlotDiagram"},f={info:c.XY3DSerializationsInfo,type:"XYDiagram3D"},g={info:c.radarSerializationsInfo,type:"RadarDiagram"},h={info:c.polarSerializationsInfo,type:"PolarDiagram"},i={info:c.simpleSerializationsInfo,type:"SimpleDiagram"},j={info:c.simple3DSerializationsInfo,type:"SimpleDiagram3D"},k={info:c.funnel3DSerializationsInfo,type:"FunnelDiagram"},l={info:c.GanttDiagramSerializationsInfo,type:"GanttDiagram"};c.diagramMapper={SideBySideBarSeriesView:d,StackedBarSeriesView:d,FullStackedBarSeriesView:d,SideBySideStackedBarSeriesView:d,SideBySideFullStackedBarSeriesView:d,SideBySideBar3DSeriesView:f,StackedBar3DSeriesView:f,FullStackedBar3DSeriesView:f,SideBySideStackedBar3DSeriesView:f,SideBySideFullStackedBar3DSeriesView:f,ManhattanBarSeriesView:f,PointSeriesView:d,BubbleSeriesView:d,LineSeriesView:d,StackedLineSeriesView:d,FullStackedLineSeriesView:d,StepLineSeriesView:d,SplineSeriesView:d,ScatterLineSeriesView:d,SwiftPlotSeriesView:e,Line3DSeriesView:f,StackedLine3DSeriesView:f,FullStackedLine3DSeriesView:f,StepLine3DSeriesView:f,Spline3DSeriesView:f,PieSeriesView:i,DoughnutSeriesView:i,NestedDoughnutSeriesView:i,Pie3DSeriesView:j,Doughnut3DSeriesView:j,FunnelSeriesView:i,Funnel3DSeriesView:k,AreaSeriesView:d,StackedAreaSeriesView:d,FullStackedAreaSeriesView:d,StepAreaSeriesView:d,SplineAreaSeriesView:d,StackedSplineAreaSeriesView:d,FullStackedSplineAreaSeriesView:d,Area3DSeriesView:f,StackedArea3DSeriesView:f,FullStackedArea3DSeriesView:f,StepArea3DSeriesView:f,SplineArea3DSeriesView:f,StackedSplineArea3DSeriesView:f,FullStackedSplineArea3DSeriesView:f,OverlappedRangeBarSeriesView:d,SideBySideRangeBarSeriesView:d,RangeAreaSeriesView:d,RangeArea3DSeriesView:f,RadarPointSeriesView:g,RadarLineSeriesView:g,RadarAreaSeriesView:g,PolarPointSeriesView:h,PolarLineSeriesView:h,PolarAreaSeriesView:h,StockSeriesView:d,CandleStickSeriesView:d,OverlappedGanttSeriesView:l,SideBySideGanttSeriesView:l}}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function d(b,c,d,e){var f=this;a.call(this,b,e,d),this.parent=c,this.updateOptions(this.fillMode(),e,b.Options),this._disposables.push(this.fillMode.subscribe(function(a){f.updateOptions(a,e,{})}))}return __extends(d,a),d.prototype.isPropertyVisible=function(a){return"options"!==a||"options"===a&&this[a]()},d.prototype.updateOptions=function(a,d,e){var f=$.extend({"@TypeNameSerializable":k[a]},e),g=-1!==c.barSeriesViewGroup.indexOf(this.parent.typeName())?c.barStyle2DMap[a]:c.barStyle3DMap[a];this.options(new b.SerializableModel(f,d,g))},d}(b.SerializableModel);c.FillStyle=d,c.typeNameSerializable={propertyName:"typeName",modelName:"@TypeNameSerializable",displayName:"Type",defaultVal:"",editor:c.editorTemplates.views,values:{SideBySideBarSeriesView:"Bar",StackedBarSeriesView:"Bar Stacked",FullStackedBarSeriesView:"Bar Stacked 100%",SideBySideStackedBarSeriesView:"Side By Side Bar Stacked",SideBySideFullStackedBarSeriesView:"Side By Side Bar Stacked 100%",SideBySideBar3DSeriesView:"Bar 3D",StackedBar3DSeriesView:"Bar 3D Stacked",FullStackedBar3DSeriesView:"Bar 3D Stacked 100%",SideBySideStackedBar3DSeriesView:"Side By Side Bar 3D Stacked ",SideBySideFullStackedBar3DSeriesView:"Side By Side Bar 3D Stacked 100%",ManhattanBarSeriesView:"Manhattan Bar",PointSeriesView:"Point",BubbleSeriesView:"Bubble",LineSeriesView:"Line",StackedLineSeriesView:"Line Stacked",FullStackedLineSeriesView:"Line Stacked 100%",StepLineSeriesView:"Step Line",SplineSeriesView:"Spline",ScatterLineSeriesView:"Scatter Line",SwiftPlotSeriesView:"Swift Plot",Line3DSeriesView:"Line 3D",StackedLine3DSeriesView:"Line 3D Stacked",FullStackedLine3DSeriesView:"Line 3D Stacked 100%",StepLine3DSeriesView:"Step Line 3D",Spline3DSeriesView:"Spline 3D",PieSeriesView:"Pie",DoughnutSeriesView:"Doughnut",NestedDoughnutSeriesView:"Nested Doughnut",Pie3DSeriesView:"Pie 3D",Doughnut3DSeriesView:"Doughnut 3D",FunnelSeriesView:"Funnel",Funnel3DSeriesView:"Funnel 3D",AreaSeriesView:"Area",StackedAreaSeriesView:"Area Stacked",FullStackedAreaSeriesView:"Area Stacked 100%",StepAreaSeriesView:"Step Area",SplineAreaSeriesView:"Spline Area",StackedSplineAreaSeriesView:"Spline Area Stacked",FullStackedSplineAreaSeriesView:"Spline Area Stacked 100%",Area3DSeriesView:"Area 3D",StackedArea3DSeriesView:"Area 3D Stacked",FullStackedArea3DSeriesView:"Area 3D Stacked 100%",StepArea3DSeriesView:"Step 3D Area",SplineArea3DSeriesView:"Spline 3D Area",StackedSplineArea3DSeriesView:"Spline Area 3D Stacked",FullStackedSplineArea3DSeriesView:"Spline Area 3D Stacked 100%",OverlappedRangeBarSeriesView:"Range Bar",SideBySideRangeBarSeriesView:"Side By Side Range Bar",RangeAreaSeriesView:"Range Area",RangeArea3DSeriesView:"Range Area 3D",RadarPointSeriesView:"Radar Point",RadarLineSeriesView:"Radar Line",RadarAreaSeriesView:"Radar Area",PolarPointSeriesView:"Polar Point",PolarLineSeriesView:"Polar Line",PolarAreaSeriesView:"Polar Area",StockSeriesView:"Stock Series",CandleStickSeriesView:"Candle Stick",OverlappedGanttSeriesView:"Gantt",SideBySideGanttSeriesView:"Side By Side Gantt"}},c.barSeriesViewGroup=["SideBySideBarSeriesView","StackedBarSeriesView","FullStackedBarSeriesView","SideBySideStackedBarSeriesView","SideBySideFullStackedBarSeriesView","OverlappedRangeBarSeriesView","SideBySideRangeBarSeriesView","OverlappedGanttSeriesView","SideBySideGanttSeriesView"],c.bar3DSeriesViewGroup=["SideBySideBar3DSeriesView","StackedBar3DSeriesView","FullStackedBar3DSeriesView","SideBySideStackedBar3DSeriesView","SideBySideFullStackedBar3DSeriesView","ManhattanBarSeriesView"],c.barWidth={propertyName:"barWidth",modelName:"@BarWidth",displayName:"Bar Width",defaultVal:.6,editor:a.JS.Widgets.editorTemplates.numeric},c.colorEach={propertyName:"colorEach",modelName:"@ColorEach",displayName:"Color Each",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.tag={propertyName:"tag",modelName:"@Tag",displayName:"Tag",editor:a.JS.Widgets.editorTemplates.text},c.borderSerializationsInfo=[c.color,c.thickness,c.visibility],c.border={propertyName:"border",modelName:"Border",displayName:"Border",info:c.borderSerializationsInfo,defaultVal:{},editor:a.JS.Widgets.editorTemplates.objecteditor};var e={propertyName:"color2",modelName:"@Color2",displayName:"Color2",from:b.colorFromString,toJsonObject:b.colorToString,editor:b.Widgets.editorTemplates.customColorEditor},f={propertyName:"typeNameSerializable",modelName:"@TypeNameSerializable"};c.fillMode={propertyName:"fillMode",modelName:"@FillMode",displayName:"Fill Mode",defaultVal:"Empty",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Gradient:"Gradient",Hatch:"Hatch"}};var g={propertyName:"gradientMode",modelName:"@GradientMode",displayName:"Gradient Mode",defaultVal:"TopToBottom",editor:a.JS.Widgets.editorTemplates.combobox,values:{TopToBottom:"Top To Bottom",BottomToTop:"Bottom To Top",LeftToRight:"Left To Right",RightToLeft:"Right To Left",TopLeftToBottomRight:"Top Left To Bottom Right",BottomRightToTopLeft:"Bottom Right To Top Left",TopRightToBottomLeft:"Top Right To Bottom Left",BottomLeftToTopRight:"Bottom Left To Top Right",FromCenterHorizontal:"From Center Horizontal",ToCenterHorizontal:"To Center Horizontal",FromCenterVertical:"From Center Vertical",ToCenterVertical:"To Center Vertical"}},h=[g,e,c.tag,{propertyName:"typeNameSerializable",modelName:"@TypeNameSerializable"}],i={propertyName:"hatchStyle",modelName:"@HatchStyle",displayName:"Hatch Style",defaultVal:"BackwardDiagonal",editor:a.JS.Widgets.editorTemplates.combobox,values:{Horizontal:"Horizontal",Vertical:"Vertical",ForwardDiagonal:"ForwardDiagonal",BackwardDiagonal:"BackwardDiagonal",LargeGrid:"LargeGrid",DiagonalCross:"DiagonalCross",Percent05:"Percent05",Percent10:"Percent10",Percent20:"Percent20",Percent25:"Percent25",Percent30:"Percent30",Percent40:"Percent40",Percent50:"Percent50",Percent60:"Percent60",Percent70:"Percent70",Percent75:"Percent75",Percent80:"Percent80",Percent90:"Percent90",LightDownwardDiagonal:"LightDownwardDiagonal",LightUpwardDiagonal:"LightUpwardDiagonal",DarkDownwardDiagonal:"DarkDownwardDiagonal",DarkUpwardDiagonal:"DarkUpwardDiagonal",WideDownwardDiagonal:"WideDownwardDiagonal",WideUpwardDiagonal:"WideUpwardDiagonal",LightVertical:"LightVertical",LightHorizontal:"LightHorizontal",NarrowVertical:"NarrowVertical",NarrowHorizontal:"NarrowHorizontal",DarkVertical:"DarkVertical",DarkHorizontal:"DarkHorizontal",DashedDownwardDiagonal:"DashedDownwardDiagonal",DashedUpwardDiagonal:"DashedUpwardDiagonal",DashedHorizontal:"DashedHorizontal",DashedVertical:"DashedVertical",SmallConfetti:"SmallConfetti",LargeConfetti:"LargeConfetti",ZigZag:"ZigZag",Wave:"Wave",DiagonalBrick:"DiagonalBrick",HorizontalBrick:"HorizontalBrick",Weave:"Weave",Plaid:"Plaid",Divot:"Divot",DottedGrid:"DottedGrid",DottedDiamond:"DottedDiamond",Shingle:"Shingle",Trellis:"Trellis",Sphere:"Sphere",SmallGrid:"SmallGrid",SmallCheckerBoard:"SmallCheckerBoard",LargeCheckerBoard:"LargeCheckerBoard",OutlinedDiamond:"OutlinedDiamond",SolidDiamond:"SolidDiamond"}},j=[i,e,c.tag,f];c.fillStyleOptionsSerialize={propertyName:"options",modelName:"Options",displayName:"Options",editor:a.JS.Widgets.editorTemplates.objecteditor},c.fillMode3D={propertyName:"fillMode",modelName:"@FillMode",displayName:"Fill Mode",defaultVal:"Empty",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Gradient:"Gradient"}},c.fillStyle={propertyName:"fillStyle",modelName:"FillStyle",displayName:"Fill Style",editor:a.JS.Widgets.editorTemplates.objecteditor},c.viewSerializationsInfo=[c.typeNameSerializable,c.color,c.colorEach,c.border,c.tag],c.barStyle2DMap={Empty:[],Solid:[c.tag],Gradient:h,Hatch:j},c.barStyle3DMap={Empty:[],Solid:[c.tag],Gradient:h};var k={Gradient:"RectangleGradientFillOptions",Hatch:"HatchFillOptions"}}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,b,c){var d={text:a,imageClassName:"dxrd-image-add",disabled:ko.observable(!1),id:b,_visible:ko.observable(!1),popoverVisible:null,togglePopoverVisible:null,closePopover:null,templateName:"dxrd-collectionactions-template",actions:c};return d.popoverVisible=ko.pureComputed(function(){return d._visible()}),d.togglePopoverVisible=function(){d._visible(!d._visible())},d.closePopover=function(){d._visible(!1)},[d]}var e=function(){function a(a){this.value=ko.observable(),this.value(a)}return a.from=function(b){return new a(b)},a.toJson=function(a){return a.toString()||{}},a.prototype.toString=function(){return this.value()},a.prototype.getInfo=function(){return t},a}();c.CommonValueDataMembers=e;var f=function(){function a(a){if(this.value=ko.observable(),this.weight=ko.observable(),a){var b=a.split(";");this.value(b[0]),this.weight(b[1])}}return a.prototype.toString=function(){return this.value()||this.weight()?this.value()+";"+this.weight():null},a.prototype.getInfo=function(){return u},a}();c.ValueWeightDataMembers=f;var g=function(){function a(a){if(this.value1=ko.observable(),this.value2=ko.observable(),a){var b=a.split(";");this.value1(b[0]),this.value2(b[1])}}return a.prototype.toString=function(){return this.value1()||this.value2()?this.value1()+";"+this.value2():null},a.prototype.getInfo=function(){return v},a}();c.Value1Value2DataMembers=g;var h=function(){function a(a){if(this.close=ko.observable(),this.hight=ko.observable(),this.low=ko.observable(),this.open=ko.observable(),a){var b=a.split(";");this.close(b[0]),this.hight(b[1]),this.low(b[2]),this.open(b[3])}}return a.prototype.toString=function(){return this.close()||this.hight()||this.low()||this.open()?this.close()+";"+this.hight()+";"+this.low()+";"+this.open():null},a.prototype.getInfo=function(){return w},a}();c.StockValueDataMembers=h;var i={BubbleSeriesView:f,OverlappedRangeBarSeriesView:g,SideBySideRangeBarSeriesView:g,RangeAreaSeriesView:g,RangeArea3DSeriesView:g,OverlappedGanttSeriesView:g,SideBySideGanttSeriesView:g,StockSeriesView:h,CandleStickSeriesView:h},j=function(e){function f(f,g){var h=this;e.call(this,b.cutRefs(f),g,c.chartSerializationsInfo),this.displayName=ko.observable(b.getLocalization("Chart"));var i=ko.observable("");this.diagram=ko.pureComputed(function(){var a=f&&f.Diagram||{};f.Diagram=null;var b="";return b=h.dataContainer.seriesDataMember()||0===h.dataContainer.series().length?h.dataContainer.seriesTemplate.view.typeName():h.dataContainer.series()[0].view.typeName(),i.peek()!==c.diagramMapper[b].type?(i(c.diagramMapper[b].type),r.createDiagram(a,b,g)):h.diagram.peek()}),this.titles=a.JS.Utils.deserializeArray(f&&f.Titles||[],function(a){return new k(a,h.titles,g)}),this.titles().forEach(function(a){a.parent=h.titles}),this.titles().displayName=ko.observable(b.getLocalization("Titles"));var j=[{text:"Add Title",imageClassName:"dxrd-image-chart-title-top_left",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Alignment":"Near"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-top_center",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Alignment":"Center"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-top_right",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Alignment":"Far"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-right_top_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Right","@Alignment":"Near"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-right_center_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Right","@Alignment":"Center"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-right_bottom_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Right","@Alignment":"Far"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-bottom_left",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Bottom","@Alignment":"Near"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-bottom_center",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Bottom","@Alignment":"Center"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-bottom_right",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Bottom","@Alignment":"Far"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-left_bottom_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Left","@Alignment":"Near"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-left_center_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Left","@Alignment":"Center"})}},{text:"Add Title",imageClassName:"dxrd-image-chart-title-left_top_vertical",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.addTitle({"@Dock":"Left","@Alignment":"Far"})}}];this.titles().innerActions=d("Add Title","addtitles-action",j)}return __extends(f,e),f.from=function(a,b){return new f(a,b)},f.toJson=function(a,b,d){return b.serialize(a,c.chartSerializationsInfo,d)},f.prototype.addTitle=function(a){this.titles().innerActions[0].closePopover(),this.titles.push(new k(a,this.titles))},f}(b.SerializableModel);c.ChartViewModel=j;var k=function(a){function b(b,d,e){var f=this;a.call(this,b,e,c.titleSerializationsInfo),this.parent=d,this.name=ko.pureComputed({read:function(){return f.text?f.text():"title"},write:function(a){f.text(a)}}),this.displayName=this.name,this.className=ko.pureComputed(function(){return"titleviewmodel"}),this.innerActions=[{text:"Remove Title",imageClassName:"dxrd-image-recycle-bin",disabled:ko.observable(!1),visible:!0,clickAction:function(){f.parent.remove(f)}}]}return __extends(b,a),b.from=function(a,c){return new b(a,null,c)},b.toJson=function(a,b,d){return b.serialize(a,c.titleSerializationsInfo,d)},b}(b.SerializableModel);c.TitleViewModel=k;var l=function(e){function f(f,g){var h=this;e.call(this,f,g,c.dataContainerSerializationsInfo),this.displayName=ko.observable(b.getLocalization("Data Container")),this.series=a.JS.Utils.deserializeArray(f&&f.SeriesSerializable||[],function(a){return new o(a,h.series,g)}),this.series().forEach(function(a){a.parent=h.series}),this.series().displayName=ko.observable(b.getLocalization("Series"));var i=c.typeNameSerializable.values,j=[];$.each(i,function(a,b){j.push({text:b,imageClassName:"dx-image-fieldlist-"+o.getClassName(a),disabled:ko.observable(!1),visible:!0,clickAction:function(){h.series().innerActions[0].closePopover(),h.series.push(new o({View:{"@TypeNameSerializable":a}},h.series))}})}),this.series().innerActions=d("Add Series","addseries-action",j)}return __extends(f,e),f.from=function(a,b){return new f(a,b)},f.toJson=function(a,b,d){return b.serialize(a,c.dataContainerSerializationsInfo,d)},f}(b.SerializableModel);c.DataContainerViewModel=l,c.dataFilterSerializationsInfo=[{propertyName:"columnName",displayName:"ColumnName",editor:b.Widgets.editorTemplates.field,modelName:"@ColumnNameSerializable"},{propertyName:"dataType",displayName:"DataType",defaultVal:"System.String",editor:a.JS.Widgets.editorTemplates.combobox,modelName:"@DataTypeSerializable",values:{"System.Boolean":"System.Boolean","System.Byte":"System.Byte","System.Char":"System.Char","System.DateTime":"System.DateTime","System.Decimal":"System.Decimal","System.Double":"System.Double","System.Guid":"System.Guid","System.Int16":"System.Int16","System.Int32":"System.Int32","System.Int64":"System.Int64","System.SByte":"System.SByte","System.Single":"System.Single","System.String":"System.String","System.TimeSpan":"System.TimeSpan","System.UInt16":"System.UInt16","System.UInt32":"System.UInt32","System.UInt64":"System.UInt64"}},{propertyName:"condition",displayName:"Condition",defaultVal:"Equal",editor:a.JS.Widgets.editorTemplates.combobox,modelName:"@Condition",values:{Equal:"Equal",GreaterThan:"GreaterThan",GreaterThanOrEqual:"GreaterThanOrEqual",LessThan:"LessThan",LessThanOrEqual:"LessThanOrEqual",NotEqual:"NotEqual"}},{propertyName:"value",displayName:"Value",editor:a.JS.Widgets.editorTemplates.text,modelName:"@InvariantValueSerializable"}];var m=function(){function b(a,b){var c=this;this.columnName=ko.observable(""),b.deserialize(this,a),this.name=ko.pureComputed(function(){return c.columnName()?c.columnName():"DataFilter"})}return b.createNew=function(){return new b({},new a.JS.Utils.ModelSerializer)},b.prototype.getInfo=function(){return c.dataFilterSerializationsInfo},b}();c.DataFilterModel=m;var n=function(d){function f(c,f,g){var h=this;d.call(this,c,f,g),this.displayName=ko.observable(b.getLocalization("Series Template")),this.valueDataMembers=ko.observable(new(i[this.view.typeName()]||e)(this.valueDataMembers.toString())),this.dataFilters=a.JS.Utils.deserializeArray(c.DataFilters,function(a){return new m(a,f)}),this._disposables.push(ko.computed(function(){h.dataFilters().forEach(function(a){a.getPath||(a.getPath=function(){return h.getPath("argumentDataMember")})})})),this._disposables.push(ko.computed(function(){h.label&&h.label.typeNameSerializable&&h.label.typeNameSerializable(x[h.view.typeName()])})),this._disposables.push(ko.computed(function(){h.valueDataMembers(new(i[h.view.typeName()]||e)(h.valueDataMembers.peek().toString()))}))}return __extends(f,d),f.from=function(a,b){return new f(a||{},b,c.seriesTemplateSerializationsInfo)},f.toJson=function(a,b,d){return b.serialize(a,c.seriesTemplateSerializationsInfo,d)},f}(b.SerializableModel);c.SeriesTemplateViewModel=n;var o=function(a){function b(d,e,f){var g=this;a.call(this,d,f,c.seriesSerializationsInfo),this.isIncompatible=ko.observable(!1),this.parent=e,this.displayName=ko.pureComputed(function(){return g.isIncompatible()?"(incompatible) "+g.name():g.name()}),this.className=ko.pureComputed(function(){return b.getClassName(g.view.typeName())}),this.innerActions=[{text:"Remove Series",imageClassName:"dxrd-image-recycle-bin",disabled:ko.observable(!1),visible:!0,clickAction:function(){g.parent.remove(g)}}]}return __extends(b,a),b.from=function(a,c){return new b(a,null,c)},b.toJson=function(a,b,d){return b.serialize(a,c.seriesSerializationsInfo,d)},b.getClassName=function(a){return a.toLowerCase().split("seriesview")[0]},b}(n);c.SeriesViewModel=o;var p=function(a){function b(b,d){var e=this;this._info=ko.observable(c.viewSerializationsInfo),this.getInfo=function(){return e._info()},a.call(this,b,d),this.typeName&&""===this.typeName()&&this.typeName("SideBySideBarSeriesView"),this._updateFillStyle(this.typeName(),d,b.FillStyle),this.typeName.subscribe(function(a){e._updateFillStyle(a,d,{})})}return __extends(b,a),b.from=function(a,c){return new b(a,c)},b.toJson=function(a,b,c){return b.serialize(a,a.getInfo(),c)},b.prototype._updateFillStyle=function(a,b,d){var e=$.extend({},d);-1!==c.barSeriesViewGroup.indexOf(a)?(this.fillStyle=ko.observable(new c.FillStyle(e,this,[c.fillMode,c.fillStyleOptionsSerialize],b)),this.barWidth=ko.observable(.6),this._info(c.viewSerializationsInfo.concat([c.barWidth,c.fillStyle]))):-1!==c.bar3DSeriesViewGroup.indexOf(a)?(this.fillStyle=ko.observable(new c.FillStyle(e,this,[c.fillMode3D,c.fillStyleOptionsSerialize],b)),this.barWidth=ko.observable(.6),this._info(c.viewSerializationsInfo.concat([c.barWidth,c.fillStyle]))):(delete this.fillStyle,delete this.barWidth,this._info(c.viewSerializationsInfo))},b}(b.SerializableModel);c.SeriesViewViewModel=p;var q=function(a){function b(b,c){a.call(this,b,c,M)}return __extends(b,a),b.from=function(a,c){return new b(a,c)},b.toJson=function(a,b,c){return b.serialize(a,M,c)},b}(b.SerializableModel);c.SeriesLabelViewModel=q;var r=function(d){function e(a,f){d.call(this,a,f,c.diagramSerializationsInfo),this.displayName=ko.observable(b.getLocalization("Diagram")),e.initDisplayName(this)}return __extends(e,d),e.createDiagram=function(b,d,e){void 0===e&&(e=null);var f={getInfo:function(){return c.diagramMapper[d].info}};return(e||new a.JS.Utils.ModelSerializer).deserialize(f,$.extend(b,{"@TypeNameSerializable":c.diagramMapper[d].type})),this.initDisplayName(f),f},e.from=function(a,b){return new e(a,b)},e.toJson=function(a,b,c){return b.serialize(a,c)},e.initDisplayName=function(a){a.displayName=a.typeNameSerializable,a.axisX&&(a.axisX.displayName=ko.observable(b.getLocalization("Axis X"))),a.axisY&&(a.axisY.displayName=ko.observable(b.getLocalization("Axis Y")))},e}(b.SerializableModel);c.DiagramViewModel=r;var s=function(a){function d(d,e){a.call(this,d,e,c.legendSerializationsInfo),this.displayName=ko.observable(b.getLocalization("Legend"))}return __extends(d,a),d.from=function(a,b){return new d(a,b)},d.toJson=function(a,b,d){return b.serialize(a,c.legendSerializationsInfo,d)},d}(b.SerializableModel);c.LegendViewModel=s;var t=[{propertyName:"value",displayName:"Value",editor:b.Widgets.editorTemplates.field}],u=[{propertyName:"value",displayName:"Value",editor:b.Widgets.editorTemplates.field},{propertyName:"weight",displayName:"Weight",editor:b.Widgets.editorTemplates.field}],v=[{propertyName:"value1",displayName:"Value",editor:b.Widgets.editorTemplates.field},{propertyName:"value2",displayName:"Value",editor:b.Widgets.editorTemplates.field}],w=[{propertyName:"close",displayName:"Close",editor:b.Widgets.editorTemplates.field},{propertyName:"hight",displayName:"Hight",editor:b.Widgets.editorTemplates.field},{propertyName:"low",displayName:"Low",editor:b.Widgets.editorTemplates.field},{propertyName:"open",displayName:"Open",editor:b.Widgets.editorTemplates.field}],x={SideBySideBarSeriesView:"SideBySideBarSeriesLabel",StackedBarSeriesView:"StackedBarSeriesLabel",FullStackedBarSeriesView:"FullStackedBarSeriesLabel",SideBySideStackedBarSeriesView:"StackedBarSeriesLabel",SideBySideFullStackedBarSeriesView:"FullStackedBarSeriesLabel",SideBySideBar3DSeriesView:"Bar3DSeriesLabel",StackedBar3DSeriesView:"StackedBar3DSeriesLabel",
FullStackedBar3DSeriesView:"FullStackedBar3DSeriesLabel",SideBySideStackedBar3DSeriesView:"StackedBar3DSeriesLabel",SideBySideFullStackedBar3DSeriesView:"FullStackedBar3DSeriesLabel",ManhattanBarSeriesView:"Bar3DSeriesLabel",PointSeriesView:"PointSeriesLabel",BubbleSeriesView:"BubbleSeriesLabel",LineSeriesView:"PointSeriesLabel",StackedLineSeriesView:"StackedLineSeriesLabel",FullStackedLineSeriesView:"StackedLineSeriesLabel",StepLineSeriesView:"PointSeriesLabel",SplineSeriesView:"PointSeriesLabel",ScatterLineSeriesView:"PointSeriesLabel",SwiftPlotSeriesView:null,Line3DSeriesView:"Line3DSeriesLabel",StackedLine3DSeriesView:"StackedLine3DSeriesLabel",FullStackedLine3DSeriesView:"StackedLine3DSeriesLabel",StepLine3DSeriesView:"Line3DSeriesLabel",Spline3DSeriesView:"Line3DSeriesLabel",PieSeriesView:"PieSeriesLabel",DoughnutSeriesView:"DoughnutSeriesLabel",NestedDoughnutSeriesView:"NestedDoughnutSeriesLabel",Pie3DSeriesView:"Pie3DSeriesLabel",Doughnut3DSeriesView:"Doughnut3DSeriesLabel",FunnelSeriesView:"FunnelSeriesLabel",Funnel3DSeriesView:"Funnel3DSeriesLabel",AreaSeriesView:"PointSeriesLabel",StackedAreaSeriesView:"PointSeriesLabel",FullStackedAreaSeriesView:"FullStackedAreaSeriesLabel",StepAreaSeriesView:"PointSeriesLabel",SplineAreaSeriesView:"PointSeriesLabel",StackedSplineAreaSeriesView:"PointSeriesLabel",FullStackedSplineAreaSeriesView:"FullStackedSplineAreaSeriesLabel",Area3DSeriesView:"Area3DSeriesLabel",StackedArea3DSeriesView:"StackedArea3DSeriesLabel",FullStackedArea3DSeriesView:"FullStackedArea3DSeriesLabel",StepArea3DSeriesView:"Area3DSeriesLabel",SplineArea3DSeriesView:"Area3DSeriesLabel",StackedSplineArea3DSeriesView:"StackedArea3DSeriesLabel",FullStackedSplineArea3DSeriesView:"FullStackedArea3DSeriesLabel",OverlappedRangeBarSeriesView:"RangeBarSeriesLabel",SideBySideRangeBarSeriesView:"RangeBarSeriesLabel",RangeAreaSeriesView:"RangeAreaSeriesLabel",RangeArea3DSeriesView:"RangeArea3DSeriesLabel",RadarPointSeriesView:"RadarPointSeriesLabel",RadarLineSeriesView:"RadarPointSeriesLabel",RadarAreaSeriesView:"RadarPointSeriesLabel",PolarPointSeriesView:"RadarPointSeriesLabel",PolarLineSeriesView:"RadarPointSeriesLabel",PolarAreaSeriesView:"RadarPointSeriesLabel",StockSeriesView:"StockSeriesLabel",CandleStickSeriesView:"StockSeriesLabel",OverlappedGanttSeriesView:"RangeBarSeriesLabel",SideBySideGanttSeriesView:"RangeBarSeriesLabel"};c.diagram={propertyName:"diagram",modelName:"Diagram"};({propertyName:"sideBySideEqualBarWidth",modelName:"@SideBySideEqualBarWidth",displayName:"Side By Side Equal Bar Width",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}),{propertyName:"sideBySideBarDistanceFixed",modelName:"@SideBySideBarDistanceFixed",displayName:"Side By Side Bar Distance Fixed",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"sideBySideBarDistance",modelName:"@SideBySideBarDistance",displayName:"Side By Side Bar Distance",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric};c.seriesPointsSorting={propertyName:"seriesPointsSorting",modelName:"@SeriesPointsSorting",displayName:"Series Points Sorting",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Ascending:"Ascending",Descending:"Descending"}},c.seriesPointsSortingKey={propertyName:"seriesPointsSortingKey",modelName:"@SeriesPointsSortingKey",displayName:"Series Points Sorting Key",editor:a.JS.Widgets.editorTemplates.combobox,values:{Argument:"Argument",Value_1:"Value_1",Value_2:"Value_2",Value_3:"Value_3",Value_4:"Value_4"}},c.toolTipEnabled={propertyName:"toolTipEnabled",modelName:"@ToolTipEnabled",displayName:"Tool Tip Enabled",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},c.crosshairHighlightPoints={propertyName:"crosshairHighlightPoints",modelName:"@CrosshairHighlightPoints",displayName:"Crosshair Highlight Points",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},c.checkedInLegend={propertyName:"checkedInLegend",modelName:"@CheckedInLegend",displayName:"Checked In Legend",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.checkableInLegend={propertyName:"checkableInLegend",modelName:"@CheckableInLegend",displayName:"Checkable In Legend",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.legendTextPattern={propertyName:"legendTextPattern",modelName:"@LegendTextPattern",displayName:"Legend Text Pattern",editor:a.JS.Widgets.editorTemplates.text},c.legendText={propertyName:"legendText",modelName:"@LegendText",displayName:"Legend Text",editor:a.JS.Widgets.editorTemplates.text},c.tag_type={propertyName:"tag_type",modelName:"@Tag_type",displayName:"Tag_type",editor:a.JS.Widgets.editorTemplates.text},c.argumentScaleType={propertyName:"argumentScaleType",modelName:"@ArgumentScaleType",displayName:"Argument Scale Type",defaultVal:"Auto",editor:a.JS.Widgets.editorTemplates.combobox,values:c.scaleTypeValues},c.valueScaleType={propertyName:"valueScaleType",modelName:"@ValueScaleType",displayName:"Value Scale Type",defaultVal:"Numerical",editor:a.JS.Widgets.editorTemplates.combobox,values:{Numerical:"Numerical",DateTime:"DateTime"}},c.labelsVisibility={propertyName:"labelsVisibility",modelName:"@LabelsVisibility",displayName:"Labels Visibility",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},c.argumentDataMember={propertyName:"argumentDataMember",modelName:"@ArgumentDataMember",displayName:"Argument Data Member",defaultVal:"",editor:b.Widgets.editorTemplates.field},c.valueDataMembersSerializable={propertyName:"valueDataMembers",modelName:"@ValueDataMembersSerializable",displayName:"Value Data Members",defaultVal:"",editor:a.JS.Widgets.editorTemplates.objecteditor,from:e.from,toJsonObject:e.toJson},c.showInLegend={propertyName:"showInLegend",modelName:"@ShowInLegend",displayName:"Show In Legend",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool};var y=({propertyName:"transparency",modelName:"@Transparency",displayName:"Transparency",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"size",modelName:"@Size",displayName:"Size",defaultVal:2,editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"enabled",modelName:"@Enabled",displayName:"Enabled",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}),z={propertyName:"mode",modelName:"@Mode",displayName:"Mode",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Count",values:{Count:"Count",ThresholdValue:"Threshold Value",ThresholdPercent:"Threshold Percent"}},A={propertyName:"count",modelName:"@Count",displayName:"Count",defaultVal:5,editor:a.JS.Widgets.editorTemplates.numeric},B={propertyName:"showOthers",modelName:"@ShowOthers",displayName:"Show Others",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},C={propertyName:"othersArgument",modelName:"@OthersArgument",displayName:"OthersArgument",editor:a.JS.Widgets.editorTemplates.text},D={propertyName:"thresholdValue",modelName:"@ThresholdValue",displayName:"Threshold Value",editor:a.JS.Widgets.editorTemplates.numeric},E={propertyName:"thresholdPercent",modelName:"@ThresholdPercent",displayName:"Threshold Percent",editor:a.JS.Widgets.editorTemplates.numeric};c.textOrientation={propertyName:"textOrientation",modelName:"@TextOrientation",displayName:"Text Orientation",editor:a.JS.Widgets.editorTemplates.combobox,values:{"Horizontal ":"Horizontal",TopToBottom:"Top To Bottom",BottomToTop:"Bottom To Top"}},c.resolveOverlappingMode={propertyName:"resolveOverlappingMode",modelName:"@ResolveOverlappingMode",displayName:"Resolve Overlapping Mode",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Default:"Default",HideOverlapped:"Hide Overlapped",JustifyAroundPoint:"Justify Around Point",JustifyAllAroundPoint:"Justify All Around Point"}},c.lineColor={propertyName:"lineColor",modelName:"@LineColor",displayName:"Line Color",from:b.colorFromString,toJsonObject:b.colorToString,editor:b.Widgets.editorTemplates.customColorEditor},c.lineVisibility={propertyName:"lineVisibility",modelName:"@LineVisibility",displayName:"Line Visibility",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues},c.lineLength={propertyName:"lineLength",modelName:"@LineLength",displayName:"Line Length",editor:a.JS.Widgets.editorTemplates.numeric},c.barPosition={propertyName:"barPosition",modelName:"@Position",displayName:"Position",editor:a.JS.Widgets.editorTemplates.combobox,values:{Top:"Top",Center:"Center",TopInside:"Top Inside",BottomInside:"Bottom Inside"}},c.showForZeroValues={propertyName:"showForZeroValues",modelName:"@ShowForZeroValues",displayName:"Show for Zero Values",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool};{var F={propertyName:"dashStyle",modelName:"@DashStyle",displayName:"Dash Style",editor:a.JS.Widgets.editorTemplates.combobox,values:{Empty:"Empty",Solid:"Solid",Dash:"Dash",Dot:"Dot",DashDot:"Dash-Dot",DashDotDot:"Dash-Dot-Dot"}},G={propertyName:"markerVisibility",modelName:"@MarkerVisibility",displayName:"Marker Visibility",editor:a.JS.Widgets.editorTemplates.combobox,values:c.defaultBooleanValues};({propertyName:"kind",modelName:"@Kind",displayName:"Kind",editor:a.JS.Widgets.editorTemplates.combobox,values:{Square:"Square",Diamond:"Diamond",Triangle:"Triangle",InvertedTriangle:"Inverted Triangle",Circle:"Circle",Plus:"Plus",Cross:"Cross",Star:"Star",Pentagon:"Pentagon",Hexagon:"Hexagon"}}),{propertyName:"borderVisible",modelName:"@BorderVisible",displayName:"Border Visible",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}}c.direction={propertyName:"direction",modelName:"@Direction",displayName:"Direction",defaultVal:"TopToBottom",editor:a.JS.Widgets.editorTemplates.combobox,values:{TopToBottom:"Top To Bottom",BottomToTop:"Bottom To Top",LeftToRight:"Left To Right",RightToLeft:"Right To Left"}},c.alignmentVertical={propertyName:"alignmentVertical",modelName:"@AlignmentVertical",displayName:"Alignment Vertical",defaultVal:"Top",editor:a.JS.Widgets.editorTemplates.combobox,values:{Top:"Top",TopOutside:"Top Outside",Center:"Center",Bottom:"Bottom",BottomOutside:"Bottom Outside"}},c.alignmentHorizontal={propertyName:"alignmentHorizontal",modelName:"@AlignmentHorizontal",displayName:"Alignment Horizontal",defaultVal:"RightOutside",editor:a.JS.Widgets.editorTemplates.combobox,values:{Left:"Left",LeftOutside:"Left Outside",Center:"Center",Right:"Right",RightOutside:"Right Outside"}},c.dock={propertyName:"dock",modelName:"@Dock",displayName:"Dock",defaultVal:"Top",editor:a.JS.Widgets.editorTemplates.combobox,values:{Top:"Top",Bottom:"Bottom",Left:"Left",Right:"Right"}},c.chartTitleText={propertyName:"text",modelName:"@Text",displayName:"Text",editor:a.JS.Widgets.editorTemplates.text},c.padding={propertyName:"chartPadding",modelName:"Padding",displayName:"Padding",info:[c.left,c.right,c.top,c.bottom],editor:a.JS.Widgets.editorTemplates.objecteditor};var H=[c.color,c.colorEach,G],I=({propertyName:"lineMarker",modelName:"LineMarker",displayName:"Line Marker",info:H,editor:a.JS.Widgets.editorTemplates.objecteditor},[y,z,A,E,D,B,C]),J={propertyName:"topNOptions",modelName:"TopNOptions",displayName:"Top N Options",info:I,defaultVal:{},editor:a.JS.Widgets.editorTemplates.objecteditor},K=[c.thickness,F],L={propertyName:"lineStyle",modelName:"LineStyle",displayName:"Line Style",info:K,defaultVal:{},editor:a.JS.Widgets.editorTemplates.objecteditor},M=[c.typeNameNotShow,c.textPattern,c.textAlignment,c.maxLineCount,c.maxWidth,c.textOrientation,c.resolveOverlappingMode,c.lineColor,c.lineVisibility,c.lineLength,c.antialiasing,c.backColor,c.textColor,c.barPosition,c.showForZeroValues,c.font8,L,c.border];c.seriesLabel={propertyName:"label",modelName:"Label",displayName:"Label",info:M,defaultVal:{},from:q.from,toJsonObject:q.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor};var N={propertyName:"autoBindingSettingsEnabled",modelName:"@AutoBindingSettingsEnabled",displayName:"Auto Binding Settings Enabled",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool},O={propertyName:"autoLayoutSettingsEnabled",modelName:"@AutoLayoutSettingsEnabled",displayName:"Auto Layout Settings Enabled",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool};c.pivotGridDataSourceOptions={propertyName:"pivotGridDataSourceOptions",modelName:"PivotGridDataSourceOptions",displayName:"Pivot Grid Data Source Options",info:[N,O],editor:a.JS.Widgets.editorTemplates.objecteditor};var P={modelName:"DataFilters",displayName:"Data Filters",propertyName:"dataFilters",editor:a.JS.Widgets.editorTemplates.commonCollection,array:!0,addHandler:m.createNew,template:"#dxcd-datafilter"},Q={modelName:"@DataFiltersConjunctionMode",defaultVal:"And",displayName:"DataFiltersConjunctionMode",propertyName:"dataFiltersConjunctionMode",editor:a.JS.Widgets.editorTemplates.combobox,values:{And:"And",Or:"Or"}},R={propertyName:"summaryFunction",displayName:"Summary Function",modelName:"@SummaryFunction",editor:a.JS.Widgets.editorTemplates.text};c.view={propertyName:"view",modelName:"View",displayName:"View",defaultVal:{},from:p.from,toJsonObject:p.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},c.seriesTemplateSerializationsInfo=[c.view,c.labelsVisibility,c.argumentDataMember,c.valueDataMembersSerializable,c.argumentScaleType,c.valueScaleType,c.showInLegend,R,Q,P,c.seriesLabel,J],c.seriesTemplate={propertyName:"seriesTemplate",modelName:"SeriesTemplate",displayName:"Series Template",info:c.seriesTemplateSerializationsInfo,from:n.from,toJsonObject:n.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},c.seriesSerializationsInfo=[c.name,c.visible].concat(c.seriesTemplateSerializationsInfo),c.seriesSerializable={propertyName:"series",modelName:"SeriesSerializable",displayName:"Series",array:!0,editor:c.editorTemplates.series},c.seriesDataMember={propertyName:"seriesDataMember",modelName:"@SeriesDataMember",displayName:"Series Data Member",editor:b.Widgets.editorTemplates.field},c.dataContainerSerializationsInfo=[c.seriesDataMember,c.seriesSerializable,c.seriesTemplate,c.dataMember,c.pivotGridDataSourceOptions],c.dataContainer={propertyName:"dataContainer",modelName:"DataContainer",displayName:"Data Container",info:c.dataContainerSerializationsInfo,from:l.from,toJsonObject:l.toJson,editor:b.Widgets.editorTemplates.objecteditorCustom},c.titleSerializationsInfo=[c.chartTitleText,c.textColor,c.dock,c.titleAlignment,c.visibility,c.font18],c.titles={propertyName:"titles",modelName:"Titles",displayName:"Titles",array:!0,from:k.from,toJsonObject:k.toJson,editor:c.editorTemplates.titles},c.legendSerializationsInfo=[c.textColor,c.backColor,c.direction,c.alignmentVertical,c.alignmentHorizontal,c.visibility,c.border,c.margin,c.padding,c.font8],c.legend={propertyName:"legend",modelName:"Legend",displayName:"Legend",info:c.legendSerializationsInfo,from:s.from,toJsonObject:s.toJson,defaultVal:{},editor:a.JS.Widgets.editorTemplates.objecteditor},c.appearanceName={propertyName:"appearanceName",modelName:"@AppearanceNameSerializable",displayName:"Appearance Name",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{"Nature Colors":"Nature Colors","Pastel Kit":"Pastel Kit","In A Fog":"In A Fog","Terracotta Pie":"Terracotta Pie","Northern Lights":"Northern Lights",Chameleon:"Chameleon","The Trees":"The Trees",Light:"Light",Gray:"Gray",Dark:"Dark","Dark Flat":"Dark Flat",Default:"Default"}},c.paletteName={propertyName:"paletteName",modelName:"@PaletteName",displayName:"Palette Name",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default","Nature Colors":"Nature Colors","Pastel Kit":"Pastel Kit","In A Fog":"In A Fog","Terracotta Pie":"Terracotta Pie","Northern Lights":"Northern Lights",Chameleon:"Chameleon","The Trees":"The Trees",Mixed:"Mixed",Office:"Office","Black and White":"Black and White",Grayscale:"Grayscale",Apex:"Apex",Aspect:"Aspect",Civic:"Civic",Concourse:"Concourse",Equity:"Equity",Flow:"Flow",Foundry:"Foundry",Median:"Median",Metro:"Metro",Module:"Module",Opulent:"Opulent",Oriel:"Oriel",Origin:"Origin",Paper:"Paper",Solstice:"Solstice",Technic:"Technic",Trek:"Trek",Urban:"Urban",Verve:"Verve",Office2013:"Office2013","Blue Warm":"Blue Warm",Blue:"Blue","Blue II":"Blue II","Blue Green":"Blue Green",Green:"Green","Green Yellow":"Green Yellow",Yellow:"Yellow","Yellow Orange":"Yellow Orange",Orange:"Orange","Orange Red":"Orange Red","Red Orange":"Red Orange",Red:"Red","Red Violet":"Red Violet",Violet:"Violet","Violet II":"Violet II",Marquee:"Marquee",Slipstream:"Slipstream"}},c.chartSerializationsInfo=[c.appearanceName,c.paletteName,c.dataContainer,c.diagram,c.titles,c.legend],c.chart={propertyName:"chart",modelName:"Chart",displayName:"Chart",from:j.from,toJsonObject:j.toJson}}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(b,c){var d=this;this._dataSourceMember={fullPath:ko.pureComputed({read:function(){return b()?b().id+(c()?"."+c():""):c()},write:function(b){c(new a.JS.Widgets.PathRequest(b).path)}}),displayExpr:function(b){return new a.JS.Widgets.PathRequest(b).path}},this.dataSourceMemberEditable=ko.pureComputed({read:function(){return d._dataSourceMember},write:function(a){d._dataSourceMember.fullPath(a)}})}return b}();c.DataSourceMemberHelper=d;var e=function(d){function e(c,e,g){var h=this,i=new a.JS.Utils.ModelSerializer;d.call(this,c,null,i),this.dataSource=ko.observable(e),this._chartStructure=ko.observable(),this._chartElement=ko.observable(null),this.controlType="ChartControl",this.name("ChartControl"),this.size=g,this.appearanceName=this.chart.appearanceName,this.paletteName=this.chart.paletteName,this._disposables.push(ko.computed(function(){h.rotated=h.chart.diagram()&&h.chart.diagram().rotated?h.chart.diagram().rotated:void 0})),this.fakeChart={seriesTemplate:this.chart.dataContainer.seriesTemplate,series:this.chart.dataContainer.series,titles:this.chart.titles,legend:this.chart.legend,axisX:ko.pureComputed(function(){return h.chart.diagram()&&h.chart.diagram().axisX}),axisY:ko.pureComputed(function(){return h.chart.diagram()&&h.chart.diagram().axisY}),getInfo:function(){return f}},this._chartStructureProvider=new b.ObjectStructureProvider(this.fakeChart,"Chart"),this.chartStructureTreeListController=new b.ObjectStructureTreeListController(["chart","Chart","titles","legend","series","axisX","axisY","seriesTemplate","TitleViewModel","SeriesViewModel"],["chart","titles","series"]),this._chartStructure({itemsProvider:this._chartStructureProvider,treeListController:this.chartStructureTreeListController,selectedPath:this._chartStructureProvider.selectedPath}),this.chart.dataContainer.series().forEach(function(a){a.isPropertyDisabled=function(a){return null===h.dataSource()&&("argumentDataMember"===a||"valueDataMembers"===a||"dataFilters"===a)},a.getPath=function(a){return"argumentDataMember"===a?h.getPath("seriesDataMember"):void 0},a.valueDataMembers().getPath=function(){return h.getPath("seriesDataMember")}}),this._disposables.push(this.chart.dataContainer.series.subscribe(function(a){"added"===a[0].status&&(a[0].value.getPath=function(a){return"argumentDataMember"===a?h.getPath("seriesDataMember"):void 0},a.isPropertyDisabled=function(a){return null===h.dataSource()&&("argumentDataMember"===a||"valueDataMembers"===a||"dataFilters"===a)},a[0].value.valueDataMembers().getPath=function(){return h.getPath("seriesDataMember")})},null,"arrayChange")),this.chart.dataContainer.seriesTemplate.isPropertyDisabled=function(a){return null===h.dataSource()&&("argumentDataMember"===a||"valueDataMembers"===a||"dataFilters"===a)},this.chart.dataContainer.seriesTemplate.getPath=function(){return h.getPath("seriesDataMember")},this.chart.dataContainer.seriesTemplate.valueDataMembers().getPath=function(){return h.getPath("seriesDataMember")},this.dataMember=this.chart.dataContainer.dataMember,this.seriesDataMember=this.chart.dataContainer.seriesDataMember,this.pivotGridDataSourceOptions=this.chart.dataContainer.pivotGridDataSourceOptions,this._disposables.push(this._chartStructureProvider.selectedMember.subscribe(function(a){var b=null,c=h._chartStructureProvider.selectedPath().split(".");if(a&&c.length>1&&(b=a,void 0===b.getInfo)){var d=f.filter(function(a){return a.propertyName===c[1]})[0];d.info?b.getInfo=function(){return d.info}:b={element:b,getInfo:function(){return[$.extend({},d,{propertyName:"element"})]}}}h._chartElement(b)})),this._chartStructureProvider.selectedPath(""),this._disposables.push(this.chart.dataContainer.series.subscribe(this._createCollectionSubscriptionDelegate("Chart","series"),null,"arrayChange")),this._disposables.push(this.chart.titles.subscribe(this._createCollectionSubscriptionDelegate("Chart","titles"),null,"arrayChange"))}return __extends(e,d),e.prototype.getInfo=function(){return c.chartControlSerializationsInfo},e.prototype.getControlFactory=function(){return c.controlsFactory},e.prototype._createCollectionSubscriptionDelegate=function(a,c){var d=this,e=a+"."+c;return function(a){a.forEach(function(a){if(a.status)if("deleted"===a.status)d._chartStructureProvider.selectedPath(e),0!==d.fakeChart[c]().length&&d._chartStructureProvider.selectedPath(e+".0");else{if(!a.value.name()){var f=c.charAt(0).toUpperCase()+c.substr(1)+" ";a.value.name(b.getUniqueNameForNamedObjectsArray(d.fakeChart[c](),f))}d._chartStructureProvider.selectedPath(e+"."+a.index.toString())}})}},e.prototype.getPath=function(a){var b=this.dataSource()?this.dataSource().name:"";return"seriesDataMember"===a?b+(this.chart.dataContainer.dataMember()?"."+this.chart.dataContainer.dataMember():""):"dataMember"===a?b:void 0},e.prototype.serialize=function(){return(new a.JS.Utils.ModelSerializer).serialize(this)},e.prototype.save=function(){var a=this.serialize();return this.onSave&&this.onSave(a),a},e}(b.ElementViewModel);c.ChartControlViewModel=e,c.margins={propertyName:"margins",modelName:"@Margins",from:b.Margins.fromString,displayName:"Margins"},c.pageWidth={propertyName:"pageWidth",modelName:"@PageWidth",defaultVal:850,from:b.floatFromModel,displayName:"Page Width",editor:a.JS.Widgets.editorTemplates.numeric},c.pageHeight={propertyName:"pageHeight",modelName:"@PageHeight",defaultVal:1250,from:b.floatFromModel,displayName:"Page Height",editor:a.JS.Widgets.editorTemplates.numeric};var f=[c.seriesTemplate,c.seriesSerializable,c.titles,c.legend,c.axisX,c.axisY];c.size={propertyName:"size",modelName:"@SizeF",from:b.Size.fromString,displayName:"Size",editor:a.JS.Widgets.editorTemplates.objecteditor},c.chartStructure={propertyName:"_chartStructure",displayName:"Chart Structure",editor:b.Widgets.editorTemplates.treelist},c.chartElement={propertyName:"_chartElement",displayName:"Selected Element",editor:a.JS.Widgets.editorTemplates.objecteditor},c.chartControlSerializationsInfo=[c.name,c.chart,c.chartStructure,c.chartElement,c.size,c.margins];var g=function(a){function d(e,f){var g=this;void 0===f&&(f=ko.observable(1)),a.call(this,e,{measureUnit:ko.observable("Pixels"),zoom:f,dpi:ko.observable(100)},d._unitProperties),this.imageSrc=ko.observable(""),this.allowMultiselect=!1,this.focused=ko.observable(!1),this.selected=ko.observable(!1),this.underCursor=ko.observable(new b.HoverInfo),this.templateName="dx-chart-surface",this.margins={bottom:this._bottom,left:this._left,right:this._right,top:this._top},this.zoom=f,this._disposables.push(ko.computed(function(){var a=e.chart.dataContainer.series();a.forEach(function(a){a.view.typeName()});var d=g;b.Chart.HandlerUri&&c.ChartRequests.getChartImage(b.Chart.HandlerUri,e.chart,e.size.width()*f(),e.size.height()*f()).done(function(a){var b=d._control.chart.dataContainer.series();b.forEach(function(a){a.isIncompatible(!1)}),d.imageSrc("data:image/x;base64,"+a.Image),a.Indexes.forEach(function(a){var c=b[a];c.isIncompatible(!0)})}).fail(function(){b.NotifyAboutWarning("Impossible to get chart image.")})}).extend({throttle:1}))}return __extends(d,a),Object.defineProperty(d.prototype,"measureUnit",{get:function(){return this._context.measureUnit},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"dpi",{get:function(){return this._context.dpi},enumerable:!0,configurable:!0}),d.prototype.checkParent=function(){return!1},d.prototype.getChildrenCollection=function(){return ko.observableArray([])},d._unitProperties={_width:function(a){return a.size.width},_height:function(a){return a.size.height},height:function(a){return a.size.height},width:function(a){return a.size.width},_bottom:function(a){return a.margins.bottom},_left:function(a){return a.margins.left},_right:function(a){return a.margins.right},_top:function(a){return a.margins.top}},d}(b.SurfaceElementBase);c.ChartControlSurface=g}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function d(){}return d.getChartImage=function(d,e,f,g){return b.ajax(d,"chart",encodeURIComponent(JSON.stringify({width:f,height:g,Chart:JSON.stringify({ChartXmlSerializer:{"@version":"14.2.0.0",Chart:(new a.JS.Utils.ModelSerializer).serialize(e,c.chartSerializationsInfo)}})})))},d.fieldListCallback=function(a){var d=JSON.stringify(a),e=encodeURIComponent(d);return b.ajax(c.HandlerUri,"fieldList",e)},d}();c.ChartRequests=d}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(){c.controlsFactory.registerControl("ChartControl",{info:c.chartControlSerializationsInfo,surfaceType:c.ChartControlSurface,type:c.ChartControlViewModel,elementActionsTypes:[],isContainer:!0,nonToolboxItem:!0})}function e(a,b){var c=a.model;return function(a){var d={text:"Save",imageClassName:"dxrd-image-save",disabled:ko.observable(!1),visible:!0,hasSeparator:!1,hotKey:{ctrlKey:!0,keyCode:"S".charCodeAt(0)},clickAction:function(){c().save()}};a.push(d),b&&b(a)}}function f(a){return function(){var b=$(".dxcd-designer .dxrd-right-panel").outerWidth()+$(".dxcd-right-tabs").outerWidth(),c=$(".dxcd-designer .dx-chart-left-panel").outerWidth();$(".dxrd-surface-wrapper").css("right",b),$(".dxrd-surface-wrapper").css("left",c);var d=b+c,e=$(".dxrd-designer").width()-(d+5);$(".dxrd-surface-wrapper").css("width",e),a(e)}}function g(g,h,i,j){j&&Globalize.addCultureInfo("default",{messages:j}),i.fieldLists=i.fieldLists||c.ChartRequests.fieldListCallback,d();var k=ko.observable(),l=ko.observable(),m=ko.observable(),n=new b.Size(h.width,h.height),o=function(){k(new c.ChartControlViewModel(h.chartSource(),h.dataSource,n)),l(new c.ChartControlSurface(k())),m(new b.FieldListProvider(i.fieldLists,ko.observableArray([h.dataSource])))};h.chartSource.subscribe(function(a){o(a),p.chartStructure=k()._chartStructure,p.selectedElement=k()._chartElement}),o(h.chartSource());var p=b.createDesigner(k,l,c.controlsFactory);p.rootStyle="dxcd-designer",p.chartStructure=k()._chartStructure,p.selectedElement=new a.JS.Widgets.ObjectProperties(k()._chartElement),p.parts=[{templateName:"dx-chart-middlePart",model:p},{templateName:"dxcd-toolbar",model:p},{templateName:"dx-right-panel-lightweight",model:p},{templateName:"dx-chart-leftPanel",model:p}],p.tabPanel.tabs[0].template="dxrd-propertygridtab",p.dataBindingsProvider=m,p.actionLists=new b.ActionLists(l,p.selection,p.undoEngine,e(p,i.customizeActions)),p.actionLists.toolbarItems=p.actionLists.toolbarItems.filter(function(a){return-1===["Cut","Copy","Paste","Delete"].indexOf(a.text)}),p.actionLists.toolbarItems[0].hasSeparator=!0;var q=p.actionLists.toolbarItems.pop();p.actionLists.toolbarItems=[].concat(q,p.actionLists.toolbarItems),p.isLoading(!1),p.selection.focused(l()),$(g).children().remove(),ko.applyBindings(p,g);var r=f(p.surfaceSize);return $(window).bind("resize",function(){r()}),p.tabPanel.width.subscribe(function(){r()}),p.updateSurfaceSize=function(){r()},p.updateSurfaceSize(),p}c.controlsFactory=new b.ControlsFactory,c.registerControls=d,c.HandlerUri="DXXCD.axd",c.updateChartSurfaceContentSize=f,c.createChartDesigner=g}(c=b.Chart||(b.Chart={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a){return ko.observable("DifferentFiles"===a?"SingleFile":a)}c.pageBorderColor={propertyName:"pageBorderColor",modelName:"@PageBorderColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Page Border Color",editor:b.Widgets.editorTemplates.customColorEditor,defaultVal:"Black"},c.pageBorderWidth={propertyName:"pageBorderWidth",modelName:"@PageBorderWidth",displayName:"Page Border Width",from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:1},c.pageRange={propertyName:"pageRange",modelName:"@PageRange",displayName:"Page Range",editor:a.JS.Widgets.editorTemplates.text,defaultVal:""},c.expotOptionsTitle={propertyName:"title",modelName:"@Title",displayName:"Title",editor:a.JS.Widgets.editorTemplates.text,defaultVal:"Document"},c.tableLayout={propertyName:"tableLayout",modelName:"@TableLayout",displayName:"Table Layout",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!0},c.removeSecondarySymbols={propertyName:"removeSecondarySymbols",modelName:"@RemoveSecondarySymbols",displayName:"Remove Secondary Symbols",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!1},c.characterSet={propertyName:"characterSet",modelName:"@CharacterSet",displayName:"Character Set",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"utf-8",values:{"utf-8":"utf-8","windows-1256":"Arabic (Windows)","iso-8859-4":"Baltic (ISO)","windows-1257":"Baltic (Windows)","iso-8859-2":"Central European (ISO)","windows-1250":"Central European (Windows)","iso-8859-5":"Cyrillic (ISO)","koi8-r":"Cyrillic (KOI8-r)","windows-1251":"Cyrillic (Windows)","iso-8859-15":"Latin 9 (ISO)","utf-7":"Unicode (UTF-7)","iso-8859-1":"Western European (ISO)","windows-1252":"Western European (Windows)"}},c.rtfExportMode={propertyName:"rtfExportMode",modelName:"@ExportMode",defaultVal:"SingleFilePageByPage",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.htmlExportMode={propertyName:"htmlExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.embedImagesInHTML={propertyName:"embedImagesInHTML",modelName:"@EmbedImagesInHTML",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,displayName:"Embed Images In HTML"},c.imageExportMode={propertyName:"imageExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.xlsExportMode={propertyName:"xlsExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",DifferentFiles:"Different Files"}},c.xlsxExportMode={propertyName:"xlsxExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.textExportMode={propertyName:"textExportMode",modelName:"@TextExportMode",displayName:"Text Export Mode",defaultVal:"Text",editor:a.JS.Widgets.editorTemplates.combobox,values:{Text:"Text",Value:"Value"}},c.xlsTextExportMode={propertyName:"textExportMode",modelName:"@TextExportMode",displayName:"Text Export Mode",defaultVal:"Value",editor:a.JS.Widgets.editorTemplates.combobox,values:{Text:"Text",Value:"Value"}},c.csvTextSeparator={propertyName:"separator",
modelName:"@Separator",displayName:"Separator",editor:a.JS.Widgets.editorTemplates.text,defaultVal:","},c.textEncodingType={propertyName:"encodingType",modelName:"@EncodingType",displayName:"Encoding",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Default",from:b.fromEnum,values:{Default:"Windows-1252",ASCII:"us-ascii",Unicode:"utf-16",BigEndianUnicode:"utf-16BE",UTF7:"utf-7",UTF8:"utf-8",UTF32:"utf-32"}},c.xlsExportHyperlinks={propertyName:"exportHyperlinks",modelName:"@ExportHyperlinks",displayName:"Export Hyperlinks",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsRawDataMode={propertyName:"rawDataMode",modelName:"@RawDataMode",displayName:"Raw Data Mode",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsShowGridLines={propertyName:"showGridLines",modelName:"@ShowGridLines",displayName:"Show Grid Lines",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsExportOptionsSheetName={propertyName:"sheetName",modelName:"@SheetName",displayName:"Sheet Name",defaultVal:"Sheet",editor:a.JS.Widgets.editorTemplates.text},c.excludeDifferentFilesMode=d,c.htmlExportModePreview={propertyName:c.htmlExportMode.propertyName,modelName:c.htmlExportMode.modelName,defaultVal:c.htmlExportMode.defaultVal,editor:c.htmlExportMode.editor,displayName:c.htmlExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.xlsExportModePreview={propertyName:c.xlsExportMode.propertyName,modelName:c.xlsExportMode.modelName,defaultVal:c.xlsExportMode.defaultVal,editor:c.xlsExportMode.editor,displayName:c.xlsExportMode.displayName,from:d,values:{SingleFile:"Single File"}},c.imageExportModePreview={propertyName:c.imageExportMode.propertyName,modelName:c.imageExportMode.modelName,defaultVal:c.imageExportMode.defaultVal,editor:c.imageExportMode.editor,displayName:c.imageExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.xlsxExportModePreview={propertyName:c.xlsxExportMode.propertyName,modelName:c.xlsxExportMode.modelName,defaultVal:c.xlsxExportMode.defaultVal,editor:c.xlsxExportMode.editor,displayName:c.xlsxExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}}}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){b.AsyncExportApproach=!1;var c=function(){function b(b){this.actions=[],this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Export Options"),"dxrd-preview-export-options",b.exportOptionsModel,"properties",ko.pureComputed(function(){return!!b.exportOptionsModel()})),this.actions.push({text:"Export To",disabled:b.exportDisabled,visible:!0,clickAction:function(a){b.exportDisabled()||a.itemData.format&&b.exportDocumentTo(a.itemData.format)},items:ko.pureComputed(function(){var a=[];return b.exportOptionsModel()&&(b.exportOptionsModel().pdf&&a.push({text:"PDF",format:"pdf"}),b.exportOptionsModel().xls&&a.push({text:"XLS",format:"xls"}),b.exportOptionsModel().xlsx&&a.push({text:"XLSX",format:"xlsx"}),b.exportOptionsModel().rtf&&a.push({text:"RTF",format:"rtf"}),b.exportOptionsModel().mht&&a.push({text:"MHT",format:"mht"}),b.exportOptionsModel().html&&a.push({text:"HTML",format:"html"}),b.exportOptionsModel().textExportOptions&&a.push({text:"Text",format:"txt"}),b.exportOptionsModel().csv&&a.push({text:"CSV",format:"csv"}),b.exportOptionsModel().image&&a.push({text:"Image",format:"image"})),[{text:"Export To",imageClassName:"dxrd-image-export-to",items:a}]}),templateName:"dxrd-preview-export-to"})}return b.prototype.getActions=function(){return this.actions},b}();b.ExportOptionsModel=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,e,c)},b.prototype.getInfo=function(){return e},b}();c.CsvExportOptions=d;var e=[c.textEncodingType,c.textExportMode,{propertyName:"quoteStringsWithSeparators",modelName:"@QuoteStringsWithSeparators",displayName:"Quote Strings with Separators",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.csvTextSeparator,{propertyName:"skipEmptyRows",modelName:"@SkipEmptyRows",displayName:"Skip Empty Rows",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"skipEmptyColumns",modelName:"@SkipEmptyColumns",displayName:"Skip Empty Columns",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],f=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,h,c)},b.prototype.getInfo=function(){return h},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.imageExportMode()},b}();c.ImageExportOptions=f;var g=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,{propertyName:"resolution",modelName:"@Resolution",displayName:"Resolution",editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:96},{propertyName:"format",modelName:"@Format",displayName:"Format",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Png",from:b.fromEnum,values:{Bmp:"BMP",Gif:"GIF",Jpeg:"JPEG",Png:"PNG",Emf:"EMF",Wmf:"WMF",Tiff:"TIFF"}}],h=[c.imageExportMode].concat(g),i=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,c.expotOptionsTitle,c.tableLayout,c.removeSecondarySymbols],j=[c.htmlExportMode,c.embedImagesInHTML].concat(i),k=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,j,c)},b.prototype.getInfo=function(){return j},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.htmlExportMode()},b}();c.HtmlExportOptions=k;var l=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,c.expotOptionsTitle,c.characterSet,c.tableLayout,c.removeSecondarySymbols],m=[c.htmlExportMode].concat(l),n=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,m,c)},b.prototype.getInfo=function(){return m},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.htmlExportMode()},b}();c.MhtExportOptions=n;var o=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,p,c)},b.prototype.getInfo=function(){return p},b}();c.PdfExportDocumentOptions=o;var p=[{propertyName:"author",modelName:"@Author",displayName:"Author",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"application",modelName:"@Application",displayName:"Application",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"title",modelName:"@Title",displayName:"Title",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"subject",modelName:"@Subject",displayName:"Subject",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"keywords",modelName:"@Keywords",displayName:"Keywords",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text}],q=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,r,c)},b.prototype.getInfo=function(){return r},b}();c.PdfPermissionsOptions=q;var r=[{propertyName:"printingPermissions",modelName:"@PrintingPermissions",displayName:"PrintingPermissions",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",LowResolution:"LowResolution",HighResolution:"HighResolution"}},{propertyName:"changingPermissions",modelName:"@ChangingPermissions",displayName:"ChangingPermissions",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",InsertingDeletingRotating:"InsertingDeletingRotating",FillingSigning:"FillingSigning",CommentingFillingSigning:"CommentingFillingSigning",AnyExceptExtractingPages:"AnyExceptExtractingPages"}},{propertyName:"enableCopying",modelName:"@EnableCopying",displayName:"EnableCopying",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"enableScreenReaders",modelName:"@EnableScreenReaders",displayName:"EnableScreenReaders",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],s=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,t,c)},b.prototype.getInfo=function(){return t},b}();c.PdfPasswordSecurityOptions=s;var t=[{propertyName:"openPassword",modelName:"@OpenPassword",displayName:"OpenPassword",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"permissionsPassword",modelName:"@PermissionsPassword",displayName:"PermissionsPassword",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"permissionsOptions",modelName:"PermissionsOptions",displayName:"Pdf Permissions Options",from:q.from,toJsonObject:q.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],u=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,v,c)},b.prototype.getInfo=function(){return v},b.prototype.isPropertyDisabled=function(){return!1},b}();c.PdfExportOptions=u;var v=[{propertyName:"convertImagesToJpeg",modelName:"@ConvertImagesToJpeg",displayName:"Convert Images to Jpeg",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"showPrintDialogOnOpen",modelName:"@ShowPrintDialogOnOpen",displayName:"Show Print Dialog on Open",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"compressed",modelName:"@Compressed",displayName:"Compressed",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"neverEmbeddedFonts",modelName:"@NeverEmbeddedFonts",displayName:"Never Embedded Fonts",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"imageQuality",modelName:"@ImageQuality",displayName:"Image Quality",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Highest",from:b.fromEnum,values:{Lowest:"Lowest",Low:"Low",Medium:"Medium",Hight:"Hight",Highest:"Highest"}},{propertyName:"pdfACompatibility",modelName:"@PdfACompatibility",displayName:"PDF A Compatibility",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"None",from:b.fromEnum,values:{Hight:"None",PdfA2b:"PdfA2b"}},c.pageRange,{propertyName:"documentOptions",modelName:"DocumentOptions",displayName:"Document Options",from:o.from,toJsonObject:o.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdfPasswordSecurityOptions",modelName:"PdfPasswordSecurityOptions",displayName:"Pdf Password Security Options",from:s.from,toJsonObject:s.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],w=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,x,c)},b.prototype.getInfo=function(){return x},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"exportWatermarks"===a)&&"SingleFile"===this.rtfExportMode()},b}();c.RtfExportOptions=w;var x=[c.rtfExportMode,c.pageRange,{propertyName:"exportWatermarks",modelName:"@ExportWatermarks",displayName:"Export Watermarks",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],y=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,z,c)},b.prototype.getInfo=function(){return z},b}();c.TextExportOptions=y;var z=[c.textEncodingType,{propertyName:"quoteStringsWithSeparators",modelName:"@QuoteStringsWithSeparators",displayName:"Quote Strings with Separators",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"separator",modelName:"@Separator",displayName:"Separator",defaultVal:"TAB",editor:a.JS.Widgets.editorTemplates.text},c.textExportMode],A=[c.xlsExportHyperlinks,c.pageRange,c.xlsRawDataMode,c.xlsExportOptionsSheetName,c.xlsShowGridLines,{propertyName:"suppress256ColumnsWarning",modelName:"@Suppress256ColumnsWarning",displayName:"Suppress 256 Columns Warning",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"suppress65536RowsWarning",modelName:"@Suppress65536RowsWarning",displayName:"Suppress 65536 Rows Warning",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsTextExportMode,{propertyName:"workbookColorPaletteCompliance",modelName:"@WorkbookColorPaletteCompliance",displayName:"Workbook Color Palette Compliance",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"ReducePaletteForExactColors",from:b.fromEnum,values:{ReducePaletteForExactColors:"ReducePaletteForExactColors",AdjustColorsToDefaultPalette:"AdjustColorsToDefaultPalette"}}],B=[c.xlsExportMode].concat(A),C=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,B,c)},b.prototype.getInfo=function(){return B},b.prototype.isPropertyDisabled=function(a){return"pageRange"===a&&"SingleFile"===this.xlsExportMode()},b}();c.XlsExportOptions=C;var D=[c.xlsExportHyperlinks,c.pageRange,c.xlsRawDataMode,c.xlsExportOptionsSheetName,c.xlsShowGridLines,c.xlsTextExportMode],E=[c.xlsxExportMode].concat(D),F=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,E,c)},b.prototype.getInfo=function(){return E},b.prototype.isPropertyDisabled=function(a){return"pageRange"===a&&"SingleFile"===this.xlsxExportMode()},b}();c.XlsxExportOptions=F;var G=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,H,c)},b.prototype.getInfo=function(){return H},b}();c.ExportOptions=G;var H=[{propertyName:"csv",modelName:"Csv",displayName:"CSV Export Options",from:d.from,toJsonObject:d.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"html",modelName:"Html",displayName:"HTML Export Options",from:k.from,toJsonObject:k.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"image",modelName:"Image",displayName:"Image Export Options",from:f.from,toJsonObject:f.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"mht",modelName:"Mht",displayName:"MHT Export Options",from:n.from,toJsonObject:n.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdf",modelName:"Pdf",displayName:"PDF Export Options",from:u.from,toJsonObject:u.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"rtf",modelName:"Rtf",displayName:"RTF Export Options",from:w.from,toJsonObject:w.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"textExportOptions",modelName:"Text",displayName:"Text Export Options",from:y.from,toJsonObject:y.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xls",modelName:"Xls",displayName:"XLS Export Options",from:C.from,toJsonObject:C.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xlsx",modelName:"Xlsx",displayName:"XLSx Export Options",from:F.from,toJsonObject:F.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],I=[c.htmlExportModePreview].concat(i),J=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,I,c)},b.prototype.getInfo=function(){return I},b}(k);c.HtmlExportOptionsPreview=J;var K=[c.imageExportModePreview].concat(g),L=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,K,c)},b.prototype.getInfo=function(){return K},b}(f);c.ImageExportOptionsPreview=L;var M=[c.htmlExportModePreview].concat(l),N=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,M,c)},b.prototype.getInfo=function(){return M},b}(n);c.MhtExportOptionsPreview=N;var O=[c.xlsExportModePreview].concat(A),P=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,O,c)},b.prototype.getInfo=function(){return O},b}(C);c.XlsExportOptionsPreview=P;var Q=[c.xlsxExportModePreview].concat(D),R=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,Q,c)},b.prototype.getInfo=function(){return Q},b}(F);c.XlsxExportOptionsPreview=R;var S=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,T,c)},b.prototype.getInfo=function(){return T},b}(G);c.ExportOptionsPreview=S;var T=[{propertyName:"csv",modelName:"Csv",displayName:"CSV Export Options",from:d.from,toJsonObject:d.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"html",modelName:"Html",displayName:"HTML Export Options",from:J.from,toJsonObject:J.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"image",modelName:"Image",displayName:"Image Export Options",from:L.from,toJsonObject:L.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"mht",modelName:"Mht",displayName:"MHT Export Options",from:N.from,toJsonObject:N.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdf",modelName:"Pdf",displayName:"PDF Export Options",from:u.from,toJsonObject:u.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"rtf",modelName:"Rtf",displayName:"RTF Export Options",from:w.from,toJsonObject:w.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"textExportOptions",modelName:"Text",displayName:"Text Export Options",from:y.from,toJsonObject:y.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xls",modelName:"Xls",displayName:"XLS Export Options",from:P.from,toJsonObject:P.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xlsx",modelName:"Xlsx",displayName:"XLSx Export Options",from:R.from,toJsonObject:R.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){function c(a,b){return 100*a/b+"%"}function d(a,b){a&&(!!a.active&&!!a.active(!1)||(a.active=ko.observable(!1)),a.onClick=function(){b&&b(a)},a.bricks&&a.bricks.forEach(function(e){e.leftP=c(e.left,a.width),e.widthP=c(e.width,a.width),e.topP=c(e.top,a.height),e.heightP=c(e.height,a.height),d(e,b)}))}var e=96;b.initializeBrick=d;var f=function(){function b(b,c){this.getBricks=function(d){return a.Designer.ajax(b,"getBrickMap",encodeURIComponent(JSON.stringify({pageIndex:d,documentId:c})))}}return b}();b.PreviewPageBrickProvider=f;var g=function(a){function f(b,f,g,h,i,j,k,l){var m=this;a.call(this),this.isClientVisible=ko.observable(!1),this.originalHeight=ko.observable(0),this.originalWidth=ko.observable(0),this.loadingText="Loading...",this.realZoom=ko.observable(1),this.actualResolution=0,this.pageLoadFailed=ko.observable(!1),this.imageSrc=ko.observable(""),this.cachedImageSrc=ko.observable(""),this.brick=ko.observable(null),this.brickLoading=ko.observable(!0),this.active=ko.observable(!1),this._selectedBrickPath=null,this.pageIndex=b,this.documentId=i||ko.observable(null),this.brickProvider=j,this.pageLoading=k||ko.observable(!0),this.originalHeight(ko.unwrap(g)),this.originalWidth(ko.unwrap(f)),this.zoom=h,this.isClientVisible.subscribe(function(){m.isClientVisible()&&m._setPageImgSrc(i(),m.zoom())}),this.width=ko.pureComputed(function(){return Math.ceil(m.originalWidth()*m._getCurrentResolution(m.zoom())/e)}),this.height=ko.pureComputed(function(){return Math.ceil(m.originalHeight()*m._getCurrentResolution(m.zoom())/e)});var n=this;this.isEmpty=-1===b&&!j&&!l,this.onPageLoaded=function(){n.pageLoading(!1),n.pageLoadFailed(!1),n.cachedImageSrc()!==n.imageSrc()&&(n.originalHeight()&&ko.isObservable(g)&&g(n.originalHeight()),n.originalWidth()&&ko.isObservable(f)&&f(n.originalWidth()),!n.brick()&&n.brickProvider?n.brickProvider.getBricks(n.pageIndex).done(function(a){try{if(!a||!a.brick)return;n.brickColumnWidthArray=a.columnWidthArray,n.originalWidth(a.brick.width),n.originalHeight(a.brick.height),d(a.brick,l),a.brick.leftP=c(a.brick.left,m.originalWidth()),a.brick.widthP=c(a.brick.width,m.originalWidth()),a.brick.topP=c(a.brick.top,m.originalHeight()),a.brick.heightP=c(a.brick.height,m.originalHeight()),n.brick(a.brick),n._selectedBrickPath&&n.selectBrick(n._selectedBrickPath)}finally{n.brickLoading(!1)}}).fail(function(){n.brickLoading(!1)}):n.brickLoading(!1),n.cachedImageSrc(n.imageSrc()))},this.onPageLoadFailed=function(){-1!==n.pageIndex&&n.isClientVisible()&&(n.pageLoadFailed(!0),n.pageLoading(!1),n.brickLoading(!1))},this.resetBrickRecusive=function(a){a&&a.active&&(a.active(!1),a.bricks&&a.bricks.forEach(function(a){n.resetBrickRecusive(a)}))},this.selectBrick=function(a,b){l&&l(null);var c=n.brick();if(!b&&n.resetBrickRecusive(c),a){if(!c)return void(n._selectedBrickPath=a);var d=a.split(",");d.forEach(function(a){c=c.bricks[parseInt(a)]}),c.active(!0)}},this._disposables.push(ko.computed(function(){m.active()||(m.resetBrickRecusive(m.brick()),m._selectedBrickPath=null)}))}return __extends(f,a),f.prototype._getCurrentResolution=function(a){return Math.round((a?a:1)*e)},f.prototype.updateSize=function(a){var b=this._getCurrentResolution(a);return this.realZoom(b/e),b},f.prototype._setPageImgSrc=function(a,c){if(this.pageLoadFailed(!1),!a||-1===this.pageIndex)return void this.imageSrc(null);var d=this.updateSize(c);this.actualResolution===d&&this.imageSrc()||(this.actualResolution=d,this.imageSrc(b.HandlerUri+"?actionKey=getPage&unifier="+b.generateGuid()+"&arg="+encodeURIComponent(JSON.stringify({pageIndex:this.pageIndex,documentId:a,resolution:d}))))},f}(a.Designer.Disposable);b.PreviewPage=g}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){b.formatSearchResult=function(a){return a&&"page "+(a.pageIndex+1)},b.searchAvailable=ko.observable(!0);var c=function(c){function e(d){var f=this;c.call(this),this._cachedRequests={},this._cachedWholeWordRequests={},this._cachedCaseSensitiveRequests={},this._cachedWholeWordWithCaseRequests={},this.actions=[],this.focusRequested=ko.observable(!0),this.matchWholeWord=ko.observable(!1),this.matchCase=ko.observable(!1),this.searchUp=ko.observable(!1),this.searchText=ko.observable(""),this.searchResult=ko.observable([]),this.loading=ko.observable(!1),this._resultNavigator=e.createResultNavigator(this,d),this.clean=function(){f.searchText("")};var g=this.matchCase(),h=this.matchWholeWord();this.findUp=function(){f.searchUp(!0),f.findNext()},this.findDown=function(){f.searchUp(!1),f.findNext()},this.goToResult=function(a){f._resultNavigator.goToResult(a.id)};var i=function(b){if(f.searchResult([]),f._resultNavigator.currentResult(null),g=f.matchCase(),h=f.matchWholeWord(),!b)return void(d.pages()&&d.pages()[d.pageIndex()]&&d.pages()[d.pageIndex()].selectBrick(""));var c=f.matchCase(),b=c?f.searchText():f.searchText().toLocaleLowerCase(),e=f.matchWholeWord()?c?f._cachedWholeWordWithCaseRequests:f._cachedWholeWordRequests:c?f._cachedCaseSensitiveRequests:f._cachedRequests;if(e[b])return void f.searchResult(e[b]);f.loading(!0);var i=f;d.previewWrapper.findTextRequest(b).done(function(a){i.findTextRequestDone(a,e[b])}).fail(function(){i.loading(!1),d._processError(a.Designer.getLocalization("An error occurred during search"))})};this.findNext=function(){f.loading()||(g===f.matchCase()||f.searchText().toUpperCase()===f.searchText().toLowerCase())&&h===f.matchWholeWord()&&f._resultNavigator.next(f.searchUp())||i(f.searchText())},this._disposables.push(this.searchText.subscribe(function(a){i(a)}));var j=ko.pureComputed(function(){var a=d._currentDocumentId();return d.documentBuilding()||!a});this.actions.push({text:"Search",imageClassName:"dxrd-image-search",disabled:j,visible:ko.pureComputed(function(){return b.searchAvailable()}),hasSeparator:!0,clickAction:function(){f.tabInfo.active()?f.tabInfo.active.notifySubscribers(!0):f.tabInfo.active(!0)}}),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Search"),"dxrd-preview-search",this,"search",ko.pureComputed(function(){return!j()&&b.searchAvailable()})),this._disposables.push(this.tabInfo.active.subscribe(function(a){a&&setTimeout(function(){return f.focusRequested.notifySubscribers()},100)}))}return __extends(e,c),e.prototype.findTextRequestDone=function(a,b){return this.loading(!1),a?(b=(a.success?a.matches:[])||[],void this.searchResult(b)):void this.searchResult([])},e.prototype.getActions=function(){return this.actions},Object.defineProperty(e.prototype,"disabled",{get:function(){return this.loading()},enumerable:!0,configurable:!0}),e.createResultNavigator=function(a,b){return new d(a,b)},e}(a.Designer.Disposable);b.SearchViewModel=c;var d=function(a){function b(b,c){var d=this;a.call(this),this.currentResult=ko.observable(null);var e=function(a){if(a){c.goToPage&&c.goToPage(a.pageIndex);var b=c.pages.peek()[a.pageIndex];b&&b.selectBrick(a.indexes)}};this.getFirstMatchFromPage=function(a,d,e){if(!b.searchResult()||0===b.searchResult().length)return null;var f,g=function(a){b.searchResult().forEach(function(b){e&&b.pageIndex===a?(!f||b.id<f.id&&!d||b.id>f.id&&d)&&(f=b):(b.pageIndex>=a&&!d&&(!f||b.id<f.id)||b.pageIndex<=a&&d&&(!f||b.id>f.id))&&(f=b)})};return g(a),!f&&g(d?c.pages().length:0),f};var f=function(a,f,g){if(b.searchResult()&&0!==b.searchResult().length){var h=f>=0&&b.searchResult().length>f?b.searchResult()[f]:d.getFirstMatchFromPage(c.pageIndex.peek(),b.searchUp.peek(),g);d.currentResult(h),a&&e(d.currentResult.peek())}else c.pages()&&c.pages()[c.pageIndex()]&&c.pages()[c.pageIndex()].selectBrick("")};this.goToResult=function(a){return 0===a||a?void f(!0,a):null},this._disposables.push(c.pageIndex.subscribe(function(){d.currentResult(null)})),this._disposables.push(b.searchResult.subscribe(function(){f(!0)})),this.next=function(a){if(!b.searchResult())return!1;if(!d.currentResult()&&d.currentResult(d.getFirstMatchFromPage(c.pageIndex(),a)),!d.currentResult())return!1;var f,g=d.currentResult().id;return f=a?0===g?b.searchResult().length-1:g-1:g===b.searchResult().length-1?0:g+1,d.currentResult(b.searchResult()[f]),e(d.currentResult()),!0}}return __extends(b,a),b}(a.Designer.Disposable);b.SearchResultNavigator=d;var e="dx-searcheditor",f=e+"",g=e+"-button dx-widget dx-dropdowneditor-button",h="."+e+"-button",i=e+"-icon dx-dropdowneditor-icon dx-icon-dxrd-image-move",j=function(b){function c(c,d){this._activeStateUnit=h;var e=this,f=d&&d.searchModel;this._focusRequestRaised=function(){e.focus()},f().focusRequested.subscribe(function(){return e._focusRequestRaised()}),d.onEnterKey=function(b){a.browser&&a.browser.msie&&b&&b.component&&(b.component.blur(),b.component.focus()),e.findNext(f,b&&b.jQueryEvent&&b.jQueryEvent.shiftKey)},b.call(this,c,d)}return __extends(c,b),c.prototype.findNext=function(a,b){if(!a||!a())return!1;try{b?a().loading&&!a().loading()&&a().findUp():a().loading&&!a().loading()&&a().findDown()}finally{return!0}},c.prototype._init=function(){b.prototype._init.call(this),this.element().addClass(f)},c.prototype._optionChanged=function(a,c){var d=a.name||a,e=c||a.value;switch(d){case"searchModel":e&&this.option("value",e.searchText());break;case"value":var f=this.option("searchModel");f&&f()&&f().searchText(e);default:b.prototype._optionChanged.apply(this,arguments)}},c.prototype._render=function(){b.prototype._render.call(this),this._renderButton("Down"),this._renderButton("Up")},c.prototype._renderButton=function(a){this._button=$("<div />").addClass(g),this._attachButtonEvents(a),this._buttonIcon=$("<div />").addClass(i+a.toLowerCase()).appendTo(this._button);var c=b.prototype._buttonsContainer.call(this);this._button.appendTo(c)},c.prototype._attachButtonEvents=function(a){var b=this;this._button.off("click"),this.option("disabled")||this._button.on("click",function(c){b.findNext(b.option("searchModel"),"up"===a.toLowerCase())&&c.stopPropagation()})},c}(a.ui.dxTextBox);b.dxSearchEditor=j,a.registerComponent("dxSearchEditor",j)}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b){var c=this,f=new e;this.isEmpty=ko.pureComputed(function(){return!(b.documentMap()&&b.documentMap().nodes&&0!==b.documentMap().nodes.length)}),f.clickHandler=function(a){var c=a.data.bookmark;if(c){var d=c.pageIndex<0?0:c.pageIndex;b.pages.peek()[d].selectBrick(c.indexes)}},this.documentMapOptions=ko.pureComputed(function(){var a=f.selectedItem.subscribe(function(b){"0"===b.path&&b.collapsed()&&b.toggleCollapsed(),a.dispose()});return{itemsProvider:new d(b.documentMap()),selectedPath:ko.observable("0"),treeListController:f}}),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Document Map"),"dxrd-preview-document-map",this,"reportexplorer",ko.pureComputed(function(){return!c.isEmpty()}))}return b}();b.DocumentMapModel=c;var d=function(){function a(a){var b=this;this.bookmarkDict={},this.getItems=function(c){var d=$.Deferred();if(a)if(c.fullPath){var e=b._selectNode(a,c.fullPath);d.resolve(e)}else{var f=b._getRootNode(a);d.resolve(f)}return d.promise()}}return a.prototype._selectNode=function(b,c){if(this.bookmarkDict[c])return this.bookmarkDict[c];var d=c.split("."),e=b;if("0"!==d[0])return null;for(var f=1,g=d[f];f<d.length;f++,g=d[f]){if(!(e&&e.nodes&&e.nodes[g]))return null;e=e.nodes[g]}var h=a.fillNode(e);return h&&0!==h.length&&(this.bookmarkDict[c]=h),h},a.fillNode=function(a){return!a||!a.nodes||a.nodes.length<=0?null:a.nodes.map(function(a,b){return{name:b+"",displayName:a.text,isList:a.nodes&&a.nodes.length>0,bookmark:a,specifics:"node"}})},a.prototype._getRootNode=function(a){return[{name:"0",displayName:a.text,isList:a.nodes&&a.nodes.length>0,bookmark:a,specifics:"node"}]},a}();b.DocumentMapItemsProvider=d;var e=function(){function a(){this.selectedItem=ko.observable(null),this.clickHandler=function(){return void 0}}return a.prototype.itemsFilter=function(){return!0},a.prototype.hasItems=function(a){return a.isList===!0},a.prototype.canSelect=function(){return!0},a.prototype.select=function(a){this.canSelect(a)&&a!==this.selectedItem.peek()&&(this.selectedItem.peek()&&this.selectedItem.peek().isSelected(!1),this.selectedItem(a),a.isSelected(!0))},a}();b.DocumentMapTreeListController=e}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(){}return b.prototype._isKnownEnumType=function(a){
return!!this._knownEnums&&this._knownEnums.some(function(b){return b.enumType===a})},b.getSerializationValue=function(a,b){return a instanceof Array?a.map(function(a){var c=ko.isObservable(a.value)?a.value():a;return c instanceof Date?b(c):c}):a instanceof Date?b(a):a},b.prototype.initialize=function(a,b){arguments.length>0&&(this._knownEnums=a,arguments.length>1&&(this._customizeParameterEditors=b))},b.prototype.createInfo=function(b){var c=b.getParameterDescriptor(),d=this.isEnumType(b)?"Enum":ko.unwrap(c.type);return{propertyName:"value",displayName:c.displayName,editor:a.Designer.getEditorType(d),valuesArray:this.getValueCollection(b)}},b.prototype.createMultiValue=function(a,b){var c=ko.observable();return null!==b&&void 0!==b&&c(b),{value:c,getInfo:function(){return[a.multiValueInfo()]}}},b.prototype.createMultiValueArray=function(a,b,c){var d=this,e=c?c:this.valueConverter(ko.unwrap(b.type));return ko.observableArray(a.map(function(a){return d.createMultiValue(b,e(a))}))},b.prototype.isEnumType=function(a){return this._isKnownEnumType(ko.unwrap(a.type))},b.prototype.getValueCollection=function(a){var b=ko.unwrap(a.type);if(this._isKnownEnumType(b)){var c=this._knownEnums.filter(function(a){return a.enumType===b})[0];if(c&&c.values&&0!==c.values.length)return c.values.map(function(a){return{value:a.value,displayValue:a.displayName}})}},b.prototype.getParameterInfo=function(b){var c=this,d=this.createInfo(b);return this._customizeParameterEditors&&this._customizeParameterEditors(b.getParameterDescriptor(),d),b.multiValueInfo($.extend(!0,{},d,{propertyName:"value"})),ko.unwrap(b.isMultiValue)&&(d.editor=a.Designer.getEditorType(b.isMultiValueWithLookUp?"multiValueWithLookUp":"multiValue"),d.addHandler=function(){return c.createMultiValue(b)}),d},b.prototype.valueConverter=function(){return function(a){return a}},b}();b.ParameterHelper=c;var d=function(b){function c(a,c){b.call(this),this.initialize(a,c)}return __extends(c,b),c.prototype.mapLookUpValues=function(a,b){var c=this.valueConverter(a);return $.map(b||[],function(a){return{value:c(a.Value),displayValue:a.Description}})},c.prototype.createInfo=function(c){var d=this,e=b.prototype.createInfo.call(this,c);return e.propertyName=c.path,"System.DateTime"===c.type&&(e.validationRules=[{type:"required",message:a.Designer.getLocalization("The value cannot be empty")}]),Object.defineProperty(e,"valuesArray",{get:function(){return c.isFilteredLookUpSettings||c.lookUpValues()&&0!==c.lookUpValues().length?c.lookUpValues():d.getValueCollection(c)},set:function(a){c.lookUpValues(a)}}),e},c.prototype.isEnumType=function(a){return a.isFilteredLookUpSettings||!!a.lookUpValues()||b.prototype.isEnumType.call(this,a)},c.prototype.valueConverter=function(a){return"System.DateTime"===a?function(a){return Globalize.parseDate(a,["yyyy-MM-dd","MM/dd/yyyy HH:mm:ss"])}:b.prototype.valueConverter.call(this,a)},c}(c);b.PreviewParameterHelper=d;var e=function(b){function c(a,c){var d=this;b.call(this),this.valueInfo=ko.observable(),this.lookUpValues=ko.observableArray(),this.multiValueInfo=ko.observable(),this.type=a.TypeString,this.path=a.Path,this.isFilteredLookUpSettings=a.IsFilteredLookUpSettings,this._originalLookUpValues=a.LookUpValues?c.mapLookUpValues(this.type,a.LookUpValues||[]):null,this.lookUpValues(this._originalLookUpValues),this.isMultiValue=a.MultiValue,this.isMultiValueWithLookUp=this.isMultiValue&&!!this.lookUpValues(),this.getParameterDescriptor=function(){return{description:a.Description,displayName:a.Description||a.Name,name:a.Name,type:a.TypeString,value:a.Value,visible:a.Visible}},this._disposables.push(ko.computed(function(){var b=c.getParameterInfo(d);b.propertyName=a.Path,d.valueInfo(b)})),this._originalValue=a.Value,this.initialize(this._originalValue,c)}return __extends(c,b),c.prototype.safeAssignObservable=function(a,b){this[a]?this[a](b()):this[a]=b},c.prototype.initialize=function(b,c){var d=this;this.isMultiValueWithLookUp?(this.safeAssignObservable("_value",ko.observableArray((b||[]).map(function(a){return c.valueConverter(d.type)(a)}))),this.safeAssignObservable("value",ko.observable(new a.Designer.Widgets.MultiValuesHelper(this._value,this.lookUpValues())))):this.isMultiValue?this.safeAssignObservable("value",c.createMultiValueArray(b,this)):this.safeAssignObservable("value",ko.observable(c.valueConverter(this.type)(b)))},c}(a.Designer.Disposable);b.PreviewParameter=e;var f=function(f){function g(c,e){var g=this;f.call(this),this._parameters=[],this._getLookUpValueRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getLookUpValues",encodeURIComponent(JSON.stringify(c)))},this._getDoneGetLookUpValueHandler=function(){var a=g;return function(b){try{if(!b||!b.parameters)return;b.parameters.forEach(function(b,c){a._setLookUpValues(b.Key,b.Value,0===c)})}finally{a.parametersLoading(!1)}}},this._getFailGetLookUpValueHandler=function(){var c=g;return function(d){c.parametersLoading(!1);var e=a.Designer.getLocalization("Cannot supply filtered lookup values to a report parameter editor"),f=a.Designer.getErrorMessage(d);f&&(e+=": "+f),b.MessageHandler.processError(e)}},this.getInfo=ko.observable(null),this.needToRefreshLookUps=ko.observable(!1),this.isEmpty=ko.observable(!0),this.parametersLoading=ko.observable(!1),this._reportPreview=c,this.parameterHelper=e||new d;var h=this;this.submit=function(){if(!h.parametersLoading()){h.parametersLoading(!0);var a=c.startBuild();a&&a.done(function(){h.parametersLoading(!1)})}},this._disposables.push(c.originalParametersInfo.subscribe(function(a){g.initialize(a)})),this.initialize(c.originalParametersInfo()),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Parameters"),"dxrd-preview-parameters",this,"parameters",ko.pureComputed(function(){return!g.isEmpty()}))}return __extends(g,f),g.prototype._convertLocalDateToUTC=function(a){return new Date(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds()))},g.prototype._add=function(a){var b=this;this.isEmpty(!1);var c=new e(a,this.parameterHelper);this._parameters.push(c),this.needToRefreshLookUps(this.needToRefreshLookUps()||c.isFilteredLookUpSettings),this._disposables.push((c.isMultiValueWithLookUp?c._value:c.value).subscribe(function(){!b.parametersLoading()&&b.needToRefreshLookUps()&&b.getLookUpValues(c.path)})),this[c.path]=c.value},g.prototype._setLookUpValues=function(a,b,c){var d=this;this[a]&&this._parameters.forEach(function(e){if(e.path===a){e.lookUpValues(d.parameterHelper.mapLookUpValues(e.type,b));var f=d._getParameterValuesContainedInLookups(b,e);e.isMultiValue?e.initialize(f.length>0?f:c&&b.length>0?[b[0].Value]:[],d.parameterHelper):e.initialize(f[0]&&f[0].Value||c&&b.length>0?b[0].Value:null,d.parameterHelper)}})},g.prototype._getParameterValuesContainedInLookups=function(a,b){var c=this;if(a){if(b.isMultiValue){var d=(b.value()&&b.value().selectedItems()||[]).map(function(a){return a.value});return d.filter(function(d){return c._filterParameterValuesContainsInLookups(a,b.type,d).length>0})}return this._filterParameterValuesContainsInLookups(a,b.type,b.value())}return[]},g.prototype._filterParameterValuesContainsInLookups=function(a,b,c){var d=this;return a.filter(function(a){return d._compareValues(d.parameterHelper.valueConverter(b)(a.Value),c)})},g.prototype._compareValues=function(a,b){return a instanceof Date&&b instanceof Date?a-b===0:a===b},g.prototype.initialize=function(a){var b=this;if(this._parameters.forEach(function(a){delete b[a.path]}),this._parameters=[],!a)return this.isEmpty(!0),void this.getInfo([]);this.parameterHelper.initialize(a.knownEnums),(a.parameters||[]).forEach(function(a){a.Visible&&b._add(a)}),0===this._parameters.length&&this.isEmpty(!0);var c=this._parameters.map(function(a){return a.valueInfo()});this.getInfo(c),!a.shouldRequestParameters||this.isEmpty()?this.submit():(this._reportPreview.removeEmptyPages(),this.tabInfo.active(!0),this._reportPreview.pageLoading(!1))},g.prototype.getPathsAfterPath=function(a){var b=0;$.each(this._parameters,function(c,d){return d.path===a?(b=c+1,!0):void 0});var c=this._parameters.filter(function(a,c){return a.isFilteredLookUpSettings&&c>=b}).map(function(a){return a.path});return c||[]},g.prototype.serializeParameters=function(){var a=[],b=this;return this._parameters.forEach(function(d){var e=function(a){return"System.DateTime"===d.type&&a&&a instanceof Date?b._convertLocalDateToUTC(a):a},f=d.isMultiValueWithLookUp?d._value():d.value();a.push({Value:c.getSerializationValue(f,e),Key:d.path,TypeString:d.type})}),a},g.prototype.restore=function(){var a=this;if(!this.parametersLoading())try{this.parametersLoading(!0),this._parameters.forEach(function(b){b.lookUpValues(b._originalLookUpValues),b.initialize(b._originalValue,a.parameterHelper)})}finally{this.parametersLoading(!1)}},g.prototype.isPropertyDisabled=function(){return this.parametersLoading()},g.prototype.getLookUpValues=function(a){var b=this.getPathsAfterPath(a);if(b&&0!==b.length){this.parametersLoading(!0);var c={reportId:this._reportPreview.reportId,requiredParameterPaths:b,parameters:this.serializeParameters(),timeZoneOffset:0-(new Date).getTimezoneOffset()};this._getLookUpValueRequest(c).done(this._getDoneGetLookUpValueHandler()).fail(this._getFailGetLookUpValueHandler())}},g}(a.Designer.Disposable);b.PreviewParametersViewModel=f}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){function c(a,b){return function(){var c=$(b),d=c.find(".dxrd-preview .dxrd-right-panel").outerWidth()+c.find(".dxrd-right-tabs").outerWidth(),e=c.find(".dxrd-preview").width()-(d+5);c.find(".dxrd-preview-wrapper").css("right",d),c.find(".dxrd-preview-wrapper").css("width",e),a(e)}}function d(a,b,c){var d=$(c),e=d.closest(".dxrd-preview-wrapper"),f=d.closest(".dxrd-preview");if(0===e.length||0===f.length)return 1;var g=f.find(".dxrd-right-panel").outerWidth()+f.find(".dxrd-right-tabs").outerWidth(),h=f.width()-(g+10),i=parseFloat(e.css("top").split("px")[0]),j=f.outerHeight(),k=j-i,l=k/(b+6),m=h/a;return Math.min(l,m)}function e(d,e,f,h,i,j){void 0===j&&(j=!0),f&&Globalize.addCultureInfo("default",{messages:f});var k=new b.PreviewRequestWrapper,l=new g(i,k),m=new b.SearchViewModel(l),n=new b.DocumentMapModel(l),o=new b.PreviewParametersViewModel(l,new b.PreviewParameterHelper(h&&h.knownEnums,e&&e.customizeParameterEditors)),p=new b.ExportOptionsModel(l);l.canSwitchToDesigner=!j,k.initialize(l,o,m);var q=new a.Designer.TabPanel([o.tabInfo,p.tabInfo,m.tabInfo,n.tabInfo],!0);q.collapsed(!0);var r=ko.observableArray([new b.PreviewActions(l),p,m,new b.PreviewDesignerActions(l)]);l.previewVisible(j);var s={reportPreview:l,parametersModel:o,exportModel:p,searchModel:m,documentMapModel:n,tabPanel:q,globalActionProviders:r,globalActions:ko.pureComputed(function(){var a=[];return r().forEach(function(b){a.push.apply(a,b.getActions(l))}),e&&e.customizeActions&&e.customizeActions(a),a})};d&&!l.canSwitchToDesigner&&($(d).children().remove(),ko.applyBindings(s,d));var t=c(l.previewSize,d);return s.updateSurfaceSize=function(){t()},$(window).bind("resize",function(){t()}),q.width.subscribe(function(){setTimeout(t,1)}),t(),s}function f(b,c,d){var e=a.Report.Preview.createPreview(c,d,b.localization,b.parametersInfo,b.handlerUri);return(b.reportId||b.documentId)&&e.reportPreview.initialize($.Deferred().resolve(b)),e}b.HandlerUri="DXXRDV.axd",b.TimeOut=12e4,b.MessageHandler={processError:function(b){a.Designer.NotifyAboutWarning(b)},processMessage:function(b){a.Designer.NotifyAboutWarning(b)},processWarning:function(b){a.Designer.NotifyAboutWarning(b)}},b.generateGuid=function(){var a=function(a){return Math.floor((1+Math.random())*Math.pow(65536,a)).toString(16).substring(1)};return a(2)+"-"+a(1)+"-"+a(1)+"-"+a(1)+"-"+a(3)};var g=function(c){function d(d,e,f){var g=this;c.call(this),this.getPreviewPageBrickProvider=function(a,c){return new b.PreviewPageBrickProvider(a,c)},this.predefinedZoomLevels=ko.observableArray([5,2,1.5,1,.75,.5,.25]),this._pageWidth=ko.observable(818),this._pageHeight=ko.observable(1058),this._currentReportId=ko.observable(null),this._currentDocumentId=ko.observable(null),this._currentOperationId=ko.observable(null),this._stopBuildRequests={},this._closeDocumentRequests={},this._startBuildOperationId="",this._drillDownState=[],this.originalParametersInfo=ko.observable(null),this.pageIndex=ko.observable(0),this.showMultipagePreview=ko.observable(!1),this.documentMap=ko.observable(),this.exportOptionsModel=ko.observable(),this.pageLoading=ko.observable(!1),this.documentBuilding=ko.observable(!1),this.pendingOperation=ko.observable(!1),this.progressBar=new b.ProgressViewModel,this.pages=ko.observableArray([]).extend({rateLimit:{timeout:20,method:"notifyWhenChangesStop"}}),this.isAutoFit=ko.observable(!0),this.exportDisabled=ko.pureComputed(function(){var a=g.progressBar.inProgress(),b=g.documentBuilding();return-1===g.pageIndex()||a||b}),this._zoom=ko.observable(1),this.zoom=ko.pureComputed({read:function(){return g.isAutoFit()||0===g._zoom()?0:g._zoom()},write:function(a){0!==a?(g._zoom(a),g.isAutoFit(!1)):g.isAutoFit(!0)}}),this._currentPage=ko.pureComputed(function(){return-1===g.pageIndex()?a.Designer.getLocalization("0 pages"):g.pageIndex()+1+" "+a.Designer.getLocalization("of")+" "+g.pages().length}),this._raiseOnSizeChanged=function(){g.onSizeChanged()&&g.onSizeChanged()()},this.previewSize=ko.observable(0),this.onSizeChanged=ko.observable(),this.previewVisible=ko.observable(!1),this.canSwitchToDesigner=!0,b.HandlerUri=d||b.HandlerUri,this.previewHandlersHelper=f||new b.PreviewHandlersHelper(this),this.previewWrapper=e||new b.PreviewRequestWrapper,this._disposables.push(this.previewSize.subscribe(function(){return g._raiseOnSizeChanged()})),this._disposables.push(this._zoom.subscribe(function(){if(g.showMultipagePreview())g.pages().forEach(function(a){a.updateSize(a.zoom()),a.isClientVisible(!1)}),g._raiseOnSizeChanged();else{var a=g.pages()[g.pageIndex()];a&&a.isClientVisible.notifySubscribers()}}))}return __extends(d,c),d.prototype._doDrillDown=function(a){this._drillDownState.filter(function(b){return b.Key===a&&(b.Value=!b.Value)}),this.closeDocument(),this.progressBar.complete(),this.documentMap(null);for(var b=this.pages().length-1;b>=0;b--){var c=this.pages()[b];b>this.pageIndex()?this.pages.remove(c):(c.pageIndex=-1,c.brick(null),c._setPageImgSrc(null,1))}this._startBuildRequest()},d.prototype.removeEmptyPages=function(a){a&&this.pages.removeAll();for(var b=this.pages().length-1;b>=0;b--){var c=this.pages()[b];(c.isEmpty||-1===c.pageIndex)&&this.pages.remove(c)}},d.prototype._initialize=function(){this._drillDownState=[],this.closeDocument(),this.documentMap(null),this.pageIndex(-1),this.pageLoading(!0),this.progressBar.complete(),this.pages([new b.PreviewPage(-1,this._pageWidth,this._pageHeight,this._zoom,this._currentDocumentId,null,this.pageLoading)])},d.prototype._cleanTabInfo=function(){this.exportOptionsModel(null),this.documentMap(null)},d.prototype._export=function(c,d,e){var f=this,g=$.Deferred();if(b.AsyncExportApproach){var h=this;this.progressBar.text(a.Designer.getLocalization("Exporting the document...")),this.progressBar.cancelText(a.Designer.getLocalization("Cancel")),this.progressBar.startProgress(function(){f._currentOperationId(null)}),this.previewWrapper.getStartExportOperation(c).done(function(a){h.previewHandlersHelper.doneStartExportHandler(g,e,a)}).fail(function(a){h.previewHandlersHelper.getErrorStartBuildHandler(g,a)})}else g.resolve(!0),window.open(d+"?actionKey=exportTo&arg="+c,"_blank");return g.promise()},d.prototype.createBrickClickProcessor=function(a){var b=this;return function(c){if(b.goToPage(a,!0),c&&b.pages()[a].selectBrick(""),(!b.customProcessBrickClick||!b.customProcessBrickClick(a,c))&&c&&c.navigation)if(c.navigation.drillDownKey&&b.reportId&&b._doDrillDown&&b._doDrillDown(c.navigation.drillDownKey),c.navigation.pageIndex>=0){var d=b.pages().filter(function(a){return a.pageIndex===c.navigation.pageIndex})[0];d&&(b.goToPage(c.navigation.pageIndex),d.selectBrick(c.navigation.indexes))}else{var e=c.navigation.target||"_blank";c.navigation.url&&window.open(c.navigation.url,e)}}},d.prototype.openReport=function(b){var c=this;this._cleanTabInfo(),this.closeReport(),this.originalParametersInfo(null);var d=$.Deferred();this._openReportOperationDeferred=d,this.previewWrapper.openReport(b).done(function(a){d.resolve(a)}).fail(function(e){d.reject(e),c._processError(a.Designer.getLocalization("Could not open report '"+b+"'"),e)}),this.initialize(d.promise())},d.prototype.initialize=function(b){this._currentReportId(null),this._currentDocumentId(null);var c=this;this._initialize(),b.done(function(b){if(b&&!b.error&&(b.reportId||b.documentId)){c._currentReportId(b.reportId),c._currentDocumentId(b.documentId),b.pageHeight&&c._pageHeight(b.pageHeight),b.pageWidth&&c._pageWidth(b.pageWidth);var d=new a.Designer.Report.ExportOptionsPreview(JSON.parse(b.exportOptions));if(c.exportOptionsModel(d),b.parametersInfo)c.originalParametersInfo(b.parametersInfo);else{var e=c.getDoGetBuildStatusFunc();e(b.documentId)}}else c.pageLoading(!1),c._processError(a.Designer.getLocalization("The report preview initialization has failed"),b&&b.error)}).fail(function(){c.removeEmptyPages()})},d.prototype.deactivate=function(){this._initialize(),this._cleanTabInfo(),this.closeReport(),this._currentDocumentId(null),this._currentReportId(null)},d.prototype.startBuild=function(){return this._initialize(),this._startBuildRequest()},d.prototype._initializeStartBuild=function(){var c=this;return this.pendingOperation()||this._startBuildOperationId?!1:(this._startBuildOperationId=b.generateGuid(),this._currentDocumentId(null),this.progressBar.text(a.Designer.getLocalization("Document is building...")),this.progressBar.cancelText(a.Designer.getLocalization("Cancel")),this.progressBar.startProgress(function(){c.documentBuilding(!1)},function(){c.stopBuild()}),this.documentBuilding(!0),!0)},d.prototype._startBuildRequest=function(){if(!this._initializeStartBuild())return null;var a=this,b=$.Deferred();return this.previewWrapper.startBuildRequest().done(function(c){a.previewHandlersHelper.doneStartBuildHandler(b,c)}).fail(function(c){a.previewHandlersHelper.getErrorStartBuildHandler(b,c)}),b.promise()},d.prototype.getExportStatus=function(a){var b=this,c=this,d=$.Deferred();return setTimeout(function(){b.previewWrapper.getExportStatusRequest(a).done(function(b){c.previewHandlersHelper.doneExportStatusHandler(d,a,b)}).fail(function(a){c.previewHandlersHelper.errorExportStatusHandler(d,a)})},250),d.promise()},d.prototype.getExportResult=function(a,c){var d=encodeURIComponent(JSON.stringify({id:a,printable:!!c}));window.open(b.HandlerUri+"?actionKey=getExportResult&arg="+d,"_blank")},d.prototype.getBuildStatus=function(a){var b=this,c=this,d=$.Deferred();return setTimeout(function(){b.previewWrapper.getBuildStatusRequest(a).done(function(b){c.previewHandlersHelper.getDoneGetBuildStatusHandler(d,a,b)}).fail(function(a){c.previewHandlersHelper.getErrorGetBuildStatusHandler(d,a)})},250),d.promise()},d.prototype.getDoGetBuildStatusFunc=function(){var a=this,b=function(c){var d=a.getBuildStatus(c);d.done(function(d){if(d&&d.requestAgain&&!a._stopBuildRequests[c]&&!a._closeDocumentRequests[c])b(c);else try{if(d.error||!d.requestAgain&&!d.pageCount)return void a.removeEmptyPages(!d.pageCount);if(!d.completed)return;a.getDocumentData(c),a.pages().forEach(function(b){b.updateSize(a._zoom());var d=b.pageIndex===a.pageIndex();b.actualResolution=0,b.isClientVisible(d),d&&b._setPageImgSrc(c,a._zoom())})}finally{a.progressBar.complete(),setTimeout(a._raiseOnSizeChanged,1e3)}})};return b},d.prototype.getDocumentData=function(b){var c=this;this.previewWrapper.getDocumentData(b).done(function(a){a&&(c._drillDownState=a.drillDownKeys||[],c.documentMap(a.documentMap))}).fail(function(d){c._processError(a.Designer.getLocalization("Cannot obtain additional document data for the current document"),d,c._closeDocumentRequests[b])})},d.prototype.exportDocumentTo=function(c){if(this._currentDocumentId()){var d=this.exportOptionsModel()?JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(this.exportOptionsModel())):null,e=encodeURIComponent(JSON.stringify({documentId:this._currentDocumentId(),exportOptions:d,format:c}));this._export(e,b.HandlerUri)}},d.prototype.printDocument=function(c){if(this._currentDocumentId()){var d=new a.Designer.Report.ExportOptionsPreview({});d.pdf.showPrintDialogOnOpen=!0,c=parseInt(c),(c&&c>0||0===c)&&this.pages().length>c&&(d.pdf.pageRange=c+1);var e=JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(d)),f=encodeURIComponent(JSON.stringify({documentId:this._currentDocumentId(),exportOptions:e,format:"printpdf"}));this._export(f,b.HandlerUri,!0)}},d.prototype.stopBuild=function(a){var b=a||this._currentDocumentId();return b?(this._stopBuildRequests[b]=!0,this.progressBar.complete(),void this.previewWrapper.stopBuild(b)):void(this._startBuildOperationId&&(this._stopBuildRequests[this._startBuildOperationId]=!0))},d.prototype.closeDocument=function(a){var b=a||this._currentDocumentId();return b?(this._closeDocumentRequests[b]=!0,this.progressBar.complete(),void this.previewWrapper.sendCloseRequest(b)):void(this._startBuildOperationId&&(this._closeDocumentRequests[this._startBuildOperationId]=!0))},d.prototype.closeReport=function(){this._openReportOperationDeferred&&this._openReportOperationDeferred.reject(),this._currentReportId()&&this.previewWrapper.sendCloseRequest(null,this._currentReportId())},d.prototype.goToPage=function(a,b){!b&&this.pageIndex.peek()===a||0===this.pages.peek().length||0>a||a>=this.pages.peek().length||(this.pageIndex(a),this.pages.peek().forEach(function(b){var c=b.pageIndex===a;b.active(c),b.isClientVisible(c)}))},d.prototype.getSelectedContent=function(){var a=this.pages()[this.pageIndex()];if(!a||!a.brickColumnWidthArray)return"";var b=[],c=function(a,d){a&&(a.active()&&-1!=a.genlIndex&&b.push(a),a.bricks&&0!=a.bricks.length&&a.bricks.forEach(function(a){c(a,d)}))};if(c(a.brick(),b),!b)return"";var d=[],e=function(a,b){b=b||"";for(var c=a-b.length,d=0;c>=d;d++)b+=" ";return b},f=a.brickColumnWidthArray.length,g=-1;b.forEach(function(a){var b=d[a.row];b||(b=[],d[a.row]=b);var c=a.content&&a.content.filter(function(a){return"text"===a.Key})[0];b[a.col]=c&&c.Value,f>a.col&&(f=a.col),g<a.col&&(g=a.col)});var h="";return d.forEach(function(b){for(var c=f;g>=c;c++)h+=e(a.brickColumnWidthArray[c],b[c]);h+="\r\n"}),h},d.prototype._processError=function(c,d,e){if(!e){var f=a.Designer.getErrorMessage(d);f&&(c+=": "+f),b.MessageHandler.processError(c)}},Object.defineProperty(d.prototype,"reportId",{get:function(){return this._currentReportId()},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"documentId",{get:function(){return this._currentDocumentId()},enumerable:!0,configurable:!0}),d}(a.Designer.Disposable);b.ReportPreview=g,b.updatePreviewContentSize=c,b.updatePreviewZoomWithAutoFit=d,b.createPreview=e,b.createAndInitPreviewModel=f}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b){this.actions=[],this.actions.push({text:a.Designer.getLocalization("Design"),imageClassName:"dxrd-image-design",disabled:ko.observable(!1),visible:b.canSwitchToDesigner,hotKey:{ctrlKey:!0,keyCode:"P".charCodeAt(0)},clickAction:function(){b.previewVisible(!1),b.deactivate()}})}return b.prototype.getActions=function(){return this.actions},b}();b.PreviewDesignerActions=c;var d=function(){function b(b){this.actions=[];var c=ko.observable(.01),d=ko.pureComputed(function(){var a=b.progressBar.inProgress(),c=b.documentBuilding();return-1===b.pageIndex()||a||c});this.actions.push({text:a.Designer.getLocalization("First Page"),imageClassName:"dxrd-image-preview-first",disabled:ko.pureComputed(function(){return b.pageIndex()<1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"1".charCodeAt(0)},clickAction:function(){b.pageIndex()>0&&b.goToPage(0)}}),this.actions.push({text:a.Designer.getLocalization("Previous Page"),imageClassName:"dxrd-image-preview-prev",disabled:ko.pureComputed(function(){return b.pageIndex()<1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:",".charCodeAt(0)},clickAction:function(){b.pageIndex()>=1&&b.goToPage(b.pageIndex()-1)}});var e={text:"Pagination",imageClassName:"dxrd-image-pager",disabled:ko.observable(!1),visible:ko.pureComputed(function(){return b.previewVisible()}),clickAction:$.noop,selectedItem:ko.pureComputed({read:function(){if(b.pageIndex()<0)return null;var a=e.pageItems();return a&&a.store&&a.store.length>b.pageIndex()&&a.store[b.pageIndex()]},write:function(a){a&&(a.index||0===a.index)&&b.goToPage(a.index)},deferEvaluation:!0}),pageItems:ko.pureComputed(function(){var a=b.pages().length;if(0===a||-1===b.pageIndex.peek())return[];for(var c=new Array,d=0;a>d;)c.push({index:d,text:++d});return{store:c,paginate:a>200,pageSize:100}}),currentPage:b._currentPage,focusOut:function(){b._currentPage.notifySubscribers()},valueChanged:function(a){var c=parseInt&&parseInt(a.value);c&&c-->0&&c<b.pages().length&&b.goToPage(c)},templateName:"dxrd-preview-pager"};this.actions.push(e),this.actions.push({text:a.Designer.getLocalization("Next Page"),imageClassName:"dxrd-image-preview-next",disabled:ko.pureComputed(function(){return b.pageIndex()<0||b.pageIndex()>=b.pages().length-1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:".".charCodeAt(0)},clickAction:function(){b.pageIndex()<b.pages().length-1&&b.goToPage(b.pageIndex()+1)}}),this.actions.push({text:a.Designer.getLocalization("Last Page"),imageClassName:"dxrd-image-preview-last",disabled:ko.pureComputed(function(){return b.pageIndex()<0||b.pageIndex()>=b.pages().length-1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"L".charCodeAt(0)},clickAction:function(){b.pageIndex()<b.pages().length-1&&b.goToPage(b.pages().length-1)}}),this.actions.push({text:a.Designer.getLocalization("Toggle Multipage Mode"),imageClassName:ko.pureComputed(function(){return b.showMultipagePreview()?"dxrd-image-preview-single-page":"dxrd-image-preview-multipage"}),disabled:ko.observable(!1),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"M".charCodeAt(0)},clickAction:function(){var a=b._zoom();b.showMultipagePreview(!b.showMultipagePreview()),b.zoom(a)},hasSeparator:!0}),this.actions.push({text:a.Designer.getLocalization("Zoom Out"),imageClassName:"dxrd-image-zoomout",disabled:ko.pureComputed(function(){return b.isAutoFit()}),visible:!0,zoomStep:c,clickAction:function(){b.zoom(Math.max(b.zoom()-c(),.01))},hasSeparator:!0}),this.actions.push({text:a.Designer.getLocalization("Zoom 100%"),imageClassName:"dxrd-image-zoom",disabled:ko.observable(!1),visible:!0,clickAction:function(){b.zoom(1)},templateName:"dxrd-zoom-autofit-select-template",zoom:b.zoom,zoomLevels:b.predefinedZoomLevels,zoomItems:ko.pureComputed(function(){var a=b.predefinedZoomLevels.slice(0);return b.showMultipagePreview()===!1&&-1===a.indexOf(0)&&a.push(0),a})}),this.actions.push({text:a.Designer.getLocalization("Zoom In"),imageClassName:"dxrd-image-zoomin",disabled:ko.pureComputed(function(){return b.isAutoFit()}),visible:!0,zoomStep:c,clickAction:function(){b.zoom(Math.min(b.zoom()+c(),10))}}),this.actions.push({text:a.Designer.getLocalization("Print"),imageClassName:"dxrd-image-print",hasSeparator:!0,disabled:d,visible:!0,clickAction:function(){d()||b.printDocument()}}),this.actions.push({text:a.Designer.getLocalization("Print Page"),imageClassName:"dxrd-image-print-page",disabled:d,visible:!0,clickAction:function(){d()||b.printDocument(b.pageIndex())}})}return b.prototype.getActions=function(){return this.actions},b}();b.PreviewActions=d}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){ko.bindingHandlers.toView={init:function(a,b){var c=$(a),d=c.parent(".dxrd-report-preview-holder"),e=b().active,f=e.subscribe(function(a){if(a){var b=c.position().top;(0>b&&b+c.height()<0||b>d.height())&&d.scrollTop(d.scrollTop()+b)}});ko.utils.domNodeDisposal.addDisposeCallback(a,function(){f.dispose()})}},ko.bindingHandlers.lazyImages={init:function(a,b){var c=$(a),d=b().enabled,e=function(){if(d())for(var b=c.height()+100,e=0;e<a.children.length;e++){var f=a.children[e],g=f.getBoundingClientRect(),h=g.top;if(b>h&&h>=0||0>h&&h+g.height>-100){var i=ko.dataFor(f);i&&i.isClientVisible(!0)}}};ko.isObservable(b().updateCallback)&&b().updateCallback(e);var f,g=function(){f&&clearTimeout(f),f=setTimeout(function(){e(),f=void 0},700)},h=d.subscribe(function(a){a&&e()});c.on("scroll",g),setTimeout(e,500),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){c.off("scroll",g),h.dispose()})}},ko.bindingHandlers["brick-selection"]={update:function(a,b){var c=b(),d=ko.unwrap(c).selectBrick,e=function(a,b){if(a){var c=ko.dataFor(a);c&&c.active&&c.active(b||!c.active())}},f=function(a){if(a){var b=ko.dataFor(a);b&&b.active&&b.active(!1)}},g=$.extend({filter:".dxrd-report-preview-brick-selectable",distance:5},ko.unwrap(c),{selecting:function(a,b){e(b.selecting,a.ctrlKey)},start:function(a){d&&d("",a.ctrlKey)},unselecting:function(a,b){f(b.unselecting)}});$(a).selectable(g)}},ko.bindingHandlers.textCopier={init:function(a,b,c,d){var e=function(a){var b=d.getSelectedContent();if(!(!b||!a.ctrlKey&&!a.metaKey||$(a.target).is("input:visible,textarea:visible")||window.getSelection&&window.getSelection()&&window.getSelection().toString()||document.selection&&document.selection.createRange().text)){var c=$("#clipboard-container");c.empty().show(),$("<textarea id='clipboard'></textarea>").val(b).appendTo(c).focus().select()}},f=function(a){$(a.target).is("#clipboard")&&$("#clipboard-container").empty().hide()};$(document).on("keydown",e),$(document).on("keyup",f),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){$(document).off("keydown",e),$(document).off("keyup",f)})}},ko.bindingHandlers.autoFit={init:function(b,c){var d=c(),e=[],f=function(c){if(c.isAutoFit()===!0&&!c.brickLoading()){var d=Math.round(100*a.updatePreviewZoomWithAutoFit(c.width(),c.height(),b)-1)/100;c.zoom(Math.max(d,.02))}};f(d);var g=function(){f(d)};$(window).bind("resize",g),e.push(d.rightPanelWidth.subscribe(function(){f(d)})),e.push(d.width.subscribe(function(){f(d)})),e.push(d.height.subscribe(function(){f(d)})),e.push(d.previewSize.subscribe(function(){f(d)})),e.push(d.isAutoFit.subscribe(function(){f(d)})),e.push(d.brickLoading.subscribe(function(){f(d)})),ko.utils.domNodeDisposal.addDisposeCallback(b,function(){$(window).unbind("resize",g),e.forEach(function(a){a.dispose()})})}}}(b=a.Preview||(a.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function c(a){this._preview=a}return c.prototype.doneStartExportHandler=function(b,c,d){var e=this;try{if(!d)return void this._preview.progressBar.complete();this._preview._currentOperationId(d);var f=function(b){var d=e._preview.getExportStatus(b);d.done(function(d){if(d&&d.requestAgain)e._preview.progressBar&&e._preview.progressBar.updateProgress(d.progress),f(b);else if(e._preview.progressBar.complete(),!d.requestAgain&&d.completed&&e._preview.getExportResult(b,c),d.error)return void e._preview._processError(a.Designer.getLocalization("Error on retrieving an exporting status: ")+d.error)})};f(this._preview._currentOperationId())}finally{b.resolve(!0),this._preview._startBuildOperationId=""}},c.prototype.errorStartExportHandler=function(b,c){this._preview.progressBar.complete(),
c&&this._preview._processError(a.Designer.getLocalization("An error occurred during the export"),c)},c.prototype.doneExportStatusHandler=function(a,b,c){try{if(!c)return a.resolve({requestAgain:!1}),void this._preview.progressBar.complete();if(c.faultMessage)return a.resolve({requestAgain:!1,error:c.faultMessage}),this._preview._processError(c.faultMessage,null),void this._preview.progressBar.complete();this._preview.progressBar&&this._preview.progressBar.progress()<c.progress&&this._preview.progressBar.updateProgress(c.progress),a.resolve(c)}catch(d){a.resolve({requestAgain:!1})}},c.prototype.errorExportStatusHandler=function(b,c){this._preview.progressBar.complete(),b.resolve({requestAgain:!1,created:!1}),this._preview._processError(a.Designer.getLocalization("Error obtaining an export status"),c)},c.prototype.doneStartBuildHandler=function(a,b){var c=this;try{var d=function(a){a&&c._preview.pages.removeAll(),c._preview.removeEmptyPages()};if(!b||!b.documentId)return this._preview.progressBar.complete(),void d();var e=this._preview._stopBuildRequests[this._preview._startBuildOperationId],f=this._preview._closeDocumentRequests[this._preview._startBuildOperationId];if(this._preview._startBuildOperationId&&(e||f))return f?f&&this._preview.closeDocument(b.documentId):e&&this._preview.stopBuild(b.documentId),this._preview.progressBar.complete(),void d();this._preview._currentDocumentId(b.documentId);var g=this._preview.getDoGetBuildStatusFunc();g(this._preview._currentDocumentId())}finally{a.resolve(!0),this._preview._startBuildOperationId=""}},c.prototype.getErrorStartBuildHandler=function(b,c){this._preview.pageLoading(!1),this._preview.progressBar.complete(),b.resolve(!0),this._preview._startBuildOperationId="",this._preview.removeEmptyPages(),this._preview._processError(a.Designer.getLocalization("Cannot create a document for the current report"),c,this._preview._closeDocumentRequests[this._preview._startBuildOperationId])},c.prototype.getErrorGetBuildStatusHandler=function(b,c){b.resolve({requestAgain:!1,created:!1}),this._preview._processError(a.Designer.getLocalization("Error obtaining a build status"),c,this._preview._closeDocumentRequests[this._preview._currentDocumentId()])},c.prototype.getDoneGetBuildStatusHandler=function(a,c,d){var e=this;try{if(!d)return void a.resolve({requestAgain:!1});if(d.faultMessage)return a.resolve({requestAgain:!1,pageCount:-1,error:d.faultMessage}),void this._preview._processError(d.faultMessage,null,this._preview._closeDocumentRequests[c]);this._preview.progressBar.progress()<d.progress&&!this._preview._stopBuildRequests[c]&&!this._preview._closeDocumentRequests[c]&&this._preview.progressBar.updateProgress(d.progress);var f=-1===this._preview.pageIndex()&&d.pageCount>0;f&&this._preview.pageIndex(0);for(var g=this._preview.getPreviewPageBrickProvider(b.HandlerUri,c),h=0;h<d.pageCount&&!this._preview._stopBuildRequests[c]&&!this._preview._closeDocumentRequests[c];h++){var i=function(a){return new b.PreviewPage(a,e._preview._pageWidth,e._preview._pageHeight,e._preview._zoom,e._preview._currentDocumentId,g,null,e._preview.createBrickClickProcessor(a))};if(h<this._preview.pages().length){var j=this._preview.pages()[h];(!j||j.isEmpty)&&(j=i(h),this._preview.pages.splice(h,1,j)),-1===j.pageIndex&&(j.pageIndex=h,j.brickProvider=g)}else{var k=i(h);this._preview.pages.push(k)}}if(this._preview._raiseOnSizeChanged(),f){var l=this._preview.pages().length?0:-1;this._preview.goToPage(l,!0)}a.resolve(d)}catch(m){a.resolve({requestAgain:!1})}},c}();b.PreviewHandlersHelper=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(){var b=this;this._progressObservable=ko.observable(0),this._forceInvisible=ko.observable(!1),this.stop=ko.observable(function(){}),this.inProgress=ko.observable(!1),this.cancelText=ko.observable(a.Designer.getLocalization("Cancel")),this.text=ko.observable(""),this.visible=ko.pureComputed({read:function(){return b._forceInvisible()?!1:b.inProgress()},write:function(a){b._forceInvisible(!a)}}),this.complete=function(){b.inProgress(!1),b._progressObservable(0),$.isFunction(b._onComplete)&&b._onComplete(),b._onComplete=null},this.startProgress=function(a,c){b.inProgress(!0),b._progressObservable(0),b._onComplete=a,b.stop(function(){try{$.isFunction(c)&&c()}finally{b.complete()}})},this.progress=ko.pureComputed({read:function(){return b._progressObservable()}})}return b.prototype.updateProgress=function(a){this._progressObservable(a)},b}();b.ProgressViewModel=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function c(a){var b=this;$.each(a||{},function(a,c){b[a]=c})}return c.prototype.initialize=function(a,b,c){this._reportPreview=a,this._parametersModel=b,this._searchModel=c},c.prototype.findTextRequest=function(c){return a.Designer.ajax(b.HandlerUri,"findText",encodeURIComponent(JSON.stringify({text:c,documentId:this._reportPreview.documentId,matchCase:this._searchModel.matchCase(),wholeWord:this._searchModel.matchWholeWord(),searchUp:this._searchModel.searchUp()})))},c.prototype.stopBuild=function(c){a.Designer.ajax(b.HandlerUri,"stopBuild",encodeURIComponent(c))},c.prototype.sendCloseRequest=function(c,d){a.Designer.ajax(b.HandlerUri,"close",encodeURIComponent(JSON.stringify({reportId:d,documentId:c})))},c.prototype.startBuildRequest=function(){return a.Designer.ajax(b.HandlerUri,"startBuild",encodeURIComponent(JSON.stringify({reportId:this._reportPreview.reportId,drillDownKeys:this._reportPreview._drillDownState,timeZoneOffset:0-(new Date).getTimezoneOffset(),parameters:this._parametersModel.serializeParameters()})))},c.prototype.getBuildStatusRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getBuildStatus",encodeURIComponent(JSON.stringify({documentId:c,timeOut:Math.max(5e3,a.Report.Preview.TimeOut)})))},c.prototype.getDocumentData=function(c){return a.Designer.ajax(b.HandlerUri,"getDocumentData",encodeURIComponent(c))},c.prototype.openReport=function(c){return a.Designer.ajax(b.HandlerUri,"openReport",encodeURIComponent(c))},c.prototype.getStartExportOperation=function(c){return a.Designer.ajax(b.HandlerUri,"startExport",c)},c.prototype.getExportStatusRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getExportStatus",encodeURIComponent(JSON.stringify({id:c,timeOut:Math.max(5e3,a.Report.Preview.TimeOut)})))},c}();b.PreviewRequestWrapper=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b=function(b){function c(c){var d=this;b.call(this),this.width=ko.observable(0),this.height=ko.observable(0),this.verticalGridLines=ko.observableArray(),this.horizontalGridLines=ko.observableArray(),this.majorVerticalGridLines=ko.observableArray(),this.majorHorizontalGridLines=ko.observableArray(),this.width=ko.pureComputed(function(){return a.unitsToPixel(c.width(),c.measureUnit(),c.zoom())+.5}),this.height=ko.pureComputed(function(){return a.unitsToPixel(c.height(),c.measureUnit(),c.zoom())+.5}),this._disposables.push(ko.computed(function(){d._initGrid(a.unitsToPixel(c.width(),c.measureUnit(),c.zoom()),a.unitsToPixel(c.snapGridSize(),c.measureUnit(),c.zoom()),d.verticalGridLines),d._initGrid(a.unitsToPixel(c.width(),c.measureUnit(),c.zoom()),4*a.unitsToPixel(c.snapGridSize(),c.measureUnit(),c.zoom()),d.majorVerticalGridLines)})),this._disposables.push(ko.computed(function(){d._initGrid(a.unitsToPixel(c.height(),c.measureUnit(),c.zoom()),a.unitsToPixel(c.snapGridSize(),c.measureUnit(),c.zoom()),d.horizontalGridLines),d._initGrid(a.unitsToPixel(c.height(),c.measureUnit(),c.zoom()),4*a.unitsToPixel(c.snapGridSize(),c.measureUnit(),c.zoom()),d.majorHorizontalGridLines)}))}return __extends(c,b),c.prototype._initGrid=function(a,b,c){var d=Math.ceil(a/b),e=c.peek().length,f=d-e;if(0>f)c.splice(e+f);else if(f>0)for(var g=0;f>g;g++)c.push({coordVal:ko.observable(0)});for(var g=0,h=0;d>g;h+=b,g++)c.peek()[g].coordVal(h+.5)},c}(a.Disposable);a.CoordinateGridViewModel=b,ko.bindingHandlers.coordinateGrid={init:function(a,c){$(a).children().remove();var d=c(),e=new b(d),f=$("#dxrd-coordinategrid").text(),g=$(a).append(f);return ko.applyBindings(e,g.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b=function(b){function c(c){var d=this;b.call(this),this.height=ko.observable(0),this.width=ko.observable(0),this.gridLines=ko.observableArray(),this.majorGridLines=ko.observableArray(),this.disable=null,this._disposables.push(ko.computed(function(){var b=a.unitsToPixel(25,c.units(),c.zoom());d._initGrid(c.lenght(),b,d.gridLines,c.flip),d._initGrid(c.lenght(),4*b,d.majorGridLines,c.flip),"vertical"===c.direction?(d.height(c.lenght()+.5),d.width(20)):(d.width(c.lenght()+.5),d.height(20))})),this.disable=c.disable}return __extends(c,b),c.prototype._initGrid=function(a,b,c,d){void 0===d&&(d=!1);var e=Math.round(a/b)+1,f=c.peek().length,g=e-f;if(0>g)c.splice(f+g);else if(g>0)for(var h=0;g>h;h++)c.push({coordVal:ko.observable(0),text:ko.observable(0)});if(d)for(var h=0,i=a;e>h;h++,i-=b)c.peek()[h].coordVal(i+.5),c.peek()[h].text(h);else for(var h=0,i=0;e>h;i+=b,h++)c.peek()[h].coordVal(i+.5),c.peek()[h].text(h)},c}(a.Disposable);a.RulerViewModel=b,ko.bindingHandlers.ruler={init:function(a,c){$(a).children().remove();var d=c(),e=$.extend({},ko.unwrap(d),{}),f=e.zoom,g={lenght:e.lenght,units:e.units,direction:e.direction||"",zoom:f,flip:e.flip,disable:e.disable},h=new b(g),i=$("#dxrd-ruler"+g.direction).text(),j=$(a).append(i);return ko.applyBindings(h,j.children()[0]),{controlsDescendantBindings:!0}}}}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function d(e,f,g){var h=this;this.displayExpr="name",this.valueExpr="name",this.displayCustomValue=!0,this.value=ko.pureComputed({read:function(){return e()},write:function(b){b!==a.Designer.getLocalization(d.newItem)&&e(b)}}),this.items=ko.pureComputed(function(){var b=[new c.StyleModel({"@Name":a.Designer.getLocalization(d.newItem)})];return b.push.apply(b,f()),b}),this.onValueChanged=function(e){if(e.value===a.Designer.getLocalization(d.newItem)){var g=b.getUniqueNameForNamedObjectsArray(f(),"xrControlStyle"),i=new c.StyleModel({"@Name":g});f.push(i),h.value(g)}},this.disabled=g}return d.newItem="Create New Style",d}();c.StylesEditorHeaderModel=d,ko.bindingHandlers.dxStylesEditor={init:function(b,d,e,f){$(b).children().remove();var g=(d(),$("#dx-propertieseditor").text()),h=$(b).append(g),i=ko.pureComputed(function(){var a=d().styles().filter(function(a){return a.name()===d().styleName()});return a.length>0?a[0]:null});return ko.applyBindings(new a.JS.Widgets.ObjectProperties(i,{editors:c.styleSerializationInfo},1,f.disabled),h.children()[0]),{controlsDescendantBindings:!0}}}}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function d(c,d){var e=this;b.call(this),d=d||new a.JS.Utils.ModelSerializer,d.deserialize(this,c),this.displayExpr=ko.pureComputed(function(){var a=e.parameter();return a?a.parameterName():e.dataMember()})}return __extends(d,b),d.prototype.getInfo=function(){return c.dataBindingBaseSerializationInfo},d.prototype._findDataSourceFromPath=function(a,b){var c=a.split(".")[0],d=(b||[]).filter(function(a){return a.ref===c||a.id===c})[0];return d?d.data:null},d.prototype.updateParameter=function(a,b){this.parameter(this._findDataSourceFromPath(a.fullPath,b)().filter(function(b){return b.parameterName()===a.path})[0]),this.dataSource(null)},d.prototype.updateBinding=function(b,c){if(b){var d=new a.JS.Widgets.PathRequest(b);0===b.indexOf("parameters.")?this.updateParameter(d,c):(this.dataMember(d.path),this.dataSource(this._findDataSourceFromPath(b,c)),this.parameter(null))}},d.prototype.resetValue=function(){this.parameter(null),this.dataSource(null),this.dataMember(null)},d.prototype.isEmpty=function(){return!(this.dataMember()||this.dataSource()||this.parameter())},d}(b.Disposable);c.DataBindingBase=d;var e=function(b){function d(a,c){b.call(this,a,c)}return __extends(d,b),d.initialize=function(b,c){var e=a.JS.Utils.deserializeArray(b,function(a){return new d(a,c)});return(this.allDataBindings||[]).forEach(function(a){0===e().filter(function(b){return b.propertyName()===a}).length&&e.push(new d({"@PropertyName":a},c))}),e().findBinding=function(a){return e().filter(function(b){return b.propertyName()===a})[0]},e},d.prototype.getInfo=function(){return c.dataBindingSerializationInfo},d.prototype.updateParameter=function(a,c){b.prototype.updateParameter.call(this,a,c),this.dataMember(a.path)},d.prototype.resetValue=function(){b.prototype.resetValue.call(this),this.formatString("")},d}(d);c.DataBinding=e,c.dataBindingBaseSerializationInfo=[{propertyName:"parameter",modelName:"@Parameter",link:!0},{propertyName:"dataSource",modelName:"@DataSource",link:!0},{propertyName:"dataMember",modelName:"@DataMember"}],c.dataBindingSerializationInfo=c.dataBindingBaseSerializationInfo.concat([{propertyName:"propertyName",modelName:"@PropertyName"},{propertyName:"formatString",modelName:"@FormatString"}])}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,b){return a instanceof b?a:d(a.parent,b)}function e(a,b){var d=a.createChild($.extend({"@ControlType":"XRPictureBox"},c.controlsFactory.controlsMap.XRPictureBox.defaultVal)),e=d.dataBindings().findBinding("Image");return e.dataMember(b),d}c.memberControlsMap={Array:{drop:function(b,c,d){return e(c(),new a.JS.Widgets.PathRequest(d).path)},size:function(){return b.Size.fromString("100, 100")}},Bool:{drop:function(b,d,e){var f=d().createChild($.extend({"@ControlType":"XRCheckBox"},c.controlsFactory.controlsMap.XRCheckBox.defaultVal));f.text(b.displayName);var g=f.dataBindings().findBinding("CheckState");return-1===e.indexOf("parameters.")?g.dataMember(new a.JS.Widgets.PathRequest(e).path):(g.dataMember(b.name),g.parameter(b)),f},size:function(){return b.Size.fromString("100, 23")}},List:{drop:function(b,d,f,g){var h=d().createChild({"@ControlType":"XRTable","@SizeF":"200, 23"}),i=h.createChild({"@ControlType":"XRTableRow","@Weight":"1"});return g().done(function(b){var d=new a.JS.Widgets.PathRequest(f).path;$.each(b,function(a,b){if("List"!==b.data.specifics&&"ListSource"!==b.data.specifics&&b.data.isList!==!0){var f=i.createChild($.extend({"@ControlType":"XRTableCell"},c.controlsFactory.controlsMap.XRTableCell.defaultVal));if("Array"!==b.data.specifics){var g=f.dataBindings().findBinding("Text");g.dataMember(d+"."+b.name)}else f.addChild(e(f,d+"."+b.name))}})}),h},size:function(a){var c=a.getControlModel();return b.Size.fromString(a?((c.pageWidth()-c.margins.left()-c.margins.right())/(a.dpi()/100)).toString()+", 23":"200, 23")},adjustDropTarget:function(a){var b=d(a,c.BandSurface);return b.underCursor().x=0,b}},Default:{drop:function(b,d,e){var f=d().createChild($.extend({"@ControlType":"XRLabel"},c.controlsFactory.controlsMap.XRLabel.defaultVal)),g=f.dataBindings().findBinding("Text");return-1===e.indexOf("parameters.")?g.dataMember(new a.JS.Widgets.PathRequest(e).path):(g.dataMember(b.name),g.parameter(b)),f},size:function(){return b.Size.fromString("100, 23")}}};var f=function(a){function d(d,e,f,g,h){var i=this;a.call(this,d,e,f,g,h),this.cursor="arrow",this.containment=".dxrd-designer",this.cursorAt={top:0,left:0},this.helper=function(d){a.prototype.helper.call(i,d);var e=d.data.isList?"List":d.data.specifics,f=(c.memberControlsMap[e]||c.memberControlsMap.Default).size(i.surface());i.recalculateSize(f),h.setContent(new b.Rectangle(0,0,i._size.width(),i._size.height()))}}return __extends(d,a),d.prototype.doStopDrag=function(a,b){if(this.selection.dropTarget){var d=this._getAbsoluteSurfacePosition(a);this.selection.dropTarget.underCursor().x=d.left-this.selection.dropTarget.absolutePosition.x(),this.selection.dropTarget.underCursor().y=d.top-this.selection.dropTarget.absolutePosition.y();var e=b;if(this.surface().isFit(this.selection.dropTarget)){var f=b.data.isList?"List":b.data.specifics,g=c.memberControlsMap[f]&&c.memberControlsMap[f].adjustDropTarget&&c.memberControlsMap[f].adjustDropTarget(this.selection.dropTarget)||this.selection.dropTarget;if(g=g.getControlModel().getMetaData().isContainer?g:g.parent,!g.canDrop())return;var h=(c.memberControlsMap[f]||c.memberControlsMap.Default).drop(e.data,function(){return g.getControlModel()},e.path,e.getItems);this.addControl(h,g,this._size)}}},d}(b.DragDropHandler);c.FieldListDragDropHandler=f;var g=function(a){function d(c,d,e,f){var g=this;a.call(this,c,d,e,null,f),this.cursor="arrow",this.alwaysAlt=!0,this.containment=".dxrd-designer",this.cursorAt={top:0,left:0},this.helper=function(a){var c=new b.Rectangle(0,0,24,24);a.data&&"stylemodel"===a.data.specifics?c.className="dxrd-image-ghost-stylemodel":a.data&&"formattingrule"===a.data.specifics&&(c.className="dxrd-image-ghost-formattingrule"),f.setContent(c),g._size.width(24),g._size.height(24)}}return __extends(d,a),d.prototype.drag=function(){this.selection.dropTarget&&this.dragHelperContent.isLocked(this.selection.dropTarget.locked)},d.prototype.doStopDrag=function(a,b){if(this.selection.dropTarget&&!this.selection.dropTarget.locked){var d=this._getAbsoluteSurfacePosition(a);this.selection.dropTarget.underCursor().x=d.left-this.selection.dropTarget.absolutePosition.x(),this.selection.dropTarget.underCursor().y=d.top-this.selection.dropTarget.absolutePosition.y(),b.data&&"stylemodel"===b.data.specifics?this.selection.dropTarget.getControlModel().styleName&&this.selection.dropTarget.getControlModel().styleName(b.data.displayName):b.data&&"formattingrule"===b.data.specifics&&this.selection.dropTarget.getControlModel().formattingRuleLinks&&this.selection.dropTarget.getControlModel().formattingRuleLinks.push(c.FormattingRuleLink.createNew(b.data.data))}},d}(b.DragDropHandler);c.ReportExplorerDragDropHandler=g}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,d,e){var f=this;a.call(this,b,0,e),this._viewModel=ko.observable(),this.viewmodel={items:ko.pureComputed(function(){return f._viewModel()&&f._viewModel().viewType?"Circular"===f._viewModel().viewType()?c.circularValues:c.linearValues:[]})}}return __extends(b,a),b.prototype.update=function(b){a.prototype.update.call(this,b),this._viewModel(b)},b}(a.JS.Widgets.Editor);c.GaugeStyleEditor=d;var e=function(a){function c(c,d,e){var f=this;a.call(this,c,d,e),this.itemsProvider=new b.ObjectExplorerProvider([{model:ko.pureComputed(function(){return f._model()&&f._model().root}),displayName:"Report",className:"master_report"}],["bands","controls","rows","cells","subBands"],this.value),this.displayExpr=ko.pureComputed(function(){var a=ko.unwrap(f.value);return a&&ko.unwrap(a.displayName||a.name)}),this.treeListController=new b.ObjectExplorerTreeListController(this.value,["bands","controls","rows","cells","Report"]),this.treeListController.canSelect=function(a){return!a.hasItems}}return __extends(c,a),c}(a.JS.Widgets.Editor);c.ExplorerEditor=e;var f=function(a){function b(b,d,e){var f=this;a.call(this,b,d,e),this.path=ko.observable(null),ko.computed(function(){if(f._model()&&f._model()instanceof c.BandViewModel){var a=f._model().parentModel().bands(),b=a[a.indexOf(f._model())-1];!b||"GroupHeaderBand"!==b.controlType&&"DetailBand"!==b.controlType?(f.itemsProvider.selectedPath(null),f.path(""),f._setDisabled(!0)):(f._setDisabled(!1),f.itemsProvider.selectedPath(null),f.path(c.ReportExplorerModel.getPathByMember(b)))}})}return __extends(b,a),b.prototype._setDisabled=function(a){var b=this.info();b.disabled?ko.isObservable(b.disabled)?b.disabled(a):b.disabled=a:b.disabled=ko.observable(a)},b}(e);c.DrillDownEditor=f;var g=function(d){function e(e,f,g){d.call(this,e,f,g);var h=ko.observable(new b.Widgets.PaddingModel({value:this.value})),i=new a.JS.Widgets.ObjectProperties(h,{editors:c.paddingSerializationsInfo},f+1,this.disabled);this.viewmodel=i}return __extends(e,d),e}(a.JS.Widgets.Editor);c.PaddingEditor=g;var h=function(b){function d(d,e,f){b.call(this,d,e,f);var g=new a.JS.Widgets.ObjectProperties(this.value,{editors:c.paddingSerializationsInfo},e+1,this.disabled);this.viewmodel=g}return __extends(d,b),d}(a.JS.Widgets.Editor);c.MarginsEditor=h;var i=function(b){function d(d,e,f){var g=this;b.call(this,d,e,f);var h=ko.pureComputed(function(){var a={};a.isPropertyModified=function(b){return!a[b].isEmpty()},a.actions=[{action:function(b){a[b].resetValue()},title:"Reset",visible:function(){return!0}}];var b=g.value()();return(b||[]).map(function(b){a[b.propertyName()]=b}),a}),i=new a.JS.Widgets.ObjectProperties(h,{editors:c.dataBindingsSerializationInfo},e+1,this.disabled);this.viewmodel=i}return __extends(d,b),d}(a.JS.Widgets.Editor);c.DataBindingsEditor=i;var j=function(c){function d(d,e,f){var g=this;c.call(this,d,e,f),this.viewmodel=function(c){return new a.JS.Widgets.ObjectProperties(ko.observable(c),{editors:b.Pivot.pivotGridFieldSerializationsInfo},e+1,g.disabled)}}return __extends(d,c),d}(a.JS.Widgets.Editor);c.FieldTemplateItem=j;var k=function(b){function d(d,e,f){var g=this;b.call(this,d,e,f);var h=ko.pureComputed(function(){var a=g._model()&&g._model().root&&g._model().root.formattingRuleSheet||ko.observableArray();return a().forEach(function(a){a.selected=ko.pureComputed({read:function(){return g.value()().filter(function(b){return b.value()===a}).length>0},write:function(b){if(b)g.value().push(c.FormattingRuleLink.createNew(a));else{var d=g.value()().filter(function(b){return b.value()===a})[0];g.value().remove(d)}}})}),a});this.options={addHandler:function(){return a.Designer.Report.FormattingRule.createNew(g._model().root)},values:h,displayName:this.displayName,level:this.level,info:this.info}}return __extends(d,b),d}(a.JS.Widgets.Editor);c.FormattingRuleEditor=k}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function c(b,c,d){var e=this;this.className=function(){return"formattingrule"},this.selected=ko.observable(!1),d=d||new a.JS.Utils.ModelSerializer,d.deserialize(this,b),this.parent=c||null,this.conditionObj=ko.observable({value:this.condition,path:ko.pureComputed(function(){return e.dataSource()&&e.dataMember()?e.getPath("")+(e.dataMember()?"."+e.dataMember():""):c.getPath("dataMember")+(c.dataMember()?"."+c.dataMember():"")})})}return c.createNew=function(a){return new c({},a)},c.prototype.getInfo=function(){return b.formattingRuleSerializationsInfo},c.prototype.getPath=function(){return this.parent&&this.parent.dsHelperProvider()&&this.parent.dsHelperProvider().getDataSourcePath(this.dataSource())},c}();b.FormattingRule=c;var d=function(){function c(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return c.createNew=function(a){var b=new c({});return b.value=ko.observable(a),b},c.prototype.getInfo=function(){return b.formattingRuleLinkSerializationsInfo},c}();b.FormattingRuleLink=d,b.formattingRuleLinkSerializationsInfo=[{propertyName:"value",modelName:"@Value",link:!0}]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.editorTemplates={dataSource:{header:"dxrd-datasource"},chartDataSource:{header:"dxrd-chartdatasource"},padding:{header:"dxrd-emptyHeader",content:"dxrd-objectEditorContent",editorType:c.PaddingEditor},margins:{header:"dxrd-emptyHeader",content:"dxrd-objectEditorContent",editorType:c.MarginsEditor},dataBindings:{header:"dxrd-dataBindings",content:"dxrd-dataBindingsContent",editorType:c.DataBindingsEditor},dataBinding:{header:"dxrd-dataBinding",content:"dxrd-dataBindingContent",editorType:b.Widgets.FieldListEditor},reportExplorer:{header:"dxrd-reportexplorer-editor",editorType:c.ExplorerEditor},reportSourceUrl:{header:"dxrd-reportSourceUrl"},bands:{header:"dxrd-bands"},style:{header:"dxrd-style",content:"dxrd-styleContent"},stylePriority:{header:"dxrd-stylePriority"},shape:{header:"dxrd-shapeHeader",content:"dxrd-shapeContent"},symbology:{header:"dxrd-symbologyHeader",content:"dxrd-symbology"},sparkline:{header:"dxrd-sparklineHeader",content:"dxrd-sparkline"},lookUpValues:{custom:"dxrd-lookUpValues"},drillDownControls:{header:"dxrd-drilldown-controls",editorType:c.DrillDownEditor},viewStyle:{header:"dxrd-viewStyle",editorType:c.GaugeStyleEditor},pivotGridFields:{custom:"dxrd-pivotGridFields",editorType:c.FieldTemplateItem},scriptsBox:{header:"dxrd-scriptsbox"},formattingRule:{custom:"dxrd-formattingRuleCollection",editorType:c.FormattingRuleEditor},calculatedFields:{custom:"dxrd-calculatedFields"}},c.textAlignmentValues={TopLeft:"Top Left",MiddleLeft:"Middle Left",BottomLeft:"Bottom Left",TopCenter:"Top Center",MiddleCenter:"Middle Center",BottomCenter:"Bottom Center",TopJustify:"Top Justify",MiddleJustify:"Middle Justify",BottomJustify:"Bottom Justify",TopRight:"Top Right",MiddleRight:"Middle Right",BottomRight:"Bottom Right"},c.lineStyleValues={Solid:"Solid",Dash:"Dash",Dot:"Dot",DashDot:"Dash-Dot",DashDotDot:"Dash-Dot-Dot"},c.stylePrioritySerializationInfo=[{propertyName:"useBackColor",modelName:"@UseBackColor",defaultVal:!0,from:b.parseBool},{propertyName:"useBorderColor",modelName:"@UseBorderColor",defaultVal:!0,from:b.parseBool},{propertyName:"useBorderDashStyle",modelName:"@UseBorderDashStyle",defaultVal:!0,from:b.parseBool},{propertyName:"useBorders",modelName:"@UseBorders",defaultVal:!0,from:b.parseBool},{propertyName:"useBorderWidth",modelName:"@UseBorderWidth",defaultVal:!0,from:b.parseBool},{propertyName:"useFont",modelName:"@UseFont",defaultVal:!0,from:b.parseBool},{propertyName:"useForeColor",modelName:"@UseForeColor",defaultVal:!0,from:b.parseBool},{propertyName:"usePadding",modelName:"@UsePadding",defaultVal:!0,from:b.parseBool},{propertyName:"useTextAlignment",modelName:"@UseTextAlignment",defaultVal:!0,from:b.parseBool}],c.left={propertyName:"left",modelName:"@Left",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Left",displayName:"Left",editor:a.JS.Widgets.editorTemplates.numeric},c.right={propertyName:"right",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Right",modelName:"@Right",displayName:"Right",editor:a.JS.Widgets.editorTemplates.numeric},c.top={propertyName:"top",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Top",modelName:"@Top",displayName:"Top",editor:a.JS.Widgets.editorTemplates.numeric},c.bottom={propertyName:"bottom",localizationId:"DevExpress.XtraPrinting.PaddingInfo.Bottom",modelName:"@Bottom",displayName:"Bottom",editor:a.JS.Widgets.editorTemplates.numeric},c.paddingSerializationsInfo=[c.left,c.right,c.top,c.bottom],c.xlsxFormatString={propertyName:"xlsxFormatString",modelName:"@XlsxFormatString",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text,displayName:"Xlsx Format String"},c.name={propertyName:"name",modelName:"@Name",displayName:"Name",editor:a.JS.Widgets.editorTemplates.text,validationRules:b.nameValidationRules},c.text={propertyName:"text",modelName:"@Text",defaultVal:"",displayName:"Text",editor:a.JS.Widgets.editorTemplates.text},c.size={propertyName:"size",modelName:"@SizeF",from:b.Size.fromString,displayName:"Size",editor:a.JS.Widgets.editorTemplates.objecteditor},c.location={propertyName:"location",modelName:"@LocationFloat",from:b.Point.fromString,displayName:"Location",editor:a.JS.Widgets.editorTemplates.objecteditor},c.lockedInUserDesigner={propertyName:"_lockedInUserDesigner",modelName:"@LockedInUserDesigner",defaultVal:!1,from:b.parseBool},c.visible={propertyName:"visible",modelName:"@Visible",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Visible"},c.defaultBooleanVisible={propertyName:"visible",modelName:"@Visible",displayName:"Visible",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{True:"True",False:"False",Default:"Default"}},c.backColor={propertyName:"backColor",modelName:"@BackColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Background Color",editor:b.Widgets.editorTemplates.customColorEditor},c.foreColor={propertyName:"foreColor",modelName:"@ForeColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Foreground Color",editor:b.Widgets.editorTemplates.customColorEditor},c.font={propertyName:"font",modelName:"@Font",displayName:"Font",editor:a.JS.Widgets.editorTemplates.font},c.borderColor={propertyName:"borderColor",modelName:"@BorderColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Border Color",editor:b.Widgets.editorTemplates.customColorEditor},c.borders={propertyName:"borders",modelName:"@Borders",displayName:"Borders",editor:b.Widgets.editorTemplates.borders},c.borderWidth={propertyName:"borderWidth",modelName:"@BorderWidth",displayName:"Border Width",from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric},c.borderDashStyle={propertyName:"borderDashStyle",modelName:"@BorderDashStyle",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Border Dash Style",values:{Solid:"Solid",Dash:"Dash",Dot:"Dot",DashDot:"Dash-Dot",DashDotDot:"Dash-Dot-Dot",Double:"Double"}},c.padding={propertyName:"padding",modelName:"@Padding",displayName:"Padding",editor:c.editorTemplates.padding},c.textAlignment={propertyName:"textAlignment",modelName:"@TextAlignment",displayName:"Text Alignment",editor:a.JS.Widgets.editorTemplates.combobox,values:c.textAlignmentValues},c.anchorVertical={propertyName:"anchorVertical",modelName:"@AnchorVertical",displayName:"Anchor Vertically",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Top:"Top",Bottom:"Bottom",Both:"Both"}},c.anchorHorizontal={propertyName:"anchorHorizontal",modelName:"@AnchorHorizontal",displayName:"Anchor Horizontally",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Left:"Left",Right:"Right",Both:"Both"}},c.angle={propertyName:"angle",modelName:"@Angle",defaultVal:0,from:b.floatFromModel,displayName:"Angle",editor:a.JS.Widgets.editorTemplates.numeric},c.canGrow={propertyName:"canGrow",modelName:"@CanGrow",defaultVal:!0,from:b.parseBool,displayName:"Can Grow",editor:a.JS.Widgets.editorTemplates.bool},c.canShrink={propertyName:"canShrink",modelName:"@CanShrink",defaultVal:!1,from:b.parseBool,displayName:"Can Shrink",editor:a.JS.Widgets.editorTemplates.bool},c.multiline={propertyName:"multiline",modelName:"@Multiline",defaultVal:!1,from:b.parseBool,displayName:"Multiline",editor:a.JS.Widgets.editorTemplates.bool},c.wordWrap={propertyName:"wordWrap",modelName:"@WordWrap",defaultVal:!0,from:b.parseBool,displayName:"Word Wrap",editor:a.JS.Widgets.editorTemplates.bool},c.autoWidth={propertyName:"autoWidth",modelName:"@AutoWidth",defaultVal:!1,from:b.parseBool,displayName:"Auto Width",editor:a.JS.Widgets.editorTemplates.bool},c.keepTogether={propertyName:"keepTogether",modelName:"@KeepTogether",defaultVal:!0,from:b.parseBool,displayName:"Keep Together",editor:a.JS.Widgets.editorTemplates.bool},c.processDuplicatesTarget={propertyName:"processDuplicatesTarget",modelName:"@ProcessDuplicatesTarget",displayName:"Process Duplicates Target",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Value",from:b.fromEnum,values:{Value:"Value",Tag:"Tag"}},c.processDuplicatesMode={propertyName:"processDuplicatesMode",modelName:"@ProcessDuplicatesMode",displayName:"Process Duplicates Mode",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Leave",
from:b.fromEnum,values:{Leave:"Leave",Merge:"Merge",Suppress:"Suppress",SuppressAndShrink:"Suppress and Shrink"}},c.processNullValues={propertyName:"processNullValues",modelName:"@ProcessNullValues",displayName:"Process Null Values",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Leave",from:b.fromEnum,values:{Leave:"Leave",Suppress:"Suppress",SuppressAndShrink:"Suppress and Shrink"}},c.reportPrintOptionsSerializationInfo=[{propertyName:"printOnEmptyDataSource",defaultVal:!0,from:b.parseBool,modelName:"@PrintOnEmptyDataSource",displayName:"Print when Data Source is Empty",editor:a.JS.Widgets.editorTemplates.bool},{propertyName:"detailCountAtDesignTime",defaultVal:0,from:b.floatFromModel,modelName:"@DetailCountAtDesignTime",displayName:"Detail Count at Design Time",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"detailCountOnEmptyDataSource",defaultVal:1,from:b.floatFromModel,modelName:"@DetailCountOnEmptyDataSource",displayName:"Detail Count when Data Source is Empty",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"blankDetailCount",defaultVal:0,from:b.floatFromModel,modelName:"@BlankDetailCount",displayName:"Blank Detail Count",editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"detailCount",defaultVal:0,from:b.floatFromModel,modelName:"@DetailCount",displayName:"Detail Count",editor:a.JS.Widgets.editorTemplates.numeric}],c.dataAdapter={propertyName:"dataAdapter",modelName:"@DataAdapter",link:!0,editor:null},c.dataSource={propertyName:"dataSource",modelName:"@DataSource",displayName:"Data Source",link:!0,editor:c.editorTemplates.dataSource},c.dataMember={propertyName:"dataMember",modelName:"@DataMember",displayName:"Data Member",defaultVal:"",editor:b.Widgets.editorTemplates.dataMember},c.dataBindings=function(a){return{propertyName:"dataBindings",modelName:"DataBindings",array:!0,info:c.dataBindingSerializationInfo,displayName:"Data Bindings",editor:c.editorTemplates.dataBindings,allDataBindings:a,from:c.DataBinding.initialize}},c.defaultDataBinding=function(a){return{propertyName:"defaultDataBinding",displayName:"Data Binding",editor:c.editorTemplates.dataBinding,bindingName:a}},c.filterString={propertyName:"_filterString",modelName:"@FilterString"},c.filterStringEditable={propertyName:"filterString",displayName:"Filter String",defaultVal:"",editor:b.Widgets.editorTemplates.filterEditor},c.bookmark={propertyName:"bookmark",modelName:"@Bookmark",displayName:"Bookmark",editor:a.JS.Widgets.editorTemplates.text},c.bookmarkParent={propertyName:"bookmarkParent",modelName:"@BookmarkParent",link:!0,displayName:"Parent Bookmark",defaultVal:null,editor:c.editorTemplates.reportExplorer},c.navigateUrl={propertyName:"navigateUrl",modelName:"@NavigateUrl",displayName:"Navigation URL",defaultVal:"(none)",editor:a.JS.Widgets.editorTemplates.text},c.target={propertyName:"target",modelName:"@Target",displayName:"Navigation Target",editor:a.JS.Widgets.editorTemplates.text,defaultVal:"(none)"},c.nullValueText={propertyName:"nullValueText",modelName:"@NullValueText",displayName:"Null Value Text",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.styleName={propertyName:"styleName",modelName:"@StyleName",editor:c.editorTemplates.style,displayName:"Style",defaultVal:null},c.evenStyleName={propertyName:"evenStyleName",modelName:"@EvenStyleName",editor:c.editorTemplates.style,displayName:"Even Style",defaultVal:null},c.oddStyleName={propertyName:"oddStyleName",modelName:"@OddStyleName",editor:c.editorTemplates.style,displayName:"Odd Style",defaultVal:null},c.stylePriority={propertyName:"stylePriority",modelName:"StylePriority",info:c.stylePrioritySerializationInfo},c.summarySerializationInfo=[{propertyName:"ignoreNullValues",modelName:"@IgnoreNullValues",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Ignore Null Values"},{propertyName:"formatString",modelName:"@FormatString",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text,displayName:"Format String"},{propertyName:"Running",modelName:"@Running",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Running",values:{Group:"Group",Report:"Report",Page:"Page"}},{propertyName:"Func",modelName:"@Func",defaultVal:"Sum",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Func",values:{Avg:"Avg",Count:"Count",Sum:"Sum",RunningSum:"RunningSum",Percentage:"Percentage",Max:"Max",Min:"Min",Median:"Median","export var":"export var","export varP":"export varP",StdDev:"StdDev",StdDevP:"StdDevP",DAvg:"DAvg",DCount:"DCount",DSum:"DSum","Dexport var":"Dexport var","Dexport varP":"Dexport varP",DStdDev:"DStdDev",DStdDevP:"DStdDevP",RecordNumber:"RecordNumber",Custom:"Custom"}}],c.summary={propertyName:"Summary",modelName:"Summary",info:c.summarySerializationInfo,editor:a.JS.Widgets.editorTemplates.objecteditor,displayName:"Summary"},c.reportPrintOptions={propertyName:"reportPrintOptions",modelName:"ReportPrintOptions",info:c.reportPrintOptionsSerializationInfo,editor:a.JS.Widgets.editorTemplates.objecteditor,displayName:"Report Print Options"},c.afterPrint={propertyName:"onAfterPrint",modelName:"@OnAfterPrint",displayName:"After Print",editor:c.editorTemplates.scriptsBox},c.beforePrint={propertyName:"onBeforePrint",modelName:"@OnBeforePrint",displayName:"Before Print",editor:c.editorTemplates.scriptsBox},c.sizeChanged={propertyName:"onSizeChanged",modelName:"@OnSizeChanged",displayName:"Size Changed",editor:c.editorTemplates.scriptsBox},c.truncatedControlEventsSerializationInfo=[c.afterPrint,c.beforePrint,{propertyName:"onLocationChanged",modelName:"@OnLocationChanged",displayName:"Location Changed",editor:c.editorTemplates.scriptsBox},{propertyName:"onParentChanged",modelName:"@OnParentChanged",displayName:"Parent Changed",editor:c.editorTemplates.scriptsBox}],c.truncatedControlScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:c.truncatedControlEventsSerializationInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};var d=c.truncatedControlEventsSerializationInfo.concat([c.sizeChanged,{propertyName:"onDraw",modelName:"@OnDraw",displayName:"Draw",editor:c.editorTemplates.scriptsBox},{propertyName:"onEvaluateBinding",modelName:"@OnEvaluateBinding",displayName:"Evaluate Binding",editor:c.editorTemplates.scriptsBox},{propertyName:"onPrintOnPage",modelName:"@OnPrintOnPage",displayName:"Print on Page",editor:c.editorTemplates.scriptsBox}]);c.commonScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:d,editor:a.JS.Widgets.editorTemplates.objecteditor};var e=d.concat([{propertyName:"onHtmlItemCreated",modelName:"@OnHtmlItemCreated",displayName:"Html Item Created",editor:c.editorTemplates.scriptsBox}]);c.controlScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:e,editor:a.JS.Widgets.editorTemplates.objecteditor};var f=e.concat([{propertyName:"onTextChanged",modelName:"@OnTextChanged",displayName:"Text Changed",editor:c.editorTemplates.scriptsBox}]);c.textControlScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:f,editor:a.JS.Widgets.editorTemplates.objecteditor};var g=f.concat([{propertyName:"onSummaryCalculated",modelName:"@OnSummaryCalculated",displayName:"Summary Calculated",editor:c.editorTemplates.scriptsBox},{propertyName:"onSummaryGetResult",modelName:"@OnSummaryGetResult",displayName:"Summary Get Result",editor:c.editorTemplates.scriptsBox},{propertyName:"onSummaryReset",modelName:"@OnSummaryReset",displayName:"Summary Reset",editor:c.editorTemplates.scriptsBox},{propertyName:"onSummaryRowChanged",modelName:"@OnSummaryRowChanged",displayName:"Summary Row Changed",editor:c.editorTemplates.scriptsBox}]);c.labelScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:g,editor:a.JS.Widgets.editorTemplates.objecteditor};var h=[{propertyName:"onCustomDrawSeries",modelName:"@OnCustomDrawSeries",displayName:"Custom Draw a Series",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomDrawSeriesPoint",modelName:"@OnCustomDrawSeriesPoint",displayName:"Custom Draw a Series Point",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomDrawCrosshair",modelName:"@OnCustomDrawCrosshair",displayName:"Custom Draw Crosshair",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomDrawAxisLabel",modelName:"@OnCustomDrawAxisLabel",displayName:"Custom Draw an Axis Label",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomPaint",modelName:"@OnCustomPaint",displayName:"Custom Paint",editor:c.editorTemplates.scriptsBox},{propertyName:"onBoundDataChanged",modelName:"@OnBoundDataChanged",displayName:"Bound Data Changed",editor:c.editorTemplates.scriptsBox},{propertyName:"onPieSeriesPointExploded",modelName:"@OnPieSeriesPointExploded",displayName:"Pie Series Point Exploded",editor:c.editorTemplates.scriptsBox},{propertyName:"onAxisScaleChanged",modelName:"@OnAxisScaleChanged",displayName:"Axis Scale Changed",editor:c.editorTemplates.scriptsBox},{propertyName:"onAxisWholeRangeChanged",modelName:"@OnAxisWholeRangeChanged",displayName:"Axis Whole Range Changed",editor:c.editorTemplates.scriptsBox},{propertyName:"onAxisVisualRangeChanged",modelName:"@OnAxisVisualRangeChanged",displayName:"Axis Visual Range Changed",editor:c.editorTemplates.scriptsBox}],i=e.concat(h);c.chartScripts={propertyName:"scripts",modelName:"Scripts",info:i,displayName:"Scripts",editor:a.JS.Widgets.editorTemplates.objecteditor};var j=[{propertyName:"onCustomCellDisplayText",modelName:"@OnCustomCellDisplayText",displayName:"Custom Cell Display Text",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomCellValue",modelName:"@OnCustomCellValue",displayName:"Custom Cell Value",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomColumnWidth",modelName:"@OnCustomColumnWidth",displayName:"Custom Column Width",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomFieldSort",modelName:"@OnCustomFieldSort",displayName:"Custom Field Sort",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomFieldValueCells",modelName:"@OnCustomFieldValueCells",displayName:"Custom Field Value Cells",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomGroupInterval",modelName:"@OnCustomGroupInterval",displayName:"Custom Group Interval",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomRowHeight",modelName:"@OnCustomRowHeight",displayName:"Custom Row Height",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomSummary",modelName:"@OnCustomSummary",displayName:"Custom Summary",editor:c.editorTemplates.scriptsBox},{propertyName:"onCustomUnboundFieldData",modelName:"@OnCustomUnboundFieldData",displayName:"Custom Unbound Field Data",editor:c.editorTemplates.scriptsBox},{propertyName:"onFieldValueDisplayText",modelName:"@OnFieldValueDisplayText",displayName:"Field Value Display Text",editor:c.editorTemplates.scriptsBox},{propertyName:"onPrefilterCriteriaChanged",modelName:"@OnPrefilterCriteriaChanged",displayName:"Prefilter Criteria Changed",editor:c.editorTemplates.scriptsBox},{propertyName:"onPrintCell",modelName:"@OnPrintCell",displayName:"Print Cell",editor:c.editorTemplates.scriptsBox},{propertyName:"onPrintFieldValue",modelName:"@OnPrintFieldValue",displayName:"Print Field Value",editor:c.editorTemplates.scriptsBox},{propertyName:"onPrintHeader",modelName:"@OnPrintHeader",displayName:"Print Header",editor:c.editorTemplates.scriptsBox}],k=c.truncatedControlEventsSerializationInfo.concat([c.sizeChanged],j);c.pivotScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:k,editor:a.JS.Widgets.editorTemplates.objecteditor},c.subreportScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:c.truncatedControlEventsSerializationInfo.concat(c.sizeChanged),editor:a.JS.Widgets.editorTemplates.objecteditor};var l=[c.afterPrint,c.beforePrint];c.commonBandScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:l,editor:a.JS.Widgets.editorTemplates.objecteditor};var m={propertyName:"onBandLevelChanged",modelName:"@OnBandLevelChanged",displayName:"Band Level Changed",editor:c.editorTemplates.scriptsBox},n=l.concat([m]);c.groupBandScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:n,editor:a.JS.Widgets.editorTemplates.objecteditor};var o={propertyName:"onSortingSummaryGetResult",modelName:"@OnSortingSummaryGetResult",displayName:"Sorting Summary Get Result",editor:c.editorTemplates.scriptsBox},p={propertyName:"onSortingSummaryReset",modelName:"@OnSortingSummaryReset",displayName:"Sorting Summary Reset",editor:c.editorTemplates.scriptsBox},q={propertyName:"onSortingSummaryRowChanged",modelName:"@OnSortingSummaryRowChanged",displayName:"Sorting Summary RowChanged",editor:c.editorTemplates.scriptsBox},r=n.concat([o,p,q]);c.groupHeaderBandScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:r,editor:a.JS.Widgets.editorTemplates.objecteditor};var s={propertyName:"onBandHeightChanged",modelName:"@OnBandHeightChanged",displayName:"Band's Height Changed",editor:c.editorTemplates.scriptsBox},t={propertyName:"onDataSourceRowChanged",modelName:"@OnDataSourceRowChanged",displayName:"Data Source's Row Changed",editor:c.editorTemplates.scriptsBox},u={propertyName:"onDataSourceDemanded",modelName:"@OnDataSourceDemanded",displayName:"Data Source Demanded",editor:c.editorTemplates.scriptsBox},v=l.concat([s,t,u]);c.detailReportBandScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:v,editor:a.JS.Widgets.editorTemplates.objecteditor};var w={propertyName:"onFillEmptySpace",modelName:"@OnFillEmptySpace",displayName:"Fill Empty Space",editor:c.editorTemplates.scriptsBox},x={propertyName:"onPrintProgress",modelName:"@OnPrintProgress",displayName:"Print Progress",editor:c.editorTemplates.scriptsBox},y={propertyName:"onParametersRequestBeforeShow",modelName:"@OnParametersRequestBeforeShow",displayName:"Parameters Request Before Show",editor:c.editorTemplates.scriptsBox},z={propertyName:"onParametersRequestValueChanged",modelName:"@OnParametersRequestValueChanged",displayName:"Parameters Changed",editor:c.editorTemplates.scriptsBox},A={propertyName:"onParametersRequestSubmit",modelName:"@OnParametersRequestSubmit",displayName:"Parameters Submitted",editor:c.editorTemplates.scriptsBox},B=v.concat([w,x,y,z,A]);c.reportScripts={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:B,editor:a.JS.Widgets.editorTemplates.objecteditor},c.allScripts={propertyName:"scripts",displayName:"Scripts",info:g.concat(h,j,[m,o,p,q,s,t,u,w,x,y,z,A]),editor:a.JS.Widgets.editorTemplates.objecteditor},c.lineWidth={propertyName:"lineWidth",modelName:"@LineWidth",defaultVal:1,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Line Width"},c.lineStyle={propertyName:"lineStyle",modelName:"@LineStyle",defaultVal:"Solid",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Line Style",values:c.lineStyleValues},c.dpi={propertyName:"dpi",modelName:"@Dpi",defaultVal:100,from:b.floatFromModel};var C={propertyName:"borderWidthSerializable",modelName:"@BorderWidthSerializable",displayName:"Border Width",from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric},D={propertyName:"borders",modelName:"@Sides",displayName:"Borders",editor:b.Widgets.editorTemplates.borders};c.formattingSerializationsInfo=[c.backColor,D,c.borderColor,c.borderDashStyle,C,c.foreColor,c.font,c.padding,c.textAlignment,c.defaultBooleanVisible],c.conditionObj={propertyName:"conditionObj",displayName:"Condition",editor:b.Widgets.editorTemplates.expressionEditor},c.formatting={propertyName:"formatting",modelName:"Formatting",displayName:"Formatting",info:c.formattingSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.formattingRuleSerializationsInfo=[{propertyName:"name",modelName:"@Name",displayName:"Name",editor:a.JS.Widgets.editorTemplates.text,validationRules:b.nameValidationRules},{propertyName:"condition",modelName:"@Condition",displayName:"Condition",defaultVal:""},c.conditionObj,c.dataSource,c.dataMember,c.formatting],c.formattingRuleLinks={propertyName:"formattingRuleLinks",modelName:"FormattingRuleLinks",displayName:"Formatting Rules",array:!0,editor:c.editorTemplates.formattingRule,addHandler:a.Designer.Report.FormattingRule.createNew,displayPropertyName:"name"},c.sizeLocation=[c.size,c.location],c.bordersProperties=[c.borders,c.borderWidth,c.borderDashStyle,c.borderColor],c.baseControlProperties=[c.name,c.visible,c.dpi,c.lockedInUserDesigner],c.commonBandProperties=[c.backColor,c.padding,c.formattingRuleLinks].concat(c.baseControlProperties,c.bordersProperties),c.commonControlProperties=[c.styleName,c.evenStyleName,c.oddStyleName,c.stylePriority].concat(c.commonBandProperties),c.fontGroup=[c.font,c.foreColor],c.bookmarkGroup=[c.bookmark,c.bookmarkParent],c.navigationGroup=[c.navigateUrl,c.target].concat(c.bookmarkGroup),c.datasourcePrintOptionsGroup=[c.dataSource,c.dataMember,c.dataAdapter,c.filterString,c.filterStringEditable,c.reportPrintOptions],c.processGroup=[c.processDuplicatesMode,c.processDuplicatesTarget,c.processNullValues],c.canGrowShrinkGroup=[c.canGrow,c.canShrink],c.labelGroup=[c.textAlignment,c.text,c.nullValueText,c.keepTogether,c.summary,c.multiline,c.angle,c.wordWrap,c.xlsxFormatString].concat(c.commonControlProperties,c.fontGroup,c.navigationGroup,c.canGrowShrinkGroup,c.processGroup),c.labelSerializationsInfo=[c.autoWidth,c.anchorVertical,c.anchorHorizontal,c.labelScripts,c.visible,c.dataBindings(["Text","NavigateUrl","Tag","Bookmark"]),c.defaultDataBinding("Text")].concat(c.sizeLocation,c.labelGroup),c.panelSerializationsInfo=[c.canGrow,c.keepTogether,c.anchorVertical,c.anchorHorizontal,c.controlScripts,c.dataBindings(["Bookmark","NavigateUrl","Tag"]),{propertyName:"controls",modelName:"Controls",array:!0}].concat(c.sizeLocation,c.commonControlProperties,c.navigationGroup),c.rtf={propertyName:"_rtf",defaultVal:"",displayName:"RTF",editor:a.JS.Widgets.editorTemplates.stringArray},c.textRtf={propertyName:"text",defaultVal:"",displayName:"Text",editor:a.JS.Widgets.editorTemplates.stringArray},c.serializableRtfString={propertyName:"_serializableRtfString",modelName:"@SerializableRtfString",displayName:"Load file",editor:a.JS.Widgets.editorTemplates.file},c.richTextSerializationsInfo=[c.serializableRtfString,c.rtf,c.textRtf,c.nullValueText,c.keepTogether,c.anchorVertical,c.anchorHorizontal,c.textControlScripts,c.dataBindings(["Bookmark","Html","NavigateUrl","Rtf","Tag"]),c.defaultDataBinding("Rtf")].concat(c.sizeLocation,c.fontGroup,c.commonControlProperties,c.navigationGroup,c.processGroup,c.canGrowShrinkGroup);var E=[c.backColor,c.font,c.foreColor,c.padding,{propertyName:"height",modelName:"@Height",editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Height",from:b.floatFromModel}],F=[{propertyName:"leaderSymbol",modelName:"@LeaderSymbol",editor:a.JS.Widgets.editorTemplates.text,displayName:"LeaderSymbol",from:b.floatFromModel},{propertyName:"indent",modelName:"@Indent",editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:0,displayName:"Indent",from:b.floatFromModel}].concat(E),G=[c.text,c.textAlignment].concat(E);c.tocSerializationsInfo=[c.location,{propertyName:"levelDefault",modelName:"LevelDefault",info:F},{propertyName:"levelTitle",modelName:"LevelTitle",info:G}].concat(c.commonControlProperties),c.unknownSerializationsInfo=[].concat(c.baseControlProperties,c.sizeLocation),c.dataBindingsSerializationInfo=[{propertyName:"ActualValue",editor:c.editorTemplates.dataBinding,displayName:"Actual Value"},{propertyName:"Bookmark",editor:c.editorTemplates.dataBinding,displayName:"Bookmark"},{propertyName:"CheckState",editor:c.editorTemplates.dataBinding,displayName:"Check State"},{propertyName:"Html",editor:c.editorTemplates.dataBinding,displayName:"HTML"},{propertyName:"Image",editor:c.editorTemplates.dataBinding,displayName:"Image"},{propertyName:"ImageUrl",editor:c.editorTemplates.dataBinding,displayName:"Image URL"},{propertyName:"Maximum",editor:c.editorTemplates.dataBinding,displayName:"Maximum"},{propertyName:"Minimum",editor:c.editorTemplates.dataBinding,displayName:"Minimum"},{propertyName:"NavigateUrl",editor:c.editorTemplates.dataBinding,displayName:"Navigation URL"},{propertyName:"Rtf",editor:c.editorTemplates.dataBinding,displayName:"RTF"},{propertyName:"Tag",editor:c.editorTemplates.dataBinding,displayName:"Tag"},{propertyName:"TargetValue",editor:c.editorTemplates.dataBinding,displayName:"Target Value"},{propertyName:"Text",editor:c.editorTemplates.dataBinding,displayName:"Text"}],c.popularPropertiesLabel=["text","defaultDataBinding","Summary","angle","bookmark","bookmarkParent","autoWidth","canGrow","canShrink","multiline","wordWrap"],c.popularPropertiesRichText=["defaultDataBinding","bookmark","bookmarkParent","canGrow","canShrink"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(){function a(b,c,d){this.state=a.states.complete,this.anchoring=d,this.start(b,c)}return a.prototype.start=function(b,c){var d=this;this.subscribtion&&this.subscribtion.dispose();var e=ko.observable(b());this.subscribtion=b.subscribe(function(b){d.state!==a.states.fromControls&&(d.state=a.states.inProgress,d.anchorSubscribtion(b,e,c)),e(b),d.state=a.states.complete})},a.states={inProgress:"inProgress",complete:"complete",fromControls:"fromControls"},a}();b.Anchoring=c;var d=function(b){function d(d,e,f){var g=this;b.call(this,d,e,f),this.anchorSubscribtion=function(b,c,d){if(a.checkModelReady(d.root)&&isFinite(c())&&c()){if("Both"===g.anchoring()){var e=d.size.height()+b-c();d.size.height(e>0?e:1)}if("Bottom"===g.anchoring()){var f=d.location.y()+b-c();d.location.y(f>0?f:0)}}},e.size.height.subscribe(function(){g.state===c.states.complete&&(g.state=c.states.fromControls)}),e.location.y.subscribe(function(){g.state===c.states.complete&&(g.state=c.states.fromControls)})}return __extends(d,b),d}(c);b.VerticalAcnhoring=d;var e=function(b){function c(c,d,e){var f=this;b.call(this,c,d,e),this.anchorSubscribtion=function(b,c,d){if(a.checkModelReady(d.root)&&isFinite(c())&&c()){if("Both"===f.anchoring()){var e=d.size.width()+b-c();d.size.width(e>0?e:1)}if("Right"===f.anchoring()){var g=d.location.x()+b-c();d.location.x(g>0?g:0)}}}}return __extends(c,b),c}(c);b.HorizontalAnchoring=e}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(d){function e(b,e,f){var g=this;d.call(this,b,e,f),this.initialize();var h=this;this.formattingRuleLinks=a.JS.Utils.deserializeArray(b.FormattingRuleLinks,function(a){return new c.FormattingRuleLink(a,f)}),this.getStyleProperty=function(a){return g._getStyleProperty(a,g.root)};var i=this.getInfo().filter(function(a){return a.bindingName})[0];i&&(this[i.propertyName]=this.dataBindings().findBinding(i.bindingName)),$.each(["foreColor","borderColor","borderWidth","backColor","borders","borderDashStyle","padding","textAlignment","font"],function(a,b){if(g[b]){var c=g._getStylePriorityPropertyName(b);g["_"+b]=ko.observable(g[b]()),g[b]=ko.pureComputed({read:function(){return g._getStyleProperty(b,g.root)},write:function(a){if(g._getStyleProperty(b,g.root)!==a){{b.charAt(0).toUpperCase()+b.substr(1)}g.stylePriority&&g.stylePriority[c]&&g.stylePriority[c](!1),g["_"+b](a)}}})}}),this.toggleUseStyle=function(a){var b=g._getStylePriorityPropertyName(a);g.stylePriority[b](!g.stylePriority[b]())},this.actions.push({action:this.toggleUseStyle,title:"Style Priority",visible:function(a){return g.isStyleProperty(a)}}),this.dsHelperProvider=function(){return h.root.dataSourceHelper&&h.root.dataSourceHelper()},this.lockedInUserDesigner=ko.computed({read:function(){var a=g.parentModel(),b=a&&a.lockedInUserDesigner?a.lockedInUserDesigner():!1;return g._lockedInUserDesigner()||b},write:function(a){g._lockedInUserDesigner(a)}})}return __extends(e,d),e.prototype._getStylePriorityPropertyName=function(a){return"use"+a.charAt(0).toUpperCase()+a.substr(1)},e.prototype._shouldUseStylePriority=function(a){var b=this._getStylePriorityPropertyName(a),c=this.stylePriority&&this.stylePriority[b]&&this.stylePriority[b]();return c},e.prototype._getStyle=function(a){var b=this.styleName&&this.styleName(),c=b&&a&&a.findStyle&&a.findStyle(b);return c},e.prototype._hasStyle=function(a,b){var c=this._getStyle(b);return c&&c["_"+a]?c&&c.isPropertyModified("_"+a)&&null!==c["_"+a]():c&&c.isPropertyModified(a)&&null!==c[a]()},e.prototype._getStyleProperty=function(a,b){if(this._shouldUseStylePriority(a)&&this._hasStyle(a,b))return this._getStyle(b)[a]();if(this["_"+a]&&this["_"+a]()&&this._hasModifiedValue(a))return this["_"+a]();var c=this.getPropertyDefaultValue(a);if(c)return c;var d=this.parentModel();return d?d.getStyleProperty(a):void 0},e.prototype.getControlFactory=function(){return a.Designer.Report.controlsFactory},e.prototype.isStyleProperty=function(a){var b=this;return this.stylePriority&&c.stylePrioritySerializationInfo.some(function(c){return c.propertyName==b._getStylePriorityPropertyName(a)})},e.prototype.isResettableProperty=function(a){return d.prototype.isResettableProperty.call(this,a)&&"dataBindings"!==a},e.prototype.getActionClassName=function(a){var b="";return this.isStyleProperty(a)&&(b+=this.stylePriority[this._getStylePriorityPropertyName(a)]()?" dxrd-editormenu-usestyle":""),this.isPropertyModified(a)&&(b+=" dxrd-editormenu-modified"),b},e.prototype.className=function(){return this.controlType.toLowerCase()},e.prototype.initialize=function(){this.size||(this.size=new b.Size(0,0))},e.prototype.getPath=function(){return""},e.prototype.isPropertyDisabled=function(){return this.lockedInUserDesigner()},Object.defineProperty(e.prototype,"dpi",{get:function(){return this.root!==this?this.root.dpi:this._innerDpi},set:function(a){this._innerDpi=a},enumerable:!0,configurable:!0}),e}(b.ElementViewModel);c.ReportElementViewModel=d}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function d(c,d,e){var f=this;b.call(this,c,d,e),this.controls=a.JS.Utils.deserializeArray(c.Controls,function(a){return f.createControl(a,e)}),(this.anchorVertical||this.anchorHorizontal)&&(this.anchoring(d),this._disposables.push(this.parentModel.subscribe(function(a){f.vertAnchoring&&f.horAnchoring&&a?(f.vertAnchoring.start(a.size.height,f),f.horAnchoring.start(a.size.width,f)):f.anchoring(a)}))),this.hasBindings=ko.pureComputed(function(){var a=f.dataBindings&&f.dataBindings();return!!a&&a.filter(function(a){return!a.isEmpty()}).length>0})}return __extends(d,b),d.prototype.anchoring=function(a){a&&(this.vertAnchoring=new c.VerticalAcnhoring(a.size.height,this,this.anchorVertical),this.horAnchoring=new c.HorizontalAnchoring(a.size.width,this,this.anchorHorizontal))},d}(c.ReportElementViewModel);c.ControlViewModel=d;var e=function(a){function d(c,d,e){var f=this;a.call(this,c,d,e),this.delta=.5,this.template="dxrd-control",this.selectiontemplate="dxrd-control-selection",this.contenttemplate="dxrd-control-content",this.isSnapTarget=!0,this.displayNameParameters=ko.pureComputed(function(){var a=f.getControlModel(),c={text:null,dataSource:null,dataMember:null,dataMemberOffset:null};if(a.controls&&0!==a.controls().length)c.text="";else if(a.dataBindings&&a.dataBindings()){var d=b.getFirstItemByPropertyValue(a.dataBindings(),"propertyName","Text");if(d&&d.dataMember()){var e=d.dataMember(),g=d.dataSource(),h=a.root.dataMember&&a.root.dataMember()||"",i=a.root.dataSource&&a.root.dataSource()||null;g&&g!==i||0!==e.indexOf(h)||"."!==e.charAt(h.length)?(c.dataMemberOffset="",c.dataMember=d.dataMember()):(c.dataMemberOffset=h,c.dataMember=e.substr(h.length+1)),c.dataSource=g||i}else c.text=a.text&&a.text()?a.text():""}else c.text=a.text&&a.text()?a.text():"";return c}),this.displayName=ko.pureComputed(function(){var a=f.displayNameParameters();return a.dataMember?"["+a.dataMember+"]":a.text||""}),this.contentSizes=ko.pureComputed(function(){var a={top:1,left:1,right:1,bottom:1,width:1,height:1},b=c.borders&&c.borders()||"",d=c.borderWidth&&Math.floor(c.borderWidth()*f._context.zoom())||1;return["Left","Top","Right","Bottom"].forEach(function(c){(-1!==b.indexOf(c)||-1!==b.indexOf("All"))&&(a[c.toLowerCase()]=d)}),a.width=f.rect().width-a.left-a.right,a.height=f.rect().height-a.top-a.bottom,a}),this.borderCss=ko.pureComputed(function(){return f.cssCalculator.borderCss(f._context.zoom())}),this.isIntersect=ko.pureComputed(function(){var a=f.isThereIntersectionWithMargin();return a||(a=f.isThereIntersectionWithCrossBandControls(),a||(a=f.isThereIntersectionWithControls())),a}),this.adorntemplate=ko.pureComputed(function(){return f.getAdornTemplate()})}return __extends(d,a),d.prototype.checkParent=function(a){var b=this.parent instanceof c.BandSurface||this.parent instanceof c.ReportSurface?null:this.parent,d=a instanceof c.BandSurface||this.parent instanceof c.ReportSurface?null:a;return b===d},d.prototype.select=function(a,b){a.clickHandler(this,b.jQueryEvent)},d.prototype.isThereIntersection=function(a,b){var c=a.right||a.left+a.width,d=b.right||b.left+b.width,e=a.bottom||a.top+a.height,f=b.bottom||b.top+b.height;return c>b.left&&Math.abs(c-b.left)>this.delta&&d>a.left&&Math.abs(d-a.left)>this.delta&&e>b.top&&Math.abs(e-b.top)>this.delta&&f>a.top&&Math.abs(f-a.top)>this.delta},d.prototype.isThereIntersectionWithMargin=function(){var a=this.getRoot(),b=a.pageWidth()-a.margins.left()-a.margins.right(),c=this.rect().right;return c>b&&Math.abs(c-b)>this.delta},d.prototype.isThereIntersectionWithCollectionControl=function(a,b,c){var d=this;void 0===c&&(c="rect");var e=!1;return $.each(b||[],function(b,f){return d!==f&&d.isThereIntersection(a,f[c]())&&(e=!0),!e}),e},d.prototype.isThereIntersectionWithCrossBandControls=function(a){var b=this;void 0===a&&(a=this.absoluteRect());var c=!1,d=this.getRoot().crossBandControls();if(this.isThereIntersectionWithCollectionControl(a,d.filter(function(a){return"XRCrossBandLine"===a.getControlModel().controlType})))return!0;var e=d.filter(function(a){return"XRCrossBandBox"===a.getControlModel().controlType});return $.each(e||[],function(d,e){return $.each(e._getCrossBandBoxSides()||[],function(d,f){return b!==e&&b.isThereIntersection(a,f)&&(c=!0),!c}),!c}),c},d.prototype.isThereIntersectionWithControls=function(){return this.isThereIntersectionWithCollectionControl(this.rect(),this.parent&&this.parent.getChildrenCollection()().filter(function(a){return!a.isIntersectionDeny}))},d.prototype.getAdornTemplate=function(){return this.isIntersect()?"dxrd-intersect":""},Object.defineProperty(d.prototype,"hasBindings",{get:function(){return!!this._control.hasBindings&&this._control.hasBindings()},enumerable:!0,configurable:!0}),d}(b.SurfaceElementBase);c.ControlSurfaceBase=e;var f=function(a){function b(c,d){a.call(this,c,d,b._unitProperties),this.multiline=c.multiline||!1}return __extends(b,a),b._unitProperties={_height:function(a){return a.size.height},_width:function(a){return a.size.width},_x:function(a){return a.location.x},_y:function(a){return a.location.y}},b}(e);c.ControlSurface=f;var g=function(a){function b(b,c){a.call(this,b,c),this.controlTypeClass="dxrd-image-todo-"+b.controlType.slice(2).toLowerCase(),this.template="dxrd-todocontrol"}return __extends(b,a),b}(f);c.TodoControlSurface=g,ko.bindingHandlers.controlDisplayName={update:function(a,b,c,d,e){var f=b(),g=ko.unwrap(f),h=g.displayNameParameters(),i=function(b){return $(a).text(b?"["+b+"]":"")};h.dataMember?(i(h.dataMember),e.$root.displayNameProvider().getDisplayName(h.dataSource,h.dataMember,h.dataMemberOffset,!1).done(function(a){return i(a)}).fail(function(){return i(h.dataMember)})):$(a).text(h.text||"")}},ko.bindingHandlers.displayNameExtender={init:function(a,b,c,d,e){var f=ko.unwrap(b()),g=ko.observable(""),h=ko.computed(function(){
if(g(f.dataMember()||""),f.dataMember()){var a=e.$root.displayNameProvider.peek(),b=f.path?a.getDisplayNameByPath(f.path(),f.dataMember()):a.getDisplayName(f.dataSource(),f.dataMember(),f.dataMemberOffset,f.includeDataSourceName);b.done(function(a){return g(a)}).fail(function(){return g(f.dataMember())})}});ko.utils.domNodeDisposal.addDisposeCallback(a,function(){h.dispose()});var i=e.extend({$displayName:g});return ko.applyBindingsToDescendants(i,a),{controlsDescendantBindings:!0}}},ko.virtualElements.allowedBindings.displayNameExtender=!0}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(b,c){this.templateName="dx-treelist-item",this.contenttemplate="dxrd-calculatedfield-content",this.isList=!1,this.isCalculated=!0,c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.prototype.getInfo=function(){return g},Object.defineProperty(b.prototype,"displayName",{get:function(){return this.calculatedFieldName()},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"name",{get:function(){return this.calculatedFieldName()},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"specifics",{get:function(){var a=this.fieldType();return["Byte","Int16","Int32"].indexOf(a)>-1?"calcnumber":["Float","Double","Decimal"].indexOf(a)>-1?"calcfloat":["DateTime","TimeSpan"].indexOf(a)>-1?"calcdate":"calc"+("None"===a?"default":a.toLowerCase())},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"type",{get:function(){return this.fieldType()},enumerable:!0,configurable:!0}),b}();c.CalculatedField=d;var e=[{propertyName:"onGetValue",modelName:"@OnGetValue",displayName:"Get a Value",editor:c.editorTemplates.scriptsBox}],f={propertyName:"scripts",modelName:"Scripts",displayName:"Scripts",info:e,editor:a.JS.Widgets.editorTemplates.objecteditor},g=[{propertyName:"calculatedFieldName",modelName:"@Name"},{propertyName:"nameEditable",displayName:"Name",editor:a.JS.Widgets.editorTemplates.text,validationRules:b.nameValidationRules},{propertyName:"fieldType",modelName:"@FieldType",displayName:"Field Type",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"None",from:b.fromEnum,values:{None:"None",String:"String",DateTime:"DateTime",TimeSpan:"TimeSpan",Byte:"Byte",Int16:"Int16",Int32:"Int32",Float:"Float",Double:"Double",Decimal:"Decimal",Boolean:"Boolean"}},c.dataSource,c.dataMember,{propertyName:"expression",modelName:"@Expression",displayName:"Expression",defaultVal:""},{propertyName:"expressionObj",displayName:"Expression",editor:b.Widgets.editorTemplates.expressionEditor},f],h=function(e){function f(c,d,f){var g=this;e.call(this),this._calculatedFieldsInfo={},this._ordinaryFieldsInfo={},this._fieldsDataMembersInfo={},this.addAction={clickAction:function(a){return g.addCalculatedField(a.path)},imageClassName:"dxrd-image-add-calcfield",text:b.getLocalization("Add calculated field")},this.removeAction={clickAction:function(a){g.removeCalculatedField(a.path)},imageClassName:"dxrd-image-recycle-bin",text:b.getLocalization("Remove calculated field")},this._calculatedFieldsInfo={},this._calculatedFields=c,this._dataSourceHelper=ko.observable(f),this._reportDataSource=d,$.each(c(),function(a,b){g._initializeCalculatedField(b)});var h=this;this._disposables.push(this._calculatedFields.subscribe(function(a){$.each(a,function(a,b){if("added"===b.status)h._initializeCalculatedField(b.value);else if("deleted"===b.status){var c=h._getFieldPathRequest(b.value).fullPath;h._getDataMembersInfoByPath(c).remove(function(a){return b.value.name===a.name})}})},null,"arrayChange")),this._disposables.push(this._reportDataSource.subscribe(function(){$.each(c(),function(a,b){b.dataSource()||g._updateFieldPathRequest(b)})})),this.addCalculatedField=function(b){var d=new a.JS.Widgets.PathRequest(b),e=g.createCalculatedField(d.path),f=g._dataSourceHelper().findDataSourceInfoByID(d.id)||g._dataSourceHelper().findDataSourceInfoByRef(d.ref);return e.dataSource(f.data),c.push(e),e},this.removeCalculatedField=function(b){var d=new a.JS.Widgets.PathRequest(b);c.remove(function(a){var b=a.dataMember()?a.dataMember()+"."+a.name:a.name;return d.path===b})}}return __extends(f,e),f.prototype.getFullPath=function(a,b){return a+(b?"."+b:"")},f.prototype._getDataMembersInfoByPath=function(a){return this._calculatedFieldsInfo[a]=this._calculatedFieldsInfo[a]||ko.observableArray(),this._calculatedFieldsInfo[a]},f.prototype._subscribeFieldProperties=function(b){var c=this;this._disposables.push(b.dataMember.subscribe(function(d){c._getDataMembersInfoByPath(b.pathRequest.fullPath).remove(b),b.pathRequest=new a.JS.Widgets.PathRequest(c.getFullPath(b.pathRequest.id||b.pathRequest.ref,d)),c._getDataMembersInfoByPath(b.pathRequest.fullPath).push(b)})),this._disposables.push(b.dataSource.subscribe(function(){c._updateFieldPathRequest(b)})),this._disposables.push(b.calculatedFieldName.subscribe(function(){c._getDataMembersInfoByPath(b.pathRequest.fullPath).notifySubscribers()}))},f.prototype._getFieldPathRequest=function(b){var c=this._dataSourceHelper().findDataSourceInfo(b.dataSource()||this._reportDataSource());return new a.JS.Widgets.PathRequest(this.getFullPath(c.id||c.ref,b.dataMember()))},f.prototype._updateFieldPathRequest=function(a){this._getDataMembersInfoByPath(a.pathRequest.fullPath).remove(a),a.pathRequest=this._getFieldPathRequest(a),"none"!==a.pathRequest.ref&&this._getDataMembersInfoByPath(a.pathRequest.fullPath).push(a)},f.prototype._initializeCalculatedField=function(c){var d=this,e=this._getFieldPathRequest(c);c.getPath=function(){var a=d._dataSourceHelper().findDataSourceInfo(c.dataSource()||d._reportDataSource());return a.id||a.ref},c.expressionObj=ko.observable({value:c.expression,path:ko.pureComputed(function(){return d._getFieldPathRequest(c).fullPath}),fieldName:c.calculatedFieldName}),c.nameEditable=ko.pureComputed({read:function(){return c.calculatedFieldName()},write:function(a){var d=this._ordinaryFieldsInfo[c.pathRequest.fullPath];a&&null===b.getFirstItemByPropertyValue(this._calculatedFields(),"name",a)&&null===b.getFirstItemByPropertyValue(d||[],"displayName",a)&&c.calculatedFieldName(a)},owner:this}),c.pathRequest=e,c.propertyGrid=new a.JS.Widgets.ObjectProperties(ko.observable(c)),this._subscribeFieldProperties(c),this._getDataMembersInfoByPath(e.fullPath).push(c)},f.prototype._generateNewFieldName=function(){var a,c=1;do a="calculatedField"+c++;while(null!==b.getFirstItemByPropertyValue(this._calculatedFields(),"name",a));return a},f.prototype.createCalculatedField=function(a){return new d({"@Name":this._generateNewFieldName(),"@DataMember":a})},f.prototype.getActions=function(a){var b=[];return a.hasItems&&0!==a.path.indexOf("parameters")&&b.push(this.addAction),a.data.specifics&&0===a.data.specifics.indexOf("calc")&&b.push(this.removeAction),b},f.prototype.beforeItemsFilled=function(a,b){return a.fullPath&&b.push.apply(b,this._getDataMembersInfoByPath(a.fullPath)()),!1},f.prototype.afterItemsFilled=function(a,b){a.fullPath&&(this._ordinaryFieldsInfo[a.fullPath]=b,b.sort(function(a,b){var d=c.FieldListController.isList(a)?1:0,e=c.FieldListController.isList(b)?1:0;return d!==e?e-d:a.name.localeCompare(b.name)}))},f}(b.Disposable);c.CalculatedFieldsSource=h}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function d(b,d,e){var f=this;a.call(this),this.usedDataSources=ko.observableArray(),this.allDataSources=ko.observableArray(),this.usedDataSources.push({ref:"none",name:"none",specifics:"none",data:null}),this._objects=b,$.each(b(),function(a,b){var c=b._model["@Ref"],e=d.filter(function(a){return a.ref===c})[0];e&&(b.dataSourceInfo={ref:c,data:b,name:e.name,isSqlDataSource:e.isSqlDataSource},f._addUsedDataSource(b.dataSourceInfo))});var g=this;this._disposables.push(b.subscribe(function(a){$.each(a,function(a,b){if(b.value.dataSourceInfo)if("added"===b.status)g._addUsedDataSource(b.value.dataSourceInfo);else if("deleted"===b.status){var c=g.findDataSourceInfo(b.value);c&&(f.usedDataSources.remove(c),f.allDataSources.remove(c))}})},null,"arrayChange")),this.allDataSources.push.apply(this.allDataSources,e.map(function(a){return $.extend({},a,{data:new c.ObjectStorageItem(a.data,function(){return f})})}))}return __extends(d,a),d.prototype.getDataSourcePath=function(a){var b=a&&this.findDataSourceInfo(a);return b?b.id||b.ref:""},d.prototype._findDataSourceInfo=function(a,b){return b().filter(function(b){return b.name===a})[0]},d.prototype._getDataSourceInfo=function(a){var b=this._findDataSourceInfo(a,this.usedDataSources);if(!b){var c=this._findDataSourceInfo(a,this.allDataSources);c&&(b=this._addDataSource(c,c.data))}return b},d.prototype._getDataSourceName=function(a){var b=this.findDataSourceInfo(a);return b&&b.name},d.prototype._addUsedDataSource=function(a){this.usedDataSources.splice(this.usedDataSources().length-1,0,a),this.allDataSources.push(a)},d.prototype._addDataSource=function(a,c){if(!a.name)throw new Error("dataSource name is undefined or null (ref="+a.ref+", id="+a.id+")");var d=b.getUniqueNameForNamedObjectsArray(this.allDataSources(),b.replaceInvalidSymbols(a.name)),e=c;return-1===this._objects().indexOf(c)&&(e=c.clone(),e.dataSourceInfo=$.extend({},a,{name:d,data:e}),e.name=ko.observable(d),this._objects.push(e)),this.findDataSourceInfo(e)},d.prototype.addDataSource=function(a){var b=this;return this._addDataSource(a,c.ObjectItem.createNew(a.data,function(){return b})).data},d.prototype.removeDataSource=function(a){this._objects.remove(a.data)},d.prototype.dataSourceValue=function(a){var b=this;return ko.pureComputed({read:function(){return b._getDataSourceName(a())},write:function(c){var e=b._getDataSourceInfo(c);d._assignValueInTimeout?setTimeout(function(){a(e&&e.data)},1):a(e&&e.data)}})},Object.defineProperty(d.prototype,"availableDataSources",{get:function(){var a=this.usedDataSources();return this.allDataSources().filter(function(b){return-1===a.indexOf(b)})},enumerable:!0,configurable:!0}),d.prototype.findDataSourceInfo=function(a){return this.usedDataSources().filter(function(b){return b.data===a})[0]},d.prototype.findDataSourceInfoByID=function(a){return this.usedDataSources().filter(function(b){return b.id===a})[0]},d.prototype.findDataSourceInfoByRef=function(a){return this.usedDataSources().filter(function(b){return b.ref===a})[0]},d.prototype.findDataSourceInfoByName=function(a){return this.usedDataSources().filter(function(b){return b.name===a})[0]},d._assignValueInTimeout=!0,d}(b.Disposable);c.DataSourceHelper=d;!function(a){function b(b){a.call(this),this.itemsFilter=function(a,c){return""===c?b()&&a.name===b()||"none"===a.specifics:!0}}return __extends(b,a),b}(a.JS.Widgets.TreeListController)}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.prototype.getInfo=function(){return d},b}();b.ExtensionModel=c;var d=[{propertyName:"key",modelName:"@Key"},{propertyName:"value",modelName:"@Value"}]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b,c){var d=this;c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b),this.changeSortOrder=function(){d.sortOrder("Ascending"===d.sortOrder()?"Descending":"Ascending")},this.sortOrderClass=ko.pureComputed(function(){return"dxrd-image-"+d.sortOrder().toLowerCase()})}return b.prototype.getInfo=function(){return d},b.createNew=function(){return new b({})},b}();b.GroupFieldModel=c;var d=[{propertyName:"fieldName",modelName:"@FieldName",displayName:"Field Name",editor:b.editorTemplates.dataBinding},{propertyName:"sortOrder",modelName:"@SortOrder",displayName:"Sort Order",defaultVal:"Ascending"}]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(b,c){var d=this;c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b),this.value=ko.pureComputed({read:function(){return d._value()&&d._value().content()},write:function(a){d._value()&&d._value().content(a)}})}return b.createNew=function(){return new b({})},b.from=function(a,c){return new b(a,c)},b.toJson=function(a,b,d){return b.serialize(a,c.lookUpValueSerializationInfo,d)},b.prototype.getInfo=function(){return this.valueInfo?c.lookUpValueSerializationInfo.concat(this.valueInfo()):c.lookUpValueSerializationInfo},Object.defineProperty(b.prototype,"isEmpty",{get:function(){return null===this._value()||void 0===this._value()},enumerable:!0,configurable:!0}),b}();c.LookUpValue=d,c.lookUpValueSerializationInfo=[{propertyName:"description",modelName:"@Description",displayName:"Description",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"_value",modelName:"@Value",link:!0}];var e=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b}(a.Report.Preview.ParameterHelper);c.ReportParameterHelper=e;var f=function(b){function d(d,e,f,h,i){var j=this;b.call(this),this.templateName="dx-treelist-item",this.contenttemplate="dxrd-parameterContent",this.collapsed=ko.observable(!1),this.valueInfo=ko.observable(),this.multiValueInfo=ko.observable(),i=i||new a.JS.Utils.ModelSerializer,i.deserialize(this,d);var k=this;this.objectsStorage=f,this._parameterHelper=h,this._name=ko.observable(this.parameterName()),this.change=function(a,b){1===b.filter(function(b){return b.parameterName()===a.value}).length?j._name(a.value):j.parameterName(j._name())},this._type()||this._type(f.getType("System.String")),this._obsoleteValue()&&(this.value(this._obsoleteValue().content()),this._obsoleteValue(null)),delete this._obsoleteValue,this.type=ko.pureComputed({read:function(){return j._type().content()},write:function(a){var b=j._type().content();a!==b&&(j._type(f.getType(a)),j.updateLookUpValues(j._type().content()),j.value(j.isMultiValue()?[]:"System.DateTime"===a?j.defaultValue:j._convertSingleValue(j.value())))}}),this._initializeValue(),this._disposables.push(this.isMultiValue.subscribe(function(a){a?j.value=ko.observableArray([j._parameterHelper.createMultiValue(j,j.value())]):j.value(j.defaultValue)})),this.valueInfo=ko.pureComputed(function(){var a=$.extend(!0,{},g,h.getParameterInfo(j));return a.propertyName="value",a.defaultVal=j.isMultiValue()?"":j.defaultValue,a}),this._initializeLookUpSourceType(),this._disposables.push(ko.computed(function(){var a=j.lookUpSettings();a&&(a.updateFilter(j,e),a instanceof c.StaticListLookUpSettings&&j._disposables.push(a.lookUpValues.subscribe(function(a){$.each(a,function(a,b){"added"===b.status&&(k.initializeLookUpValue(b.value),b.value.valueInfo=k.multiValueInfo)})},null,"arrayChange")))})),this.viewmodel=new a.JS.Widgets.ObjectProperties(ko.observable(this))}return __extends(d,b),d.valueToJsonObject=function(b){var c=e.getSerializationValue(b,a.JS.Utils.serializeDate);return c instanceof Array?c.join(d.separator):c},d.prototype._getTypeValue=function(a){var b=d.typeValues.filter(function(b){return b.value===a});return b.length>0?b[0]:null},d.prototype._initializeLookUpSourceType=function(){var a=this,b=this.lookUpSettings(),d=b&&b instanceof c.StaticListLookUpSettings&&b.lookUpValues();d&&d.forEach(function(b){b.valueInfo=a.multiValueInfo,b.isEmpty&&a.initializeLookUpValue(b)}),this.lookUpSourceType=ko.observable("None"),b&&this.lookUpSourceType(-1!==b.objectType().indexOf("StaticListLookUpSettings")?"StaticListLookUpSettings":"DynamicListLookUpSettings"),this._disposables.push(this.lookUpSourceType.subscribe(function(b){"StaticListLookUpSettings"===b?a.lookUpSettings(a.objectsStorage.createStaticLookUpSetting()):"DynamicListLookUpSettings"===b?a.lookUpSettings(a.objectsStorage.createDynamicLookUpSetting()):(a.objectsStorage.objects.remove(a.lookUpSettings()),a.lookUpSettings(null))}))},d.prototype._tryConvertValue=function(a){var b=function(a){return void 0!==a&&null!==a&&!isNaN("string"==typeof a?"":a)};if(!b(a))return{isValid:!1,newValue:null};var c=this._getTypeValue(this.type()),d=c&&c.valueConverter||function(a){return a},e=d(a);return{isValid:b(e),newValue:e}},d.prototype._convertSingleValue=function(a){var b=this._tryConvertValue(a);return b.isValid?b.newValue:this.defaultValue},d.prototype._initializeValue=function(){var a=this,b=this.value();this.isMultiValue()?this.value="string"==typeof b?this._parameterHelper.createMultiValueArray(b.split(d.separator),this,function(b){return a._convertSingleValue(b)}):ko.observableArray():this.value(this._convertSingleValue(b))},d.prototype.getInfo=function(){if(this.type){var a=$.extend(!0,[],c.parameterSerializationInfo);return a.splice(a.indexOf(a.filter(function(a){return"value"===a.propertyName})[0]),1,this.valueInfo()),a}return c.parameterSerializationInfo},d.prototype.isPropertyVisible=function(a){return"lookUpSettings"===a?!!this.lookUpSettings():!0},d.prototype.initializeLookUpValue=function(a){var b=this.objectsStorage.addValue();b.type(this.type()),b.content(this.defaultValue),a._value(b)},d.prototype.updateLookUpValues=function(a){var b=this,d=this.lookUpSettings(),e=d&&d instanceof c.StaticListLookUpSettings&&d.lookUpValues();d&&e&&e.forEach(function(c){var d=c._value();d.type(a),d.content(b.defaultValue)})},d.prototype.getParameterDescriptor=function(){return{description:this.description.peek(),displayName:"Value",name:this.parameterName.peek(),type:this.type.peek(),value:this.value.peek(),visible:this.visible.peek()}},Object.defineProperty(d.prototype,"name",{get:function(){return this.parameterName()},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"specifics",{get:function(){var a=this._getTypeValue(this.type());return a?a.specifics:"default"},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"defaultValue",{get:function(){var a=this._getTypeValue(this.type());return a?a.defaultValue:""},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"displayName",{get:function(){return this.parameterName()},enumerable:!0,configurable:!0}),d.separator="|",d.typeValues=[{value:"System.String",displayValue:"String",defaultValue:"",specifics:"String",valueConverter:function(a){return a.toString()}},{value:"System.DateTime",displayValue:"Date",defaultValue:new Date((new Date).setHours(0,0,0,0)),specifics:"Date",valueConverter:function(a){return Globalize.parseDate(a,["yyyy-MM-dd","MM/dd/yyyy HH:mm:ss"])}},{value:"System.Int16",displayValue:"Number (16 bit integer)",defaultValue:0,specifics:"Integer",valueConverter:function(a){return parseInt(a)}},{value:"System.Int32",displayValue:"Number (32 bit integer)",defaultValue:0,specifics:"Integer",valueConverter:function(a){return parseInt(a)}},{value:"System.Int64",displayValue:"Number (64 bit integer)",defaultValue:"0",specifics:"String"},{value:"System.Single",displayValue:"Number (floating-point)",defaultValue:0,specifics:"Float",valueConverter:function(a){return parseFloat(a)}},{value:"System.Double",displayValue:"Number (double-precision floating-point)",defaultValue:0,specifics:"Float",valueConverter:function(a){return parseFloat(a)}},{value:"System.Decimal",displayValue:"Number (decimal)",defaultValue:"0",specifics:"String"},{value:"System.Boolean",displayValue:"Boolean",defaultValue:!1,specifics:"Bool",valueConverter:function(a){return"true"===String(a).toLowerCase()?!0:"false"===String(a).toLowerCase()?!1:null}},{value:"System.Guid",displayValue:"Guid",defaultValue:"00000000-0000-0000-0000-000000000000",specifics:"String"}],d}(b.Disposable);c.Parameter=f;var g={propertyName:"value",displayName:"Value",modelName:"@ValueInfo",from:function(a){return ko.observable(a)},toJsonObject:f.valueToJsonObject};c.parameterLookUpSettingsSerializationInfo={propertyName:"lookUpSettings",displayName:"Look-Up Settings",modelName:"@LookUpSettings",link:!0,editor:a.JS.Widgets.editorTemplates.objecteditor},c.parameterSerializationInfo=[{propertyName:"parameterName",modelName:"@Name",displayName:"Name",defaultVal:"",validationRules:b.nameValidationRules,editor:a.JS.Widgets.editorTemplates.text},{propertyName:"description",modelName:"@Description",displayName:"Description",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.visible,{propertyName:"isMultiValue",modelName:"@MultiValue",displayName:"MultiValue",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool},{propertyName:"type",displayName:"Type",editor:a.JS.Widgets.editorTemplates.combobox,valuesArray:f.typeValues},g,{propertyName:"_obsoleteValue",modelName:"@Value",link:!0},{propertyName:"_type",modelName:"@Type",link:!0},{propertyName:"lookUpSourceType",displayName:"Look-Up Settings Type",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"No Look-Up",StaticListLookUpSettings:"Static List",DynamicListLookUpSettings:"Dynamic List"}},c.parameterLookUpSettingsSerializationInfo];var h=function(){function a(a){var c=this;this.addAction={clickAction:function(){return c.add()},imageClassName:"dxrd-image-add",text:b.getLocalization("Add parameter")},this.removeAction={clickAction:function(a){c.remove({model:a.data})},imageClassName:"dxrd-image-recycle-bin",text:b.getLocalization("Remove parameter")},this.parameters=a.parameters,this.remove=function(a){c.parameters.splice(c.parameters.indexOf(a.model),1)},this.add=function(){var d=b.getUniqueNameForNamedObjectsArray(c.parameters(),"parameter"),e=new f({"@Name":d,"@Description":"P"+d.slice(1)},a,a.objectsStorageHelper,a.parameterHelper);return c.parameters.push(e),e}}return a.prototype.getActions=function(a){var b=[];return a.hasItems&&0===a.path.indexOf("parameters")&&b.push(this.addAction),0===a.path.indexOf("parameters.")&&b.push(this.removeAction),b},a.prototype.beforeItemsFilled=function(a,b){return"parameters"!==a.ref?!1:(b.push.apply(b,this.parameters.slice(0)),!0)},a.prototype.afterItemsFilled=function(a,c){if(!a.fullPath){var d=b.findFirstItemMatchesCondition(c,function(a){return"parameters"===a.specifics});d&&(d.displayName=b.getLocalization("Parameters"));var e=!a.fullPath&&b.findFirstItemMatchesCondition(c,function(a){return"none"===a.specifics});e&&(e.displayName=b.localizeNoneString("none"))}},a}();c.ParametersViewModel=h}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function c(b,c,d){this.dsHelperProvider=c,this.serializer=d,this.serializer=d||new a.JS.Utils.ModelSerializer,this.serializer.deserialize(this,b),this.afterDeserialization(b,d)}return c.createNew=function(a,b,c){var d=a["@ObjectType"]||"";return-1!==d.indexOf("StaticListLookUpSettings")?new k(a,b,c):-1!==d.indexOf("DynamicListLookUpSettings")?new l(a,b,c):-1!==d.indexOf("ReportServer")&&-1!==a["@ObjectType"].indexOf("DataSource")?new i(a,b,c):new e(a,b,c)},c.prototype.getInfo=function(){return[{propertyName:"objectType",modelName:"@ObjectType"}]},c.prototype.afterDeserialization=function(a){b.cutRefs(a)},c.prototype.clone=function(){return c.createNew(this.serializer.serialize(this),this.dsHelperProvider,this.serializer)},c}();c.ObjectItem=d;var e=function(a){function b(b,c,d){a.call(this,$.extend({"@ObjectType":"DevExpress.XtraReports.Serialization.ObjectStorageInfo"},b),c,d)}return __extends(b,a),b.prototype.getInfo=function(){return a.prototype.getInfo.call(this).concat([{propertyName:"content",modelName:"@Content"},{propertyName:"type",modelName:"@Type"},{propertyName:"name",modelName:"@Name",defaultVal:""}])},b.prototype.isEmpty=function(){return this.type&&"System.DateTime"===this.type()&&this.content&&(void 0===this.content()||null===this.content())},b}(d);c.ObjectStorageItem=e;var f=function(a){function b(b,d){a.call(this,b,d,[c.parameterLookUpSettingsSerializationInfo])}return __extends(b,a),b}(b.SerializableModel);c.ObjectStorageParameter=f;var g=function(b){function c(c,d,e,f){var g=this;b.call(this,c,f,h),this.filterString=ko.observable(null);var i=new a.JS.Widgets.FilterStringOptions(this._filterString,ko.pureComputed(function(){return e()&&e().getDataSourcePath(d)+"."+g.tableName()}),ko.pureComputed(function(){return!d}));i.helper.canChoiceParameters=!0,this.filterString(i)}return __extends(c,b),c}(b.SerializableModel);c.TableInfoCollectionItem=g;var h=[c.filterString,c.filterStringEditable,{propertyName:"tableName",modelName:"@TableName"}],i=function(b){function c(c,d,e){var h=this;b.call(this,$.extend({"@ObjectType":"DevExpress.ReportServer.Infrastructure.Data.UniversalDataSource"},c),d,e),this.parameters=a.JS.Utils.deserializeArray(c.Parameters||[],function(a){return new f(a,e)}),this.tableInfoCollection=a.JS.Utils.deserializeArray(c.TableInfoCollection||[],function(a){return new g(a,h,d,e)}),this.spParameterInfoCollection=a.JS.Utils.deserializeArray(c.StoredProcedureParameterInfoCollection||[],function(a){return new f(a,e)})}return __extends(c,b),c.prototype.getInfo=function(){return b.prototype.getInfo.call(this).concat([{propertyName:"parameters",modelName:"Parameters",array:!0},{propertyName:"tableInfoCollection",modelName:"TableInfoCollection",array:!0},{propertyName:"spParameterInfoCollection",modelName:"StoredProcedureParameterInfoCollection",array:!0}])},c}(d);c.UniversalDataSource=i;var j=function(a){function b(b,c,d){a.call(this,b,c,d)}return __extends(b,a),b.prototype.getInfo=function(){return a.prototype.getInfo.call(this).concat([c.filterString,c.filterStringEditable])},b.prototype.updateFilter=function(a,b){this.filterString.helper.parameters=ko.pureComputed({read:function(){return b&&b.parameters().filter(function(b){return b!==a})},deferEvaluation:!0})},b}(d);c.LookUpSettings=j;var k=function(b){function d(c,d,e){b.call(this,$.extend({"@ObjectType":"DevExpress.XtraReports.Parameters.StaticListLookUpSettings"},c),d,e),this.filterString=new a.JS.Widgets.FilterStringOptions(this._filterString),this.filterString.helper.canChoiceParameters=!0,this.filterString.itemsProvider=ko.observable(null)}return __extends(d,b),d.prototype.getInfo=function(){return b.prototype.getInfo.call(this).concat({propertyName:"lookUpValues",displayName:"Values",modelName:"LookUpValues",array:!0,editor:c.editorTemplates.lookUpValues})},d.prototype.afterDeserialization=function(d,e){this.lookUpValues=a.JS.Utils.deserializeArray(d.LookUpValues||[],function(a){return new c.LookUpValue(a,e)}),b.prototype.afterDeserialization.call(this,d,e)},d.prototype.updateFilter=function(a,c){this.filterString.itemsProvider({getItems:function(){var b=$.Deferred();return b.resolve([{displayName:"Description",isList:!1,name:"Description",specifics:"String"},{displayName:"Value",isList:!1,name:"Value",specifics:a.specifics}]),b.promise()}}),b.prototype.updateFilter.call(this,a,c)},d}(j);c.StaticListLookUpSettings=k;var l=function(d){function e(b,c,e){var f=this;d.call(this,$.extend({"@ObjectType":"DevExpress.XtraReports.Parameters.DynamicListLookUpSettings"},b),c,e),this.dsHelperProvider=c,this.filterString=new a.JS.Widgets.FilterStringOptions(this._filterString,ko.pureComputed(function(){return f.getPath("valueMember")}),ko.pureComputed(function(){return!f.dataSource||!f.dataSource()}))}return __extends(e,d),e.prototype.getInfo=function(){return d.prototype.getInfo.call(this).concat([c.dataAdapter,c.dataSource,c.dataMember,{propertyName:"displayMember",modelName:"@DisplayMember",displayName:"Display Member",defaultVal:"",editor:b.Widgets.editorTemplates.field},{propertyName:"valueMember",modelName:"@ValueMember",displayName:"Value Member",defaultVal:"",editor:b.Widgets.editorTemplates.field}])},e.prototype.getPath=function(a){return"dataMember"===a?this.dsHelperProvider()&&this.dsHelperProvider().getDataSourcePath(this.dataSource()):"displayMember"===a||"valueMember"===a?this.getPath("dataMember")+(this.dataMember()?"."+this.dataMember():""):""},e}(j);c.DynamicListLookUpSettings=l;var m=function(){function a(a,b){this.objects=a,this.dsHelperProvider=b}return a.prototype.findType=function(a){var b=this.objects().filter(function(a){return a instanceof e}),c=b.filter(function(b){return"System.Type"===b.type()&&b.content()===a});return 0===c.length?null:c[0]},a.prototype.getType=function(a){var b=this.findType(a);return b||(b=new e({"@Content":a,"@Type":"System.Type"},this.dsHelperProvider),this.objects.push(b)),b},a.prototype.addValue=function(){var a=new e({"@Content":""},this.dsHelperProvider);return this.objects.push(a),a},a.prototype.createStaticLookUpSetting=function(){var a=new k({},this.dsHelperProvider);return this.objects.push(a),a},a.prototype.createDynamicLookUpSetting=function(){var a=new l({},this.dsHelperProvider);return this.objects.push(a),a},a}();c.ObjectsStorage=m}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(c,d){var e=this;this.className=function(){return"stylemodel"},d=d||new a.JS.Utils.ModelSerializer,d.deserialize(this,c),["backColor","foreColor","borderColor"].forEach(function(a){e[a]=ko.pureComputed({read:function(){return e["_"+a]&&e["_"+a]()||b.defaults[a]},write:function(b){e["_"+a](b)}})})}return b.prototype.getInfo=function(){return c.styleSerializationInfo},b.prototype.isPropertyModified=function(a){return!(!this[a]||!this[a]())},b.defaults={backColor:"transparent",foreColor:"Black",borderColor:"Black"},b}();c.StyleModel=d;var e={propertyName:"_backColor",modelName:"@BackColor",from:b.colorFromString,toJsonObject:b.colorToString},f={propertyName:"_foreColor",modelName:"@ForeColor",from:b.colorFromString,toJsonObject:b.colorToString},g={propertyName:"_borderColor",modelName:"@BorderColor",from:b.colorFromString,toJsonObject:b.colorToString};c.styleSerializationInfo=$.extend(!0,[],[c.name,c.font,c.textAlignment,c.padding,f,e,g,{propertyName:"backColor",displayName:"Background Color",editor:b.Widgets.editorTemplates.customColorEditor},{propertyName:"foreColor",displayName:"Foreground Color",editor:b.Widgets.editorTemplates.customColorEditor},{propertyName:"borderColor",displayName:"Border Color",editor:b.Widgets.editorTemplates.customColorEditor},{propertyName:"borders",modelName:"@Sides",displayName:"Borders",editor:b.Widgets.editorTemplates.borders},{propertyName:"borderWidth",modelName:"@BorderWidthSerializable",displayName:"Border Width",from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric}]).concat([c.borderDashStyle]),c.styleSerializationInfo.forEach(function(a){delete a.defaultVal})}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,b){return c.BandViewModel.getBandWeight(a)-c.BandViewModel.getBandWeight(b)}function e(a,b,d){void 0===d&&(d=0),0!=a.bands().length&&a.bands().forEach(function(a){a.markerWidth(c.BandSurface.collapsedHeight*(b-d)),e(a,b,d+1)})}function f(a){var b=0,c=0;return 0!=a.bands().length&&(a.bands().forEach(function(a){var b=f(a);b>c&&(c=b)}),b=c+1),a.subBands&&0!=a.subBands().length&&(b=c+1),b}c.sortBands=d;var g=function(e){function f(f,g){var h=this;g=g||new a.JS.Utils.ModelSerializer,f=f.XtraReportsLayoutSerializer||f,this.controlType="DevExpress.XtraReports.UI.XtraReport",e.call(this,f,null,g),this._update=ko.observable(!1),this.isModelReady=ko.pureComputed(function(){return!h._update()}),this.key=ko.pureComputed(function(){return h.name()}),this.dataSourceRefs=[],this.dataSourceHelper=ko.observable(),this.parameterHelper=new c.ReportParameterHelper,this._disposables.push(this.measureUnit.subscribe(function(a){h._update(!0),h._recalculateUnits(a),h._update(!1)})),this._disposables.push(this.landscape.subscribe(function(){var a=h.pageWidth();

h.pageWidth(h.pageHeight()),h.pageHeight(a)})),this.styles=a.JS.Utils.deserializeArray(f.StyleSheet,function(a){return new c.StyleModel(a,g)}),this.objectStorage=a.JS.Utils.deserializeArray(f.ObjectStorage,function(a){return c.ObjectItem.createNew(a,h.dsHelperProvider,g)}),this.componentStorage=a.JS.Utils.deserializeArray(f.ComponentStorage,function(a){return c.ObjectItem.createNew(a,h.dsHelperProvider,g)}),this.objectStorage.push.apply(this.objectStorage,this.componentStorage().filter(function(a){return-1!==a.objectType().indexOf("DataSource")})),this.componentStorage.remove(function(a){return-1!==a.objectType().indexOf("DataSource")}),this.objectsStorageHelper=new c.ObjectsStorage(this.objectStorage,this.dsHelperProvider),this.parameters=a.JS.Utils.deserializeArray(f.Parameters,function(a){return new c.Parameter(a,h,h.objectsStorageHelper,h.parameterHelper,g)}),this.objectStorage().forEach(function(a){a instanceof c.UniversalDataSource&&a.tableInfoCollection().forEach(function(a){a.filterString().helper.parameters=h.parameters})}),this.bands=a.JS.Utils.deserializeArray(f.Bands,function(a){return h.createControl(a,g)}),this.bands().sort(d),this.extensions=a.JS.Utils.deserializeArray(f.Extensions,function(a){return new c.ExtensionModel(a,g)}),this.crossBandControls=a.JS.Utils.deserializeArray(f.CrossBandControls,function(a){return h.createControl(a,g)}),this.calculatedFields=a.JS.Utils.deserializeArray(f.CalculatedFields,function(a){return new c.CalculatedField(a,g)}),this._initializeBands(),this.formattingRuleSheet=a.JS.Utils.deserializeArray(f.FormattingRuleSheet,function(a){return new c.FormattingRule(a,h,g)}),this._disposables.push(this.formattingRuleSheet.subscribe(function(a){a.forEach(function(a){a.value.name()||a.value.name(b.getUniqueNameForNamedObjectsArray(h.formattingRuleSheet(),"formattingRule")),a.value.parent||(a.value.parent=h)})},null,"arrayChange")),this._disposables.push(this.margins.left.subscribe(function(a){h.isModelReady()&&a>h.pageWidth()-h.margins.right()&&h.margins.right(h.pageWidth()-h.margins.left())})),this._disposables.push(this.margins.right.subscribe(function(a){h.isModelReady()&&a>h.pageWidth()-h.margins.left()&&h.margins.left(h.pageWidth()-h.margins.right())})),this._disposables.push(this.paperKind.subscribe(function(a){if("Custom"!==a){var c=b.papperKindMapper[a];h.pageHeight(Math.round(c.height*(h._innerDpi.peek()/100)*100)/100),h.pageWidth(Math.round(c.width*(h._innerDpi.peek()/100)*100)/100)}}));var i=new a.JS.Widgets.FilterStringOptions(this._filterString,ko.pureComputed(function(){return h.getPath("dataMember")+(h.dataMember()?"."+h.dataMember():"")}),ko.pureComputed(function(){return!h.dataSource||!h.dataSource()}));i.helper.parameters=this.parameters,this.filterString=i,this._scriptReferencesString=ko.observable(this.scriptReferencesString()),this.scriptReferencesString=ko.pureComputed({read:function(){return h._scriptReferencesString()},write:function(a){h._scriptReferencesString(a.replace(/\n/g,"\r\n"))}})}return __extends(f,e),f.prototype._getDpi=function(a){switch(a){case"HundredthsOfAnInch":return 100;case"TenthsOfAMillimeter":return 254;case"Pixels":return 96}},f.prototype._recalculateUnits=function(a){var c=this._getDpi(a),d=this._innerDpi(),e=c/d;b.objectsVisitor(this,function(a){a&&a.constructor&&a.constructor.unitProperties&&$.each(a.constructor.unitProperties,function(b,c){a[c](Math.round(a[c]()*e*100)/100)})}),this._innerDpi(c)},f.prototype.findStyle=function(a){var b=null;return $.each(this.styles(),function(c,d){return d.name()===a&&(b=d),b}),b},f.prototype._initializeBands=function(){0===this.bands().length&&this.createChild({"@ControlType":"DetailBand","@Name":"Detail1"}),null===b.getFirstItemByPropertyValue(this.bands(),"controlType","TopMarginBand")&&this.createChild({"@ControlType":"TopMarginBand","@Name":"TopMargin1"}),null===b.getFirstItemByPropertyValue(this.bands(),"controlType","BottomMarginBand")&&this.createChild({"@ControlType":"BottomMarginBand","@Name":"BottomMargin1"})},f.prototype.isPropertyDisabled=function(a){return"pageWidth"===a||"pageHeight"===a?"Custom"!==this.paperKind():void 0},f.prototype.getSubreportUrls=function(){},f.prototype.initialize=function(){e.prototype.initialize.call(this),this.size.height=this.pageHeight,this.size.width=this.pageWidth},f.prototype.addChild=function(a){a instanceof c.CrossBandControlViewModel?(a.parentModel(this),a.startBand(this.bands()[0]),a.endBand(this.bands()[0]),this.crossBandControls.push(a)):a instanceof c.BandViewModel?(a.parentModel(this),c.BandViewModel.insertBand(this.bands,a)):b.NotifyAboutWarning("Attempt to add wrong child control.")},f.prototype.removeChild=function(a){a instanceof c.CrossBandControlViewModel?this.crossBandControls.splice(this.crossBandControls().indexOf(a),1):a instanceof c.BandViewModel?this.bands().length>1&&this.bands.splice(this.bands().indexOf(a),1):b.NotifyAboutWarning("Attempt to remove wrong child control.")},f.prototype.serialize=function(){return(new a.JS.Utils.ModelSerializer).serialize(this)},f.prototype.save=function(){var a=this.serialize();return this.onSave&&this.onSave(a),a},f.prototype.getPath=function(){return this.dataSourceHelper()&&this.dataSourceHelper().getDataSourcePath(this.dataSource())},f.prototype.isStyleProperty=function(){return!1},f.bandsTypeOrdering=["TopMarginBand","ReportHeaderBand","PageHeaderBand","GroupHeaderBand","DetailBand","DetailReportBand","GroupFooterBand","ReportFooterBand","PageFooterBand","BottomMarginBand"],f.unitProperties=["snapGridSize"],f}(c.ReportElementViewModel);c.ReportViewModel=g;var h=function(a){function d(g,h){var i=this;void 0===h&&(h=ko.observable(1)),a.call(this,g,{measureUnit:g.measureUnit,zoom:h},d._unitProperties),this.allowMultiselect=!1,this.locked=!1,this.focused=ko.observable(!1),this.selected=ko.observable(!1),this.templateName=ko.observable("dxrd-report"),this.bands=ko.observableArray(),this.underCursor=ko.observable(new b.HoverInfo),this.crossBandControls=ko.observableArray(),this.leftMarginOffset=ko.observable(0),this.minHeight=ko.observable(),this.maxMarkerWidth=ko.observable(),this.parent=null,this.zoom=h,this.dpi=g.dpi,this.measureUnit=g.measureUnit,this._context=this,this._width=ko.pureComputed({read:function(){return i.pageWidth()}}),this._height=ko.pureComputed({read:function(){return i.pageHeight()}}),this.margins={bottom:this._bottom,left:this._left,right:this._right,top:this._top},b.createObservableArrayMapCollection(g.bands,this.bands,this._createSurface),this._disposables.push(ko.computed(function(){var a=f(i);e(i,a,0),i.maxMarkerWidth(c.BandSurface.collapsedHeight*a+22)})),this.effectiveHeight=ko.pureComputed(function(){var a=i.bands()[i.bands().length-1];return i.minHeight(a.absolutePosition.y()+a.height()),i.minHeight()+20}),b.createObservableArrayMapCollection(g.crossBandControls,this.crossBandControls,this._createSurface)}return __extends(d,a),d.prototype.getChildrenCollection=function(){return this.bands},d.prototype.isFit=function(a){return a.underCursor().y>=0&&a.underCursor().x>=0&&a.rect().height>a.underCursor().y&&this.pageWidth()-this.margins.left()>a.underCursor().x},d.prototype.canDrop=function(){return!0},d.prototype.checkParent=function(){return!1},d._unitProperties={_width:function(a){return a.size.width},_height:function(a){return a.size.height},pageWidth:function(a){return a.size.width},pageHeight:function(a){return a.size.height},snapGridSize:function(a){return a.snapGridSize},_bottom:function(a){return a.margins.bottom},_left:function(a){return a.margins.left},_right:function(a){return a.margins.right},_top:function(a){return a.margins.top}},d}(b.SurfaceElementArea);c.ReportSurface=h;var i=function(){function a(){var a=this;this._contextModel=ko.observable(),this._targetModel=ko.pureComputed(function(){var b=a._contextModel();return b&&(b=b.parentModel()&&b.parentModel().parentModel()&&"SubBand"===b.controlType?b.parentModel().parentModel():b.parentModel()&&"DevExpress.XtraReports.UI.XtraReport"!==b.controlType&&"DetailReportBand"!==b.controlType?b.parentModel():b),b}),this.actions=[{text:"Insert Top Margin Band",imageClassName:"dxrd-image-actions-top_margin",disabled:ko.pureComputed(function(){return!a._canAddBand("TopMarginBand")}),visible:!0,clickAction:function(){a._addBand("TopMarginBand")}},{text:"Insert Report Header Band",imageClassName:"dxrd-image-actions-report_header",disabled:ko.pureComputed(function(){return!a._canAddBand("ReportHeaderBand")}),visible:!0,clickAction:function(){a._addBand("ReportHeaderBand")}},{text:"Insert Page Header Band",imageClassName:"dxrd-image-actions-page_header",disabled:ko.pureComputed(function(){return!a._canAddBand("PageHeaderBand")}),visible:!0,clickAction:function(){a._addBand("PageHeaderBand")}},{text:"Insert Group Header Band",imageClassName:"dxrd-image-actions-group_header",disabled:ko.observable(!1),visible:!0,clickAction:function(){a._addBand("GroupHeaderBand")}},{text:"Insert Detail Band",imageClassName:"dxrd-image-actions-detail",disabled:ko.pureComputed(function(){return!a._canAddBand("DetailBand")}),visible:!0,clickAction:function(){a._addBand("DetailBand")}},{text:"Insert Detail Report Band",imageClassName:"dxrd-image-actions-detail_report",disabled:ko.observable(!1),visible:!0,clickAction:function(){a._addBand("DetailReportBand")}},{text:"Insert Group Footer Band",imageClassName:"dxrd-image-actions-group_footer",disabled:ko.observable(!1),visible:!0,clickAction:function(){a._addBand("GroupFooterBand")}},{text:"Insert Report Footer Band",imageClassName:"dxrd-image-actions-report_footer",disabled:ko.pureComputed(function(){return!a._canAddBand("ReportFooterBand")}),visible:!0,clickAction:function(){a._addBand("ReportFooterBand")}},{text:"Insert Page Footer Band",imageClassName:"dxrd-image-actions-page_footer",disabled:ko.pureComputed(function(){return!a._canAddBand("PageFooterBand")}),visible:!0,clickAction:function(){a._addBand("PageFooterBand")}},{text:"Insert Bottom Margin Band",imageClassName:"dxrd-image-actions-bottom_margin",disabled:ko.pureComputed(function(){return!a._canAddBand("BottomMarginBand")}),visible:!0,clickAction:function(){a._addBand("BottomMarginBand")}},{text:"Insert Sub-Band",imageClassName:"dxrd-image-actions-subband",disabled:ko.pureComputed(function(){return!a._canAddBand("SubBand")}),visible:!0,clickAction:function(){a._addBand("SubBand")}}]}return a.prototype._canAddBand=function(a){if(!this._targetModel())return!1;if("GroupHeaderBand"===a||"GroupFooterBand"===a||"DetailReportBand"===a)return!0;if("SubBand"===a){var b=this._contextModel();return null!==b&&!b.lockedInUserDesigner()&&-1===b.controlType.indexOf("XtraReport")&&-1===["DetailReportBand","TopMarginBand","BottomMarginBand","SubBand"].indexOf(b.controlType)}return"DetailReportBand"!==this._targetModel().controlType||"TopMarginBand"!==a&&"BottomMarginBand"!==a&&"PageHeaderBand"!==a&&"PageFooterBand"!==a?0===this._targetModel().bands().filter(function(b){return b.controlType===a}).length:!1},a.prototype._addBand=function(a){if(this._canAddBand(a)){var b=this._targetModel();"SubBand"===a&&(b=this._contextModel());var c=b.root.dpi();b.createChild({"@ControlType":a,"@HeightF":c})}},a.prototype.getActions=function(a){return a instanceof g||a instanceof c.BandViewModel?(this._contextModel(a),this.actions):[]},a}();c.ReportActions=i,c.paperKind={propertyName:"paperKind",modelName:"@PaperKind",defaultVal:"Letter",displayName:"Paper Kind",editor:a.JS.Widgets.editorTemplates.combobox,values:{A2:"A2",A3:"A3",A3Extra:"A3Extra",A3ExtraTransverse:"A3ExtraTransverse",A3Rotated:"A3Rotated",A3Transverse:"A3Transverse",A4:"A4",A4Extra:"A4Extra",A4Plus:"A4Plus",A4Rotated:"A4Rotated",A4Small:"A4Small",A4Transverse:"A4Transverse",A5:"A5",A5Extra:"A5Extra",A5Rotated:"A5Rotated",A5Transverse:"A5Transverse",A6:"A6",A6Rotated:"A6Rotated",APlus:"APlus",B4:"B4",B4Envelope:"B4Envelope",B4JisRotated:"B4JisRotated",B5:"B5",B5Envelope:"B5Envelope",B5Extra:"B5Extra",B5JisRotated:"B5JisRotated",B5Transverse:"B5Transverse",B6Envelope:"B6Envelope",B6Jis:"B6Jis",B6JisRotated:"B6JisRotated",BPlus:"BPlus",C3Envelope:"C3Envelope",C4Envelope:"C4Envelope",C5Envelope:"C5Envelope",C65Envelope:"C65Envelope",C6Envelope:"C6Envelope",CSheet:"CSheet",Custom:"Custom",DLEnvelope:"DLEnvelope",DSheet:"DSheet",ESheet:"ESheet",Executive:"Executive",Folio:"Folio",GermanLegalFanfold:"GermanLegalFanfold",GermanStandardFanfold:"GermanStandardFanfold",InviteEnvelope:"InviteEnvelope",IsoB4:"IsoB4",ItalyEnvelope:"ItalyEnvelope",JapaneseDoublePostcard:"JapaneseDoublePostcard",JapaneseDoublePostcardRotated:"JapaneseDoublePostcardRotated",JapanesePostcard:"JapanesePostcard",Ledger:"Ledger",Legal:"Legal",LegalExtra:"LegalExtra",Letter:"Letter",LetterExtra:"LetterExtra",LetterExtraTransverse:"LetterExtraTransverse",LetterPlus:"LetterPlus",LetterRotated:"LetterRotated",LetterSmall:"LetterSmall",LetterTransverse:"LetterTransverse",MonarchEnvelope:"MonarchEnvelope",Note:"Note",Number10Envelope:"Number10Envelope",Number11Envelope:"Number11Envelope",Number12Envelope:"Number12Envelope",Number14Envelope:"Number14Envelope",Number9Envelope:"Number9Envelope",PersonalEnvelope:"PersonalEnvelope",Prc16K:"Prc16K",Prc16KRotated:"Prc16KRotated",Prc32K:"Prc32K",Prc32KBig:"Prc32KBig",Prc32KBigRotated:"Prc32KBigRotated",Prc32KRotated:"Prc32KRotated",PrcEnvelopeNumber1:"PrcEnvelopeNumber1",PrcEnvelopeNumber10:"PrcEnvelopeNumber10",PrcEnvelopeNumber10Rotated:"PrcEnvelopeNumber10Rotated",PrcEnvelopeNumber1Rotated:"PrcEnvelopeNumber1Rotated",PrcEnvelopeNumber2:"PrcEnvelopeNumber2",PrcEnvelopeNumber2Rotated:"PrcEnvelopeNumber2Rotated",PrcEnvelopeNumber3:"PrcEnvelopeNumber3",PrcEnvelopeNumber3Rotated:"PrcEnvelopeNumber3Rotated",PrcEnvelopeNumber4:"PrcEnvelopeNumber4",PrcEnvelopeNumber4Rotated:"PrcEnvelopeNumber4Rotated",PrcEnvelopeNumber5:"PrcEnvelopeNumber5",PrcEnvelopeNumber5Rotated:"PrcEnvelopeNumber5Rotated",PrcEnvelopeNumber6:"PrcEnvelopeNumber6",PrcEnvelopeNumber6Rotated:"PrcEnvelopeNumber6Rotated",PrcEnvelopeNumber7:"PrcEnvelopeNumber7",PrcEnvelopeNumber7Rotated:"PrcEnvelopeNumber7Rotated",PrcEnvelopeNumber8:"PrcEnvelopeNumber8",PrcEnvelopeNumber8Rotated:"PrcEnvelopeNumber8Rotated",PrcEnvelopeNumber9:"PrcEnvelopeNumber9",PrcEnvelopeNumber9Rotated:"PrcEnvelopeNumber9Rotated",Quarto:"Quarto",Standard10x11:"Standard10x11",Standard10x14:"Standard10x14",Standard11x17:"Standard11x17",Standard12x11:"Standard12x11",Standard15x11:"Standard15x11",Standard9x11:"Standard9x11",Statement:"Statement",Tabloid:"Tabloid",TabloidExtra:"TabloidExtra",USStandardFanfold:"USStandardFanfold"}},c.landscape={propertyName:"landscape",modelName:"@Landscape",displayName:"Landscape",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool},c.margins={propertyName:"margins",modelName:"@Margins",from:b.Margins.fromString,displayName:"Margins",editor:c.editorTemplates.margins},c.pageColor={propertyName:"pageColor",modelName:"@PageColor",defaultVal:"White",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Page Color",editor:b.Widgets.editorTemplates.customColorEditor},c.measureUnit={propertyName:"measureUnit",modelName:"@ReportUnit",defaultVal:"HundredthsOfAnInch",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Measure Units",from:b.fromEnum,values:{HundredthsOfAnInch:"Hundredths of an Inch",TenthsOfAMillimeter:"Tenths of a Millimeter",Pixels:"Pixels"}},c.snapGridSize={propertyName:"snapGridSize",modelName:"@SnapGridSize",defaultVal:12.5,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Snap Grid Size"},c.showPreviewMarginLines={propertyName:"showPreviewMarginLines",modelName:"@ShowPreviewMarginLines",displayName:"Show Margin Lines in Preview",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool},c.verticalContentSplitting={propertyName:"verticalContentSplitting",modelName:"@VerticalContentSplitting",displayName:"Vertical Content Splitting",defaultVal:"Exact",from:b.fromEnum,editor:a.JS.Widgets.editorTemplates.combobox,values:{Exact:"Exact",Smart:"Smart"}},c.displayName={propertyName:"displayNameReport",modelName:"@DisplayName",editor:a.JS.Widgets.editorTemplates.text,defaultVal:"",displayName:"Display Name"},c.reportExportOptionsSerializationInfo={propertyName:"exportOptions",modelName:"ExportOptions",displayName:"Export Options",from:c.ExportOptions.from,toJsonObject:c.ExportOptions.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},c.watermarkSerializationsInfo=[c.font,c.foreColor,{propertyName:"textTransparency",modelName:"@TextTransparency",displayName:"Text Transparency",defaultVal:50,editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"text",modelName:"@Text",displayName:"Text",defaultVal:"",editor:a.JS.Widgets.editorTemplates.comboboxEditable,values:{ASAP:"ASAP",CONFIDENTIAL:"CONFIDENTIAL",COPY:"COPY","DO NOT COPY":"DO NOT COPY",DRAFT:"DRAFT",EVALUATION:"EVALUATION",ORIGINAL:"ORIGINAL",PERSONAL:"PERSONAL",SAMPLE:"SAMPLE","TOP SECRET":"TOP SECRET",URGENT:"URGENT"}},{propertyName:"textDirection",modelName:"@TextDirection",displayName:"Text Direction",defaultVal:"ForwardDiagonal",editor:a.JS.Widgets.editorTemplates.combobox,values:{Horizontal:"Horizontal",ForwardDiagonal:"ForwardDiagonal",BackwardDiagonal:"BackwardDiagonal",Vertical:"Vertical"}},{propertyName:"image",modelName:"@Image",displayName:"Image",editor:a.JS.Widgets.editorTemplates.image},{propertyName:"imageTransparency",modelName:"@ImageTransparency",displayName:"Image Transparency",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"imageTiling",modelName:"@ImageTiling",displayName:"Image Tiling",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"imageAlign",modelName:"@ImageAlign",displayName:"Image Alignment",defaultVal:"MiddleCenter",editor:a.JS.Widgets.editorTemplates.combobox,values:{TopLeft:"TopLeft",TopCenter:"TopCenter",TopRight:"TopRight",MiddleLeft:"MiddleLeft",MiddleCenter:"MiddleCenter",MiddleRight:"MiddleRight",BottomLeft:"BottomLeft",BottomCenter:"BottomCenter",BottomRight:"BottomRight"}},{propertyName:"imageViewMode",modelName:"@ImageViewMode",displayName:"Image View Mode",defaultVal:"Clip",editor:a.JS.Widgets.editorTemplates.combobox,values:{Clip:"Clip",Stretch:"Stretch",Zoom:"Zoom"}},{propertyName:"pageRange",modelName:"@PageRange",displayName:"Page Range",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"showBehind",modelName:"@ShowBehind",defaultVal:!0,from:b.parseBool,displayName:"Show Behind",editor:a.JS.Widgets.editorTemplates.bool}],c.watermark={propertyName:"watermark",modelName:"Watermark",displayName:"Watermark",info:c.watermarkSerializationsInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},c.rollPaper={propertyName:"rollPaper",modelName:"@RollPaper",displayName:"Roll Paper",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.requestParameters={propertyName:"requestParameters",modelName:"@RequestParameters",displayName:"Request Parameters",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.formattingRuleSheet={propertyName:"formattingRuleSheet",modelName:"FormattingRuleSheet",displayName:"FormattingRuleSheet",array:!0},c.pageWidth={propertyName:"pageWidth",modelName:"@PageWidth",displayName:"Page Width",defaultVal:"850",from:b.floatFromModel,toJsonObject:b.saveAsInt,editor:a.JS.Widgets.editorTemplates.numeric},c.pageHeight={propertyName:"pageHeight",modelName:"@PageHeight",displayName:"Page Height",defaultVal:"1100",from:b.floatFromModel,toJsonObject:b.saveAsInt,editor:a.JS.Widgets.editorTemplates.numeric},c.scriptLanguage={propertyName:"scriptLanguage",modelName:"@ScriptLanguage",displayName:"Script Language",defaultVal:"CSharp",editor:a.JS.Widgets.editorTemplates.combobox,values:{CSharp:"C#",VisualBasic:"Visual Basic",JScript:"JScript"}},c.scriptReferencesString={propertyName:"scriptReferencesString",modelName:"@ScriptReferencesString",defaultVal:"",displayName:"Script References",editor:a.JS.Widgets.editorTemplates.stringArray},c.calculatedFields={propertyName:"calculatedFields",modelName:"CalculatedFields",displayName:"Calculated Fields",array:!0,editor:c.editorTemplates.calculatedFields},c.reportSerializationInfo=[{propertyName:"backColor",modelName:"@BackColor",defaultVal:"transparent"},{propertyName:"foreColor",modelName:"@ForeColor",defaultVal:"Black"},{propertyName:"borderColor",modelName:"@BorderColor",defaultVal:"Black"},{propertyName:"font",modelName:"@Font",defaultVal:"Times New Roman, 9pt"},{propertyName:"textAlignment",modelName:"@TextAlignment",defaultVal:"TopLeft"},{propertyName:"borderWidth",modelName:"@BorderWidth",defaultVal:1},{propertyName:"borderDashStyle",modelName:"@BorderDashStyle",defaultVal:"Solid"},{propertyName:"borders",modelName:"@Borders",defaultVal:"None"},{propertyName:"size",visible:!1},c.landscape,c.padding,c.paperKind,c.pageColor,c.bookmark,c.margins,c.rollPaper,c.requestParameters,c.measureUnit,c.snapGridSize,c.watermark,c.displayName,c.verticalContentSplitting,c.showPreviewMarginLines,c.calculatedFields,{propertyName:"scriptsSource",modelName:"@ScriptsSource"},c.pageWidth,c.pageHeight,{propertyName:"bands",modelName:"Bands",array:!0},{propertyName:"crossBandControls",modelName:"CrossBandControls",array:!0},{propertyName:"styles",modelName:"StyleSheet",array:!0},{propertyName:"objectStorage",modelName:"ObjectStorage",array:!0},{propertyName:"componentStorage",modelName:"ComponentStorage",array:!0},{propertyName:"extensions",modelName:"Extensions",array:!0},c.formattingRuleSheet,c.formattingRuleLinks,{propertyName:"parameters",modelName:"Parameters",array:!0},{propertyName:"version",modelName:"@Version"},c.reportExportOptionsSerializationInfo,c.reportScripts,c.scriptLanguage,c.scriptReferencesString].concat(c.baseControlProperties,c.datasourcePrintOptionsGroup),c.popularPropertiesReport=["dataSource","dataMember","dataAdapter","filterString","measureUnit"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d={TopMarginBand:100,ReportHeaderBand:200,PageHeaderBand:300,GroupHeaderBand:400,DetailBand:500,DetailReportBand:600,GroupFooterBand:700,ReportFooterBand:800,PageFooterBand:900,BottomMarginBand:1e3},e=function(a){function b(b,c,d,e){var f=this;a.call(this,b||{},e,h),this.grayAreaWidth=ko.observable(0),this.realColumnWidth=ko.pureComputed(function(){var a=c()-d.left(),b=a;return f.grayAreaWidth(0),"UseColumnWidth"===f.mode()?f.columnWidth()>a-d.right()?(f.grayAreaWidth(d.right()),b=a-d.right()-f.columnSpacing()):f.columnWidth()>0&&(f.grayAreaWidth(a-f.columnWidth()-f.columnSpacing()),b=f.columnWidth()):"UseColumnCount"===f.mode()&&f.columnCount()>1&&(b=(a-d.right())/f.columnCount()-f.columnSpacing()/2,f.grayAreaWidth(a-b-f.columnSpacing())),b}),this._disposables.push(this.columnWidth.subscribe(function(){f.mode("UseColumnWidth")})),this._disposables.push(this.columnCount.subscribe(function(){f.mode("UseColumnCount")}))}return __extends(b,a),b.unitProperties=["columnWidth","columnSpacing"],b}(b.SerializableModel);c.MultiColumn=e;var f=function(f){function g(d,h,i){var j=this;f.call(this,d,h,i),"TopMarginBand"===this.controlType&&(this.height=h&&this.root.margins.top||ko.observable(0)),"BottomMarginBand"===this.controlType&&(this.height=h&&this.root.margins.bottom||ko.observable(0)),"DetailBand"===this.controlType&&(this.multiColumn=new e(d.MultiColumn,this.root.pageWidth||ko.observable(0),this.root.margins||b.Margins.fromString()),this.sortFields=a.JS.Utils.deserializeArray(d.SortFields,function(a){return new c.GroupFieldModel(a,i)})),"GroupHeaderBand"===this.controlType&&(this.groupFields=a.JS.Utils.deserializeArray(d.GroupFields,function(a){return new c.GroupFieldModel(a,i)})),"SubBand"===this.controlType&&(this.multiColumn=h.multiColumn);var k=[];$.each(d.Bands||[],function(a,b){k.push(new g(b,j,i))}),k.sort(c.sortBands),this.bands=ko.observableArray(k);var l=[];$.each(d.SubBands||[],function(a,b){l.push(new g(b,j,i))}),this.subBands=ko.observableArray(l);var m=this;this.bands().length>0&&(this.height=ko.pureComputed({read:function(){return b.checkModelReady(j.root)?m.bands().reduce(function(a,b){return a+b.height()},0):0},write:function(a){var b=a-m.height.peek(),c=m.bands()[m.bands().length-1].height.peek();m.bands()[m.bands().length-1].height(c+b)}})),this.size.height=this.height,this.controls=a.JS.Utils.deserializeArray(d.Controls,function(a){return j.createControl(a,i)});var n=0;this.heightFromControls=ko.pureComputed(function(){return n=0,b.checkModelReady(j.root)&&(j.controls().forEach(function(a){if(!a.update()){var b=a.anchorVertical&&"Bottom"===a.anchorVertical()&&a.vertAnchoring.state!==c.Anchoring.states.fromControls?0:a.location.y(),d=a.anchorVertical&&"Both"===a.anchorVertical()&&a.vertAnchoring.state!==c.Anchoring.states.fromControls?1:a.size.height(),e=b+d;e>n&&(n=e)}}),n=Math.round(100*n)/100,j.height(Math.max(n,j.height())),n=n>0?n:0),n}),this.dataMember&&this._filterString&&(this.filterString=new a.JS.Widgets.FilterStringOptions(this._filterString,ko.pureComputed(function(){return j.getPath("dataMember")+(j.dataMember()?"."+j.dataMember():"")}),ko.pureComputed(function(){return!j.dataSource||!j.dataSource()})),this.filterString.helper.parameters=this.root.parameters),this.level&&this._disposables.push(this.level.subscribe(function(){j.parentModel()&&g.insertBandSorted(j.parentModel().bands,j)}))}return __extends(g,f),g.prototype.addChild=function(a){a instanceof g?(a.parentModel(this),"SubBand"!==a.controlType?g.insertBand(this.bands,a):this.subBands.push(a)):f.prototype.addChild.call(this,a)},g.prototype.getPath=function(a){return"dataMember"===a?this.dsHelperProvider()&&this.dsHelperProvider().getDataSourcePath(this.dataSource()):"groupFields"===a?this.parentModel().getPath("dataMember")+(this.parentModel().dataMember()?"."+this.parentModel().dataMember():""):""},g.prototype.initialize=function(){var a=this;f.prototype.initialize.call(this),this.size.height=this.height,this.size.width=ko.computed({read:function(){return a.root.size.width()-(a.root.margins?(a.root.margins.left&&a.root.margins.left())+(a.root.margins.right&&a.root.margins.right()):0)},write:function(){return void 0}}),this.size.isPropertyDisabled=function(a){return"width"===a}},g.prototype.removeChild=function(a){a instanceof g?(-1!==this.bands().indexOf(a)&&this.bands.splice(this.bands().indexOf(a),1),-1!==this.subBands().indexOf(a)&&this.subBands.splice(this.subBands().indexOf(a),1)):f.prototype.removeChild.call(this,a)},g.insertBand=function(a,b){("GroupHeaderBand"===b.controlType||"GroupFooterBand"===b.controlType||"DetailReportBand"===b.controlType)&&b.level(a().filter(function(a){return a.controlType===b.controlType}).length),"DetailReportBand"===b.controlType&&b.createChild({"@ControlType":"DetailBand","@HeightF":b.height()}),g.insertBandSorted(a,b)},g.insertBandSorted=function(a,b){if(b){var d=a().slice(0),e=a().indexOf(b);-1===e&&d.push(b),d.sort(c.sortBands);var f=d.indexOf(b);-1!==e&&a.splice(e,1),a.splice(f,0,b)}},g.getBandWeight=function(a){return"GroupHeaderBand"===a.controlType?d[a.controlType]-(a.level()||0):"GroupFooterBand"===a.controlType?d[a.controlType]+(a.level()||0):"DetailReportBand"===a.controlType?d[a.controlType]+(a.level()||-1):d[a.controlType]},g}(c.ReportElementViewModel);c.BandViewModel=f;var g=function(a){function c(d,e){var f=this;a.call(this,d,e,c._unitProperties),this.isSomeParentCollapsed=ko.observable(!1),this.allowMultiselect=!1,this.markerWidth=ko.observable(c.collapsedHeight),this.bands=ko.observableArray(),this.subBands=ko.observableArray(),this.collapsed=ko.observable(!1),this._disposables.push(ko.computed(function(){f._width(e.pageWidth()-e.margins.left())})),this.collapsed=ko.pureComputed({read:function(){return!d.expanded()},write:function(a){d.expanded(!a)}}),this.name=d.name,b.createObservableArrayMapCollection(d.bands,this.bands,this._createSurface),b.createObservableArrayMapCollection(d.subBands,this.subBands,this._createSurface);var g=ko.observable(new b.HoverInfo);this.underCursor=ko.pureComputed({read:function(){return 0!==f.bands().length&&(g().isOver=!1,$.each(f.bands(),function(a,b){return g().isOver=b.underCursor().isOver,!g().isOver})),g()},write:function(a){g(a)}}),this._disposables.push(ko.computed(function(){var a=f.collapsed()||f.isSomeParentCollapsed();f.bands().forEach(function(b){b.isSomeParentCollapsed(a)})}));var h=0;this.subBandsHeight=ko.pureComputed(function(){return h=0,(f.subBands()||[]).forEach(function(a){h+=a.height()}),h}),this.height=ko.pureComputed(function(){if(f.collapsed())return c.collapsedHeight;if(0!==f.bands().length){var a=0;return f.bands().forEach(function(b){a+=b.height()}),a}return f._height()+f.subBandsHeight()}),this.hasOwnRuler=ko.pureComputed(function(){return 0===f.bands().length||f.collapsed()}),this.rulerHeight=ko.pureComputed(function(){return f.collapsed()?c.collapsedHeight:f.height()-f.subBandsHeight()});var i=this.getControlModel().root;if(this.coordinateGridOptions={height:this.getControlModel().height,snapGridSize:i.snapGridSize,width:ko.pureComputed(function(){return i.pageWidth()-i.margins.left()}),zoom:e.zoom,measureUnit:e.measureUnit},this.coordinateGridOptionsVruler={height:this.getControlModel().height,snapGridSize:this.getControlModel().root.snapGridSize,width:this.getControlModel().root.margins.left,zoom:e.zoom,measureUnit:e.measureUnit},this.resize=function(a){f._height(a.size.height()-f.subBandsHeight())},this.resizeTheBand=function(a){f._height(a.size.height())},this.markerClass=ko.pureComputed(function(){var a="dxrd-band-marker-body";return-1!==d.controlType.toLowerCase().indexOf("header")||"TopMarginBand"===d.controlType?a="dxrd-band-marker-header":(-1!==d.controlType.toLowerCase().indexOf("footer")||"BottomMarginBand"===d.controlType)&&(a="dxrd-band-marker-footer"),f.focused()?a+="-focused":a}),this.leftMargin=ko.pureComputed(function(){return 0-(e.margins&&e.margins.left()||0)+10}),d.multiColumn){var j=d.multiColumn;this.grayAreaWidth=ko.pureComputed(function(){return b.unitsToPixel(j.grayAreaWidth(),e.measureUnit(),e.zoom())}),this.columnWidth=ko.pureComputed(function(){return b.unitsToPixel(j.realColumnWidth(),e.measureUnit(),e.zoom())}),this.columnSpacing=ko.pureComputed(function(){return b.unitsToPixel(j.columnSpacing(),e.measureUnit(),e.zoom())})}this.canResize=ko.computed(function(){return f.selected()&&!f.locked&&!f.collapsed()})}return __extends(c,a),c.prototype.markerClick=function(a){return a.expectClick?void(a.expectClick=!1):void(this.focused()?this.collapsed(!this.collapsed()):a.initialize(this))},c.prototype.updateAbsolutePosition=function(){if(this.parent){var a=this.parent,b=0;if(a.collapsed&&a.collapsed())b=a.absolutePosition.y();else if(a.bands&&a.bands()&&0!==a.bands().length){var c=a.bands(),d=c.indexOf(this);d>0&&c[d-1]?b=c[d-1].absolutePosition.y()+c[d-1].height():0===d&&a.absolutePosition&&(b=a.absolutePosition.y())}else if(a.subBands&&a.subBands()&&0!==a.subBands().length){var e=a.subBands(),d=e.indexOf(this);d>0&&e[d-1]?b=e[d-1].absolutePosition.y()+e[d-1].height():0===d&&a.absolutePosition&&(b=a.absolutePosition.y(),a.height&&a.subBandsHeight&&(b+=a.height()-a.subBandsHeight()))}this.absolutePosition.x(0),this.absolutePosition.y(b)}},c.prototype.canDrop=function(){return a.prototype.canDrop.call(this)&&!this.collapsed()},Object.defineProperty(c.prototype,"zoom",{get:function(){return this.getRoot().zoom},enumerable:!0,configurable:!0}),c.prototype.checkParent=function(){return!1},c.collapsedHeight=27,c._unitProperties={_height:function(a){return a.height},heightFromControls:function(a){return a.heightFromControls}},c}(b.SurfaceElementBase);c.BandSurface=g;var h=[{propertyName:"columnCount",modelName:"@ColumnCount",displayName:"Column Count",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},{propertyName:"columnWidth",modelName:"@ColumnWidth",displayName:"Column Width",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric,
from:b.floatFromModel},{propertyName:"columnSpacing",modelName:"@ColumnSpacing",displayName:"Column Spacing",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric,from:b.floatFromModel},{propertyName:"layout",modelName:"@Layout",displayName:"Layout",defaultVal:"DownThenAcross",editor:a.JS.Widgets.editorTemplates.combobox,values:{DownThenAcross:"DownThenAcross",AcrossThenDown:"AcrossThenDown"}},{propertyName:"mode",modelName:"@Mode",displayName:"Mode",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",UseColumnCount:"UseColumnCount",UseColumnWidth:"UseColumnWidth"}}];c.multiColumn={propertyName:"multiColumn",modelName:"MultiColumn",displayName:"Multi-Column Options",info:h,editor:a.JS.Widgets.editorTemplates.objecteditor},c.expanded={propertyName:"expanded",modelName:"@Expanded",from:b.parseBool,defaultVal:!0},c.groupFields={propertyName:"groupFields",modelName:"GroupFields",displayName:"Group Fields",array:!0,editor:a.JS.Widgets.editorTemplates.commonCollection,addHandler:a.Designer.Report.GroupFieldModel.createNew,template:"#dxrd-collection-item-group"},c.drillDownDetailReportExpanded={propertyName:"DrillDownDetailReportExpanded",modelName:"@DrillDownDetailReportExpanded",displayName:"DrillDownDetailReportExpanded",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!0},c.drillDownControl={propertyName:"drillDownControl",modelName:"@DrillDownControl",displayName:"DrillDownControl",link:!0,defaultVal:null,editor:c.editorTemplates.drillDownControls},c.sortFields={propertyName:"sortFields",modelName:"SortFields",displayName:"Sort Fields",array:!0,editor:a.JS.Widgets.editorTemplates.commonCollection,addHandler:a.Designer.Report.GroupFieldModel.createNew,template:"#dxrd-collection-item-group"},c.groupUnion={propertyName:"groupUnion",modelName:"@GroupUnion",displayName:"Group Union",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"None",from:b.fromEnum,values:{None:"None",WholePage:"Whole Page",WithFirstDetail:"With First Detail"}},c.groupFooterUnion={propertyName:"groupFooterUnion",modelName:"@GroupUnion",displayName:"Group Union",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"None",from:b.fromEnum,values:{None:"None",WithLastDetail:"With Last Detail"}},c.printAtBottom={propertyName:"printAtBottom",modelName:"@PrintAtBottom",defaultVal:!1,from:b.parseBool,displayName:"Print at Bottom",editor:a.JS.Widgets.editorTemplates.bool},c.printOn={propertyName:"printOn",modelName:"@PrintOn",displayName:"Print On",defaultVal:"AllPages",editor:a.JS.Widgets.editorTemplates.combobox,values:{AllPages:"All Pages",NotWithReportHeader:"Not with Report Header",NotWithReportFooter:"Not with Report Footer",NotWithReportHeaderAndReportFooter:"Not with Report Header and Report Footer"}},c.level={propertyName:"level",modelName:"@Level",displayName:"Level",defaultVal:0,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric},c.repeatEveryPage={propertyName:"repeatEveryPage",modelName:"@RepeatEveryPage",displayName:"Repeat Every Page",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool},c.pageBreak={propertyName:"pageBreak",modelName:"@PageBreak",displayName:"Page Break",defaultVal:"None",from:b.fromEnum,editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",BeforeBand:"Before the Band",AfterBand:"After the Band"}},c.keepTogetherWithDetailReports={propertyName:"keepTogetherWithDetailReports",modelName:"@KeepTogetherWithDetailReports",defaultVal:!1,from:b.parseBool,displayName:"Keep Together with Detail Reports",editor:a.JS.Widgets.editorTemplates.bool},c.height={propertyName:"height",modelName:"@HeightF",defaultVal:100,displayName:"Height",from:b.floatFromModel},c.commonBandSerializationInfo=[c.textAlignment,c.expanded,{propertyName:"controls",modelName:"Controls",array:!0},{propertyName:"bands",modelName:"Bands",array:!0},{propertyName:"subBands",modelName:"SubBands",array:!0}].concat(c.commonBandProperties,c.fontGroup),c.bandSerializationInfo=[c.styleName,c.stylePriority,c.height].concat(c.commonBandSerializationInfo),c.detailReportBandSerializationInfo=[c.level,c.height,c.pageBreak,c.detailReportBandScripts,i,c.drillDownDetailReportExpanded,c.drillDownControl,c.keepTogetherWithDetailReports].concat(c.commonBandSerializationInfo,c.datasourcePrintOptionsGroup);var i={propertyName:"keepTogether",modelName:"@KeepTogether",defaultVal:!1};c.detailBandSerializationInfo=[c.evenStyleName,c.oddStyleName,i,c.drillDownDetailReportExpanded,c.drillDownControl,c.keepTogetherWithDetailReports,c.sortFields,c.pageBreak,c.commonBandScripts].concat(c.bandSerializationInfo),c.reportHeaderBandSerializationInfo=[i,c.pageBreak,c.commonBandScripts].concat(c.bandSerializationInfo),c.reportFooterBandSerializationInfo=[c.printAtBottom].concat(c.reportHeaderBandSerializationInfo),c.pageBandSerializationInfo=[c.printOn,c.commonBandScripts].concat(c.bandSerializationInfo);var j=[i,c.level,c.pageBreak,c.repeatEveryPage].concat(c.bandSerializationInfo),k={propertyName:"sortingSummary",modelName:"SortingSummary",info:[]};c.groupHeaderBandSerializationInfo=[c.groupFields,c.groupUnion,k,c.drillDownDetailReportExpanded,c.drillDownControl,c.groupHeaderBandScripts].concat(j),c.groupFooterBandSerializationInfo=[c.groupFooterUnion,c.printAtBottom,c.groupBandScripts].concat(j),c.popularPropertiesReportHeader=["pageBreak","keepTogether"],c.popularPropertiesReportFooter=["keepTogether","printAtBottom"],c.popularPropertiesPageHeader=["printOn"],c.popularPropertiesPageFooter=["printOn"],c.popularPropertiesGroupHeader=["groupFields","groupUnion","level","pageBreak","keepTogether","repeatEveryPage"],c.popularPropertiesGroupFooter=["groupFooterUnion","pageBreak","keepTogether","repeatEveryPage","printAtBottom"],c.popularPropertiesDetail=["sortFields","pageBreak","keepTogether","keepTogetherWithDetailReports"],c.popularPropertiesDetailReport=["dataSource","dataMember","dataAdapter","filterString"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,c,d){var e=this;a.call(this,b,c,d),this._disposables.push(this.checkState.subscribe(function(a){e.checked("Unchecked"===a?!1:!0)})),this._disposables.push(this.checked.subscribe(function(a){e.checkState(a?"Checked":"Unchecked")}))}return __extends(b,a),b}(c.ControlViewModel);c.CheckBoxViewModel=d;var e=function(a){function b(b,c){var d=this;a.call(this,b,c),this.checkboxSize=14,this.checkStateWidth=ko.observable(),this.visibleText=ko.observable(!0),this.contenttemplate="dxrd-checkbox-content",this.checkStateClass=ko.pureComputed(function(){return"dxrd-checkbox-checkstate-"+b.checkState().toLowerCase()}),this.leftPadding=function(){var a=b.padding&&b.padding()||"0,0,0,0";return parseFloat(a.split(",")[0])},this.textWidth=ko.pureComputed(function(){return d.contentSizes().width/c.zoom()-d.checkboxSize-d.leftPadding()}),this.visibleText=ko.pureComputed(function(){return"Center"!==b.glyphAlignment()}),this.checkStateWidth=ko.pureComputed(function(){return d.visibleText()?d.checkboxSize+"px":"100%"}),this.isGlyphAlignmentNear=ko.pureComputed(function(){return"Near"===b.glyphAlignment()}),this.css=ko.pureComputed(function(){return $.extend({},d.cssCalculator.fontCss(),d.cssCalculator.backGroundCss(),d.cssCalculator.foreColorCss(),d.cssCalculator.textAlignmentCss(),d.cssCalculator.paddingsCss())})}return __extends(b,a),b}(c.ControlSurface);c.XRCheckboxSurface=e,c.checkState={propertyName:"checkState",modelName:"@CheckState",displayName:"Check State",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Unchecked",values:{Unchecked:"Unchecked",Checked:"Checked",Indeterminate:"Indeterminate"}},c.checked={propertyName:"checked",modelName:"@Checked",defaultVal:!1,from:b.parseBool,displayName:"Checked",editor:a.JS.Widgets.editorTemplates.bool},c.glyphAlignment={propertyName:"glyphAlignment",modelName:"@GlyphAlignment",displayName:"Glyph Alignment",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Near",values:{Near:"Near",Center:"Center",Far:"Far"}},c.checkboxSerializationsInfo=[c.checkState,c.checked,c.text,c.wordWrap,c.glyphAlignment,c.keepTogether,c.anchorVertical,c.anchorHorizontal,{propertyName:"textAlignment",modelName:"@TextAlignment",defaultVal:"MiddleLeft"},c.textControlScripts,c.dataBindings(["Text","NavigateUrl","Tag","Bookmark","CheckState"]),c.defaultDataBinding("CheckState")].concat(c.sizeLocation,c.commonControlProperties,c.fontGroup,c.navigationGroup),c.popularPropertiesCheckBox=["checkState","defaultDataBinding","text","bookmark","bookmarkParent"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function d(b,d,e){var f=this;a.call(this,b,d,e),this._chartStructure=ko.observable(),this._chartElement=ko.observable(null);var g=this._dataSource,h=ko.computed(function(){var a=f.parentModel(),b=a&&a.dsHelperProvider&&a.dsHelperProvider();b&&(g=b.dataSourceValue(f._dataSource),h.dispose())});this.dataSource=ko.computed({read:function(){return f.isPivotGridDataSource?f._dataSource.peek():g.peek()},write:function(a){var b=a instanceof c.XRPivotGridViewModel;b?f._dataSource(a):g(a),f._setDataMembers(b)}}),this._initChartElementFunctions(),this._assignChartPropertiesFromNestedObjects(),this._initChartStructure(),this._disposables.push(this.chart.dataContainer.series.subscribe(this._createCollectionSubscriptionDelegate("Chart","series"),null,"arrayChange")),this._disposables.push(this.chart.titles.subscribe(this._createCollectionSubscriptionDelegate("Chart","titles"),null,"arrayChange")),this._setDisabled()}return __extends(d,a),d.prototype._createCollectionSubscriptionDelegate=function(a,c){var d=this,e=a+"."+c;return function(a){a.forEach(function(a){if(a.status)if("deleted"===a.status)d._chartStructureProvider.selectedPath(e),0!==d.fakeChart[c]().length&&d._chartStructureProvider.selectedPath(e+".0");else{if(!a.value.name()){var f=c.charAt(0).toUpperCase()+c.substr(1)+" ";a.value.name(b.getUniqueNameForNamedObjectsArray(d.fakeChart[c](),f))}d._chartStructureProvider.selectedPath(e+"."+a.index.toString())}})}},d.prototype._setDisabled=function(){var a=this,b=function(b){b.forEach(function(b){b.disabled&&b.disabled(a.lockedInUserDesigner())})};b(this.chart.dataContainer.series().innerActions),this.chart.dataContainer.series().forEach(function(a){b(a.innerActions)}),b(this.chart.titles().innerActions),this.chart.titles().forEach(function(a){b(a.innerActions)})},d.prototype._initChartElementFunctions=function(){var a=this,b=function(b){b.getPath=function(b){return"argumentDataMember"===b?a.getPath("seriesDataMember"):void 0},b.isPropertyDisabled=function(b){return!a.dataSource()||a.isPivotGridDataSource?"argumentDataMember"===b||"valueDataMembers"===b:void 0},b.valueDataMembers().getPath=function(){return a.getPath("valueDataMembers")}};this.chart.dataContainer.series().forEach(b),this._disposables.push(this.chart.dataContainer.series.subscribe(function(a){"added"===a[0].status&&b(a[0].value)},null,"arrayChange")),this.chart.dataContainer.seriesTemplate.getPath=function(){return a.getPath("seriesDataMember")},this.chart.dataContainer.seriesTemplate.isPropertyDisabled=function(b){return!a.dataSource()||a.isPivotGridDataSource&&a.chart.dataContainer.pivotGridDataSourceOptions.autoBindingSettingsEnabled()?"argumentDataMember"===b||"valueDataMembers"===b||"valueScaleType"===b||"argumentScaleType"===b:void 0},this.chart.dataContainer.seriesTemplate.valueDataMembers().getPath=function(){return a.getPath("valueDataMembers")},this._disposables.push(this.chart.dataContainer.seriesTemplate.valueDataMembers.subscribe(function(b){b.getPath=function(){return a.getPath("valueDataMembers")}})),this._disposables.push(this.chart.dataContainer.pivotGridDataSourceOptions.autoBindingSettingsEnabled.subscribe(function(b){b&&a._setDataMembers(!1)}))},d.prototype._initChartStructure=function(){var a=this;this.fakeChart={seriesTemplate:this.chart.dataContainer.seriesTemplate,series:this.chart.dataContainer.series,titles:this.chart.titles,legend:this.chart.legend,axisX:ko.pureComputed(function(){return a.chart.diagram().axisX}),axisY:ko.pureComputed(function(){return a.chart.diagram().axisY}),getInfo:function(){return g},className:function(){return"chart"}},this._chartStructureProvider=new b.ObjectStructureProvider(this.fakeChart,"Chart"),this.chartStructureTreeListController=new b.ObjectStructureTreeListController(["chart","Chart","titles","legend","series","axisX","axisY","seriesTemplate","TitleViewModel","SeriesViewModel"],["chart","titles","series"]),this._chartStructure({itemsProvider:this._chartStructureProvider,treeListController:this.chartStructureTreeListController,selectedPath:this._chartStructureProvider.selectedPath}),this._disposables.push(this._chartStructureProvider.selectedMember.subscribe(function(b){var c=null,d=a._chartStructureProvider.selectedPath().split(".");if(b&&d.length>1&&(c=b,void 0===c.getInfo)){var e=g.filter(function(a){return a.propertyName===d[1]})[0];e.info?c.getInfo=function(){return e.info}:c={element:c,getInfo:function(){return[$.extend({},e,{propertyName:"element"})]}}}a._chartElement(c)})),this._chartStructureProvider.selectedPath("")},d.prototype._assignValueDataMembers=function(a){var c=this.chart.dataContainer.seriesTemplate.valueDataMembers(),d=function(b){b.forEach(function(b){c[b](a)})};c instanceof b.Chart.CommonValueDataMembers?d(["value"]):c instanceof b.Chart.ValueWeightDataMembers?d(["value","weight"]):c instanceof b.Chart.Value1Value2DataMembers?d(["value1","value2"]):c instanceof b.Chart.StockValueDataMembers&&d(["open","close","hight","low"])},d.prototype._setDataMembers=function(a){a?(this.chart.dataContainer.seriesDataMember("Series"),this.chart.dataContainer.seriesTemplate.argumentDataMember("Arguments"),this._assignValueDataMembers("Values")):(this.chart.dataContainer.seriesDataMember(""),this.chart.dataContainer.seriesTemplate.argumentDataMember(""),this._assignValueDataMembers(""))},d.prototype._assignChartPropertiesFromNestedObjects=function(){var a=this;this._disposables.push(ko.computed(function(){a.rotated=a.chart.diagram().rotated?a.chart.diagram().rotated:void 0})),this.appearanceName=this.chart.appearanceName,this.paletteName=this.chart.paletteName,this.dataMember=this.chart.dataContainer.dataMember,this.seriesDataMember=this.chart.dataContainer.seriesDataMember,this.pivotGridDataSourceOptions=this.chart.dataContainer.pivotGridDataSourceOptions},d.prototype.getPath=function(a){var b=this._dataSource()||this.root.dataSource&&this.root.dataSource(),c=this.dsHelperProvider()&&this.dsHelperProvider().getDataSourcePath(b);return this.isPivotGridDataSource?"PivotGrid."+a:"seriesDataMember"===a||"valueDataMembers"===a?c+(this.chart.dataContainer.dataMember()?"."+this.chart.dataContainer.dataMember():""):"dataMember"===a?c:void 0},d.prototype.isPropertyDisabled=function(a){return!this.dataSource()||this.isPivotGridDataSource&&this.pivotGridDataSourceOptions.autoBindingSettingsEnabled()?"seriesDataMember"===a||"dataMember"===a:!this.dataSource()||this.isPivotGridDataSource?"dataMember"===a:void 0},Object.defineProperty(d.prototype,"isPivotGridDataSource",{get:function(){return this._dataSource()instanceof c.XRPivotGridViewModel},enumerable:!0,configurable:!0}),d}(c.ControlViewModel);c.XRChartViewModel=d;var e=function(a){function d(d,e){var f=this;a.call(this,d,e),this.imageSrc=ko.observable(""),this.contenttemplate="dxrd-shape-content",this._disposables.push(ko.computed(function(){var a=d.chart.dataContainer.series();a.forEach(function(a){a.view.typeName()});var e=f;b.Report.HandlerUri&&c.ReportRenderingService.getChartImage(f).done(function(a){var b=e._control.chart.dataContainer.series();b.forEach(function(a){a.isIncompatible(!1)}),e.imageSrc("data:image/x;base64,"+a.Image),a.Indexes.forEach(function(a){var c=b[a];c.isIncompatible(!0)})}).fail(function(){b.NotifyAboutWarning("Impossible to get chart image.")})}))}return __extends(d,a),d}(c.ControlSurface);c.ChartSurface=e;var f=function(){function a(){}return a.prototype.beforeItemsFilled=function(a,b){if("PivotGrid"!==a.ref&&"PivotGrid"!==a.id)return!1;switch(a.path){case"dataMember":return!0;case"seriesDataMember":return b.push({name:"Arguments",displayName:"Arguments",specifics:"String"},{name:"Series",displayName:"Series",specifics:"String"},{name:"Values",displayName:"Values",specifics:"Integer"}),!0;case"valueDataMembers":return b.push({name:"Values",displayName:"Values",specifics:"Integer"}),!0}},a}();c.ChartFieldListExtender=f;var g=[b.Chart.seriesTemplate,b.Chart.seriesSerializable,b.Chart.titles,b.Chart.legend,b.Chart.axisX,b.Chart.axisY];c.chartStructure={propertyName:"_chartStructure",displayName:"Chart Structure",editor:b.Widgets.editorTemplates.treelist},c.chartElement={propertyName:"_chartElement",displayName:"Selected Element",editor:a.JS.Widgets.editorTemplates.objecteditor},c.chartDataSource={propertyName:"_dataSource",modelName:"@DataSource",link:!0},c.chartDataSourceEditable={propertyName:"dataSource",displayName:"Data Source",editor:c.editorTemplates.chartDataSource},c.xrChartSerializationInfo=[b.Chart.chart,c.stylePriority,c.chartDataSource,c.chartDataSourceEditable,{propertyName:"dataMember",displayName:"Data Member",defaultVal:"",editor:b.Widgets.editorTemplates.dataMember},c.chartStructure,c.chartElement].concat(c.baseControlProperties,c.sizeLocation,c.bordersProperties)}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,b){return a.areaIndex()-b.areaIndex()}c.comparerFields=d;var e=function(d){function e(a,c,e){var f=this;d.call(this,b.cutRefs(a),c,e),this.controlType="PivotGridField",this.areaIndexEditable=ko.pureComputed({read:function(){return f.areaIndex()},write:function(a){if(a>=0){var b=c.getFieldsFromArea(f.area());if(a>=b.length)return;var d=f.areaIndex(),e=d>a?1:-1,g=Math.min(a,d),h=Math.max(a,d);b.forEach(function(a){var b=a.areaIndex();b>=g&&h>=b&&a.areaIndex(b+e)}),f.areaIndex(a)}}}),this._disposables.push(this.area.subscribe(function(){f.areaIndex(c.getFieldsFromArea(f.area()).length-1)}))}return __extends(e,d),e.createNew=function(a){return function(){return new e({},ko.unwrap(a),null)}},e.prototype.getInfo=function(){return c.pivotGridFieldSerializationsInfo},e.prototype.getControlFactory=function(){return a.Designer.Report.controlsFactory},e.prototype.getPath=function(){return this.parentModel().getPath("")+(this.parentModel().dataMember()?"."+this.parentModel().dataMember():"")},e.fieldHeight=20,e}(b.ElementViewModel);c.PivotGridFieldViewModel=e;var f=function(a){function b(b,c){var d=this;a.call(this,b,c,null),this.displayName=ko.pureComputed(function(){return b.fieldName()?b.fieldName():b.displayName()||""}),this._disposables.push(ko.computed(function(){d._width(b.width()*c.zoom()),d._height(e.fieldHeight*c.zoom())})),this.template="dxrd-pivotgrid-field",this.area=b.area,this.areaIndex=b.areaIndex}return __extends(b,a),b}(b.Report.ControlSurfaceBase);c.PivotGridFieldSurface=f,c.caption={displayName:"Caption",propertyName:"caption",modelName:"@Caption",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.index={displayName:"Index",propertyName:"index",modelName:"@Index",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric},c.fieldName={propertyName:"fieldName",modelName:"@FieldName",displayName:"Data Column Name",editor:b.Widgets.editorTemplates.field},c.minWidth={displayName:"Min Width",propertyName:"minWidth",modelName:"@MinWidth",defaultVal:20,editor:a.JS.Widgets.editorTemplates.numeric},c.width={displayName:"Width",propertyName:"width",modelName:"@Width",defaultVal:100,editor:a.JS.Widgets.editorTemplates.numeric},c.area={displayName:"Area",propertyName:"area",modelName:"@Area",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"FilterArea",values:{RowArea:"Row Area",ColumnArea:"Column Area",FilterArea:"Filter Area",DataArea:"Data Area"}},c.allowedAreas={propertyName:"allowedAreas",modelName:"@AllowedAreas",displayName:"Allowed Areas",defaultVal:"All",editor:a.JS.Widgets.editorTemplates.combobox,values:{All:"All",RowArea:"Row Area",ColumnArea:"Column Area",FilterArea:"Filter Area",DataArea:"Data Area"}},c.areaIndex={propertyName:"areaIndex",modelName:"@AreaIndex",defaultVal:-1},c.areaIndexEditable={propertyName:"areaIndexEditable",displayName:"Area Index",editor:a.JS.Widgets.editorTemplates.numeric};var g={Count:"Count",Sum:"Sum",Min:"Min",Max:"Max",Average:"Average",StdDev:"StdDev",StdDevp:"StdDevp",Var:"Var",Varp:"Varp",Custom:"Custom"};c.unboundType={propertyName:"unboundType",modelName:"@UnboundType",displayName:"Unbound Type",defaultVal:"Bound",editor:a.JS.Widgets.editorTemplates.combobox,values:{Bound:"Bound",Integer:"Integer",Decimal:"Decimal",DateTime:"DateTime",String:"String",Boolean:"Boolean",Object:"Object"}},c.unboundFieldName={propertyName:"unboundFieldName",modelName:"@UnboundFieldName",displayName:"Unbound Field Name",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.unboundExpression={propertyName:"unboundExpression",modelName:"@UnboundExpression",displayName:"Unbound Expression",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.topValueType={propertyName:"topValueType",modelName:"@TopValueType",displayName:"Top Value Type",defaultVal:"Absolute",editor:a.JS.Widgets.editorTemplates.combobox,values:{Absolute:"Absolute",Percent:"Percent",Sum:"Sum"}},c.topValueShowOthers={propertyName:"topValueShowOthers",modelName:"@TopValueShowOthers",displayName:"Top Value Show Others",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.topValueCount={propertyName:"topValueCount",modelName:"@TopValueCount",displayName:"Top Value Count",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric},c.summaryType={propertyName:"summaryType",modelName:"@SummaryType",displayName:"Summary Type",defaultVal:"Sum",editor:a.JS.Widgets.editorTemplates.combobox,values:g},c.summaryDisplayType={propertyName:"summaryDisplayType",modelName:"@SummaryDisplayType",displayName:"Summary Display Type",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",AbsoluteVariation:"Absolute Variation",PercentVariation:"Percent Variation",PercentOfColumn:"Percent Of Column",PercentOfRow:"Percent Of Row",PercentOfColumnGrandTotal:"Percent Of Column Grand Total",PercentOfRowGrandTotal:"Percent Of Row Grand Total",PercentOfGrandTotal:"Percent Of Grand Total",RankInColumnSmallestToLargest:"Rank In Column Smallest To Largest",RankInRowSmallestToLargest:"Rank In Row Smallest To Largest",RankInColumnLargestToSmallest:"Rank In Column Largest To Smallest",RankInRowLargestToSmallest:"Rank In Row Largest To Smallest",Index:"Index"}},c.sortOrder={propertyName:"sortOrder",modelName:"@SortOrder",displayName:"Sort Order",defaultVal:"Ascending",editor:a.JS.Widgets.editorTemplates.combobox,values:{Ascending:"Ascending",Descending:"Descending"}},c.sortMode={propertyName:"sortMode",modelName:"@SortMode",displayName:"Sort Mode",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",Value:"Value","Display Text":"DisplayText",Custom:"Custom",Key:"Key",ID:"ID",None:"None"}},c.showNewValues={propertyName:"showNewValues",modelName:"@ShowNewValues",displayName:"Show New Values",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.runningTotal={propertyName:"runningTotal",modelName:"@RunningTotal",displayName:"Running Total",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.rowValueLineCount={propertyName:"rowValueLineCount",modelName:"@RowValueLineCount",displayName:"Row Value Line Count",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},c.groupIntervalNumericRange={propertyName:"groupIntervalNumericRange",modelName:"@GroupIntervalNumericRange",displayName:"Group Interval Numeric Range",defaultVal:10,editor:a.JS.Widgets.editorTemplates.numeric},c.groupInterval={propertyName:"groupInterval",modelName:"@GroupInterval",displayName:"Group Interval",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",Date:"Date",Day:"DateDay",DateDayOfWeek:"Day Of Week",DateDayOfYear:"Day Of Year",DateWeekOfMonth:"Week Of Month",DateWeekOfYear:"Week Of Year",DateMonth:"Month",DateQuarter:"Quarter",DateYear:"Year",YearAge:"Year Age",MonthAge:"Month Age",WeekAge:"Week Age",DayAge:"Day Age",Alphabetical:"Alphabetical",Numeric:"Numeric",Hour:"Hour",Custom:"Custom",Minute:"Minute",Second:"Second",DateMonthYear:"Month-Year",DateQuarterYear:"Quarter-Year",DateHour:"Date-Hour",DateHourMinute:"Date-Hour-Minute",DateHourMinuteSecond:"Date-Hour-Minute-Second"}},c.grandTotalText={propertyName:"grandTotalText",modelName:"@GrandTotalText",displayName:"Grand Total Text",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.expandedInFieldsGroup={propertyName:"expandedInFieldsGroup",modelName:"@ExpandedInFieldsGroup",displayName:"Expanded In Fields Group",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.emptyValueText={propertyName:"emptyValueText",modelName:"@EmptyValueText",displayName:"Empty Value Text",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.emptyCellText={propertyName:"emptyCellText",modelName:"@EmptyCellText",displayName:"Empty Cell Text",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.displayFolder={propertyName:"displayFolder",modelName:"@DisplayFolder",displayName:"Display Folder",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},c.columnValueLineCount={propertyName:"columnValueLineCount",modelName:"@ColumnValueLineCount",displayName:"Column Value Line Count",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},c.totalsVisibility={propertyName:"totalsVisibility",modelName:"@TotalsVisibility",displayName:"Totals Visibility",defaultVal:"AutomaticTotals",editor:a.JS.Widgets.editorTemplates.combobox,values:{AutomaticTotals:"Automatic Totals",CustomTotals:"Custom Totals",None:"None"}},c.useNativeFormat={propertyName:"useNativeFormat",modelName:"@UseNativeFormat",displayName:"Export As Numbers To Excel",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},c.KPIGraphic={propertyName:"KPIGraphic",modelName:"@KPIGraphic",displayName:"KPI Graphic",defaultVal:"ServerDefined",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",ServerDefined:"Server Defined",Shapes:"Shapes",TrafficLights:"Traffic Lights",RoadSigns:"Road Signs",Gauge:"Gauge",ReversedGauge:"Reversed Gauge",Thermometer:"Thermometer",ReversedThermometer:"Reversed Thermometer",Cylinder:"Cylinder",ReversedCylinder:"Reversed Cylinder",Faces:"Faces",VarianceArrow:"Variance Arrow",StandardArrow:"Standard Arrow",StatusArrow:"Status Arrow",ReversedStatusArrow:"Reversed Status Arrow"}};var h={propertyName:"formatType",modelName:"@FormatType",displayName:"Format Type",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Numeric:"Numeric",DateTime:"DateTime",Custom:"Custom"}},i={propertyName:"formatString",modelName:"@FormatString",displayName:"Format String",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},j=[h,i];c.cellFormat={propertyName:"cellFormat",modelName:"CellFormat",displayName:"Cell Format",info:j,editor:a.JS.Widgets.editorTemplates.objecteditor},c.totalCellFormat={propertyName:"totalCellFormat",modelName:"TotalCellFormat",displayName:"Total Cell Format",info:j,editor:a.JS.Widgets.editorTemplates.objecteditor},c.grandTotalCellFormat={propertyName:"grandTotalCellFormat",modelName:"GrandTotalCellFormat",displayName:"Grand Total Cell Format",info:j,editor:a.JS.Widgets.editorTemplates.objecteditor},c.valueFormat={propertyName:"valueFormat",modelName:"ValueFormat",displayName:"Value Format",info:j,editor:a.JS.Widgets.editorTemplates.objecteditor},c.totalValueFormat={propertyName:"totalValueFormat",modelName:"TotalValueFormat",displayName:"Total Value Format",info:j,editor:a.JS.Widgets.editorTemplates.objecteditor};var k={propertyName:"textHorizontalAligment",modelName:"@HAlignment",displayName:"Text Horizontal Aligment",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",Near:"Near",Center:"Center",Far:"Far"}},l={propertyName:"textVerticalAligment",modelName:"@VAlignment",displayName:"Text Vertical Aligment",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",Top:"Top",Center:"Center",Bottom:"Bottom"}},m={propertyName:"trimming",modelName:"@Trimming",displayName:"Trimming",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Character:"Character",Word:"Word",EllipsisCharacter:"EllipsisCharacter",EllipsisWord:"EllipsisWord",EllipsisPath:"EllipsisPath"}},n={propertyName:"wordWrap",modelName:"@WordWrap",displayName:"Word Wrap",defaultVal:"NoWrap",editor:a.JS.Widgets.editorTemplates.combobox,values:{NoWrap:"No Wrap",Wrap:"Wrap"}},o=[k,l,m,n],p={propertyName:"textOptions",modelName:"TextOptions",displayName:"Text Options",info:o,editor:a.JS.Widgets.editorTemplates.objecteditor};c.appearanceInfo=[b.Report.backColor,b.Report.borderColor,b.Report.foreColor,b.Report.font,p];var q={propertyName:"cellAppearance",modelName:"Cell",displayName:"Cell",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},r={propertyName:"totalCellAppearance",modelName:"TotalCell",displayName:"Total Cell",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},s={propertyName:"customTotalCellAppearance",modelName:"CustomTotalCell",displayName:"Custom Total Cell",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},t={propertyName:"grandTotalCellAppearance",modelName:"GrandTotalCell",displayName:"Grand Total Cell",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},u={propertyName:"fieldValueAppearance",modelName:"FieldValue",displayName:"Field Value",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},v={propertyName:"fieldValueTotalAppearance",modelName:"FieldValueTotal",displayName:"Field Value Total",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},w={propertyName:"fieldValueGrandTotalAppearance",modelName:"FieldValueGrandTotal",displayName:"Field Value Grand Total",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},x={propertyName:"fieldHeaderAppearance",modelName:"FieldHeader",displayName:"Field Header",info:c.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};c.appearancesInfo=[q,r,s,t,x,u,w,v];var y={propertyName:"appearances",modelName:"Appearance",displayName:"Appearance",info:c.appearancesInfo,editor:a.JS.Widgets.editorTemplates.objecteditor},z={propertyName:"allowDrag",modelName:"@AllowDrag",displayName:"Allow Drag",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},A={propertyName:"@allowDragInCustomizationForm",modelName:"AllowDragInCustomizationForm",displayName:"Allow Drag In Customization Form",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},B={propertyName:"allowExpand",modelName:"@AllowExpand",displayName:"Allow Expand",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},C={propertyName:"allowFilter",modelName:"@AllowFilter",displayName:"Allow Filter",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},D={propertyName:"allowFilterBySummary",modelName:"@AllowFilterBySummary",displayName:"Allow Filter By Summary",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},E={propertyName:"allowRunTimeSummaryChange",modelName:"@AllowRunTimeSummaryChange",displayName:"Allow Run Time Summary Change",
defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},F={propertyName:"allowSort",modelName:"@AllowSort",displayName:"Allow Sort",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},G={propertyName:"allowSortBySummary",modelName:"@AllowSortBySummary",displayName:"Allow Sort By Summary",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},H={propertyName:"groupFilterMode",modelName:"@GroupFilterMode",displayName:"Group Filter Mode",defaultVal:null,editor:a.JS.Widgets.editorTemplates.combobox,values:{List:"List",Tree:"Tree"}},I={propertyName:"hideEmptyVariationItems",modelName:"@HideEmptyVariationItems",displayName:"Hide Empty Variation Items",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},J={propertyName:"showCustomTotals",modelName:"@ShowCustomTotals",displayName:"Show Custom Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},K={propertyName:"showGrandTotal",modelName:"@ShowGrandTotal",displayName:"Show Grand Total",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},L={propertyName:"showSummaryTypeName",modelName:"@ShowSummaryTypeName",displayName:"Show Summary Type Name",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},M={propertyName:"showTotals",modelName:"@ShowTotals",displayName:"Show Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},N={propertyName:"showValues",modelName:"@ShowValues",displayName:"Show Values",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},O=[z,A,B,C,D,E,F,G,H,I,J,K,L,M,N];c.options={propertyName:"options",modelName:"Options",displayName:"Options",info:O,editor:a.JS.Widgets.editorTemplates.objecteditor};{var P={propertyName:"fieldComponentName",modelName:"@FieldComponentName",displayName:"Field Component Name",defaultVal:null,editor:a.JS.Widgets.editorTemplates.text},Q={propertyName:"customTotalSummaryType",modelName:"@CustomTotalSummaryType",displayName:"Custom Total Summary Type",defaultVal:null,editor:a.JS.Widgets.editorTemplates.combobox,values:g},R=[P,c.summaryType,Q];({propertyName:"sortBySummaryInfo",modelName:"SortBySummaryInfo",displayName:"Sort By Summary Info",info:R,editor:a.JS.Widgets.editorTemplates.objecteditor})}c.pivotGridFieldSerializationsInfo=[y,c.allowedAreas,c.area,c.areaIndex,c.areaIndexEditable,c.caption,c.cellFormat,c.columnValueLineCount,c.displayFolder,c.emptyCellText,c.emptyValueText,c.expandedInFieldsGroup,c.fieldName,c.summaryType,c.topValueCount,c.topValueShowOthers,c.grandTotalCellFormat,c.grandTotalText,c.groupInterval,c.groupIntervalNumericRange,c.index,c.KPIGraphic,c.minWidth,c.width,c.rowValueLineCount,c.runningTotal,c.showNewValues,c.sortMode,c.sortOrder,c.summaryDisplayType,c.topValueType,c.totalCellFormat,c.totalValueFormat,c.totalsVisibility,c.unboundExpression,c.unboundFieldName,c.unboundType,c.useNativeFormat,c.valueFormat,c.options].concat(b.Report.baseControlProperties),c.popularPropertiesPivotGridField=["area","areaIndexEditable","fieldNameEditable"],c.pivotGridFieldsSerializable={displayName:"Fields",propertyName:"fields",modelName:"Fields",array:!0,editor:b.Report.editorTemplates.pivotGridFields}}(c=b.Pivot||(b.Pivot={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(c){function d(d,e,f){var g=this;c.call(this,d,e,f),this.fields=a.JS.Utils.deserializeArray(d&&d.Fields||[],function(a){return new b.Pivot.PivotGridFieldViewModel(a,g,f)}),this._disposables.push(this.fields.subscribe(function(){["FilterArea","DataArea","ColumnArea","RowArea"].forEach(function(a){var b=g.getFieldsFromArea(a);$.each(b,function(a,b){b.areaIndex(a)})})})),this.addFieldToArea=function(a){if(!g.lockedInUserDesigner()){var c=new b.Pivot.PivotGridFieldViewModel({"@ControlType":"PivotGridField","@Area":a},g,f);c.index(g.fields().length),c.areaIndex(g.getFieldsFromArea(a).length),g.fields.push(c)}}}return __extends(d,c),d.prototype.removeChild=function(a){a.dispose(),this.fields.splice(this.fields().indexOf(a),1)},d.prototype.getFieldsFromArea=function(a){var c=[];return c.push.apply(c,this.fields().filter(function(b){return b.area()===a})),c.sort(b.Pivot.comparerFields)},d.prototype.getPath=function(){return this.dsHelperProvider()&&this.dsHelperProvider().getDataSourcePath(this.dataSource())},d}(c.ControlViewModel);c.XRPivotGridViewModel=d;var e=function(a){function c(c,d){var e=this;a.call(this,c,d),this.contenttemplate="dxrd-pivotgrid-content",this.filterFields=ko.pureComputed(function(){return e.getAreaFields("FilterArea")}),this.dataFields=ko.pureComputed(function(){return e.getAreaFields("DataArea")}),this.columnFields=ko.pureComputed(function(){return e.getAreaFields("ColumnArea")}),this.rowFields=ko.pureComputed(function(){return e.getAreaFields("RowArea")}),this.totalsHeight=ko.pureComputed(function(){return e.columnFields().length>0?e.columnFields().length*b.Pivot.PivotGridFieldViewModel.fieldHeight:b.Pivot.PivotGridFieldViewModel.fieldHeight}),this.rowHeaderHeight=ko.pureComputed(function(){return e.totalsHeight()+(e.dataFields().length>0?b.Pivot.PivotGridFieldViewModel.fieldHeight:0)+8}),this.totalsDataFieldWidth=ko.pureComputed(function(){return e.getTotalsAreaFieldWidth("DataArea",d.zoom())}),this.totalsRowFieldWidth=ko.pureComputed(function(){return e.getTotalsAreaFieldWidth("RowArea",d.zoom())})}return __extends(c,a),c.prototype._getChildrenHolderName=function(){return"fields"},c.prototype.getAreaFields=function(a){return this.fields().filter(function(b){return b.area()===a}).sort(b.Pivot.comparerFields)},c.prototype.getTotalsAreaFieldWidth=function(a,b){var c=0,d=this.getAreaFields(a);return d.forEach(function(a){c+=a.rect().width}),d.length>0?c/b:100},c}(c.ControlSurface);c.PivotGridSurface=e;var f=function(a){function b(){a.call(this),a.prototype.initActions.call(this,[{text:"Insert Field in Filter Area",imageClassName:"dxrd-image-actions-add_field_to_filter_area",clickAction:function(a){a.addFieldToArea("FilterArea")}},{text:"Insert Field in Data Area",imageClassName:"dxrd-image-actions-add_field_to_data_area",clickAction:function(a){a.addFieldToArea("DataArea")}},{text:"Insert Field in Column Area",imageClassName:"dxrd-image-actions-add_field_to_column_area",clickAction:function(a){a.addFieldToArea("ColumnArea")}},{text:"Insert Field in Row Area",imageClassName:"dxrd-image-actions-add_field_to_row_area",clickAction:function(a){a.addFieldToArea("RowArea")}}])}return __extends(b,a),b.prototype.condition=function(a){return a instanceof d},b}(b.BaseActionsProvider);c.PivotGridActions=f;var g={propertyName:"linesAppearance",modelName:"Lines",displayName:"Lines",info:b.Pivot.appearanceInfo,editor:a.JS.Widgets.editorTemplates.objecteditor};c.pivotGridAppearances={propertyName:"appearances",modelName:"Appearance",displayName:"Appearance",info:b.Pivot.appearancesInfo.concat(g),editor:a.JS.Widgets.editorTemplates.objecteditor};var h={propertyName:"cellStyleName",modelName:"@CellStyleName",displayName:"Cell",editor:c.editorTemplates.style,defaultVal:null},i={propertyName:"customTotalCellStyleName",modelName:"@CustomTotalCellStyleName",displayName:"Custom Total Cell",editor:c.editorTemplates.style,defaultVal:null},j={propertyName:"fieldHeaderStyleName",modelName:"@FieldHeaderStyleName",displayName:"Field Header",editor:c.editorTemplates.style,defaultVal:null},k={propertyName:"fieldValueGrandTotalStyleName",modelName:"@FieldValueGrandTotalStyleName",displayName:"Field Value Grand Total",editor:c.editorTemplates.style,defaultVal:null},l={propertyName:"fieldValueStyleName",modelName:"@FieldValueStyleName",displayName:"Field Value",editor:c.editorTemplates.style,defaultVal:null},m={propertyName:"fieldValueTotalStyleName",modelName:"@FieldValueTotalStyleName",displayName:"Field Value Total",editor:c.editorTemplates.style,defaultVal:null},n={propertyName:"filterSeparatorStyleName",modelName:"@FilterSeparatorStyleName",displayName:"Filter Separator",editor:c.editorTemplates.style,defaultVal:null},o={propertyName:"grandTotalCellStyleName",modelName:"@GrandTotalCellStyleName",displayName:"Grand Total Cell",editor:c.editorTemplates.style,defaultVal:null},p={propertyName:"headerGroupLineStyleName",modelName:"@HeaderGroupLineStyleName",displayName:"Header Group Line",editor:c.editorTemplates.style,defaultVal:null},q={propertyName:"linesStyleName",modelName:"@LinesStyleName",displayName:"Lines",editor:c.editorTemplates.style,defaultVal:null},r={propertyName:"totalCellStyleName",modelName:"@TotalCellStyleName",displayName:"Total Cell",editor:c.editorTemplates.style,defaultVal:null};c.pivotGridStyles=[h,i,j,k,l,m,n,o,p,q,r];var s={propertyName:"criteriaString",modelName:"@CriteriaString",displayName:"Criteria String",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},t={propertyName:"enabled",modelName:"@Enabled",displayName:"Enabled",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool};c.prefilter={propertyName:"prefilter",modelName:"Prefilter",displayName:"Prefilter",info:[s,t],editor:a.JS.Widgets.editorTemplates.objecteditor};var u={propertyName:"autoTransposeChart",modelName:"@AutoTransposeChart",displayName:"Auto Transpose Chart",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},v={propertyName:"dataProvideMode",modelName:"@DataProvideMode",displayName:"Data Provide Mode",defaultVal:"ProvideLastLevelData",editor:a.JS.Widgets.editorTemplates.combobox,values:{ProvideLastLevelData:"Provide Last Level Data",UseCustomSettings:"Use Custom Settings"}},w={propertyName:"dataProvidePriority",modelName:"@DataProvidePriority",displayName:"Data Provide Priority",defaultVal:"Rows",editor:a.JS.Widgets.editorTemplates.combobox,values:{Columns:"Columns",Rows:"Rows"}},x={propertyName:"fieldValuesProvideMode",modelName:"@FieldValuesProvideMode",displayName:"Field Values Provide Mode",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",DisplayText:"Display Text",Value:"Value"}},y={propertyName:"maxAllowedPointCountInSeries",modelName:"@MaxAllowedPointCountInSeries",displayName:"Max Allowed Point Count In Series",defaultVal:100,editor:a.JS.Widgets.editorTemplates.numeric},z={propertyName:"maxAllowedSeriesCount",modelName:"@MaxAllowedSeriesCount",displayName:"Max Allowed Series Count",defaultVal:10,editor:a.JS.Widgets.editorTemplates.numeric},A={propertyName:"provideColumnCustomTotals",modelName:"@ProvideColumnCustomTotals",displayName:"Provide Column Custom Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},B={propertyName:"provideColumnGrandTotals",modelName:"@ProvideColumnGrandTotals",displayName:"Provide Column Grand Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},C={propertyName:"provideColumnTotals",modelName:"@ProvideColumnTotals",displayName:"Provide Column Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},D={propertyName:"provideDataByColumns",modelName:"@ProvideDataByColumns",displayName:"Provide Data By Columns",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},E={propertyName:"provideDataFieldsOnSeries",modelName:"@ProvideDataFieldsOnSeries",displayName:"Provide Data Fields On Series",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},F={propertyName:"provideEmptyCells",modelName:"@ProvideEmptyCells",displayName:"Provide Empty Cells",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},G={propertyName:"provideRowCustomTotals",modelName:"@ProvideRowCustomTotals",displayName:"Provide Row Custom Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},H={propertyName:"provideRowGrandTotals",modelName:"@ProvideRowGrandTotals",displayName:"Provide Row Grand Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},I={propertyName:"provideRowTotals",modelName:"@ProvideRowTotals",displayName:"Provide Row Totals",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},J=[u,v,w,x,y,z,A,B,C,D,E,F,G,H,I],K={propertyName:"optionsChartDataSource",modelName:"OptionsChartDataSource",displayName:"Options Chart Data Source",info:J,editor:a.JS.Widgets.editorTemplates.objecteditor},L={propertyName:"allowCrossGroupVariation",modelName:"@AllowCrossGroupVariation",displayName:"AllowCrossGroupVariation",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},M={propertyName:"autoExpandGroups",modelName:"@AutoExpandGroups",displayName:"AutoExpandGroups",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},N={propertyName:"caseSensitive",modelName:"@CaseSensitive",displayName:"CaseSensitive",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},O={propertyName:"dataFieldUnboundExpressionMode",modelName:"@DataFieldUnboundExpressionMode",displayName:"DataFieldUnboundExpressionMode",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:{Default:"Default",UseSummaryValues:"Use Summary Values"}},P={propertyName:"DrillDownMaxRowCount",modelName:"@DrillDownMaxRowCount",displayName:"DrillDownMaxRowCount",defaultVal:-1,editor:a.JS.Widgets.editorTemplates.numeric},Q={propertyName:"filterByVisibleFieldsOnly",modelName:"@FilterByVisibleFieldsOnly",displayName:"FilterByVisibleFieldsOnly",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},R=[L,M,N,O,P,Q],S={propertyName:"optionsData",modelName:"OptionsData",displayName:"Data Options",info:R,editor:a.JS.Widgets.editorTemplates.objecteditor},T={propertyName:"area",modelName:"@Area",displayName:"Area",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",ColumnArea:"Column Area",RowArea:"Row Area"}},U={propertyName:"areaIndex",modelName:"@AreaIndex",displayName:"Area Index",defaultVal:-1,editor:a.JS.Widgets.editorTemplates.numeric},V={propertyName:"columnValueLineCount",modelName:"@ColumnValueLineCount",displayName:"Column Value Line Count",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},W={propertyName:"fieldNaming",modelName:"@FieldNaming",displayName:"Field Naming",defaultVal:"FieldName",editor:a.JS.Widgets.editorTemplates.combobox,values:{FieldName:"Field Name",Name:"Name"}},X={propertyName:"rowHeaderWidth",modelName:"@RowHeaderWidth",displayName:"Row Header Width",defaultVal:100,editor:a.JS.Widgets.editorTemplates.numeric},Y={propertyName:"rowValueLineCount",modelName:"@RowValueLineCount",displayName:"Row Value Line Count",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},Z=[T,U,b.Pivot.caption,V,W,X,Y],_={propertyName:"optionsDataField",modelName:"OptionsDataField",displayName:"Data Field Options",info:Z,editor:a.JS.Widgets.editorTemplates.objecteditor},aa={propertyName:"columnFieldValueSeparator",modelName:"@ColumnFieldValueSeparator",displayName:"Column Field Value Separator",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric},ba={propertyName:"filterSeparatorBarPadding",modelName:"@FilterSeparatorBarPadding",displayName:"Filter Separator Bar Padding",defaultVal:-1,editor:a.JS.Widgets.editorTemplates.numeric},ca={propertyName:"mergeColumnFieldValues",modelName:"@MergeColumnFieldValues",displayName:"Merge Column Field Values",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},da={propertyName:"mergeRowFieldValues",modelName:"@MergeRowFieldValues",displayName:"Merge Row Field Values",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},ea={propertyName:"printColumnHeaders",modelName:"@PrintColumnHeaders",displayName:"Print Column Headers",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},fa={propertyName:"printDataHeaders",modelName:"@PrintDataHeaders",displayName:"Print Data Headers",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},ga={propertyName:"printFilterHeaders",modelName:"@PrintFilterHeaders",displayName:"Print Filter Headers",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},ha={propertyName:"printHeadersOnEveryPage",modelName:"@PrintHeadersOnEveryPage",displayName:"Print Headers on Every Page",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},ia={propertyName:"printHorzLines",modelName:"@PrintHorzLines",displayName:"Print Horizontal Lines",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},ja={propertyName:"printRowHeaders",modelName:"@PrintRowHeaders",displayName:"Print Row Headers",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},ka={propertyName:"printUnusedFilterFields",modelName:"@PrintUnusedFilterFields",displayName:"Print Unused Filter Fields",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},la={propertyName:"printVertLines",modelName:"@PrintVertLines",displayName:"Print Vertical Lines",defaultVal:"Default",editor:a.JS.Widgets.editorTemplates.combobox,values:b.Chart.defaultBooleanValues},ma={propertyName:"rowFieldValueSeparator",modelName:"@RowFieldValueSeparator",displayName:"Row Field Value Separator",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric},na={propertyName:"usePrintAppearance",modelName:"@UsePrintAppearance",displayName:"Use Print Appearance",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},oa=[aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,na],pa={propertyName:"optionsPrint",modelName:"OptionsPrint",displayName:"Print Options",info:oa,editor:a.JS.Widgets.editorTemplates.objecteditor},qa={propertyName:"columnTotalsLocation",modelName:"@ColumnTotalsLocation",displayName:"Column Totals Location",defaultVal:"Far",editor:a.JS.Widgets.editorTemplates.combobox,values:{Near:"Near",Far:"Far "}},ra={propertyName:"groupFieldsInCustomizationWindow",modelName:"@GroupFieldsInCustomizationWindow",displayName:"Group Fields in the Customization Window",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},sa={propertyName:"rowTotalsLocation",modelName:"@RowTotalsLocation",displayName:"Row Totals Location",defaultVal:"Far",editor:a.JS.Widgets.editorTemplates.combobox,values:{Near:"Near",Far:"Far",Tree:"Tree"}},ta={propertyName:"rowTreeOffset",modelName:"@RowTreeOffset",displayName:"Row Tree Offset",defaultVal:21,editor:a.JS.Widgets.editorTemplates.numeric},ua={propertyName:"rowTreeWidth",modelName:"@RowTreeWidth",displayName:"Row Tree Width",defaultVal:100,editor:a.JS.Widgets.editorTemplates.numeric},va={propertyName:"showColumnGrandTotalHeader",modelName:"@ShowColumnGrandTotalHeader",displayName:"Show Column Grand Total Header",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},wa={propertyName:"showColumnGrandTotals",modelName:"@ShowColumnGrandTotals",displayName:"Show Column Grand Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},xa={propertyName:"showColumnHeaders",modelName:"@ShowColumnHeaders",displayName:"Show Column Headers",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},ya={propertyName:"showColumnTotals",modelName:"@ShowColumnTotals",displayName:"Show Column Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},za={propertyName:"showCustomTotalsForSingleValues",modelName:"@ShowCustomTotalsForSingleValues",displayName:"Show Custom Totals For Single Values",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Aa={propertyName:"showDataHeaders",modelName:"@ShowDataHeaders",displayName:"Show Data Headers",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ba={propertyName:"showFilterHeaders",modelName:"@ShowFilterHeaders",displayName:"Show Filter Headers",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ca={propertyName:"showFilterSeparatorBar",modelName:"@ShowFilterSeparatorBar",displayName:"Show Filter Separator Bar",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Da={propertyName:"showGrandTotalsForSingleValues",modelName:"@ShowGrandTotalsForSingleValues",displayName:"Show Grand Totals For Single Values",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ea={propertyName:"showHorzLines",modelName:"@ShowHorzLines",displayName:"Show Horz Lines",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Fa={propertyName:"showRowGrandTotalHeader",modelName:"@ShowRowGrandTotalHeader",displayName:"Show Row Grand Total Header",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ga={propertyName:"showRowGrandTotals",modelName:"@ShowRowGrandTotals",displayName:"Show Row Grand Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ha={propertyName:"showRowHeaders",modelName:"@ShowRowHeaders",displayName:"Show Row Headers",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ia={propertyName:"showRowTotals",modelName:"@ShowRowTotals",displayName:"Show Row Totals",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ja={propertyName:"showTotalsForSingleValues",modelName:"@ShowTotalsForSingleValues",displayName:"Show Totals For Single Values",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},Ka={propertyName:"showVertLines",modelName:"@ShowVertLines",displayName:"Show Vert Lines",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},La=[qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa,Ba,Ca,Da,Ea,Fa,Ga,Ha,Ia,Ja,Ka],Ma={propertyName:"optionsView",modelName:"OptionsView",displayName:"View Options",info:La,editor:a.JS.Widgets.editorTemplates.objecteditor};c.pivotGridOptions=[K,_,S,pa,Ma],c.pivotGridSerializationsInfo=[c.pivotGridAppearances,c.anchorVertical,c.anchorHorizontal,c.dataSource,c.dataMember,c.prefilter,c.keepTogether,b.Pivot.pivotGridFieldsSerializable,c.pivotScripts].concat(c.baseControlProperties,c.sizeLocation,c.bookmarkGroup,c.pivotGridStyles,c.pivotGridOptions)}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function d(d,e,f){var g=this;a.call(this,d,e,f);var h=ko.observable(),i=ko.observable(),j=this.size.width,k=this.size.height;this.size.width=ko.pureComputed({read:function(){return j()},write:function(a){if(g.isAutoSize)if(b.checkModelReady(g.root)){var c=j();j(a),j(c)}else j(a);else j(a)}}),this.size.height=ko.pureComputed({read:function(){return k()},write:function(a){if(g.isAutoSize)if(b.checkModelReady(g.root)){var c=k();k(a),k(c)}else k(a);else k(a)}}),this._disposables.push(ko.computed(function(){var a=new Image;a.onload=function(){var c=g.root;g._disposables.push(ko.computed(function(){h(b.pixelToUnits(a.width,c.measureUnit(),1)),i(b.pixelToUnits(a.height,c.measureUnit(),1))}))},g.image()&&(a.src="data:image/x;base64,"+g.image())})),this._disposables.push(ko.computed(function(){if(g.isAutoSize&&g.image.peek()){var a,c,d,e,f=new b.Widgets.BordersModel({value:g.borders}),l=g.borderWidth()||0,m=new b.Widgets.PaddingModel({value:g.padding});a=f.top()?l:0,c=f.bottom()?l:0,d=f.left()?l:0,e=f.right()?l:0,j(h()+e+d+m.left()+m.right()),k(i()+a+c+m.top()+m.bottom())}})),this.isSmallerImage=ko.pureComputed(function(){return h()<=g.size.width()&&i()<=g.size.height()}),this._disposables.push(this.imageUrl.subscribe(function(a){a&&g.image(null)})),this._disposables.push(this.image.subscribe(function(a){a&&g.imageUrl(c.imageUrl.defaultVal)}))}return __extends(d,a),Object.defineProperty(d.prototype,"isAutoSize",{get:function(){return"AutoSize"===this.sizing()},enumerable:!0,configurable:!0}),d}(c.ControlViewModel);c.XRPictureBoxViewModel=d;var e=function(a){function b(b,c){var d=this;a.call(this,b,c);var b=this.getControlModel();this.css=ko.pureComputed(function(){return $.extend({},d.cssCalculator.paddingsCss())}),this.contentCss=ko.pureComputed(function(){var a=b.image()?"data:image/x;base64,"+b.image():b.imageUrl();return $.extend({},d._createBackimage(b.backColor(),a,b.sizing(),b.isSmallerImage()),d._createBackgroundOrigin())})}return __extends(b,a),b.prototype._createBackimage=function(a,b,c,d){var e={};if(b){if(e={background:a+" url("+b+") no-repeat"},c)switch("Squeeze"===c&&(c=d?"CenterImage":"ZoomImage"),c){case"StretchImage":$.each(["-o-background-size","mozBackgroundSize","backgroundSize"],function(a,b){e[b]="100% 100%"});break;case"CenterImage":e.backgroundPosition="center center";break;case"ZoomImage":$.each(["-o-background-size","mozBackgroundSize","backgroundSize"],function(a,b){e[b]="contain"}),e.backgroundPosition="center center";break;case"AutoSize":$.each(["-o-background-size","mozBackgroundSize","backgroundSize"],function(a,b){e[b]="100% 100%"})}return e}return e={background:a}},b.prototype._createBackgroundOrigin=function(){var a={};return $.each(["background-origin","-webkit-background-origin"," -o-background-origin","mozBackgroundOrigin","backgroundOrigin"],function(b,c){a[c]="content-box"}),a.width=this.contentSizes().width/this._context.zoom()+"px",a.height=this.contentSizes().height/this._context.zoom()+"px",a},b.prototype.getAdornTemplate=function(){var b=a.prototype.getAdornTemplate.call(this),c=this.hasBindings||!this.getControlModel().image()?"dxrd-image-surface-picturebox_placeholder":"";return b+(b&&c?" ":"")+c},b}(c.ControlSurface);c.PictureBoxSurface=e,c.image={propertyName:"image",modelName:"@Image",editor:a.JS.Widgets.editorTemplates.image,displayName:"Image"},c.imageUrl={propertyName:"imageUrl",modelName:"@ImageUrl",editor:a.JS.Widgets.editorTemplates.text,defaultVal:"",displayName:"Image Url"},c.sizing={propertyName:"sizing",modelName:"@Sizing",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Sizing",defaultVal:"Normal",from:b.fromEnum,values:{Normal:"Normal",StretchImage:"Stretch Image",AutoSize:"Auto-Size",CenterImage:"Center Image",ZoomImage:"Zoom Image",Squeeze:"Squeeze"}},c.pictureBoxSerializationsInfo=[c.image,c.imageUrl,c.sizing,c.keepTogether,c.anchorVertical,c.anchorHorizontal,c.controlScripts,c.dataBindings(["Bookmark","Image","ImageUrl","NavigateUrl","Tag"]),c.defaultDataBinding("Image")].concat(c.sizeLocation,c.commonControlProperties,c.navigationGroup),c.popularPropertiesPicture=["image","defaultDataBinding","imageUrl","sizing","bookmark","bookmarkParent"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function c(c,d,f){var g=this;b.call(this,c,d,f),this.rows=ko.observableArray(),this.rowsTotalWeight=ko.pureComputed(function(){var a=0;return g.rows().forEach(function(b){a+=b.weight()}),a}),this.pixelHeightWeight=ko.pureComputed(function(){return 0!==g.size.height()?g.rowsTotalWeight()/g.size.height():0});var h=a.JS.Utils.deserializeArray(c.Rows,function(a){return new e(a,g,f)});this.rows(h())}return __extends(c,b),c.prototype._getAdjacentCells=function(a){var b=[];return this.rows().forEach(function(c){c.cells().filter(function(b){return a(b)}).forEach(function(a){b.push(a)})}),b},c.prototype.updateRowLocation=function(a,b){var c=this.rows.indexOf(a),d=b/a.height()*a.weight(),e=c-1;this.rows()[c].weight(this.rows()[c].weight()+d),-1===e?(this.location.y(this.location.y()-b),this.size.height(this.size.height()+b)):this.rows()[e].weight(this.rows()[e].weight()-d)},c.prototype.addChild=function(a,b){if(!(a instanceof e))throw new Error("Trying to add non a row to the table.");-1===this.rows().indexOf(a)&&(a.parentModel(this),null!=b?this.rows.splice(b,0,a):this.rows.push(a))},c.prototype.insertRow=function(a,b){var c=a.height(),d=new e({"@ControlType":"XRTableRow","@Weight":a.weight(),"@HeigthF":c},this),f=this.rows.indexOf(a);a.cells().forEach(function(a){d.createChild({"@ControlType":"XRTableCell","@Weight":a.weight()})}),this.addChild(d,f+(b?0:1)),this.size.height(this.size.height()+c)},c.prototype.removeChild=function(a){if(this.rows().length>0&&-1!==this.rows().indexOf(a)){var b=this.rows().indexOf(a);this.size.height(this.size.height()-a.height()),this.rows.splice(b,1)}0===this.rows().length&&this.parentModel().removeChild(this)},c.prototype.insertColumn=function(a,b){var c=a.surface.rect().left,d=a.surface.rect().left+a.surface.rect().width,e=this._getAdjacentCells(function(a){return b?a.surface.rect().left+a.surface.rect().width===d:a.surface.rect().left===c});e.forEach(function(a){a.parentModel().insertCellCopy(a,b)})},c}(c.ControlViewModel);c.TableControlViewModel=d;var e=function(c){function d(d,e,f){var g=this;c.call(this,d,e,f),this.top=ko.observable(0),this.width=e.size.width,this.cells=ko.observableArray(),this.cellsTotalWeight=ko.pureComputed(function(){var a=0;return g.cells().forEach(function(b){a+=b.weight()}),a}),this.pixelWidthWeight=ko.pureComputed(function(){return 0!==e.size.width()?g.cellsTotalWeight()/e.size.width():0}),this.height=ko.pureComputed({read:function(){var a=e.size.height()*g.weight()/e.rowsTotalWeight();return Math.round(100*a)/100},write:function(a){var b=a-g.height(),c=e.pixelHeightWeight()*a,d=c-g.weight(),f=e.rows().indexOf(g);g.weight(c),f<e.rows().length-1?e.rows()[f+1].weight(e.rows()[f+1].weight()-d):e.size.height(e.size.height()+b)}}),this.size=new b.Size(0,0),this.size.height=ko.pureComputed({read:function(){return g.height()},write:function(a){b.checkModelReady(g.root)&&g.height(a)}}),this.size.width=ko.pureComputed({read:function(){return g.width()},write:function(a){b.checkModelReady(g.root)&&g.width(a)}});var h=a.JS.Utils.deserializeArray(d.Cells,function(a){return g.getControlFactory().createControl(a,g,f)});this.cells(h());var i=ko.observable(null);this.top=ko.pureComputed({read:function(){var a=e.rows().indexOf(g);if(a>0){var b=e.rows()[a-1];i(b.top()+b.height())}else i(0);return i()},write:function(a){e.updateRowLocation(g,i()-a),i(a)}})}return __extends(d,c),d.prototype.updateCellLocation=function(a,b){var c=a.width(),d=this.cells().indexOf(a);if(d>0){var e=this.cells()[d-1].width;e(e()-b)}else{var f=a.weight()/c*b;a.weight(a.weight()+f);var g=this.parentModel();g.location.x(g.location.x()-b),g.size.width(g.size.width()+b)}},d.prototype.addChild=function(a,b){if(!(a instanceof f))throw new Error("Trying to add non a cell to the table row.");-1===this.cells().indexOf(a)&&(a.parentModel(this),null!=b?this.cells.splice(b,0,a):this.cells.push(a))},d.prototype.insertCellCopy=function(a,b){var c=a.weight()/2,d=new f({"@ControlType":"XRTableCell","@Weight":c},this),e=this.cells.indexOf(a);this.addChild(d,e+(b?1:0)),d.text&&d.text(d.name()),a.weight(c)},d.prototype.removeChild=function(a){if(this.cells().length>0&&-1!==this.cells().indexOf(a)){var b=this.cells().indexOf(a),c=a.weight();this.cells.splice(b,1),this.cells()[b]?this.cells()[b].weight(this.cells()[b].weight()+c):this.cells()[b-1]&&this.cells()[b-1].weight(this.cells()[b-1].weight()+c),0===this.cells().length&&this.parentModel().removeChild(this)}},d.unitProperties=[],d}(c.ControlViewModel);c.TableRowViewModel=e;var f=function(c){function d(d,e,f){var g=this;c.call(this,d,e,f),this.width=ko.pureComputed({read:function(){var a=e.width()*g.weight()/e.cellsTotalWeight();return Math.round(100*a)/100},write:function(a){var b=a-g.width(),c=e.pixelWidthWeight()*a,d=c-g.weight(),f=e.cells().indexOf(g);g.weight(c),f<e.cells().length-1?e.cells()[f+1].weight(e.cells()[f+1].weight()-d):e.width(e.width()+b)}}),this.height=e.height,this.size=new b.Size(0,0),this.size.height=ko.pureComputed({read:function(){return g.height()},write:function(a){b.checkModelReady(g.root)&&g.height(a)}}),this.size.width=ko.pureComputed({read:function(){return g.width()},write:function(a){b.checkModelReady(g.root)&&g.width(a)}}),this.controls=a.JS.Utils.deserializeArray(d.Controls,function(a){
return g.createControl(a,f)});var h=ko.observable(null);this.left=ko.pureComputed({read:function(){var a=e.cells().indexOf(g);if(a>0){var b=e.cells()[a-1];h(b.left()+b.width())}else h(0);return h()},write:function(a){e.updateCellLocation(g,h()-a),h(a)}})}return __extends(d,c),d.unitProperties=[],d}(c.ControlViewModel);c.TableCellViewModel=f;var g=function(a){function b(c,d){a.call(this,c,d,b._unitProperties),this._isUpdating=!1,this.template="dxrd-table",this.selectiontemplate="dxrd-table-selection",this.css=ko.pureComputed(function(){return $.extend({})}),this.contentCss=ko.pureComputed(function(){return $.extend({})})}return __extends(b,a),b.prototype._getChildrenHolderName=function(){return"rows"},b.prototype._isCellInColumn=function(a,b,c){return Math.abs(a.rect().left-b)<.01&&Math.abs(a.rect().left+a.rect().width-c)<.01},b.prototype.selectColumn=function(a,b){var c=this;a.initialize(this);var d=b.rect().left,e=d+b.rect().width;a.selecting({control:b,cancel:!1}),this.rows().forEach(function(b){b.cells().forEach(function(b){return c._isCellInColumn(b,d,e)?(a.selecting({control:b,cancel:!1}),!0):void 0})})},b._unitProperties={_x:function(a){return a.location.x},_y:function(a){return a.location.y},_width:function(a){return a.size.width},_height:function(a){return a.size.height}},b}(c.ControlSurfaceBase);c.TableSurface=g;var h=function(a){function b(c,d){var e=this;a.call(this,c,d,b._unitProperties),this.css=ko.pureComputed(function(){return $.extend({},e.cssCalculator.backGroundCss())}),this.contentCss=ko.pureComputed(function(){return $.extend({})})}return __extends(b,a),b.prototype._getChildrenHolderName=function(){return"cells"},b._unitProperties={_height:function(a){return a.height},_width:function(a){return a.width},_y:function(a){return a.top}},b}(c.ControlSurfaceBase);c.TableRowSurface=h;var i=function(a){function b(c,d){var e=this;a.call(this,c,d,b._unitProperties),this.multiline=c.multiline,this.css=ko.pureComputed(function(){var a=e.cssCalculator.cellBorder("Bottom"),b=e.cssCalculator.cellBorder("Right"),c=e._isShowBorder("Left")?e.cssCalculator.cellBorder("Left"):{borderLeft:""},d=e._isShowBorder("Top")?e.cssCalculator.cellBorder("Top"):{borderTop:""};return $.extend({},e.cssCalculator.fontCss(),e.cssCalculator.backGroundCss(),b,a,d,c,e.cssCalculator.foreColorCss(),e.cssCalculator.textAlignmentCss())})}return __extends(b,a),b.prototype._isShowBorder=function(a){var b=this.parent.getControlModel(),c=b.parentModel(),d=c.rows().indexOf(b),e=b.cells().indexOf(this.getControlModel());if("Top"===a){var f=c.rows()[d-1],g=f&&f.cells&&f.cells()[e],h=g&&g.borders&&g.borders()&&g.borders();return 0===d||h&&"All"!==h&&-1===h.indexOf("Bottom")}if("Left"===a){var i=b.cells()[e-1],h=i&&i.borders&&i.borders()&&i.borders();return 0===e||h&&"All"!==h&&-1===h.indexOf("Right")}},b.prototype.selectColumn=function(a){this.parent.parent.selectColumn(a,this)},b.prototype.checkParent=function(a){return this.parent.parent===a},b._unitProperties={_height:function(a){return a.height},_width:function(a){return a.width},_x:function(a){return a.left}},b}(c.ControlSurfaceBase);c.TableCellSurface=i;var j=function(a){function c(b){var c=this;a.call(this),this.selection=b,a.prototype.initActions.call(this,[{text:"Insert Row Above",imageClassName:"dxrd-image-actions-insert_row_above",clickAction:function(){c.insertRowAbove()}},{text:"Insert Row Below",imageClassName:"dxrd-image-actions-insert_row_below",clickAction:function(){c.insertRowBelow()}},{text:"Delete Row",imageClassName:"dxrd-image-actions-delete_row",clickAction:function(){c.deleteRow()}}])}return __extends(c,a),Object.defineProperty(c.prototype,"_row",{get:function(){return this.selection.focused().getControlModel()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"_table",{get:function(){return this._row.parentModel()},enumerable:!0,configurable:!0}),c.prototype.insertRowAbove=function(){this._table.insertRow(this._row,!0)},c.prototype.insertRowBelow=function(){this._table.insertRow(this._row,!1)},c.prototype.deleteRow=function(){b.deleteSelection(this.selection)},c.prototype.condition=function(a){return a instanceof e},c}(b.BaseActionsProvider);c.TableRowActions=j;var k=function(a){function c(b){var c=this;a.call(this,b),a.prototype.initActions.call(this,[{text:"Insert Row Above",imageClassName:"dxrd-image-actions-insert_row_above",clickAction:function(){c.insertRowAbove()}},{text:"Insert Row Below",imageClassName:"dxrd-image-actions-insert_row_below",clickAction:function(){c.insertRowBelow()}},{text:"Delete Row",imageClassName:"dxrd-image-actions-delete_row",clickAction:function(){c.deleteRow()}},{text:"Insert Cell",imageClassName:"dxrd-image-actions-insert_cell",clickAction:function(){c.insertCell()}},{text:"Delete Cell",imageClassName:"dxrd-image-actions-delete_cell",clickAction:function(){c.deleteCell()}},{text:"Insert Column To Left",imageClassName:"dxrd-image-actions-insert_column_to_left",clickAction:function(){c.insertColumn(!1)}},{text:"Insert Column To Right",imageClassName:"dxrd-image-actions-insert_column_to_right",clickAction:function(){c.insertColumn(!0)}},{text:"Delete Column",imageClassName:"dxrd-image-actions-delete_column",clickAction:function(){c.deleteColumn()}}])}return __extends(c,a),Object.defineProperty(c.prototype,"_cell",{get:function(){return this.selection.focused().getControlModel()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"_row",{get:function(){return this._cell.parentModel()},enumerable:!0,configurable:!0}),Object.defineProperty(c.prototype,"_table",{get:function(){return this._row.parentModel()},enumerable:!0,configurable:!0}),c.prototype.insertCell=function(){this._row.insertCellCopy(this._cell,!1)},c.prototype.deleteCell=function(){b.deleteSelection(this.selection)},c.prototype.deleteRow=function(){this.selection.initialize(this.selection.focused().parent),b.deleteSelection(this.selection)},c.prototype.insertColumn=function(a){this._table.insertColumn(this._cell,a)},c.prototype.deleteColumn=function(){this.selection.focused().selectColumn(this.selection),b.deleteSelection(this.selection)},c.prototype.condition=function(a){return a instanceof f},c}(j);c.TableCellActions=k,c.weight={propertyName:"weight",modelName:"@Weight",defaultVal:0,from:b.floatFromModel},c.rowSpan={propertyName:"rowSpan",modelName:"@RowSpan",displayName:"Row Span",defaultVal:1,editor:a.JS.Widgets.editorTemplates.numeric},c.tableSerializationsInfo=[c.font,c.foreColor,c.keepTogether,c.anchorVertical,c.anchorHorizontal,c.commonScripts,{propertyName:"rows",modelName:"Rows",array:!0},c.dataBindings(["Bookmark","Tag"])].concat(c.sizeLocation,c.commonControlProperties,c.bookmarkGroup),c.tableCellSerializationsInfo=[c.weight,c.labelScripts,c.rowSpan,{propertyName:"width",displayName:"Width"},{propertyName:"controls",modelName:"Controls",array:!0},c.dataBindings(["Text","NavigateUrl","Tag","Bookmark"]),c.defaultDataBinding("Text")].concat(c.labelGroup),c.tableRowSerializationsInfo=[c.weight,c.textAlignment,c.keepTogether,c.controlScripts,{propertyName:"height",displayName:"Height"},{propertyName:"cells",modelName:"Cells",array:!0}].concat(c.commonControlProperties,c.fontGroup),c.popularPropertiesTable=["bookmark","bookmarkParent"],c.popularPropertiesTableCell=["text","defaultDataBinding","Summary","canGrow","canShrink","multiline","wordWrap"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(a){function b(b,c){var d=this;a.call(this,b,c),this.lineWidth=b.lineWidth,this.lineStyle=b.lineStyle,this.lineDirection=b.lineDirection,this.selectiontemplate="dxrd-control-selection",this.contenttemplate="dxrd-line-content",this.linePosition=ko.pureComputed(function(){var a={},b=d.rect();return"Horizontal"===d.lineDirection()&&(a.x1=0,a.x2=b.width,a.y1=b.height/2,a.y2=b.height/2),"Vertical"===d.lineDirection()&&(a.x1=b.width/2,a.x2=b.width/2,a.y1=0,a.y2=b.height),"BackSlant"===d.lineDirection()&&(a.x1=0,a.x2=b.width,a.y1=0,a.y2=b.height),"Slant"===d.lineDirection()&&(a.x1=0,a.x2=b.width,a.y1=b.height,a.y2=0),a}),this.contentCss=ko.pureComputed(function(){return $.extend({},d.cssCalculator.stroke(),d.cssCalculator.strokeDashArray(),d.cssCalculator.strokeWidth())})}return __extends(b,a),b}(b.ControlSurface);b.XRLineSurface=c,b.lineDirection={propertyName:"lineDirection",modelName:"@LineDirection",defaultVal:"Horizontal",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Line Direction",values:{Horizontal:"Horizontal",Vertical:"Vertical",Slant:"Slant",BackSlant:"BackSlant"}},b.lineSerializationsInfo=[b.foreColor,b.keepTogether,b.anchorVertical,b.anchorHorizontal,b.lineWidth,b.lineDirection,b.lineStyle,b.controlScripts,b.dataBindings(["Tag"])].concat(b.sizeLocation,b.commonControlProperties),b.popularPropertiesLine=["lineDirection","lineStyle","lineWidth","anchorVertical","anchorHorizontal"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){c.shapes=["Rectangle","Ellipse","Top Arrow","Right Arrow","Bottom Arrow","Left Arrow","Triangle","Square","Pentagon","Hexagon","Octagon","3-Point Star","4-Point Star","5-Point Star","6-Point Star","8-Point Star","Vertical Line","Horizontal Line","Slant Line","Backslant Line","Cross","Bracket","Brace"];var d=function(b){function c(a,d,e){var f=this;b.call(this,a,d,e),this.Shape(c.createShape(this.Shape()||{},e)),this.shapeFake={shapeName:ko.pureComputed({read:function(){return f.Shape().shapeType()},write:function(a){var b=c.shapes.filter(function(b){return b.displayName===a})[0],d=c.createShape($.extend({"@ShapeName":b.type},b.val),e);void 0!==b.angle&&f.angle(b.angle),0===c.timeout?f.Shape(d):setTimeout(function(){f.Shape(d)},c.timeout)}}),shapeValue:this.Shape}}return __extends(c,b),c.createShape=function(b,c){void 0===c&&(c=null);var d=b&&b["@ShapeName"]||"Ellipse",e=n[d],f={shapeType:ko.observable(d),getInfo:function(){return e}};return(c||new a.JS.Utils.ModelSerializer).deserialize(f,b),f},c.timeout=1,c.shapes=[{displayName:"Rectangle",type:"Rectangle"},{displayName:"Ellipse"},{displayName:"Top Arrow",angle:0,type:"Arrow"},{displayName:"Right Arrow",angle:270,type:"Arrow"},{displayName:"Bottom Arrow",angle:180,type:"Arrow"},{displayName:"Left Arrow",angle:90,type:"Arrow"},{displayName:"Triangle",type:"Polygon"},{displayName:"Square",val:{"@NumberOfSides":4},type:"Polygon"},{displayName:"Pentagon",val:{"@NumberOfSides":5},type:"Polygon"},{displayName:"Hexagon",val:{"@NumberOfSides":6},type:"Polygon"},{displayName:"Octagon",val:{"@NumberOfSides":8},type:"Polygon"},{displayName:"3-Point Star",type:"Star"},{displayName:"4-Point Star",val:{"@StarPointCount":4},type:"Star"},{displayName:"5-Point Star",val:{"@StarPointCount":5},type:"Star"},{displayName:"6-Point Star",val:{"@StarPointCount":6},type:"Star"},{displayName:"8-Point Star",val:{"@StarPointCount":8},type:"Star"},{displayName:"Vertical Line",type:"Line"},{displayName:"Horizontal Line",angle:90,type:"Line"},{displayName:"Slant Line",angle:45,type:"Line"},{displayName:"Backslant Line",angle:315,type:"Line"},{displayName:"Cross",type:"Cross"},{displayName:"Bracket",type:"Bracket"},{displayName:"Brace",type:"Brace"}],c}(c.ControlViewModel);c.ShapeViewModel=d;var e=function(a){function b(b,d){var e=this;a.call(this,b,d);this.imageSrc=ko.pureComputed(function(){return c.ReportRenderingService.getShapeImage(e)}),this.template="dxrd-shape",this.contenttemplate="dxrd-shape-content"}return __extends(b,a),b}(c.ControlSurface);c.ShapeControlSurface=e,c.shapeType={propertyName:"shapeType",modelName:"@ShapeName",defaultVal:"Ellipse"},c.stretch={propertyName:"stretch",modelName:"@Stretch",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Stretch"},c.fillColor={propertyName:"fillColor",modelName:"@FillColor",defaultVal:"transparent",editor:b.Widgets.editorTemplates.customColorEditor,from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Fill Color"},c.Shape={propertyName:"Shape",modelName:"Shape"},c.shapeFake={propertyName:"shapeFake",editor:c.editorTemplates.shape,displayName:"Shape"},c.shapeElementSerializationsInfo=[c.shapeType];var f={propertyName:"fillet",modelName:"@Fillet",defaultVal:0,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Fillet"},g=[c.shapeType,f],h=[c.shapeType,{propertyName:"concavity",modelName:"@Concavity",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Concavity"},{propertyName:"starPointCount",modelName:"@StarPointCount",defaultVal:3,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Count of Star Points"},f],i=[c.shapeType,{propertyName:"fillet",modelName:"@Fillet",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Fillet"},{propertyName:"tailLength",modelName:"@TailLength",defaultVal:20,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Tail's Length"},{propertyName:"tipLength",modelName:"@TipLength",defaultVal:20,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Tip's Length"}],j=[c.shapeType,{propertyName:"tipLength",modelName:"@TipLength",defaultVal:20,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Tip's Length"}],k=[c.shapeType,f,{propertyName:"numberOfSides",modelName:"@NumberOfSides",defaultVal:3,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Number of Sides"}],l=[c.shapeType,{propertyName:"arrowHeight",modelName:"@ArrowHeight",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Arrow Height"},{propertyName:"arrowWidth",modelName:"@ArrowWidth",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Arrow Width"},f],m=[c.shapeType,f,{propertyName:"horizontalLineWidth",modelName:"@HorizontalLineWidth",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Horizontal Line Width"},{propertyName:"verticalLineWidth",modelName:"@VerticalLineWidth",defaultVal:50,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Vertical Line Width"}],n={Rectangle:g,Arrow:l,Ellipse:c.shapeElementSerializationsInfo,Polygon:k,Star:h,Line:c.shapeElementSerializationsInfo,Bracket:j,Cross:m,Brace:i};c.shapeSerializationsInfo=[c.lineWidth,c.foreColor,c.Shape,c.fillColor,c.stretch,c.angle,c.anchorVertical,c.anchorHorizontal,c.controlScripts,c.shapeFake,c.dataBindings(["Bookmark","NavigateUrl","Tag"])].concat(c.sizeLocation,c.commonControlProperties,c.navigationGroup),c.popularPropertiesShape=["stretch","fillColor","lineWidth","angle","bookmark","bookmarkParent","shapeFake"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function c(a,c,d){var e=this;b.call(this,a,c,d),this.symbology(this.createBarcode(this.symbology()||{},d)),this.barcodeFake={barcodeName:ko.pureComputed({read:function(){return e.symbology().name()},write:function(a){e.symbology(e.createBarcode({"@Name":a},d))}}),barcodeValue:this.symbology}}return __extends(c,b),c.prototype.createBarcode=function(b,c){void 0===c&&(c=null);var d=b&&b["@Name"]||"Code1",e=y[d],f={name:ko.observable(d),getInfo:function(){return e}};return(c||new a.JS.Utils.ModelSerializer).deserialize(f,b),f},c.unitProperties=["module"],c.barCodesTypes=["Codabar","Code11","Code128","Code39","Code39Extended","Code93","Code93Extended","CodeMSI","DataBar","DataMatrix","DataMatrixGS1","EAN128","EAN13","EAN8","Industrial2of5","IntelligentMail","IntelligentMailPackage","Interleaved2of5","ITF14","Matrix2of5","PDF417","PostNet","QRCode","UPCA","UPCE0","UPCE1","UPCSupplemental2","UPCSupplemental5"],c}(c.ControlViewModel);c.XRBarCodeViewModel=d;var e=function(a){function b(b,c){a.call(this,b,c),this.contenttemplate="dxrd-barcode-content"}return __extends(b,a),b}(c.ControlSurface);c.XRBarcodeSurface=e;var f={propertyName:"name",modelName:"@Name"},g={propertyName:"calcCheckSum",modelName:"@CalcCheckSum",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Calculate a Checksum"},h=[f,g],i={propertyName:"wideNarrowRation",modelName:"@WideNarrowRatio",defaultVal:2.5,from:b.floatFromModel,displayName:"Wide Narrow Ratio",editor:a.JS.Widgets.editorTemplates.numeric},j=[f,i,{propertyName:"startStopPait",modelName:"@StartStopPair",defaultVal:"AT",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Start and Stop Symbols",values:{None:"None",AT:"AT",BN:"BN",CStar:"CStar",DE:"DE"}}],k={propertyName:"characterSet",modelName:"@CharacterSet",defaultVal:"CharsetA",displayName:"Character Set",editor:a.JS.Widgets.editorTemplates.combobox,values:{CharsetAuto:"CharsetAuto",CharsetA:"CharsetA",CharsetB:"CharsetB",CharsetC:"CharsetC"}},l=[f,k],m=[i].concat(h),n=[f,{propertyName:"msiCheckSum",modelName:"@MSICheckSum",defaultVal:"Modulo10",displayName:"MSI Checksum",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Modulo10:"Modulo10",DoubleModulo10:"DoubleModulo10"}}],o={propertyName:"fNC1Substitute",modelName:"@FNC1Substitute",defaultVal:"#",editor:a.JS.Widgets.editorTemplates.text,displayName:"FNC1 Functional Character"},p=[f,o,{propertyName:"segmentsInRow",modelName:"@SegmentsInRow",defaultVal:20,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Segments In Row"},{propertyName:"type",modelName:"@Type",defaultVal:"Omnidirectional",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Type",values:{Omnidirectional:"Omnidirectional",Truncated:"Truncated",Stacked:"Stacked",StackedOmnidirectional:"StackedOmnidirectional",Limited:"Limited",Expanded:"Expanded",ExpandedStacked:"ExpandedStacked"}}],q={propertyName:"matrixSize",modelName:"@MatrixSize",defaultVal:"MatrixAuto",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Matrix Size",values:{MatrixAuto:"MatrixAuto",Matrix10x10:"Matrix10x10",Matrix12x12:"Matrix12x12",Matrix14x14:"Matrix14x14",Matrix16x16:"Matrix16x16",Matrix18x18:"Matrix18x18",Matrix20x20:"Matrix20x20",Matrix22x22:"Matrix22x22",Matrix24x24:"Matrix24x24",Matrix26x26:"Matrix26x26",Matrix32x32:"Matrix32x32",Matrix36x36:"Matrix36x36",Matrix40x40:"Matrix40x40",Matrix44x44:"Matrix44x44",Matrix48x48:"Matrix48x48",Matrix52x52:"Matrix52x52",Matrix64x64:"Matrix64x64",Matrix72x72:"Matrix72x72",Matrix80x80:"Matrix80x80",Matrix88x88:"Matrix88x88",Matrix96x96:"Matrix96x96",Matrix104x104:"Matrix104x104",Matrix120x120:"Matrix120x120",Matrix132x132:"Matrix132x132",Matrix144x144:"Matrix144x144",Matrix8x18:"Matrix8x18",Matrix8x32:"Matrix8x32",Matrix12x26:"Matrix12x26",Matrix12x36:"Matrix12x36",Matrix16x36:"Matrix16x36",Matrix16x48:"Matrix16x48"}},r=[f,q,{propertyName:"compactionMode",modelName:"@CompactionMode",defaultVal:"ASCII",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Compaction Mode",values:{ASCII:"ASCII",C40:"C40",Text:"Text",X12:"X12",Edifact:"Edifact",Binary:"Binary"}}],s={propertyName:"humanReadableText",modelName:"@HumanReadableText",defaultVal:!0,from:b.parseBool,displayName:"Human-Readable Text",editor:a.JS.Widgets.editorTemplates.bool},t=[f,q,o,s],u=[f,k,o,s],v=[f,g,i],w=[f,{propertyName:"columns",modelName:"@Columns",defaultVal:1,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Columns"},{propertyName:"compactionMode1",modelName:"@CompactionMode",defaultVal:"Text",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Compaction Mode",values:{Binary:"Binary",Text:"Text"}},{propertyName:"errorCorrectionLevel",modelName:"@ErrorCorrectionLevel",defaultVal:"Level2",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Error Correction Level",values:{Level0:"Level0",Level1:"Level1",Level2:"Level2",Level3:"Level3",Level4:"Level4",Level5:"Level5",Level6:"Level6",Level7:"Level7",Level8:"Level8"}},{propertyName:"rows",modelName:"@Rows",defaultVal:0,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Rows"},{propertyName:"yToXRatio",modelName:"@YToXRation",defaultVal:3,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"YToXRation"},{propertyName:"truncateSymbol",modelName:"@TruncateSymbol",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Truncate Symbol"}],x=[f,{propertyName:"compactionMode2",modelName:"@CompactionMode",defaultVal:"AlphaNumeric",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Compaction Mode",values:{Numeric:"Numeric",AlphaNumeric:"AlphaNumeric",Byte:"Byte"}},{propertyName:"errorCorrectionLevel1",modelName:"@ErrorCorrectionLevel",defaultVal:"L",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Error Correction Level",values:{M:"M",L:"L",H:"H",Q:"Q"}},{propertyName:"version",modelName:"@Version",defaultVal:"Version1",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Version",values:{AutoVersion:"AutoVersion",Version1:"Version1",Version2:"Version2",Version3:"Version3",Version4:"Version4",Version5:"Version5",Version6:"Version6",Version7:"Version7",Version8:"Version8",Version9:"Version9",Version10:"Version10",Version11:"Version11",Version12:"Version12",Version13:"Version13",Version14:"Version14",Version15:"Version15",Version16:"Version16",Version17:"Version17",Version18:"Version18",Version19:"Version19",Version20:"Version20",Version21:"Version21",Version22:"Version22",Version23:"Version23",Version24:"Version24",Version25:"Version25",Version26:"Version26",Version27:"Version27",Version28:"Version28",Version29:"Version29",Version30:"Version30",Version31:"Version31",Version32:"Version32",Version33:"Version33",Version34:"Version34",Version35:"Version35",Version36:"Version36",Version37:"Version37",Version38:"Version38",Version39:"Version39",Version40:"Version40"}}];c.autoModule={propertyName:"autoModule",modelName:"@AutoModule",defaultVal:!1,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Auto-Module"},c.barCodeOrientation={propertyName:"barCodeOrientation",modelName:"@BarCodeOrientation",defaultVal:"Normal",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Orientation",values:{Normal:"Normal",UpsideDown:"UpsideDown",RotateLeft:"RotateLeft",RotateRight:"RotateRight"}},c.moduleInfo={propertyName:"module",modelName:"@Module",defaultVal:2,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Module"},c.showText={propertyName:"showText",modelName:"@ShowText",defaultVal:!0,from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,displayName:"Show Text"},c.symbology={propertyName:"symbology",modelName:"Symbology"},c.barcodeFake={propertyName:"barcodeFake",editor:c.editorTemplates.symbology,displayName:"Symbology"},c.alignment={propertyName:"alignment",modelName:"@Alignment",displayName:"Alignment",defaultVal:"TopLeft",editor:a.JS.Widgets.editorTemplates.combobox,values:c.textAlignmentValues};var y={Codabar:j,Code11:[f],Code128:l,Code39:m,Code39Extended:m,Code93:h,Code93Extended:h,CodeMSI:n,DataBar:p,DataMatrix:r,DataMatrixGS1:t,EAN128:u,EAN13:[f],EAN8:[f],Industrial2of5:v,IntelligentMail:[f],IntelligentMailPackage:[f,o],Interleaved2of5:v,ITF14:v,Matrix2of5:v,PDF417:w,PostNet:[f],QRCode:x,UPCA:[f],UPCE0:[f],UPCE1:[f],UPCSupplemental2:[f],UPCSupplemental5:[f]};c.barcodeSerializationsInfo=[c.alignment,c.autoModule,c.barCodeOrientation,c.moduleInfo,c.showText,c.symbology,c.text,c.keepTogether,c.anchorVertical,c.anchorHorizontal,{propertyName:"textAlignment",modelName:"@TextAlignment",defaultVal:"BottomLeft"},c.textControlScripts,c.barcodeFake,c.dataBindings(["Bookmark","NavigateUrl","Tag","Text"]),c.defaultDataBinding("Text")].concat(c.sizeLocation,c.commonControlProperties,c.fontGroup,c.navigationGroup),c.popularPropertiesBarCode=["barcodeFake","module","autoModule","barCodeOrientation","text","defaultDataBinding","bookmark","bookmarkParent","showText"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function c(c,d){var e=this;a.call(this,c,d),this.displayName=ko.pureComputed(function(){var a=c.text();return a=a&&a.replace(/[^\d]/g,"_")||"0".replace(/[^\d]/g,"_")}),this.fontSize=ko.pureComputed(function(){return b.unitsToPixel(c.size.height(),d.measureUnit())}),this.letterSpacing=ko.pureComputed(function(){return Math.ceil(e.fontSize()/10)}),this.css=ko.pureComputed(function(){return $.extend({},e.cssCalculator.zipCodeFontCss(e.fontSize()),e.cssCalculator.backGroundCss(),e.cssCalculator.zipCodeAlignment(),e.cssCalculator.foreColorCss())}),this.contentCss=ko.pureComputed(function(){return $.extend({},e.cssCalculator.zipCodeAlignment(),e.cssCalculator.paddingsCss(),{letterSpacing:e.letterSpacing()+"px"},{lineHeight:"inherit"})})}return __extends(c,a),c}(c.ControlSurface);c.ZipCodeSurface=d,c.segmentWidth={propertyName:"segmentWidth",modelName:"@SegmentWidth",defaultVal:4,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Segment Width"},c.zipCodeSerializationInfo=[c.foreColor,c.segmentWidth,c.keepTogether,c.anchorVertical,c.anchorHorizontal,c.textControlScripts,{propertyName:"text",modelName:"@Text",defaultVal:"0"},c.dataBindings(["Bookmark","NavigateUrl","Tag","Text"]),c.defaultDataBinding("Text")].concat(c.sizeLocation,c.commonControlProperties,c.navigationGroup),c.popularPropertiesZipCode=["text","defaultDataBinding","segmentWidth","bookmark","bookmarkParent"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,d,e){var f=this;a.call(this,b,d,e),this._disposables.push(this.viewType.subscribe(function(a){return f.viewStyle("Circular"===a?c.circularValues[0].value:c.linearValues[0].value)})),["ActualValue","Maximum","Minimum","TargetValue"].forEach(function(a){var b=f.getInfo().filter(function(b){return b.bindingName&&b.bindingName===a})[0];b&&(f[b.propertyName]=f.dataBindings().findBinding(b.bindingName))})}return __extends(b,a),b.prototype.getInfo=function(){var a=c.xrGaugeSerializationInfo.filter(function(a){return"viewStyle"===a.propertyName})[0];return a.defaultVal=this.viewType&&"Linear"===this.viewType()?"Horizontal":"Half",c.xrGaugeSerializationInfo},b}(c.ControlViewModel);c.XRGaugeViewModel=d,c.circularValues=[{displayValue:"Half",value:"Half"},{displayValue:"Full",value:"Full"},{displayValue:"QuarterLeft",value:"QuarterLeft"},{displayValue:"QuarterRight",value:"QuarterRight"},{displayValue:"ThreeFourth",value:"ThreeFourth"}],c.linearValues=[{displayValue:"Horizontal",value:"Horizontal"},{displayValue:"Vertical",value:"Vertical"}],c.actualValue={propertyName:"actualValue",defaultVal:null,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Actual Value",modelName:"@ActualValue"},c.maximum={propertyName:"maximum",defaultVal:null,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Maximum",modelName:"@Maximum"},c.minimum={propertyName:"minimum",modelName:"@Minimum",defaultVal:null,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Minimum"},c.targetValue={propertyName:"targetValue",modelName:"@TargetValue",defaultVal:null,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Target Value"},c.viewStyle={propertyName:"viewStyle",modelName:"@ViewStyle",displayName:"View Style",editor:c.editorTemplates.viewStyle},c.viewTheme={propertyName:"viewTheme",modelName:"@ViewTheme",defaultVal:"FlatLight",displayName:"View Theme",editor:a.JS.Widgets.editorTemplates.combobox,values:{FlatLight:"FlatLight",FlatDark:"FlatDark"}},c.viewType={propertyName:"viewType",modelName:"@ViewType",defaultVal:"Circular",displayName:"View Type",editor:a.JS.Widgets.editorTemplates.combobox,values:{Circular:"Circular",Linear:"Linear"}};var e=function(a){return{propertyName:"defaultDataBinding"+a,displayName:a,editor:c.editorTemplates.dataBinding,bindingName:a}};c.xrGaugeSerializationInfo=[c.viewStyle,c.viewTheme,c.viewType,c.actualValue,c.maximum,c.minimum,c.targetValue,c.anchorVertical,c.anchorHorizontal,c.controlScripts,c.dataBindings(["ActualValue","Bookmark","Maximum","Minimum","NavigateUrl","Tag","TargetValue"]),e("ActualValue"),e("Maximum"),e("Minimum"),e("TargetValue")].concat(c.sizeLocation,c.commonControlProperties,c.navigationGroup),c.popularPropertiesGauge=["viewType","viewStyle","viewTheme","actualValue","defaultDataBindingActualValue","targetValue","defaultDataBindingTargetValue","minimum","defaultDataBindingMinimum","maximum","defaultDataBindingMaximum"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,c){a.call(this,b,c),this.displayName=ko.pureComputed(function(){return b.format&&b.format()||b.pageInfo()})}return __extends(b,a),b}(c.ControlSurface);c.XRPageInfoSurface=d,c.format={propertyName:"format",modelName:"@Format",defaultVal:"",displayName:"Format",editor:a.JS.Widgets.editorTemplates.text},c.pageInfo={propertyName:"pageInfo",modelName:"@PageInfo",defaultVal:"NumberOfTotal",displayName:"Page Information",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",Number:"Number",NumberOfTotal:"NumberOfTotal",RomLowNumber:"RomLowNumber",RomHiNumber:"RomHiNumber",DateTime:"DateTime",UserName:"UserName",Total:"Total"}},c.startPageNumber={propertyName:"startPageNumber",modelName:"@StartPageNumber",displayName:"Start Page Number",defaultVal:1,from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric},c.runningBand={propertyName:"runningBand",modelName:"@RunningBand",link:!0,displayName:"Running Band",editor:c.editorTemplates.bands},c.pageInfoSerializationsInfo=[c.anchorVertical,c.anchorHorizontal,c.textAlignment,c.wordWrap,c.format,c.pageInfo,c.startPageNumber,c.runningBand,c.textControlScripts,c.dataBindings(["Bookmark","NavigateUrl","Tag"])].concat(c.sizeLocation,c.commonControlProperties,c.fontGroup,c.navigationGroup),c.popularPropertiesPageInfo=["pageInfo","startPageNumber","format","anchorVertical","anchorHorizontal"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b=function(a){function b(c,d){var e=this;this._width=ko.pureComputed({read:function(){return d.pageWidth()-d.margins.right()-d.margins.left()},write:function(){}}),a.call(this,c,d,b._unitProperties),this.template="dxrd-pagebreak",this.contenttemplate="dxrd-line-content",this.selectiontemplate="dxrd-pagebreak-selection",this.linePosition=ko.pureComputed(function(){var a=e.rect();return{x1:0,x2:a.width,y1:a.height/2,y2:a.height/2}}),this.contentCss=ko.observable({stroke:"black",strokeWidth:1,strokeDasharray:"4px, 4px"}),this.lineHeight=ko.pureComputed(function(){return e.position.lineHeight()/e._context.zoom()}),this.css=ko.observable({}),this.isIntersect=ko.pureComputed(function(){return!1})}return __extends(b,a),Object.defineProperty(b.prototype,"isIntersectionDeny",{get:function(){return!0},enumerable:!0,configurable:!0}),b._unitProperties={_x:function(){return ko.observable(0)},_y:function(a){return a.location.y},_height:function(){return ko.observable(2)}},b}(a.ControlSurfaceBase);a.XRPageBreakSurface=b,a.pageBreakSerializationsInfo=[a.location,a.formattingRuleLinks,a.truncatedControlScripts].concat(a.baseControlProperties)}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,b){var c=null;return a.bands().forEach(function(a){return a.absolutePosition.y.peek()<=b&&a?(c=d(a,b)||a,!1):void 0}),c}var e=function(a){function c(c,d,e){
var f=this;a.call(this,c,d,e);this.endBand;this.endPoint.x=ko.pureComputed({read:function(){return f.startPoint.x()},write:function(a){b.checkModelReady(f.root)&&f.startPoint.x(a)}}),this.locationF.x=ko.pureComputed({read:function(){return f.startPoint.x()},write:function(a){b.checkModelReady(f.root)&&f.startPoint.x(a)}}),this.locationF.y=ko.pureComputed({read:function(){return f.startPoint.y()},write:function(a){b.checkModelReady(f.root)&&f.startPoint.y(a)}})}return __extends(c,a),c.prototype.getNearestParent=function(a){for(var b=a;b.parentModel();)b=b.parentModel();return b},c.prototype.isResettableProperty=function(b){return a.prototype.isResettableProperty.call(this,b)&&-1===["startPoint","endPoint","startBand","endBand"].indexOf(b)},c.unitProperties=["width"],c}(c.ReportElementViewModel);c.CrossBandControlViewModel=e;var f=function(a){function c(e,f){var g=this;a.call(this,e,f,c._unitProperties),this.edgeUnderCursor=ko.observable({isOver:!1,x:0,y:0,isNotDropTarget:!0}),this.underCursor=ko.observable({isOver:!1,x:0,y:0,isNotDropTarget:!0}),this._disposables.push(this._x.subscribe(function(a){g._endX(a)}));var h=this._startY(),i=this._endY();this._disposables.push(ko.computed(function(){if(e.startBand.peek()){var a=b.findSurface(e.startBand.peek());h=g._isBandCollapsed(a)?a.absolutePosition.y():g._startY()+a.absolutePosition.y()}g._y(h)})),this._disposables.push(ko.computed(function(){if(e.endBand.peek()){var a=b.findSurface(e.endBand.peek());i=g._isBandCollapsed(a)?a.absolutePosition.y():g._endY()+a.absolutePosition.y()}g._height(i-h)})),this._disposables.push(ko.computed(function(){var a=g._y();if(0>a)return void g._y(0);if(a!==h){var b=d(g.parent,a);e.startBand(b.getControlModel()),h=a,g._startY(h-b.absolutePosition.y()),g._updateEndPoint(g._height(),i,h)}})),this._disposables.push(ko.computed(function(){var a=g._height();a!==i-h&&g._updateEndPoint(a,i,h)})),this.template="XRCrossBandLine"===e.controlType?"dxrd-crossband-line":"dxrd-crossband","XRCrossBandLine"===this.getControlModel().controlType?(this.lineCss=ko.pureComputed(function(){return $.extend({},g.cssCalculator.stroke(),g.cssCalculator.strokeWidthWithWidth(),g.cssCalculator.strokeDashArrayWithWidth())}),this.lineWidthCss=ko.pureComputed(function(){return $.extend({},g.cssCalculator.strokeWidthWithWidth())})):(this.leftCss=ko.pureComputed(function(){return g.cssCalculator.crossBandBorder("Left")}),this.rightCss=ko.pureComputed(function(){return g.cssCalculator.crossBandBorder("Right")}),this.topCss=ko.pureComputed(function(){return g.cssCalculator.crossBandBorder("Top")}),this.bottomCss=ko.pureComputed(function(){return g.cssCalculator.crossBandBorder("Bottom")})),this._disposables.push(e.startBand.subscribe(function(a){var c=b.findSurface(a);g._y(c.absolutePosition.y())})),this._disposables.push(e.endBand.subscribe(function(a){var c=b.findSurface(a);g._height(c.absolutePosition.y()-g._y())})),this.borderWidth=ko.pureComputed(function(){return e.borderWidth&&Math.floor(e.borderWidth())})}return __extends(c,a),c.prototype._isBandCollapsed=function(a){return a&&(a.collapsed()||a.isSomeParentCollapsed())},c.prototype._updateEndPoint=function(a,b,c){b=c+a;var e=d(this.parent,b);e&&(e.absolutePosition.y.peek()+e.height.peek()<b&&e._height(b-e.absolutePosition.y.peek()),this._control.endBand(e.getControlModel()),this._endY(b-e.absolutePosition.y()))},c.prototype._getAllBands=function(a){var b=this,c=a.bands(),d=[];return c.forEach(function(a){d=d.concat(b._getAllBands(a))}),[].concat(c,a.subBands(),d)},c.prototype._getIntersectionBands=function(a,b){var c=this,d=b.filter(function(b){return c.isThereIntersection(a,b.absoluteRect())}),e=[].concat(d);return d.forEach(function(a){e=e.concat(c._getAllBands(a))}),e=e.filter(function(a){return a.controls().length>0})},c.prototype._getCrossBandBoxSides=function(){var a=this.rect(),b=this.getControlModel().borderWidth();return[{top:a.top,left:a.left,height:b,width:a.width},{top:a.bottom-b,left:a.left,height:b,width:a.width},{top:a.top,left:a.left,height:a.height,width:b},{top:a.top,left:a.right-b,height:a.height,width:b}]},c.prototype.isThereIntersectionWithControls=function(){var a=this,b=!1,c=this.rect(),d=this._getIntersectionBands(c,this.parent&&this.parent.getChildrenCollection()()),e="XRCrossBandBox"===this.getControlModel().controlType?this._getCrossBandBoxSides():[c];return $.each(d||[],function(c,d){return $.each(e||[],function(c,e){return a.isThereIntersectionWithCollectionControl(e,d.controls().filter(function(a){return!a.isIntersectionDeny}),"absoluteRect")&&(b=!0),!b}),!b}),b},c.prototype.isThereIntersectionWithCrossBandControls=function(){var b=this;if("XRCrossBandBox"===this.getControlModel().controlType){var c=!1;return $.each(this._getCrossBandBoxSides()||[],function(d,e){return a.prototype.isThereIntersectionWithCrossBandControls.call(b,e)?(c=!0,!c):void 0}),c}return a.prototype.isThereIntersectionWithCrossBandControls.call(this,this.rect())},c.prototype._getChildrenHolderName=function(){return null},c._unitProperties={_x:function(a){return a.startPoint.x},_width:function(a){return a.width},_startY:function(a){return a.startPoint.y},_endX:function(a){return a.endPoint.x},_endY:function(a){return a.endPoint.y}},c}(c.ControlSurfaceBase);c.CrossBandSurface=f,c.crossBandLineWidth={propertyName:"width",modelName:"@WidthF",defaultVal:1,editor:a.JS.Widgets.editorTemplates.text,displayName:"Width"},c.startPoint={propertyName:"startPoint",modelName:"@StartPointFloat",from:b.Point.fromString,displayName:"Start Point",editor:a.JS.Widgets.editorTemplates.objecteditor},c.endPoint={propertyName:"endPoint",modelName:"@EndPointFloat",from:b.Point.fromString,displayName:"End Point",editor:a.JS.Widgets.editorTemplates.objecteditor},c.startBand={propertyName:"startBand",modelName:"@StartBand",link:!0,displayName:"Start Band",editor:c.editorTemplates.bands},c.endBand={propertyName:"endBand",modelName:"@EndBand",link:!0,displayName:"End Band",editor:c.editorTemplates.bands},c.borderDashStyleCrossband={propertyName:"borderDashStyleCrossband",modelName:"@BorderDashStyle",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Border Dash Style",values:c.lineStyleValues},c.width={propertyName:"width",modelName:"@WidthF",defaultVal:0,editor:a.JS.Widgets.editorTemplates.numeric,displayName:"Width",from:b.floatFromModel},c.crossBandBoxControlSerializationsInfo=[c.startPoint,c.startBand,c.endPoint,c.endBand,c.width,c.borderColor,c.borderDashStyleCrossband,{propertyName:"borders",modelName:"@Borders",defaultVal:"All"},{propertyName:"borderWidth",modelName:"@BorderWidth",defaultVal:2,from:b.floatFromModel},{propertyName:"locationF",modelName:"@LocationFloat",from:b.Point.fromString}].concat(c.baseControlProperties),c.crossBandLineControlSerializationsInfo=[c.startPoint,c.startBand,c.endPoint,c.endBand,c.width,c.foreColor,c.lineStyle,c.crossBandLineWidth,{propertyName:"locationF",modelName:"@LocationFloat",from:b.Point.fromString}].concat(c.baseControlProperties),c.popularPropertiesCrossLine=["lineStyle"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(b){function c(a,c,d){var e=this;b.call(this,a,c,d),this.view(this.createView(this.view()||{},d)),this.sparklineFake={sparklineType:ko.pureComputed({read:function(){return e.view().type()},write:function(a){e.view(e.createView({"@Type":a},d))}}),sparklineValue:this.view}}return __extends(c,b),c.prototype.createView=function(b,c){void 0===c&&(c=null);var d=b&&b["@Type"]||"Line",e=G[d],f={type:ko.observable(d),getInfo:function(){return e}};return(c||new a.JS.Utils.ModelSerializer).deserialize(f,b),f},c.prototype.getPath=function(a){return"dataMember"===a?this.dsHelperProvider()&&this.dsHelperProvider().getDataSourcePath(this.dataSource()):"valueMember"===a?this.getPath("dataMember")+(this.dataMember()?"."+this.dataMember():""):""},c.spartlineTypes=["Line","Bar","WinLoss","Area"],c}(c.ControlViewModel);c.XRSparklineViewModel=d;var e=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b}(c.TodoControlSurface);c.SparkLineSurface=e,c.valueMember={propertyName:"valueMember",modelName:"@ValueMember",displayName:"Value Member",editor:b.Widgets.editorTemplates.field};var f={modelName:"@HighlightMinPoint",defaultVal:!1,from:b.parseBool,propertyName:"highlightMinPoint",displayName:"Highlight Min Point",editor:a.JS.Widgets.editorTemplates.bool},g={modelName:"@HighlightMaxPoint",defaultVal:!1,from:b.parseBool,propertyName:"highlightMaxPoint",displayName:"Highlight Max Point",editor:a.JS.Widgets.editorTemplates.bool},h={modelName:"@HighlightStartPoint",defaultVal:!1,from:b.parseBool,propertyName:"highlightStartPoint",displayName:"Highlight Max Point",editor:a.JS.Widgets.editorTemplates.bool},i={modelName:"@HighlightEndPoint",defaultVal:!1,from:b.parseBool,propertyName:"highlightEndPoint",displayName:"Highlight End Point",editor:a.JS.Widgets.editorTemplates.bool},j={modelName:"@HighlightNegativePoints",defaultVal:!1,from:b.parseBool,propertyName:"highlightNegativePoints",displayName:"Highlight Negative Points",editor:a.JS.Widgets.editorTemplates.bool},k={modelName:"@Color",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"color",displayName:"Color",editor:b.Widgets.editorTemplates.customColorEditor},l={modelName:"@MaxPointColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"maxPointColor",displayName:"Max Point Color",editor:b.Widgets.editorTemplates.customColorEditor},m={modelName:"@MinPointColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"minPointColor",displayName:"Min Point Color",editor:b.Widgets.editorTemplates.customColorEditor},n={modelName:"@StartPointColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"startPointColor",displayName:"Start Point Color",editor:b.Widgets.editorTemplates.customColorEditor},o={modelName:"@NegativePointColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"negativePointColor",displayName:"Negative Point Color",editor:b.Widgets.editorTemplates.customColorEditor},p={modelName:"@EndPointColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"endPointColor",displayName:"End Point Color",editor:b.Widgets.editorTemplates.customColorEditor},q={modelName:"@Type",propertyName:"type"},r={modelName:"@EnableAntialiasing",propertyName:"enableAntialiasing",displayName:"Enable Antialiasing",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!0},s={modelName:"@MaxPointMarkerSize",defaultVal:5,propertyName:"maxPointMarkerSize",displayName:"Max Point Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},t={modelName:"@MinPointMarkerSize",defaultVal:5,propertyName:"minPointMarkerSize",displayName:"Min Point Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},u={modelName:"@StartPointMarkerSize",defaultVal:5,propertyName:"startPointMarkerSize",displayName:"Start Point Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},v={modelName:"@NegativePointMarkerSize",defaultVal:5,propertyName:"negativePointMarkerSize",displayName:"Negative Point Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},w={modelName:"@EndPointMarkerSize",defaultVal:5,propertyName:"endPointMarkerSize",displayName:"End Point Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},x={modelName:"@MarkerSize",propertyName:"markerSize",defaultVal:5,displayName:"Marker Size",editor:a.JS.Widgets.editorTemplates.numeric},y={modelName:"@ShowMarkers",propertyName:"showMarkers",displayName:"Show Markers",from:b.parseBool,editor:a.JS.Widgets.editorTemplates.bool,defaultVal:!1},z={modelName:"@MarkerColor",from:b.colorFromString,toJsonObject:b.colorToString,propertyName:"markerColor",displayName:"Marker Color",editor:b.Widgets.editorTemplates.customColorEditor},A={modelName:"@BarDistance",propertyName:"barDistance",defaultVal:2,displayName:"Bar Distance",editor:a.JS.Widgets.editorTemplates.numeric},B={modelName:"@AreaOpacity",propertyName:"areaOpacity",defaultVal:135,displayName:"Area Opacity",editor:a.JS.Widgets.editorTemplates.numeric},C=[i,g,f,j,h,k,l,m,n,o,p,q,r,v,w,u,t,s,x,y,c.lineWidth,z],D=[p,n,m,l,k,i,h,o,f,g,q,A],E=[p,n,m,l,k,i,h,f,g,A,q,o,j],F=[p,n,m,l,k,i,h,f,g,o,r,B,v,q,c.lineWidth,j,y,x,s,z,t,w,u],G={Line:C,Bar:E,WinLoss:D,Area:F};c.valueRange={propertyName:"valueRange",modelName:"ValueRange",info:[]};var H={propertyName:"view",modelName:"View"};c.sparklineFake={propertyName:"sparklineFake",editor:c.editorTemplates.sparkline,displayName:"View"},c.sparklineSerializationsInfo=[c.sparklineFake,H,c.valueMember,c.valueRange,c.anchorVertical,c.anchorHorizontal,c.dataBindings(["Bookmark","NavigateUrl","Tag"]),c.dataAdapter,c.dataMember,c.dataSource,c.controlScripts].concat(c.commonControlProperties,c.sizeLocation,c.navigationGroup),c.popularPropertiesSparkline=["dataSource","dataMember","dataAdapter","valueMemberEditable","sparklineFake"]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(b,c){a.call(this,b,c),this.isAllSufficient=!1}return __extends(b,a),b.prototype._initializeBands=function(){0===this.bands().length&&this.createChild({"@ControlType":"DetailBand","@Name":"Detail1"})},b.from=function(a,c){return ko.observable(a?new b(a,c):null)},b.toJson=function(a,b,d){return b.serialize(ko.unwrap(a),c.reportSerializationInfo,d)},b.prototype.getInfo=function(){if(!this.isAllSufficient){var b=$.extend(!0,[],a.prototype.getInfo.call(this)),c=b.indexOf(b.filter(function(a){return"objectStorage"===a.propertyName})[0]);return b.splice(c,1),b}return a.prototype.getInfo.call(this)},b.prototype.serialize=function(){this.isAllSufficient=!0;var b=a.prototype.serialize.call(this);return this.isAllSufficient=!1,b},b.defaultReport={"@ControlType":"DevExpress.XtraReports.UI.XtraReport","@Version":"15.2","@PageWidth":"850","@PageHeight":"1100",Bands:{Item1:{"@Name":"topMarginBand1","@ControlType":"TopMarginBand","@HeightF":"100"},Item2:{"@ControlType":"DetailBand","@Name":"detailBand1","@HeightF":"100"},Item3:{"@Name":"bottomMarginBand1","@ControlType":"BottomMarginBand","@HeightF":"100"}}},b}(c.ReportViewModel);c.SubreportViewModel=d;var e=function(a){function b(b,c,d){var e=this;a.call(this,b,d),this.subreportControl=ko.observable();var f=this;this.fakeBinding=this,this._reportDataSource=ko.computed(function(){var a=e.subreportControl();return a&&a.root.dataSource&&a.root.dataSource()||null});var g=ko.observable(this.dataSource());this.dataSource=ko.pureComputed({read:function(){return g()||e._reportDataSource()},write:function(a){g(a)}}),this._disposables.push(this.dataSource.subscribe(function(a){a||e.dataMember(null)}));var h=this.subreportControl.subscribe(function(a){a&&(h.dispose(),f._disposables.push(ko.computed(function(){0===a.root.parameters().filter(function(a){return a===f.parameter()}).length&&f.parameter(null)})),f._disposables.push(ko.computed(function(){a.reportSource()&&0===a.reportSource().parameters().filter(function(a){return a.name===f.parameterName()}).length&&f.parameterName("")})))});this.subreportControl(c)}return __extends(b,a),b.createNew=function(){return new b({},null)},b.prototype.getInfo=function(){if(this.subreportControl&&this.subreportControl()&&this.subreportControl().reportSource()){var a=$.extend(!0,[],c.parameterBindingSerializationInfo),b=a.filter(function(a){return"parameterName"===a.propertyName})[0];b.valuesArray=this.subreportControl().reportSource().parameters().map(function(a){return{value:a.parameterName,displayValue:a.displayName}});var d=a.filter(function(a){return"dataSource"===a.propertyName})[0];return d.defaultVal=this._reportDataSource(),a}return c.parameterBindingSerializationInfo},b.prototype.updateParameter=function(b,c){a.prototype.updateParameter.call(this,b,c),this.dataMember(null)},b}(c.DataBindingBase);c.ParameterBinding=e;var f=function(b){function f(c,f,g){var h=this;b.call(this,c,f,g);var i=this;if(this.key=ko.pureComputed(function(){var a=h.parentModel()&&h.parentModel().root&&h.parentModel().root.key;return(a?a()+".":"")+h.name()}),this.reportSource())if(this.reportSource().key=this.key,f){var j=f.root.objectStorage().concat(this.reportSource().objectStorage());f.root.objectStorage(j),this.reportSource().objectStorage(j)}else var k=this.parentModel.subscribe(function(a){a&&(k.dispose(),h.reportSource().objectStorage(a.root.objectStorage()))});this.parameterBindings=a.JS.Utils.deserializeArray(c.ParameterBindings,function(a){return new e(a,h,g)}),this._disposables.push(this.parameterBindings.subscribe(function(a){$.each(a,function(a,b){"added"===b.status&&b.value.subreportControl(i)})},null,"arrayChange")),this.reportSourceUrl()&&this._getSubreportLayout(this.reportSourceUrl()),this._disposables.push(this.reportSourceUrl.subscribe(function(a){h.reportSource().dispose(),a?h._getSubreportLayout(a):h.reportSource(new d(d.defaultReport,g))})),this.actions.push({action:function(){h.root.getSubreportUrls()},title:"Update",visible:function(a){return"reportSourceUrl"===a}})}return __extends(f,b),f.prototype._getSubreportLayout=function(a){var b=this;c.ReportStorageWeb.getData(a).done(function(a){if(a){var d=new c.ReportViewModel(JSON.parse(a.reportLayout));d.dataSourceRefs=a.dataSourceRefInfo,d.dataSourceHelper(new c.DataSourceHelper(d.objectStorage,d.dataSourceRefs,a.dataSources)),b.reportSource(d)}})},f.prototype.getInfo=function(){var a=$.extend(!0,[],b.prototype.getInfo.call(this));if(this.reportSourceUrl&&this.reportSourceUrl()){var c=a.filter(function(a){return"reportSource"===a.propertyName})[0];a.splice(a.indexOf(c),1)}return a},f}(c.ControlViewModel);c.XRSubreportViewModel=f;var g=function(a){function b(b,c){a.call(this,b,c),this.template="dxrd-subreport",this.selectiontemplate="dxrd-subreport-selection",this.displayName=b.name}return __extends(b,a),b.prototype.isThereIntersectionWithCrossBandControls=function(){return!1},b.prototype.isThereIntersectionWithControls=function(){return!1},Object.defineProperty(b.prototype,"isIntersectionDeny",{get:function(){return!0},enumerable:!0,configurable:!0}),b}(c.ControlSurface);c.SubreportSurface=g,c.reportSourceUrl={propertyName:"reportSourceUrl",modelName:"@ReportSourceUrl",defaultVal:"",editor:c.editorTemplates.reportSourceUrl,displayName:"Report Source Url"},c.reportSource={propertyName:"reportSource",modelName:"ReportSource",from:d.from,toJsonObject:d.toJson},c.parameterBindingSerializationInfo=c.dataBindingBaseSerializationInfo.concat([{propertyName:"parameterName",modelName:"@ParameterName",displayName:"Parameter Name",editor:a.JS.Widgets.editorTemplates.combobox},{propertyName:"fakeBinding",displayName:"Binding",editor:{header:"dxrd-dataBinding",editorType:b.Widgets.FieldListEditor}}]),c.parameterBindings={propertyName:"parameterBindings",modelName:"ParameterBindings",displayName:"Parameter Bindings",array:!0,editor:a.JS.Widgets.editorTemplates.commonCollection,addHandler:a.Designer.Report.ParameterBinding.createNew,template:"#dxrd-commonCollectionItem"},c.subreportSerializationsInfo=[c.reportSource,c.reportSourceUrl,c.subreportScripts,c.parameterBindings].concat(c.sizeLocation,c.commonControlProperties,c.canGrowShrinkGroup)}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a,c){return ko.pureComputed(function(){var d=a();c&&(d=d.filter(c));var e=d.map(function(a){return{displayName:a.name(),value:a}}),f={displayName:b.localizeNoneString("(none)"),value:null};return e.splice(0,0,f),e}).extend({throttle:1})}function e(a,b,d,e){var f=a.model,g=a.reportPreviewModel.reportPreview,h=a.wizard,i=a.dataSourceWizard,j=a.sqlDataSourceWizard,k=a.scriptsEditor;return function(l){c.reportStorageWebIsRegister&&(l.push({container:"menu",text:"New",imageClassName:"dxrd-image-newreport",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:"N".charCodeAt(0)},clickAction:function(){a.navigateByReports.addTab(ko.observable(new c.ReportViewModel(c.SubreportViewModel.defaultReport)),ko.observable(""),"dx-icon-close"),a.isDirty(!0)}}),l.push({container:"menu",text:"New via Wizard",imageClassName:"dxrd-image-new-via-wizard",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:"W".charCodeAt(0)},clickAction:function(){h.removeHandler(),h.oncompleted(function(d,e){a.isLoading(!0),c.ReportWizardService.generateReportFromWizardModel(e,b.availableDataSources,b.state).done(function(b){var d=new c.ReportViewModel(JSON.parse(b.reportModel));d.dataSourceRefs=b.dataSourceRefs,a.navigateByReports.addTab(ko.observable(d),ko.observable(""),"dx-icon-close"),a.isDirty(!0),a.isLoading(!1)})}),h.start()}}),l.push({container:"menu",text:"Open",imageClassName:"dxrd-image-open",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:"O".charCodeAt(0)},clickAction:function(){a.openReportDialog.open()}})),h&&l.push({container:"menu",text:"Design in Report Wizard...",imageClassName:"dxrd-image-run-wizard",disabled:ko.observable(!1),visible:!0,clickAction:function(){h.removeHandler(),h.oncompleted(function(d,e){a.isLoading(!0),c.ReportWizardService.generateReportFromWizardModel(e,b.availableDataSources,b.state).done(function(b){a.navigateByReports.currentTab().undoEngine.start(),a.isDirty(!0);var d=new c.ReportViewModel(JSON.parse(b.reportModel));d.dataSourceRefs=b.dataSourceRefs,a.model(d),a.navigateByReports.currentTab().undoEngine.end(),a.isLoading(!1)})}),h.start()}}),g&&l.push({text:"Preview",imageClassName:"dxrd-image-preview",disabled:ko.observable(!1),visible:ko.pureComputed(function(){return!g.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"P".charCodeAt(0)},clickAction:function(){g.previewVisible(!0),g.initialize(c.ReportPreviewService.initializePreview(f()))},hasSeparator:!0}),k&&l.push({text:"Scripts",imageClassName:"dxrd-image-scripts",disabled:ko.observable(!1),visible:ko.pureComputed(function(){return!k.editorVisible()}),hotKey:{ctrlKey:!0,keyCode:"R".charCodeAt(0)},clickAction:function(){k.editorVisible(!0)},hasSeparator:!0}),i&&i()&&l.push({container:"menu",text:"Add Data Source...",imageClassName:"dxrd-image-add-datasource",disabled:ko.observable(!1),visible:!0,clickAction:function(){i().start()}}),j&&l.push({container:"menu",text:"Add SQL Data Source...",imageClassName:"dxrd-image-add-datasource",disabled:ko.observable(!1),visible:ko.pureComputed(function(){return j.connectionStrings.length>0}),clickAction:function(){j.start()}}),l.push({container:"menu",text:"Save",imageClassName:"dxrd-image-save",disabled:ko.observable(!1),visible:!0,hotKey:{ctrlKey:!0,keyCode:"S".charCodeAt(0)},clickAction:function(){if(c.reportStorageWebIsRegister){var b=a.navigateByReports.currentTab();b.url()?c.ReportStorageWeb.setData(b.report().serialize(),b.url()).done(function(){}).fail(function(){}):a.saveReportDialog.open(b)}else f().save()}}),c.reportStorageWebIsRegister&&l.push({container:"menu",text:"Save As",imageClassName:"dxrd-image-save",disabled:ko.observable(!1),visible:!0,clickAction:function(){a.saveReportDialog.open(a.navigateByReports.currentTab())}}),l.push({container:"menu",text:"Exit",imageClassName:"dxrd-image-exit",disabled:ko.observable(!1),visible:!0,clickAction:function(){a.navigateByReports.closeAll().done(function(){e()})}}),d&&d(l)}}function f(b,d){void 0===d&&(d=[]);var e=function(a){a instanceof c.XRSubreportViewModel&&(d.push(a),f(a.reportSource(),d))};return e(b),a.Designer.collectionsVisitor(b,function(a){a().forEach(e)},["controls","bands","subBands"]),d}function g(){var a=$(".dxrd-bands-panel-wrapper");a.scrollTop($(".dxrd-viewport").scrollTop());var a=$(".dxrd-hruler-wrapper");a.scrollLeft($(".dxrd-viewport").scrollLeft())}function h(a,b,c,d){return function(e){return d?d[e.fullPath]?d[e.fullPath]:(i(e,b,c),d[e.fullPath]=a(e)):(i(e,b,c),a(e))}}function i(b,c,d){b.state=d;var e=c.peek().filter(function(a){return b.id&&a.id===b.id||b.ref&&a.ref===b.ref})[0];e&&e.data&&(b.dataSource=JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(e.data)))}function j(a,b,d,e,f){var g=new c.DataSourceHelper(ko.observableArray([]),[],a.availableDataSources),i=new c.Wizard.ReportWizard(g.allDataSources,h(d,g.allDataSources,a.state),a.isReportServer);return i.oncompleted(function(d,g){e(!0),c.ReportWizardService.generateReportFromWizardModel(g,a.availableDataSources,a.state).done(function(a){var d=new c.ReportViewModel(JSON.parse(a.reportModel));d.dataSourceRefs=a.dataSourceRefs,b().undoEngine.start(),b().report(d),b().undoEngine.end(),f(!0),e(!1)})}),i}function k(a,b,d,e){var f=a.dsHelperProvider(),g=new c.Wizard.DataSourceWizard(ko.observableArray(f.availableDataSources),h(d,f.allDataSources,b.state));return g.oncompleted(function(d,g){c.ReportWizardService.createDataSource(g,b.availableDataSources,b.state).done(function(b){b.dataSource.data=JSON.parse(b.dataSource.data),l(f,a.dataSource,e,b.dataSource)})}),g}function l(a,b,c,d){c().start();var e=a.addDataSource(d);b()||b(e),c().end()}function m(a,b,c,d){c().start(),a.removeDataSource(d),b()===d.data&&b(a.findDataSourceInfoByRef("none").data),c().end()}function n(g,i,l,m,n,s,t){c.reportStorageWebIsRegister=i.reportStorageWebIsRegister||c.reportStorageWebIsRegister,c.HandlerUri=s||c.HandlerUri,l.fieldLists=l.fieldLists||c.ReportDataSourceService.fieldListCallback,m&&Globalize.addCultureInfo("default",{messages:m}),p();var v={};$.each(i.infoDefaults||{},function(b,c){a.Designer.Report[b]&&(a.Designer.Report[b].defaultVal=c)});var w=ko.observable(),x=ko.observable(!0),y=ko.observable(),z=ko.observable(),A=ko.observable(),B=ko.observable(),C=ko.observable(),D=ko.observable(),E=ko.observable(),F=null,G=null,H=ko.observable(null),I=ko.observableArray([]),J=ko.observable(),K=ko.observable(),L={},M=[],N=function(a){for(var b in L)L.hasOwnProperty(b)&&delete L[b];var c=[].concat(a);c.splice(-1,0,{ref:"parameters",name:"Parameters",specifics:"parameters",data:z().parameters}),I(c)},O=function(){c.ReportStorageWeb.getUrls(i.subreports).done(function(a){v.reportUrls(a)})},P=function(a){a.getSubreportUrls=O,M.forEach(function(a){a&&a.dispose()}),M=[],a.surface||(a.surface=new c.ReportSurface(a)),y(a.surface),H(null),a.parameterHelper.initialize(n,l.customizeParameterEditors);var d=new c.ParametersViewModel(a);z(d);var e=a.dataSourceHelper();if(!e){var f=v.isDirty&&v.isDirty();e=new c.DataSourceHelper(a.objectStorage,a.dataSourceRefs,i.availableDataSources),a.dataSourceHelper(e),f||v.undoEngine&&v.undoEngine().clearHistory()}M.push(A()),N(e.usedDataSources()),M.push(e.usedDataSources.subscribe(N)),A(e);var g=new c.CalculatedFieldsSource(a.calculatedFields,a.dataSource,e);M.push(B()),B(g);var j=new c.ChartFieldListExtender;v.fieldListItemsExtenders=[d,new r(e.usedDataSources),g,j];var m=h(l.fieldLists,I,i.state,L);C(new b.FieldListProvider(m,I,v.fieldListItemsExtenders)),D(new b.FieldListProvider(m,I,[d,g,j])),K.peek()&&K.peek().dispose(),K(new c.DisplayNameProvider(C(),A(),a.dataSource)),M.push(E()),E(i.isReportServer?k(a,i,l.fieldLists,v.undoEngine):null),J({itemsProvider:C(),selectedPath:H,treeListController:new q(v.fieldListActionProviders,b.createActionWrappingFunction("WrapForFieldList",function(a,b){v.undoEngine().start();var c=b(a);v.undoEngine().end(),c&&c.name&&H(a.path+"."+ko.unwrap(c.name))}),v.fieldDragHandler)})},Q=ko.observable(new c.ReportViewModel(i.report()));i.report.subscribe(function(a){var b=new c.ReportViewModel(a),d=function(a){var b=i.dataSourceRefs.filter(function(b){return b.Key===a})[0];return b&&b.Value||[]};b.dataSourceRefs=d(b.key());var e=f(b);e.forEach(function(a){a.reportSource()&&(a.reportSource().dataSourceRefs=d(a.key()))}),Q(b),v.undoEngine&&v.undoEngine().clearHistory()});var R=new c.NavigateByReports(Q,i.reportUrl);w=ko.computed({read:function(){return v.undoEngine&&v.undoEngine(R.currentTab().undoEngine),R.currentTab().report()},write:function(a){R.currentTab().report(a)}}),P(w()),v=a.Designer.createDesigner(w,y,c.controlsFactory,c.groups,[]),v.isDirty=ko.computed({read:function(){return R.currentTab().isDirty()},write:function(a){R.currentTab().isDirty(a)}}),v.reportUrls=ko.observableArray([]),v.undoEngine().removeTargetSubscription(),R.init(v),O(),w.subscribe(function(a){P(a)}),v.navigateByReports=R,v.contextActionProviders.push(new u(y,v.selection),new b.ElementsGroupActions(y,v.selection),new c.ReportActions,new c.TableRowActions(v.selection),new c.TableCellActions(v.selection),new c.PivotGridActions),v.calculatedFieldsSource=B;var S=ko.observable(!1),T={treeListOptions:J,popoverVisible:S,addDataSourceBtnVisible:ko.pureComputed(function(){return A().availableDataSources.length>0}),showPopover:function(){S(!0)},dataSourceListItems:function(){return i.isReportServer?[{name:"New Data Source...",id:"addNew"}]:A().availableDataSources},itemClickAction:function(a){S(!1),"addNew"===a.itemData.id?E().start():(v.undoEngine().start(),A().dataSourceValue(w().dataSource)(a.itemData.name),v.undoEngine().end())}};v.reportPreviewModel=a.Report.Preview.createPreview(g,{customizeParameterEditors:l.customizeParameterEditors,customizeActions:l.customizeActions},m,{knownEnums:n},t,!1),v.reportPreviewModel.reportPreview.previewVisible.subscribe(function(a){x(!a)}),v.fieldListActionProviders=[B(),z()],o(v,B,c.CalculatedFieldsSource),o(v,z,c.ParametersViewModel),i.isReportServer||(F=new c.Wizard.SqlDataSourceWizard(i.connectionStrings,{selectStatement:c.ReportDataSourceService.selectStatementCallback},i.disableCustomSql),G=new c.SqlDataSourceEditor(A,F,w,v.undoEngine),v.fieldListActionProviders.push(G)),v.wizard=j(i,R.currentTab,l.fieldLists,v.isLoading,v.isDirty),v.dataSourceWizard=E,v.sqlDataSourceWizard=F,v.addOns=ko.observableArray([{templateName:"dxrd-reportpreview",model:v.reportPreviewModel},{templateName:"dxrd-wizard",model:v.wizard},{templateName:"dxrd-wizard",model:v.dataSourceWizard},{templateName:"dxrd-wizard",model:v.sqlDataSourceWizard}]),G&&v.addOns.push({templateName:"dxrd-masterDetail-editor",model:G.relationsEditor}),window.ace&&(v.scriptsEditor=new c.ScriptsEditor(w,v.controlsHelper().allControls),v.scriptsEditor.editorVisible.subscribe(function(a){if(a){var b=v.selection.focused().getControlModel();v.scriptsEditor.selectedControl(b.scripts?b:b.parentModel()),setTimeout(function(){v.scriptsEditor.editorContainer().resize()},1)}x(!a)}),v.addOns.push({templateName:"dxrd-scripts",model:v.scriptsEditor}),v.events=ko.pureComputed(function(){return v.scriptsEditor.allFunctionNames}),v.gotoEvent=function(a,b,c){var d=v.scriptsEditor;d.editorVisible(!0),d.ensureEvent(b.split("on")[1],a,c)}),v.saveReportDialog=new c.SaveReportDialog(v.reportUrls),v.saveReportDialogLight=new c.SaveReportDialogLight(v.saveReportDialog),R.save=function(a){v.saveReportDialogLight.open(a)},v.openReportDialog=new c.OpenReportDialog(v.reportUrls,R),v.styles=ko.pureComputed(function(){return w().styles}),v.formattingRuleSheet=ko.pureComputed(function(){return w().formattingRuleSheet}),v.tabPanel.tabs.push(new b.TabInfo("Fields","dxrd-fieldlistwrapper",T,"fieldlist"));var U=new c.ReportExplorerModel(w,v.editableObject,function(){v.tabPanel.selectTab({model:v.tabPanel.tabs[0]})},new c.ReportExplorerDragDropHandler(y,v.selection,v.undoEngine,v.dragHelperContent),v.selection);v.tabPanel.tabs.push(new b.TabInfo("Report Explorer","dxrd-reportexplorerwrapper",U,"reportexplorer")),v.designMode=x,v.displayNameProvider=K,v.fieldListProvider=C,v.dataBindingsProvider=D,v.fieldListDataSources=I,v.dataSourceHelper=A,v.selectedPath=H,v.controls=ko.pureComputed(function(){return d(v.controlsHelper().allControls,function(a){return!(a instanceof c.BandViewModel||a instanceof c.ReportViewModel)})}),v.bands=ko.pureComputed(function(){return d(v.controlsHelper().allControls,function(a){return a instanceof c.BandViewModel&&0===a.bands().length})}),v.chartDataSources=ko.computed(function(){var a=v.controlsHelper().allControls().filter(function(a){
return a instanceof c.XRPivotGridViewModel}).map(function(a){return{displayName:a.name,value:a}}),b=A().usedDataSources().map(function(a){return{displayName:a.name,value:a.name}}),d=[].concat(a,b);return d}),v.getControls=function(a){return ko.pureComputed(function(){return d(v.controlsHelper().getControls(ko.unwrap(a)),function(a){return!(a instanceof c.BandViewModel||a instanceof c.ReportViewModel)})})},v.actionLists=new b.ActionLists(y,v.selection,v.undoEngine,e(v,i,l.customizeActions,l.exitDesigner)),v.fieldDragHandler=new c.FieldListDragDropHandler(y,v.selection,v.undoEngine,v.snapHelper,v.dragHelperContent),v.selection.focused(y()),y.subscribe(function(a){v.selection.focused(a)}),v.parts.push({templateName:"dxrd-navigation-panel-template",model:v.navigateByReports},{templateName:"dxrd-report-dialog-template",model:v.saveReportDialog},{templateName:"dxrd-report-dialog-template",model:v.saveReportDialogLight},{templateName:"dxrd-report-dialog-template",model:v.openReportDialog}),$(g).children().remove(),ko.applyBindings(v,g),v.editableObject.subscribe(function(){var a=$(".dxrd-designer .dxrd-properties-wrapper").find(".dx-scrollview"),b=a.data("dxScrollView")&&a.dxScrollView("instance");b&&b.scrollTo&&b.scrollTo(0)});var V=b.updateSurfaceContentSize(v.surfaceSize,g);return $(window).bind("resize",function(){V()}),v.tabPanel.width.subscribe(function(){V()}),v.updateSurfaceSize=function(){V()},v.navigateByReports.height.subscribe(function(){V()}),v.updateSurfaceSize(),v}function o(a,b,c){b.subscribe(function(){var d=a.fieldListActionProviders.filter(function(a){return a instanceof c})[0];if(d){var e=a.fieldListActionProviders.indexOf(d);a.fieldListActionProviders.splice(e,1,b())}})}function p(){c.controlsFactory.registerControl("Unknown",{info:c.unknownSerializationsInfo,type:c.ControlViewModel,defaultVal:{"@SizeF":"100,23"},nonToolboxItem:!0,surfaceType:c.ControlSurface}),c.controlsFactory.registerControl("XRLabel",{info:c.labelSerializationsInfo,toolboxIndex:0,defaultVal:{"@Padding":"2,2,0,0,100","@SizeF":"100,23"},surfaceType:c.ControlSurface,type:c.ControlViewModel,popularProperties:c.popularPropertiesLabel}),c.controlsFactory.registerControl("XRRichText",{info:c.richTextSerializationsInfo,toolboxIndex:2,defaultVal:{"@SizeF":"100,23"},surfaceType:c.XRRichSurface,type:c.XRRichViewModel,popularProperties:c.popularPropertiesRichText}),c.controlsFactory.registerControl("XRPanel",{info:c.panelSerializationsInfo,toolboxIndex:4,defaultVal:{"@SizeF":"300,75"},surfaceType:c.ControlSurface,type:c.ControlViewModel,isContainer:!0}),c.controlsFactory.registerControl("XRTableOfContents",{nonToolboxItem:!0,info:c.tocSerializationsInfo,surfaceType:c.TodoControlSurface,type:c.ControlViewModel}),c.controlsFactory.registerControl("DevExpress.XtraReports.UI.XtraReport",{info:c.reportSerializationInfo,nonToolboxItem:!0,surfaceType:c.ReportSurface,popularProperties:c.popularPropertiesReport,isCopyDeny:!0,isDeleteDeny:!0}),c.controlsFactory.registerControl("TopMarginBand",{info:c.bandSerializationInfo.concat(c.commonBandScripts),type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,isContainer:!0,isCopyDeny:!0,isDeleteDeny:!0}),c.controlsFactory.registerControl("BottomMarginBand",{info:c.bandSerializationInfo.concat(c.commonBandScripts),type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,isContainer:!0,isCopyDeny:!0,isDeleteDeny:!0}),c.controlsFactory.registerControl("DetailReportBand",{info:c.detailReportBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesDetailReport,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("DetailBand",{info:c.detailBandSerializationInfo.concat(c.multiColumn),type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesDetail.concat("multiColumn"),isContainer:!0,isCopyDeny:!0,isDeleteDeny:!0}),c.controlsFactory.registerControl("SubBand",{info:c.detailBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesDetail,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("GroupHeaderBand",{info:c.groupHeaderBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesGroupHeader,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("GroupFooterBand",{info:c.groupFooterBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesGroupFooter,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("PageHeaderBand",{info:c.pageBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesPageHeader,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("PageFooterBand",{info:c.pageBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesPageFooter,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("ReportHeaderBand",{info:c.reportHeaderBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,surfaceType:c.BandSurface,popularProperties:c.popularPropertiesReportHeader,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("ReportFooterBand",{info:c.reportFooterBandSerializationInfo,type:c.BandViewModel,nonToolboxItem:!0,popularProperties:c.popularPropertiesReportFooter,surfaceType:c.BandSurface,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("XRCheckBox",{info:c.checkboxSerializationsInfo,toolboxIndex:1,type:c.CheckBoxViewModel,surfaceType:c.XRCheckboxSurface,defaultVal:{"@SizeF":"100,23"},popularProperties:c.popularPropertiesCheckBox}),c.controlsFactory.registerControl("XRChart",{info:c.xrChartSerializationInfo,toolboxIndex:10,defaultVal:{"@SizeF":"400,300",Chart:{Diagram:{"@TypeNameSerializable":"XYDiagram",AxisY:{"@VisibleInPanesSerializable":"-1"},AxisX:{"@VisibleInPanesSerializable":"-1"}},DataContainer:{SeriesSerializable:{Item1:{"@Name":"Series 1"}}}}},type:c.XRChartViewModel,surfaceType:c.ChartSurface,popularProperties:["name"]}),c.controlsFactory.registerControl("PivotGridField",{info:b.Pivot.pivotGridFieldSerializationsInfo,type:b.Pivot.PivotGridFieldViewModel,surfaceType:b.Pivot.PivotGridFieldSurface,nonToolboxItem:!0,popularProperties:b.Pivot.popularPropertiesPivotGridField}),c.controlsFactory.registerControl("XRPivotGrid",{info:c.pivotGridSerializationsInfo,toolboxIndex:13,defaultVal:{"@ControlType":"XRPivotGrid","@SizeF":"250,120",OptionsChartDataSource:{},Prefilter:{},OptionsPrint:{"@FilterSeparatorBarPadding":"3","@UsePrintAppearance":"true"},OptionsView:{}},type:c.XRPivotGridViewModel,surfaceType:c.PivotGridSurface,popularProperties:["dataSource","dataMember"]}),c.controlsFactory.registerControl("XRPictureBox",{info:c.pictureBoxSerializationsInfo,toolboxIndex:3,defaultVal:{"@SizeF":"100,100"},type:c.XRPictureBoxViewModel,surfaceType:c.PictureBoxSurface,popularProperties:c.popularPropertiesPicture}),c.controlsFactory.registerControl("XRTable",{info:c.tableSerializationsInfo,type:c.TableControlViewModel,toolboxIndex:5,defaultVal:{"@SizeF":"300,25",Rows:{Item1:{"@ControlType":"XRTableRow","@Weight":"1",Cells:{Item1:{"@ControlType":"XRTableCell","@Weight":"1"},Item2:{"@ControlType":"XRTableCell","@Weight":"1"},Item3:{"@ControlType":"XRTableCell","@Weight":"1"}}}}},surfaceType:c.TableSurface,popularProperties:c.popularPropertiesTable,isContainer:!0}),c.controlsFactory.registerControl("XRTableRow",{info:c.tableRowSerializationsInfo,type:c.TableRowViewModel,defaultVal:{"@HeigthF":"25","@Weight":"20"},nonToolboxItem:!0,surfaceType:c.TableRowSurface,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("XRTableCell",{info:c.tableCellSerializationsInfo,type:c.TableCellViewModel,defaultVal:{"@Weight":"1","@WidthF":"100"},nonToolboxItem:!0,surfaceType:c.TableCellSurface,popularProperties:c.popularPropertiesTableCell,isContainer:!0,isCopyDeny:!0}),c.controlsFactory.registerControl("XRLine",{info:c.lineSerializationsInfo,toolboxIndex:6,type:c.ControlViewModel,surfaceType:c.XRLineSurface,defaultVal:{"@SizeF":"100,23"},popularProperties:c.popularPropertiesLine}),c.controlsFactory.registerControl("XRShape",{info:c.shapeSerializationsInfo,toolboxIndex:7,defaultVal:{"@SizeF":"100,23"},type:c.ShapeViewModel,surfaceType:c.ShapeControlSurface,popularProperties:c.popularPropertiesShape}),c.controlsFactory.registerControl("XRBarCode",{info:c.barcodeSerializationsInfo,toolboxIndex:8,defaultVal:{"@SizeF":"100,23","@Padding":"10,10,0,0,100",Symbology:{"@Name":"Code128"},"@Text":""},surfaceType:c.XRBarcodeSurface,type:c.XRBarCodeViewModel,popularProperties:c.popularPropertiesBarCode}),c.controlsFactory.registerControl("XRZipCode",{info:c.zipCodeSerializationInfo,type:c.ControlViewModel,surfaceType:c.ZipCodeSurface,toolboxIndex:9,defaultVal:{"@SizeF":"100,23"},popularProperties:c.popularPropertiesZipCode}),c.controlsFactory.registerControl("XRGauge",{info:c.xrGaugeSerializationInfo,surfaceType:c.TodoControlSurface,type:c.XRGaugeViewModel,toolboxIndex:11,defaultVal:{"@SizeF":"220,120"},popularProperties:c.popularPropertiesGauge}),c.controlsFactory.registerControl("XRPageInfo",{info:c.pageInfoSerializationsInfo,surfaceType:c.XRPageInfoSurface,toolboxIndex:16,defaultVal:{"@SizeF":"100,23","@Padding":"2,2,0,0,100"},type:c.ControlViewModel,popularProperties:c.popularPropertiesPageInfo}),c.controlsFactory.registerControl("XRPageBreak",{info:c.pageBreakSerializationsInfo,type:c.ControlViewModel,surfaceType:c.XRPageBreakSurface,toolboxIndex:17,defaultVal:{"@SizeF":"30,2"}}),c.controlsFactory.registerControl("XRCrossBandLine",{info:c.crossBandLineControlSerializationsInfo,type:c.CrossBandControlViewModel,toolboxIndex:18,defaultVal:{"@WidthF":"9.38","@StartPointFloat":"0,0","@EndPointFloat":"0,50"},size:"9.38, 50",surfaceType:c.CrossBandSurface,popularProperties:c.popularPropertiesCrossLine}),c.controlsFactory.registerControl("XRCrossBandBox",{info:c.crossBandBoxControlSerializationsInfo,type:c.CrossBandControlViewModel,toolboxIndex:19,defaultVal:{"@WidthF":"50","@StartPointFloat":"0,0","@EndPointFloat":"0,50"},size:"50,50",surfaceType:c.CrossBandSurface}),c.controlsFactory.registerControl("XRSparkline",{info:c.sparklineSerializationsInfo,toolboxIndex:12,defaultVal:{"@SizeF":"150,80",View:{"@Type":"Line"}},surfaceType:c.SparkLineSurface,type:c.XRSparklineViewModel,popularProperties:c.popularPropertiesSparkline}),c.controlsFactory.registerControl("XRSubreport",{info:c.subreportSerializationsInfo,toolboxIndex:14,defaultVal:{"@SizeF":"100,23",ReportSource:c.SubreportViewModel.defaultReport},surfaceType:c.SubreportSurface,type:c.XRSubreportViewModel,popularProperties:["name","reportSourceUrl"]})}a.JS.Utils.getLocalization=a.Designer.getLocalization,c.controlsFactory=new b.ControlsFactory,c.HandlerUri="DXXRD.axd",c.reportStorageWebIsRegister=!1,c.groups={"Chart Structure":[c.chartStructure,c.chartElement],Styles:[c.evenStyleName,c.oddStyleName,c.styleName].concat(c.pivotGridStyles),Appearance:[b.Chart.appearanceName,c.pivotGridAppearances,c.alignment,c.backColor,c.borderColor,c.borderDashStyle,c.borderDashStyleCrossband,c.borderWidth,c.borders,b.Pivot.caption,b.Pivot.cellFormat,b.Pivot.columnValueLineCount,b.Pivot.displayFolder,b.Pivot.emptyCellText,b.Pivot.emptyValueText,c.fillColor,c.font,c.foreColor,c.glyphAlignment,b.Pivot.grandTotalCellFormat,b.Pivot.grandTotalText,c.lineDirection,c.lineStyle,c.lineWidth,c.padding,c.pageColor,b.Chart.paletteName,b.Pivot.rowValueLineCount,c.sparklineFake,c.stylePriority,c.textAlignment,b.Pivot.totalCellFormat,b.Pivot.totalValueFormat,b.Pivot.valueFormat,c.viewStyle,c.viewTheme,c.viewType,c.watermark,c.formattingRuleLinks],Behavior:[b.Pivot.allowedAreas,c.anchorVertical,c.anchorHorizontal,c.angle,b.Pivot.area,b.Pivot.areaIndexEditable,c.autoModule,c.autoWidth,c.barCodeOrientation,c.canGrow,c.canShrink,c.conditionObj,c.drillDownControl,c.drillDownDetailReportExpanded,b.Pivot.groupInterval,b.Pivot.groupIntervalNumericRange,b.Pivot.totalsVisibility,c.displayName,c.format,c.formatting,c.groupFields,c.groupUnion,c.groupFooterUnion,c.keepTogether,c.keepTogetherWithDetailReports,c.level,c.moduleInfo,c.multiline,c.multiColumn,c.pageBreak,c.pageInfo,c.printAtBottom,c.printOn,c.processDuplicatesMode,c.processDuplicatesTarget,c.processNullValues,c.repeatEveryPage,c.measureUnit,b.Chart.rotated,c.runningBand,c.requestParameters,c.rowSpan,c.segmentWidth,c.shapeFake,c.sizing,c.showPreviewMarginLines,c.showText,c.startPageNumber,c.stretch,c.barcodeFake,c.verticalContentSplitting,c.visible,c.wordWrap,c.scriptLanguage,c.reportExportOptionsSerializationInfo,c.reportPrintOptions,c.scriptReferencesString,c.allScripts],Data:[c.actualValue,b.Chart.seriesDataMember,c.checkState,c.checked,c.chartDataSourceEditable,c.dataSource,c.dataMember,c.dataAdapter,b.Pivot.expandedInFieldsGroup,b.Chart.pivotGridDataSourceOptions,b.Pivot.fieldName,c.filterStringEditable,c.image,c.imageUrl,c.maximum,c.minimum,c.nullValueText,c.prefilter,b.Pivot.runningTotal,c.sortFields,c.summary,b.Pivot.showNewValues,b.Pivot.sortMode,b.Pivot.sortOrder,b.Pivot.summaryDisplayType,b.Pivot.summaryType,c.targetValue,c.text,c.rtf,c.textRtf,c.serializableRtfString,b.Pivot.topValueCount,b.Pivot.topValueShowOthers,b.Pivot.topValueType,b.Pivot.unboundExpression,b.Pivot.unboundFieldName,b.Pivot.unboundType,b.Pivot.useNativeFormat,c.xlsxFormatString,b.Pivot.pivotGridFieldsSerializable,c.valueMember,c.reportSourceUrl,c.calculatedFields,c.parameterBindings,c.dataBindings([])],Design:[c.name,c.snapGridSize],Layout:[c.endBand,c.endPoint,c.height,c.location,c.size,c.startBand,c.startPoint,b.Pivot.minWidth,c.width],Navigation:[c.bookmark,c.bookmarkParent,c.target,c.navigateUrl],"Page Settings":[c.landscape,c.rollPaper,c.pageWidth,c.pageHeight,c.paperKind,c.margins],Options:c.pivotGridOptions.concat(b.Pivot.options),KPI:[b.Pivot.KPIGraphic]},c.subreportControlCollector=f,c.onViewportScroll=g;var q=function(){function a(b,c,d){void 0===b&&(b=[]),this.hasItems=a.isList,this.selectedItem=null,this._actionProviders=b,this._fieldListActionWrapper=c,this.dragDropHandler=d}return a.prototype.itemsFilter=function(a){return a.isCalculated===!0||"none"!==a.specifics},a.isList=function(a){return a.isCalculated?!1:"List"===a.specifics||"ListSource"===a.specifics||a.isList===!0},a.prototype.select=function(a){this.selectedItem&&this.selectedItem.isSelected(!1),this.selectedItem=a,a.isSelected(!0)},a.prototype.canSelect=function(){return!0},a.prototype.getActions=function(a){var b=this,c=[];return(this._actionProviders||[]).forEach(function(d){var e=d.getActions(a);b._fieldListActionWrapper&&b._fieldListActionWrapper(e),c.push.apply(c,e)}),c},a.prototype.isDraggable=function(){return!0},a}();c.FieldListController=q;var r=function(){function a(a){this._dataSources=a}return a.prototype.beforeItemsFilled=function(){return!1},a.prototype.afterItemsFilled=function(a,c){if(this._dataSources&&this._dataSources.peek())if(a.fullPath){if(a.fullPath===a.id||a.fullPath===a.ref){var d=this._dataSources.peek().filter(function(b){return!!b.id&&b.id===a.id||!!b.ref&&b.ref===a.ref})[0];if(!d.isSqlDataSource)return;c.forEach(function(a){a.canEditQuery=a.isList})}}else this._dataSources.peek().forEach(function(a){var d=b.getFirstItemByPropertyValue(c,"displayName",a.name);d&&a.data&&(a.data.tableInfoCollection?(d.contenttemplate="dxrd-datasource-item",d.tableInfoItems=a.data.tableInfoCollection):a.isSqlDataSource&&(d.canAddSqlQuery=!0),d.canRemove=!0)})},a}();c.DataSourceItemsExtender=r,c.wrapFieldsCallback=h;var s=function(){function a(a){if(this.AdjustFieldWidth=a.fitFieldsToPage,this.Columns=a.fields().map(function(a){return a.name}),this.CustomLabelInformation={},this.DataMemberName={DisplayName:a.dataMember().displayName,Name:a.dataMember().name,DataMemberType:0},a.dataMember().name){var b=a.dataMemberPath().indexOf(".");this.DataMemberName.Name=b>0?a.dataMemberPath().substr(b+1):a.dataMemberPath()}this.DataSourceName=null,this.GroupingLevels=a.groups,this.IgnoreNullValuesForSummary=a.ignoreNullValuesForSummary,this.LabelProductId=0,this.LabelProductDetailId=0,this.Layout=a.layout,this.Portrait=a.portrait,this.ReportStyleId=a.style,this.ReportTitle=a.reportTitle,this.ReportType=0,this.SummaryOptions=a.summaryOptions.map(function(a){return{ColumnName:a.columnName,Flags:a.flags}})}return a}();c.RequestReportModel=s,c.createReportWizard=j,c.createDataSourceWizard=k,c.addDataSourceToReport=l,c.removeDataSourceFromReport=m;var t=a.ui.dxSelectBox.prototype._optionValuesEqual;a.ui.dxSelectBox.redefine({_optionValuesEqual:function(a,c,d){return"value"===a&&c instanceof b.ElementViewModel&&d instanceof b.ElementViewModel?c===d:t.apply(this,arguments)}});var u=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype.getActions=function(b){return b&&!(b instanceof c.ReportViewModel||b instanceof c.BandViewModel)&&(b instanceof c.ReportElementViewModel||"multiselect"===b.controlType)?a.prototype.getActions.call(this,b):[]},b}(b.ElementActions);c.createReportDesigner=n,c.registerControls=p}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function a(){}return a.prototype.getCompletions=function(a,b,c,d,e){e(null,[].map(function(){return{name:"super",value:"superValue",meta:"optional text"}}))},a}();c.ReportCompleter=d,ko.bindingHandlers.dxAceEditor={update:function(a,c,e,f){var g,h=c(),i=h.value,j=h.editorContainer,k=function(a,b){a.getSession().setValue(b||""),a.clearSelection(),a.getSession().getUndoManager().reset()};if(window.ace){var l=window.ace.require("ace/ext/language_tools");g=window.ace.edit(a),g.setTheme(b.classExists(".dx-designer-dark")?"ace/theme/ambiance":"ace/theme/dreamweaver");var m=f.languageHelper.getLanguageMode();g.getSession().setMode(m),g.setOptions({enableBasicAutocompletion:!0,enableSnippets:!0,enableLiveAutocompletion:!0,showPrintMargin:!1}),l.addCompleter(new d),ko.isSubscribable(i)&&i.subscribe(function(a){k(g,a)}),k(g,ko.unwrap(i))}ko.isObservable(j)&&j(g)}};var e=function(d){function e(a,b){var c=this;d.call(this),this._selectionNotEmpty=ko.observable(!1),this._canUndo=ko.observable(!1),this._canRedo=ko.observable(!1),this._cursorPosition=ko.observable().extend({throttle:100}),this.editorContainer=ko.observable(),this.editorVisible=ko.observable(!1),this.toolbarItems=[],this.controls=ko.observableArray([]),this.selectedControl=ko.observable(),this.events=ko.observable(),this.selectedEvent=ko.observable(),this.validateDisabled=ko.observable(!1);var g=this,h=!1;this.languageHelper=new f(a),this._updateEditorState=function(){c.editorContainer()&&c.editorContainer().getSession()&&(c._canUndo(c.editorContainer().getSession().getUndoManager().hasUndo()),c._canRedo(c.editorContainer().getSession().getUndoManager().hasRedo()))},this.selectionChanged=function(a){c._selectionNotEmpty(!a.getSelection().isEmpty()),c._updateEditorState()},this.report=a,this.scriptsText=ko.pureComputed({read:function(){return c.report().scriptsSource()},write:function(a){c.report().scriptsSource(a)}}),this._initializeToolbar(),this.editorContainer.subscribe(function(a){a.getSession()&&(a.getSession().getSelection().on("changeSelection",function(){c.selectionChanged(a)}),a.getSession().getSelection().on("changeCursor",function(){g._cursorPosition(a.getCursorPosition())}))}),this._cursorPosition.subscribe(function(a){var b,d,e=c._getFunctionName(a.row);if(c.controls().some(function(a){return b=a,d=c._getEventByFunction(a,e),!!d}),b&&d)try{h=!0,c.selectedControl(b),c.selectedEvent(d)}finally{h=!1}}),this._disposables.push(ko.computed(function(){c.controls(b().filter(function(a){return!!a.scripts&&!a.lockedInUserDesigner()}))})),this.selectedControl.subscribe(function(a){var b=[];if(a)for(var d in a.scripts||{}){var e=d;0!==e.indexOf("_")&&(0===e.indexOf("on")&&(e=e.substring(2)),b.push(e))}c.selectedEvent(""),c.events(b)}),this._ensureFunction=function(a){var b=c.editorContainer();if(b){var d=b.getValue();if(-1===d.indexOf(a)){var e=c.languageHelper.createNewHandler(a),f=d.concat(e);c.report().scriptsSource(f),b.setValue(f)}}},this.ensureEvent=function(a,b,d){var f=d;f||(f=c.selectedControl()),b=e.generateFunctionName(f,a,b),c._ensureFunction(b),c._changeSelection(b),f.scripts["on"+a](b),c.selectedEvent(a)},this.selectedEvent.subscribe(function(a){if(!h&&a){var b=c.selectedControl(),d=b&&b.scripts["on"+a],e=d&&d();e&&-1!==c.allFunctionNames.indexOf(e)?c._changeSelection(e):c.ensureEvent(a)}})}return __extends(e,d),e.prototype._changeSelection=function(a){var b=this.editorContainer();b&&(b.find(a,{backwards:!1,wrap:!1,caseSensitive:!1,wholeWord:!0,regExp:!1},!0),b.findNext(),b.findPrevious())},e.prototype._initializeToolbar=function(){var d=this,e=ko.observable("");this.toolbarItems.push({text:"Cut",imageClassName:"dxrd-image-cut",disabled:ko.pureComputed(function(){return!d._selectionNotEmpty()}),visible:!0,clickAction:function(){e(d.editorContainer().getCopyText()),d.editorContainer().execCommand("cut")},hotKey:{ctrlKey:!0,keyCode:"X".charCodeAt(0)}}),this.toolbarItems.push({text:"Copy",imageClassName:"dxrd-image-copy",disabled:ko.pureComputed(function(){return!d._selectionNotEmpty()}),visible:!0,clickAction:function(){e(d.editorContainer().getCopyText())},hotKey:{ctrlKey:!0,keyCode:"C".charCodeAt(0)}}),this.toolbarItems.push({text:"Paste",imageClassName:"dxrd-image-paste",disabled:ko.pureComputed(function(){return!e()}),visible:!0,clickAction:function(){d.editorContainer().onPaste(e())},hotKey:{ctrlKey:!0,keyCode:"V".charCodeAt(0)}}),this.toolbarItems.push({text:"Delete",imageClassName:"dxrd-image-delete",disabled:ko.pureComputed(function(){return!d._selectionNotEmpty()}),visible:!0,clickAction:function(){d.editorContainer().execCommand("del")}}),this.toolbarItems.push({text:"Undo",imageClassName:"dxrd-image-undo",disabled:ko.pureComputed(function(){return!d._canUndo()}),visible:!0,clickAction:function(){d.editorContainer().undo(!1),d._updateEditorState()},hotKey:{ctrlKey:!0,keyCode:"Z".charCodeAt(0)},hasSeparator:!0}),this.toolbarItems.push({text:"Redo",imageClassName:"dxrd-image-redo",disabled:ko.pureComputed(function(){return!d._canRedo()}),visible:!0,clickAction:function(){d.editorContainer().redo(!1),d._updateEditorState()},hotKey:{ctrlKey:!0,keyCode:"Y".charCodeAt(0)}}),this.toolbarItems.push({text:"Validate",imageClassName:"dxrd-image-validate",disabled:this.validateDisabled,visible:this.editorVisible,hotKey:{ctrlKey:!0,keyCode:"L".charCodeAt(0)},container:"menu",clickAction:function(){d.validateDisabled(!0),d._setScriptsText(),c.ReportScriptService.validateScripts(d.report()).done(function(a){var c=[];a.forEach(function(a){var b=d.editorContainer().getSession().getLength();c.push({row:d._getValidIndex(a.Line,b),column:d._getValidIndex(a.Column,b),text:a.ErrorNumber+" - "+a.ErrorText,type:a.IsWarning?"warning":"error"})}),d.editorContainer().getSession().setAnnotations(c),d.validateDisabled(!1),c.length>0?b.ShowMessage(b.getLocalization("The script contains error(s).")):b.ShowMessage(b.getLocalization("The script is valid."),"success")}).fail(function(){b.ShowMessage(b.getLocalization("Impossible to validate the script.")),d.validateDisabled(!1)})},hasSeparator:!0}),this.toolbarItems.push({text:"Design",imageClassName:"dxrd-image-design",disabled:ko.observable(!1),visible:this.editorVisible,hotKey:{ctrlKey:!0,keyCode:"P".charCodeAt(0)},container:"menu",clickAction:function(){d._setScriptsText(),d.editorVisible(!1)},hasSeparator:!0}),this.toolbarItems.push({text:"Controls",disabled:ko.observable(!1),visible:this.editorVisible,clickAction:$.noop,control:d.selectedControl,controls:d.controls,displayExpr:function(b){return a.Designer.getControlFullName(b)},templateName:"dxrd-scripting-controlchooser",hasSeparator:!0}),this.toolbarItems.push({text:"Events",disabled:ko.observable(!1),visible:this.editorVisible,clickAction:$.noop,events:d.events,event:d.selectedEvent,templateName:"dxrd-scripting-eventchooser"})},e.prototype._getValidIndex=function(a,b){var c=b>=a?Math.max(1,a):1;return Math.max(0,c-1)},e.prototype._setScriptsText=function(){var a=this.editorContainer();a&&this.scriptsText(a.getValue())},e.prototype._getFunctionName=function(a){for(var b="",c=this.editorContainer().getSession().getDocument().getAllLines(),d=a;d>=0&&!b;d--)$.each(this.allFunctionNames,function(a,e){return-1!==c[d].indexOf(e)&&(b=e),!b});return b},e.prototype._getEventByFunction=function(a,b){var c="";for(var d in a.scripts){if(c)break;var e=d;ko.unwrap(a.scripts[e])===b&&0===e.indexOf("on")&&(c=e.substring(2))}return c},e.generateFunctionName=function(a,c,d){return b.replaceInvalidSymbols(d||ko.unwrap(a.name)+"_"+c)},Object.defineProperty(e.prototype,"allFunctionNames",{get:function(){var a=this.editorContainer();return a?this.languageHelper.getFunctionNamesFromScript(a.getValue()):[]},enumerable:!0,configurable:!0}),e}(b.Disposable);c.ScriptsEditor=e;var f=function(){function a(a){this._report=a}return a.prototype.getLanguageMode=function(){var a=this._report().scriptLanguage();switch(a){case"CSharp":return"ace/mode/csharp";case"VisualBasic":return"ace/mode/vbscript";default:return"ace/mode/text"}},a.prototype.createNewHandler=function(a){var b=this._report().scriptLanguage();switch(b){case"CSharp":return"\r\nprivate void "+a+"(object sender, System.EventArgs e) {\r\n\r\n}\r\n";case"VisualBasic":return"\r\nPrivate Sub "+a+"(ByVal sender As Object, ByVal e As System.EventArgs)\r\n\r\nEnd Sub\r\n";case"JScript":return"\r\nprivate final function "+a+"(sender : System.Object, e : System.EventArgs) {\r\n\r\n}\r\n"}},a.prototype.getFunctionNamesFromScript=function(a){var b=[],c="Private ";if(a){var d=a.split("\r\n").filter(function(a){return-1!==a.indexOf("EventArgs")&&(-1!==a.indexOf(c)||-1!==a.indexOf(c.toLowerCase()))});d.forEach(function(a){var d=a.split("(").filter(function(a){return-1!==a.indexOf(c)||-1!==a.indexOf(c.toLowerCase())})[0].split(" ").filter(function(a){return""!==a});b.push(d[d.length-1])})}return b},a}();c.LanguageHelper=f}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c="dx-eventdropdowneditor dx-selectbox",d="dx-button-normal dx-dropdowneditor-button dxrd-ellipsis-button",e="dx-dropdowneditor-icon dxrd-ellipsis-image",f=function(a){function b(b,c){a.call(this,b,c)}return __extends(b,a),b.prototype._render=function(){this.element().addClass(c),a.prototype._render.call(this)},b.prototype._renderDropButton=function(){a.prototype._renderDropButton.call(this),this._ellipsisButton||this._createEllipsisButton(),this._ellipsisButton.prependTo(this._buttonsContainer())},b.prototype._createEllipsisButton=function(){this._ellipsisButtonIcon=$("<div>").addClass(e),this._ellipsisButton=$("<div>").dxButton({focusStateEnabled:!1,disabled:this.option("readOnly")}).removeClass("dx-button"),this._ellipsisButton.addClass(d),this._ellipsisButton.append(this._ellipsisButtonIcon),this._ellipsisButton.find(".dx-button-content").remove(),this._attachEllipsisButtonEvents()},b.prototype._attachEllipsisButtonEvents=function(){var a=this;this._ellipsisButton.off("click"),this.option("disabled")||this._ellipsisButton.on("click",function(b){a.option("secondAction")&&(a.option("secondAction")(),b.stopPropagation())})},b}(a.ui.dxSelectBox);b.dxEventDropDownEditor=f,a.registerComponent("dxEventDropDownEditor",f)}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(c){var d=function(a){function b(){var c=this;a.call(this),this._stepIndex=ko.observable(),this._defaultWizardPage=new f(this,"","",""),this.width=ko.observable(b.WIZARD_DEFAULT_WIDTH),this.height=ko.observable(b.WIZARD_DEFAULT_HEIGHT),this.headerTemplate=null,this.extendCssClass=null,this.renderedSteps=ko.observableArray([this._defaultWizardPage]),this.isVisible=ko.observable(!1),this.indicatorVisible=ko.observable(!1),this.isPreviousButtonDisabled=ko.pureComputed({read:function(){if(c.currentStep.actionPrevious.isDisabled())return!0;for(var a=c._stepIndex()-1;a>-1;a--)if(c.steps[a].isVisible)return!1;return!0},deferEvaluation:!0}),this._defaultWizardPage.actionPrevious.isDisabled(!0),this._defaultWizardPage.actionNext.isDisabled(!0),this._defaultWizardPage.actionFinish.isDisabled(!0),this._disposables.push(this._stepIndex.subscribe(function(a){a>=0&&a<c.steps.length&&c.renderedSteps.indexOf(c.steps[a])<0&&c.renderedSteps.push(c.steps[a])})),this._disposables.push(this.isVisible.subscribe(function(a){a===!1&&c.resetState()}))}return __extends(b,a),b.prototype._changePage=function(a,b){this.steps[b].commit(this._data);var c=b+(a?1:-1);this._goToFirstVisiblePage(a,c)},b.prototype._pageBeginComplited=function(a,b){this.steps[b].isVisible?(this._stepIndex(b),this.indicatorVisible(!1)):this._changePage(a,b)},b.prototype._goToFirstVisiblePage=function(a,b){var c=this;if(b>=this.steps.length||0>b)throw new Error("Invalid page index");var d=this.steps[b].beginAsync(this._data);d?("pending"===d.state()&&this.indicatorVisible(!0),d.done(function(){c._pageBeginComplited(a,b)})):this._pageBeginComplited(a,b)},b.prototype.goToNext=function(){this._changePage(!0,this._stepIndex())},b.prototype.goToPrevious=function(){this._changePage(!1,this._stepIndex())},Object.defineProperty(b.prototype,"currentStep",{get:function(){return this._stepIndex()>-1&&this._stepIndex()<this.steps.length?this.steps[this._stepIndex()]:this._defaultWizardPage},enumerable:!0,configurable:!0}),b.prototype.cancel=function(){this.isVisible(!1)},b.prototype.start=function(a){this._data=a,this._stepIndex(-1),this.isVisible(!0),this._goToFirstVisiblePage(!0,0)},b.prototype.finish=function(){this.currentStep.commit(this._data),this.isVisible(!1),$(this).triggerHandler("_completed",this._data)},b.prototype.resetState=function(){this.renderedSteps.splice(1)},b.prototype.removeHandler=function(){$(this).off("_completed")},b.prototype.oncompleted=function(a){$(this).on("_completed",a)},b.WIZARD_DEFAULT_WIDTH="690",b.WIZARD_DEFAULT_HEIGHT="485",b}(a.Disposable);c.WizardViewModel=d;var e=function(){function a(a,b){this.handler=a,this.isVisible=ko.observable(!0),this.isDisabled=ko.observable(!1),this.text=b}return a}();c.WizardAction=e;var f=function(a){function b(b,c,d,f){var g=this;a.call(this),this._begin=function(){g.isVisible=!0},this.beginAsync=function(a){return g._begin(a),null},this.commit=function(){},this.template=c,this.title=d,this.description=f,this.wizard=b,this.isVisible=!0,this.actionCancel=new e(function(){g.wizard.cancel()},"Cancel"),this.actionPrevious=new e(function(){g.wizard.goToPrevious()},"Previous"),this.actionNext=new e(function(){g.wizard.goToNext()},"Next"),this.actionFinish=new e(function(){g.wizard.finish()},"Finish")}return __extends(b,a),b}(a.Disposable);c.WizardPage=f;var g=function(a){function c(c,d,e){void 0===e&&(e=!1),a.call(this),this.title="Report Wizard",this.steps=[new b.Wizard.SelectDataSourcePage(this,c),new b.Wizard.SelectDataMemberPage(this,d,e),new b.Wizard.SelectColumnsPage(this,d),new b.Wizard.AddGroupingLevelPage(this),new b.Wizard.ChooseSummaryOptionsPage(this),new b.Wizard.ChooseReportLayoutPage(this),new b.Wizard.ChooseReportStylePage(this),new b.Wizard.SetReportTitlePage(this)]}return __extends(c,a),c.prototype.start=function(){a.prototype.start.call(this,new i)},c}(d);c.ReportWizard=g;var h=function(a){function c(c,d){a.call(this),this.title="Data Source Wizard";var e=new b.Wizard.SelectColumnsPage(this,d);e.actionNext.isDisabled=ko.pureComputed(function(){return!0}),this.steps=[new b.Wizard.SelectDataSourcePage(this,c),new b.Wizard.SelectDataMemberPage(this,d,!0),e]}return __extends(c,a),c.prototype.start=function(){a.prototype.start.call(this,new i);

},c}(d);c.DataSourceWizard=h;var i=function(a){function b(){var b=this;a.call(this),this._dataSource=null,this._groups=[],this.reportType=null,this.dataMemberPath=ko.observable(null),this.dataMember=ko.observable(null),this.fields=ko.observableArray([]),this.summaryOptionsColumns=ko.observableArray([]),this.ignoreNullValuesForSummary=!1,this.fitFieldsToPage=!0,this.layout=6,this.portrait=!0,this.style=0,this.reportTitle="",this._disposables.push(this.dataMemberPath.subscribe(function(){b.fields([])})),this._disposables.push(this.fields.subscribe(function(a){var c=a.some(function(a){return!a.moved&&0!==a.moved});c&&(b.groups=[],b.summaryOptionsColumns([]))},null,"arrayChange")),this._disposables.push(this.summaryOptionsColumns.subscribe(function(){b.summaryOptions=[]}))}return __extends(b,a),Object.defineProperty(b.prototype,"dataSource",{get:function(){return this._dataSource},set:function(a){this._dataSource!=a&&(this.dataMember(null),this.dataMemberPath(null),this._dataSource=a)},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"groups",{get:function(){return this._groups},set:function(a){this._groups.length==a.length||0!==this._groups.length&&0!==a.length||(this.layout=a.length>0?0:6),this._groups=a},enumerable:!0,configurable:!0}),b}(a.Disposable);c.ReportWizardModel=i;var j=function(){function a(){var a=this;this._items=ko.observableArray([]),this._refreshActiveItem=function(b){void 0===b&&(b=-1),a.isEmpty?a.activeItemArray.removeAll():0>b?a.activeItemArray.splice(0,1,a._items()[0]):(b>=a._items().length&&(b=a._items().length-1),a.activeItemArray.splice(0,1,a._items()[b]))},this.activeItemArray=ko.observableArray([])}return Object.defineProperty(a.prototype,"items",{get:function(){return this._items()},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"activeItem",{get:function(){return 1===this.activeItemArray().length?this.activeItemArray()[0]:null},set:function(a){this._items().indexOf(a)>-1&&this.activeItemArray.splice(0,1,a)},enumerable:!0,configurable:!0}),a.prototype.add=function(a){this._items.push(a),this.activeItemArray.splice(0,1,a)},a.prototype.addRange=function(a){this.setItems(this._items().concat(a))},a.prototype.removeActiveItem=function(){var a=this._items.indexOf(this.activeItemArray()[0]);this._items.remove(this.activeItemArray()[0]),this._refreshActiveItem(a)},a.prototype.removeAll=function(){this._items.removeAll(),this.activeItemArray.removeAll()},a.prototype.setItems=function(a){this._items(a),this._refreshActiveItem()},a.prototype.moveUp=function(){if(this.isMoveUpEnabled()){var a=this._items.indexOf(this.activeItem);this.activeItemArray.removeAll(),this._items.splice(a-1,2,this._items()[a],this._items()[a-1]),this.activeItemArray.splice(0,1,this._items()[a-1])}},a.prototype.moveDown=function(){if(this.isMoveDownEnabled()){var a=this._items.indexOf(this.activeItem);this.activeItemArray.removeAll(),this._items.splice(a,2,this._items()[a+1],this._items()[a]),this.activeItemArray.splice(0,1,this._items()[a+1])}},Object.defineProperty(a.prototype,"isEmpty",{get:function(){return 0===this._items().length},enumerable:!0,configurable:!0}),a.prototype.isMoveUpEnabled=function(){return this._items.indexOf(this.activeItemArray()[0])>0},a.prototype.isMoveDownEnabled=function(){var a=this._items.indexOf(this.activeItemArray()[0]);return a>-1&&a<this._items().length-1},a}();c.ListViewModel=j}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d;!function(c){var d=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.prototype.canSelect=function(a){return a.hasItems&&!!a.path||"none"===a.data.specifics},b}(b.DataMemberTreeListController),e=function(c){function e(e,f,g){var h=this;void 0===g&&(g=!1),c.call(this,e),this._rootItems=ko.observableArray([]),this._selectedPath=ko.observable(null),this.template="dxrd-page-dataMember",this.title="Choose a Table or View",this.description="The table or view you choose determines wich columns will be available in your report.",this.beginAsync=function(b){return h._dataSource=b.dataSource,null===b.dataMemberPath()?h._fieldListCallBack(new a.JS.Widgets.PathRequest(h.dataSourcePath)).done(function(a){h._selectedPath(null),h.isVisible=a.length>0&&!a.some(function(a){return"List"!==a.specifics&&"ListSource"!==a.specifics&&a.isList!==!0}),h._rootItems(a.map(function(a){return{name:a.displayName,id:a.name,specifics:"List",data:{}}}))}):void h._selectedPath(b.dataMemberPath().replace(h.dataSourcePath+".",""))},this.commit=function(a){a.dataMemberPath(h.dataSourcePath+(h._selectedPath()?"."+h._selectedPath():"")),a.dataMember(h._getSelectedDataMember())},this.actionNext.isDisabled=ko.pureComputed(function(){return null===h._selectedPath()||void 0===h._selectedPath()}),this.actionFinish.isDisabled(!0),this._fieldListCallBack=f,this._hideDataMemberSubItems=g,this.fieldListModel={itemsProvider:new b.FieldListProvider(this._wrapFieldListCallback(f),this._rootItems),selectedPath:this._selectedPath,treeListController:new d}}return __extends(e,c),e.prototype._getSelectedDataMember=function(){return this.isVisible?this.fieldListModel.treeListController.selectedItem&&this.fieldListModel.treeListController.selectedItem.data:this._dataSource?{name:this._selectedPath()?this.dataSourcePath:"",displayName:this._dataSource.name,isList:!0,specifics:this._dataSource.specifics||"ListSource"}:void 0},e.prototype._wrapFieldListCallback=function(b){var c=this;return function(d){if(c._hideDataMemberSubItems){var e=$.Deferred();return e.resolve([]),e.promise()}return b(new a.JS.Widgets.PathRequest(c.dataSourcePath+"."+d.fullPath))}},Object.defineProperty(e.prototype,"dataSourcePath",{get:function(){return this._dataSource.id||this._dataSource.ref},enumerable:!0,configurable:!0}),e}(c.WizardPage);c.SelectDataMemberPage=e}(d=c.Wizard||(c.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(b){!function(a){a[a.Empty=0]="Empty",a[a.Datatbound=1]="Datatbound",a[a.Label=2]="Label",a[a.Copy=3]="Copy"}(b.ReportType||(b.ReportType={}));var c=(b.ReportType,function(){function a(a,b,c){this.text=a,this.imageClassName=b,this.reportType=c}return a}());b.ReportTypeItem=c;var d=function(b){function d(d){var e=this;b.call(this,d),this.template="dxrd-page-reportType",this.title="Choose a Report Type",this.description="Select the report type you wish to create.",this.selectedItem=ko.observable(null),this.itemClick=function(a){e.selectedItem(a)},this.IsSelected=function(a){return e.selectedItem()===a},this._begin=function(b){e.selectedItem(a.getFirstItemByPropertyValue(e.reportTypeItems,"reportType",b.reportType))},this.commit=function(a){a.reportType=e.selectedItem().reportType},this.actionNext.isDisabled=ko.pureComputed(function(){return null===e.selectedItem()||0===e.selectedItem().reportType}),this.actionFinish.isDisabled=ko.pureComputed(function(){return null===e.selectedItem()||0!==e.selectedItem().reportType}),this.reportTypeItems=[new c("Empty report","",0),new c("Databound report","",1)],this.actionPrevious.isDisabled(!0)}return __extends(d,b),d}(b.WizardPage);b.ChooseReportTypePage=d}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b;!function(a){var b=function(a){function b(b,c){var d=this;a.call(this,b),this.template="dxrd-page-dataSource",this.title="Choose a Data Source",this.description="Choose a Data Source to use in your report.",this.selectedDataSource=ko.observableArray([]),this._begin=function(a){d.isVisible=1!==d.availableDataSources().length,d.selectedDataSource(a.dataSource?[a.dataSource]:d.availableDataSources().length>0?[d.availableDataSources()[0]]:[])},this.commit=function(a){a.dataSource=d.selectedDataSource()[0]},this.availableDataSources=c,this.actionNext.isDisabled=ko.pureComputed(function(){return 0===d.selectedDataSource().length}),this.actionPrevious.isDisabled(!0),this.actionFinish.isDisabled(!0)}return __extends(b,a),b}(a.WizardPage);a.SelectDataSourcePage=b}(b=a.Wizard||(a.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c;!function(b){var c=function(c){function d(d,e){var f=this;c.call(this,d),this._selectedPath=null,this._fields=[],this.template="dxrd-page-columns",this.title="Choose Columns to Display in Your Report",this.description="Select the columns you want to display within your report.",this.availableFields=new b.ListViewModel,this.selectedFields=new b.ListViewModel,this.isSelectEnable=ko.pureComputed(function(){return!!f.availableFields.activeItem}),this.isUnselectEnable=ko.pureComputed(function(){return!!f.selectedFields.activeItem}),this.select=function(){f.selectedFields.add(f.availableFields.activeItem),f.availableFields.removeActiveItem()},this.selectAll=function(){f.selectedFields.setItems(f._fields.slice(0)),f.availableFields.removeAll()},this.unselect=function(){f.availableFields.add(f.selectedFields.activeItem),f.selectedFields.removeActiveItem()},this.unselectAll=function(){f.availableFields.setItems(f._fields.slice(0)),f.selectedFields.removeAll()},this.availableFieldDblClick=function(a){f.availableFields.activeItem=a,f.select()},this.availableFieldClick=function(a){f.availableFields.activeItem=a.itemData},this.selectedFieldDblClick=function(a){f.selectedFields.activeItem=a,f.unselect()},this.selectedFieldClick=function(a){f.selectedFields.activeItem=a.itemData},this.beginAsync=function(b){return f.selectedFields.setItems(b.fields().slice(0)),f._selectedPath!=b.dataMemberPath()?f._fieldListsCallback(new a.JS.Widgets.PathRequest(b.dataMemberPath())).done(function(a){f._fields=a.filter(function(a){return"List"!==a.specifics&&"ListSource"!==a.specifics&&a.isList!==!0}),f._selectedPath=b.dataMemberPath(),f.availableFields.setItems(f._fields.filter(function(a){return-1===f.selectedFields.items.indexOf(a)}))}):void f.availableFields.setItems(f._fields.filter(function(a){return-1===f.selectedFields.items.indexOf(a)}))},this.commit=function(a){a.fields(f.selectedFields.items)},this.actionNext.isDisabled=this.actionFinish.isDisabled=ko.pureComputed(function(){return f.selectedFields.isEmpty}),this._fieldListsCallback=e}return __extends(d,c),d}(b.WizardPage);b.SelectColumnsPage=c}(c=b.Wizard||(b.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(b){var c=function(c){function d(d){var e=this;c.call(this,d),this.template="dxrd-page-groups",this.title="Create Groups",this.description="Create multiple groups, each with a single field value, or define several fields in the same group.",this.fields=new b.ListViewModel,this.groups=new b.ListViewModel,this.addNewGroup=function(){e.isCreateGroupEnabled()&&(e.groups.add({fields:ko.observableArray([e.fields.activeItem])}),e.fields.removeActiveItem())},this.appendFieldsToGroup=function(){e.isAppendToGroupEnabled()&&(e.groups.activeItem.fields.push(e.fields.activeItem),e.fields.removeActiveItem())},this.removeGroup=function(){e.isRemoveGroupEnabled()&&(e.fields.addRange(e.groups.activeItem.fields()),e.groups.removeActiveItem())},this.isCreateGroupEnabled=ko.pureComputed(function(){return!!e.fields.activeItem}),this.isAppendToGroupEnabled=ko.pureComputed(function(){return e.fields.activeItem&&e.groups.activeItem&&e.groups.activeItem.fields().length>0}),this.isRemoveGroupEnabled=ko.pureComputed(function(){return e.groups.activeItem&&e.groups.activeItem.fields().length>0}),this.moveUp=function(){e.groups.moveUp()},this.moveDown=function(){e.groups.moveDown()},this.isMoveUpEnabled=ko.pureComputed(function(){return e.groups.isMoveUpEnabled()}),this.isMoveDownEnabled=ko.pureComputed(function(){return e.groups.isMoveDownEnabled()}),this.fieldDblClick=function(a){e.fields.activeItem=a,e.addNewGroup()},this.fieldClick=function(a){e.fields.activeItem=a.itemData},this.groupDblClick=function(a){e.groups.activeItem=a,e.removeGroup()},this.groupClick=function(a){e.groups.activeItem=a.itemData},this._begin=function(a){var b=ko.observableArray(a.fields().map(function(a){return a.displayName}));e.groups.setItems(a.groups.map(function(a){return b.removeAll(a),{fields:ko.observableArray(a)}})),e.fields.setItems(b())},this.commit=function(b){b.groups=e.groups.items.map(function(a){return a.fields()});var c=[];e.groups.isEmpty||(e.fields.items.forEach(function(d){var e=a.getFirstItemByPropertyValue(b.fields(),"displayName",d);e.specifics&&["integer","float","date"].indexOf(e.specifics.toLowerCase())>-1&&c.push(e)}),c.sort(function(a,b){return a.name.localeCompare(b.name)})),b.summaryOptionsColumns(c)}}return __extends(d,c),d}(b.WizardPage);b.AddGroupingLevelPage=c}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b;!function(a){var b=function(){function a(a,b){this.avg=ko.observable(!1),this.count=ko.observable(!1),this.max=ko.observable(!1),this.min=ko.observable(!1),this.sum=ko.observable(!1),this._name=a,this.columnName=b}return a._getNumber=function(a){return a?1:0},a.prototype.getOptions=function(){return{columnName:this._name,flags:a._getNumber(this.sum())<<0|a._getNumber(this.avg())<<1|a._getNumber(this.min())<<2|a._getNumber(this.max())<<3|a._getNumber(this.count())<<4}},a}();a.SummaryOptionsWrapper=b;var c=function(a){function c(c){var d=this;a.call(this,c),this._columns=[],this.template="dxrd-page-summaryOptions",this.title="Choose summary options",this.description="What summary function would you like to calculate?",this.summaryOptions=ko.observableArray([]),this.ignoreNullValues=ko.observable(!1),this.toggleIgnoreNullValues=function(){d.ignoreNullValues(!d.ignoreNullValues())},this._begin=function(a){if(d.isVisible=a.summaryOptionsColumns().length>0,d.isVisible){d.ignoreNullValues(a.ignoreNullValuesForSummary);var c=ko.utils.compareArrays(a.summaryOptionsColumns(),d._columns),e=c.some(function(a){return"retained"!=a.status});e&&(d._columns=a.summaryOptionsColumns(),d.summaryOptions.removeAll(),d._columns.forEach(function(a){d.summaryOptions.push(new b(a.name,a.displayName))})),d.summaryOptions.notifySubscribers()}},this.commit=function(a){a.ignoreNullValuesForSummary=d.ignoreNullValues(),a.summaryOptions=d.summaryOptions().map(function(a){return a.getOptions()})}}return __extends(c,a),c}(a.WizardPage);a.ChooseSummaryOptionsPage=c}(b=a.Wizard||(a.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(b){!function(a){a[a.stepped=0]="stepped",a[a.block=1]="block",a[a.outline1=2]="outline1",a[a.outline2=3]="outline2",a[a.alignLeft1=4]="alignLeft1",a[a.alignLeft2=5]="alignLeft2",a[a.columnar=6]="columnar",a[a.tabular=7]="tabular",a[a.justified=8]="justified"}(b.ReportLayout||(b.ReportLayout={}));var c=(b.ReportLayout,function(){function a(a,b,c){this.text=a,this.layoutType=b,this.margin=c}return Object.defineProperty(a.prototype,"imageClassName",{get:function(){return"dxrd-report-layout-type-image-"+this.text.toLowerCase().replace(/ /g,"")},enumerable:!0,configurable:!0}),a}());b.LyaoutTypeItem=c,function(a){a[a.Portrait=0]="Portrait",a[a.Landscape=1]="Landscape"}(b.PageOrientation||(b.PageOrientation={}));var d=(b.PageOrientation,function(b){function d(d){var e=this;b.call(this,d),this._isGroupedReport=ko.observable(!1),this._reportLayoutTypes=[new c("Columnar",6,18),new c("Tabular",7,18),new c("Justified",8,18)],this._groupedRreportLayoutsTypes=[new c("Stepped",0,1),new c("Outline 1",2,1),new c("Outline 2",3,1),new c("Align Left 1",4,1),new c("Align Left 2",5,1)],this._pageOriantation=0,this.template="dxrd-page-reportLayoutType",this.title="Choose a Report Layout",this.description="The report layout specifies the manner in which selected data fields are arranged on individual pages.",this.toggleFitFieldsToPage=function(){e.fitFieldsToPage(!e.fitFieldsToPage())},this.selectedLayoutType=ko.observable(null),this.fitFieldsToPage=ko.observable(!0),this.pageOrientationItems=["Portrait","Landscape"],this.selectedPageOrientation=ko.observable(this.pageOrientationItems[0]),this.layoutTypeItems=ko.pureComputed(function(){var a=e._isGroupedReport()?e._groupedRreportLayoutsTypes:e._reportLayoutTypes;return e.selectedLayoutType(a[0]),a}),this.layoutTypeItemClick=function(a){e.selectedLayoutType(a)},this.isSelected=function(a){return e.selectedLayoutType()===a},this._begin=function(b){e._isGroupedReport(b.groups.length>0),e.selectedLayoutType(a.getFirstItemByPropertyValue(e.layoutTypeItems(),"layoutType",b.layout)),e.fitFieldsToPage(b.fitFieldsToPage),e.selectedPageOrientation(b.portrait?e.pageOrientationItems[0]:e.pageOrientationItems[1])},this.commit=function(a){a.layout=e.selectedLayoutType().layoutType,a.fitFieldsToPage=e.fitFieldsToPage(),a.portrait="Portrait"===e.selectedPageOrientation()}}return __extends(d,b),d}(b.WizardPage));b.ChooseReportLayoutPage=d}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(b){!function(a){a[a.Bold=0]="Bold",a[a.Casual=1]="Casual",a[a.Corporate=2]="Corporate",a[a.Compact=3]="Compact",a[a.Formal=4]="Formal"}(b.ReportStyle||(b.ReportStyle={}));var c=(b.ReportStyle,function(){function a(a,b){this.text=a,this.reportStyle=b}return Object.defineProperty(a.prototype,"className",{get:function(){return"dxrd-wizard-report-style-image "+this.text.toLowerCase()},enumerable:!0,configurable:!0}),a}());b.ReportStyleItem=c;var d=function(b){function d(d){var e=this;b.call(this,d),this.template="dxrd-page-reportStyle",this.title="Choose a Report Style",this.description="The report style specifies the appearance of your report.",this.reportStyleItems=[new c("Bold",0),new c("Casual",1),new c("Corporate",2),new c("Compact",3),new c("Formal",4)],this.selectedReportStyle=ko.observable(this.reportStyleItems[0]),this._begin=function(b){e.selectedReportStyle(a.getFirstItemByPropertyValue(e.reportStyleItems,"reportStyle",b.style))},this.commit=function(a){a.style=e.selectedReportStyle().reportStyle}}return __extends(d,b),d}(b.WizardPage);b.ChooseReportStylePage=d}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){var b;!function(a){var b=function(a){function b(b){var c=this;a.call(this,b),this.template="dxrd-page-reportTitle",this.title="The Report is Complete",this.description="We have all the information needed to process the report.",this.reportTitle=ko.observable(""),this._begin=function(a){c.reportTitle(a.reportTitle?a.reportTitle:"")},this.commit=function(a){a.reportTitle=c.reportTitle()},this.actionNext.isDisabled(!0)}return __extends(b,a),b}(a.WizardPage);a.SetReportTitlePage=b}(b=a.Wizard||(a.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function d(c,d,e,f){var g=this;this.relationsEditor=ko.observable(),this.addAction={clickAction:function(a){g.addSqlQuery(a.data.name)},imageClassName:"dxrd-image-add-query",text:b.getLocalization("Add query")},this.editAction={clickAction:function(b){g.editSqlQuery(new a.JS.Widgets.PathRequest(b.path).id,b.name)},imageClassName:"dx-image-edit",text:b.getLocalization("Edit query")},this.removeAction={clickAction:function(b){g.removeSqlQuery(new a.JS.Widgets.PathRequest(b.path).id,b.name)},imageClassName:"dxrd-image-recycle-bin",text:b.getLocalization("Remove query")},this.removeDataSourceAction={clickAction:function(a){g.removeDataSource(a.data.name)},imageClassName:"dxrd-image-recycle-bin",text:b.getLocalization("Remove Data Source")},this.editRelationsAction={clickAction:function(a){g.editMasterDetailRelations(a.data.name)},imageClassName:"dx-image-edit",text:b.getLocalization("Edit Master-Detail Relations")},this._dsHelper=c,this._wizard=d,this._reportViewModel=e,this._wizard.oncompleted(function(b,d){var e=d.dataSource&&c().findDataSourceInfoByName(d.dataSource.name());g._applyWizardChanges(e,d,JSON.stringify({Query:(new a.JS.Utils.ModelSerializer).serialize(d.sqlQuery)}))}),this._undoEngine=f}return d.prototype._getSqlDataSourceStructure=function(a){var d=JSON.stringify({dataSourceBase64:a.data._model["@Base64"]});return b.ajax(c.HandlerUri,"getSqlDataSourceStructure",encodeURIComponent(d))},d.prototype._applyWizardChanges=function(a,b,c){var d=JSON.stringify({dataSourceBase64:a&&a.data._model["@Base64"],connectionString:b.connectionString(),sqlQueryJSON:c,sqlQueryIndex:b.getQueryIndex()});this._createOrEditSqlDataSource(d,a)},d.prototype._createOrEditSqlDataSource=function(a,d){var e=this;return b.ajax(c.HandlerUri,"createSqlDataSource",encodeURIComponent(a)).done(function(a){a.dataSource.data=JSON.parse(a.dataSource.data),a.dataSource.isSqlDataSource=!0,d?(d.data._model["@Base64"]=a.dataSource.data["@Base64"],e._dsHelper().usedDataSources.notifySubscribers(e._dsHelper().usedDataSources())):c.addDataSourceToReport(e._dsHelper(),e._reportViewModel().dataSource,e._undoEngine,a.dataSource)}).fail(function(a){b.getErrorMessage(a)&&b.ShowMessage(b.getErrorMessage(a))})},d.prototype._findDataSource=function(a){return this._dsHelper().usedDataSources().filter(function(b){return b.id===a||b.ref===a})[0]},d.prototype.editSqlQuery=function(b,d){var e=this,f=this._findDataSource(b);this._getSqlDataSourceStructure(f).done(function(b){var g=new a.Data.SqlDataSource(JSON.parse(b.dataSourceStructure).SqlDataSource,f.data._model["@Base64"]);g.name(f.name),e._wizard.start(new c.Wizard.SqlDataSourceWizardModel(g,d))})},d.prototype.addSqlQuery=function(a){this.editSqlQuery(a,null)},d.prototype.removeSqlQuery=function(b,d){var e=this,f=this._findDataSource(b);this._getSqlDataSourceStructure(f).done(function(b){var g=new a.Data.SqlDataSource(JSON.parse(b.dataSourceStructure).SqlDataSource,f.data._model["@Base64"]),h=new c.Wizard.SqlDataSourceWizardModel(g,d);e._applyWizardChanges(f,h,null)})},d.prototype.removeDataSource=function(a){var b=this._findDataSource(a);b&&c.removeDataSourceFromReport(this._dsHelper(),this._reportViewModel().dataSource,this._undoEngine,b)},d.prototype.editMasterDetailRelations=function(c){var d=this,e=this._findDataSource(c);this._getSqlDataSourceStructure(e).done(function(c){var f=new a.Data.SqlDataSource(JSON.parse(c.dataSourceStructure).SqlDataSource,e.data._model["@Base64"]);return f.queries().length<2?void b.ShowMessage(b.getLocalization("At least two queries are required to create a master-detail relation."),"warning",1e4):(d.relationsEditor(new a.Data.MasterDetailEditor(f,function(){var b=JSON.stringify({dataSourceBase64:e.data._model["@Base64"],connectionString:"",sqlQueryJSON:"",sqlQueryIndex:f.queries().length,masterDetailRelationsJSON:JSON.stringify({SqlDataSource:(new a.JS.Utils.ModelSerializer).serialize({relations:f.relations},[{propertyName:"relations",modelName:"Relation",array:!0}])})});return d._createOrEditSqlDataSource(b,e)})),void d.relationsEditor().popupVisible(!0))})},d.prototype.getActions=function(a){var b=[];return a.data.canAddSqlQuery===!0&&(b.push(this.addAction),b.push(this.editRelationsAction)),a.data.canRemove===!0&&b.push(this.removeDataSourceAction),a.data.canEditQuery===!0&&(b.push(this.editAction),b.push(this.removeAction)),b},d}();c.SqlDataSourceEditor=d}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function c(a,b,c){this._fieldsProvider=a,this._dataSourceHelper=b,this._rootDS=c,this._requests={},this._fieldsProvider=a,this._dataSourceHelper=b,this._rootDS=c}return c.prototype._getRequest=function(b,c){var d=this,e=b+"."+c;if(!this._requests[e]){var f=new a.JS.Widgets.PathRequest(b);this._requests[e]=ko.pureComputed(function(){var a=$.Deferred();return d._fieldsProvider.getItems(f).done(function(b){var e=d._getFieldDisplayName(b,c);e?a.resolve(e):a.reject()}).fail(function(){a.reject()}),a.promise()})}return this._requests[e]},c.prototype._createRequestInfo=function(a,b,c,d,e){if(!c)return null;var f=null;if(!b){var g=a||this._rootDS(),h=g&&this._dataSourceHelper.findDataSourceInfo(g);if(!h)return null;b=h.ref||h.id,e&&(f=h.name)}var i=b+(d?"."+d:"");return{fullPath:i+"."+c,offset:i,dataMemberParts:c.split("."),dataSourceName:f}},c.prototype._getFieldDisplayName=function(a,c){var d=b.findFirstItemMatchesCondition(a,function(a){return a.name===c});return d?d.displayName:null},c.prototype._getDisplayName=function(a){var b=$.Deferred();if(!a)return b.reject(),b;for(var c=[],d=-1,e=a.offset;d<a.dataMemberParts.length-1;)c.push(this._getRequest(e,a.dataMemberParts[d+1])()),e+="."+a.dataMemberParts[++d];return $.when.apply($,c).done(function(){for(var c=a.dataSourceName?a.dataSourceName+" - ":"",d=0;d<arguments.length;d++)c+=arguments[d],d<arguments.length-1&&(c+=".");b.resolve(c)}).fail(function(){return b.reject()}),b},c.prototype.getDisplayName=function(a,b,c,d){void 0===c&&(c=""),void 0===d&&(d=!0);var e=this._createRequestInfo(a,null,b,c,d);return this._getDisplayName(e)},c.prototype.getDisplayNameByPath=function(a,b){var c=this._createRequestInfo(null,a,b,"",!1);return this._getDisplayName(c)},c.prototype.dispose=function(){$.each(this._requests,function(a,b){b.dispose(),delete b[a]})},c}();c.DisplayNameProvider=d}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(d){function e(a,b){var c=this;d.call(this),this._isReportLoading=ko.observable(!1),this.save=function(){return void 0},this.currentTab=ko.pureComputed(function(){return c._isReportLoading(!0),c.tabs.peek()[c.selectedIndex()]}),this.height=ko.observable(0),this.tabs=ko.observableArray([]),this.selectedIndex=ko.observable(0),this.addTab(a,b||ko.observable(null)),this.currentTab.subscribe(function(){setTimeout(function(){c._isReportLoading(!1),c.height.notifySubscribers(),c.checkHeight()},1)})}return __extends(e,d),e.prototype._closeTab=function(a){0!==this.tabs().indexOf(a)&&(a.displayName.dispose(),a.textSubscription.dispose(),a.report().dispose(),a.undoEngine.removeTargetSubscription(),this.selectedIndex(this.tabs().indexOf(a)-1),this.tabs.remove(a))},e.prototype._createIsDirtyFlag=function(a){var b=ko.observable(!1);return ko.pureComputed({read:function(){return a.undoEnabled()||b()},write:function(a){b(a)}})},e.prototype._removeTab=function(a){var b=$.Deferred();return a.close=b,a.isDirty()?this.save(a):b.resolve(),b.promise()},e.prototype._closeAll=function(a){var b=this,c=this,d=this.tabs()[this.tabs().length-1];this._removeTab(d).done(function(){c._closeTab(d),-1===b.tabs().indexOf(d)?c._closeAll(a):0===b.tabs().indexOf(d)&&a.resolve()})},e.prototype._getTabByControl=function(a,b){return this.tabs().filter(function(c){return b?c.url()===b:c.report()===a})[0]},e.prototype._generateDisplayName=function(a){var b=a&&(a.displayNameReport()||a.name());return b},e.prototype._addTab=function(c,d,e){var f=this,g=new a.JS.Utils.UndoEngine(c,["surface","reportSource"]),h=ko.computed(function(){return f._generateDisplayName(c())}),i={displayName:h,report:c,icon:e,textSubscription:h.subscribe(function(){f.checkHeight()}),undoEngine:g,url:d,isDirty:this._createIsDirtyFlag(g)};h()||(i.report().name(b.getUniqueName(this.tabs().map(function(a){return a.displayName()}),"Report")),g.clearHistory()),this.tabs.push(i),this["switch"](i),g.clearHistory()},e.prototype.init=function(a){this._isReportLoading=a.isLoading},e.prototype.removeTab=function(a){var b=this;this._removeTab(a).done(function(){b._closeTab(a)})},e.prototype.closeAll=function(){var a=$.Deferred();return this._closeAll(a),a.promise()},e.prototype["switch"]=function(a){this.selectedIndex(this.tabs().indexOf(a))},e.prototype.goToSubreport=function(a){if(c.reportStorageWebIsRegister){var b=a.getControlModel();this.addTab(b.reportSource,b.reportSourceUrl,"dx-icon-close")}},e.prototype.addTab=function(a,b,c){var d=this._getTabByControl(a(),b());d?this["switch"](d):this._addTab(a,b,c)},e.prototype.checkHeight=function(){var a=$(".dxrd-navigation-panel-wrapper").outerHeight();this.height()!==a&&this.height(a)},e}(b.Disposable);c.NavigateByReports=d}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function a(){}return a.getData=function(a){return c.reportStorageWebIsRegister?b.ajax(c.HandlerUri,"getData",encodeURIComponent(JSON.stringify({reportUrl:a}))):$.Deferred().promise()},a.setData=function(a,d){return c.reportStorageWebIsRegister?b.ajax(c.HandlerUri,"setData",encodeURIComponent(JSON.stringify({reportLayout:JSON.stringify({XtraReportsLayoutSerializer:a}),reportUrl:d}))):$.Deferred().promise()},a.setNewData=function(a,d){return c.reportStorageWebIsRegister?b.ajax(c.HandlerUri,"setNewData",encodeURIComponent(JSON.stringify({reportLayout:JSON.stringify({XtraReportsLayoutSerializer:a}),reportUrl:d}))):$.Deferred().promise()},a.getUrls=function(a){return c.reportStorageWebIsRegister?b.ajax(c.HandlerUri,"getUrls",encodeURIComponent("true")):$.Deferred().resolve(a).promise()},a}();c.ReportStorageWeb=d;var e=function(){function a(){}return a.initializePreview=function(a){return b.ajax(c.HandlerUri,"initializePreview",encodeURIComponent(JSON.stringify({XtraReportsLayoutSerializer:a.serialize()})))},a}();c.ReportPreviewService=e;var f=function(){function d(){}return d.getChartImage=function(a){return b.Chart.ChartRequests.getChartImage(c.HandlerUri,a._control.chart,b.unitsToPixel(a._control.size.width(),a._context.measureUnit(),a._context.zoom()),b.unitsToPixel(a._control.size.height(),a._context.measureUnit(),a._context.zoom()))},d.getShapeImage=function(c){var d={shapeType:c._control.Shape().shapeType&&c._control.Shape().shapeType()||"Ellipse",width:c._width(),lineWidth:c._control.lineWidth(),fillColor:b.colorToString(c._control.fillColor()),height:c._height(),fillet:c._control.Shape().fillet&&c._control.Shape().fillet()||0,numberOfSides:c._control.Shape().numberOfSides&&c._control.Shape().numberOfSides()||3,angle:c._control.angle&&c._control.angle()||0,arrowHeight:c._control.Shape().arrowHeight&&c._control.Shape().arrowHeight()||20,arrowWidth:c._control.Shape().arrowWidth&&c._control.Shape().arrowWidth()||20,concavity:c._control.Shape().concavity&&c._control.Shape().concavity()||5,starPointCount:c._control.Shape().starPointCount&&c._control.Shape().starPointCount()||3,horizontalLineWidth:c._control.Shape().horizontalLineWidth&&c._control.Shape().horizontalLineWidth()||10,verticalLineWidth:c._control.Shape().verticalLineWidth&&c._control.Shape().verticalLineWidth()||10,tipLength:c._control.Shape().tipLength&&c._control.Shape().tipLength()||30,tailLength:c._control.Shape().tailLength&&c._control.Shape().tailLength()||30,foreColor:b.colorToString(c._control.foreColor&&c._control.foreColor()||"black"),stretch:c._control.stretch&&c._control.stretch()||!1,dpi:c._control.dpi&&c._control.dpi()||100};return a.Designer.Report.HandlerUri+"?actionKey=shapeGlyph&arg="+encodeURIComponent(JSON.stringify(d))},d.getRichImage=function(d,e){return b.ajax(c.HandlerUri,"renderRich",encodeURIComponent(JSON.stringify({layout:JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(d)),text:d.text().replace(/\n/g,"\r\n"),
rtf:d._rtf().replace(/\n/g,"\r\n"),base64rtf:d._serializableRtfString(),propertyName:e})))},d}();c.ReportRenderingService=f;var g=function(){function a(){}return a.validateScripts=function(a){return b.ajax(c.HandlerUri,"validateScripts",encodeURIComponent(JSON.stringify({report:JSON.stringify({XtraReportsLayoutSerializer:a.serialize()})})))},a.getCompletions=function(a,c,d,e,f,g,h){return b.ajax(b.Report.HandlerUri,"getCompleters",encodeURIComponent(JSON.stringify({line:d.row,column:d.column,report:JSON.stringify({XtraReportsLayoutSerializer:g.serialize()}),script:h.getValue()})))},a}();c.ReportScriptService=g;var h=function(){function a(){}return a.createWizardRequest=function(a,d,e){var f=b.getFirstItemByPropertyValue(d,"name",a.dataSource.name)||a.dataSource,g=JSON.stringify({reportModel:new c.RequestReportModel(a),dataSource:JSON.stringify(f.data),state:e});return encodeURIComponent(g)},a.generateReportFromWizardModel=function(a,d,e){return b.ajax(c.HandlerUri,"generateReportFromWizardModel",this.createWizardRequest(a,d,e))},a.createDataSource=function(a,d,e){return b.ajax(c.HandlerUri,"createDataSource",this.createWizardRequest(a,d,e))},a}();c.ReportWizardService=h;var i=function(){function d(){}return d.fieldListCallback=function(a){var d=JSON.stringify(a),e=encodeURIComponent(d);return b.ajax(c.HandlerUri,"fieldList",e)},d.selectStatementCallback=function(d,e,f){var g=JSON.stringify({connectionString:d,dataSourceBase64:f,sqlQueryJSON:JSON.stringify({Query:(new a.JS.Utils.ModelSerializer).serialize(e)})});return b.ajax(c.HandlerUri,"getSelectStatement",encodeURIComponent(g))},d}();c.ReportDataSourceService=i}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(c){function d(a,b,d){var e=this;c.call(this,a,b,d),this._lastRequest=ko.observable(null),this._innerUpdate=ko.observable(!1),this.text=ko.observable(""),this._rtf=ko.observable(""),this._imageSrc=ko.observable(""),this._sendCallback(),this._disposables.push(this.text.subscribe(function(){e._sendCallback("text")})),this._disposables.push(this._rtf.subscribe(function(){e._sendCallback("rtf")})),this._disposables.push(this.font.subscribe(function(){e._sendCallback("font")})),this._disposables.push(this.foreColor.subscribe(function(){e._sendCallback("foreColor")})),this._disposables.push(this.size.height.subscribe(function(){e._sendCallback("height")})),this._disposables.push(this.size.width.subscribe(function(){e._sendCallback("width")})),this._disposables.push(this._serializableRtfString.subscribe(function(){e._sendCallback("base64rtf")}))}return __extends(d,c),d.prototype._sendCallback=function(c){if(void 0===c&&(c=null),!this._innerUpdate()){this._lastRequest(c);var d=this;b.ReportRenderingService.getRichImage(this,c).done(function(a){c===d._lastRequest()&&("height"!==c&&"width"!==c&&(d._innerUpdate(!0),null!==c&&"text"!==c&&d.text(a.Text),d._rtf(a.Rtf),d._serializableRtfString(a.SerializableRtfString),d._innerUpdate(!1)),d._imageSrc("data:image/x;base64,"+a.Img))}).fail(function(){a.NotifyAboutWarning("It is impossible to get richText")})}},d}(b.ControlViewModel);b.XRRichViewModel=c;var d=function(a){function b(b,c){a.call(this,b,c),this.imageSrc=b._imageSrc,this.template="dxrd-shape",this.contenttemplate="dxrd-shape-content"}return __extends(b,a),b}(b.ControlSurface);b.XRRichSurface=d}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(){function a(){this.title="Save Report",this.width=ko.observable(690),this.height=ko.observable(435),this.template=ko.observable(""),this.reportUrl=ko.observable(""),this.tab=ko.observable(null),this.visible=ko.observable(!1)}return a.prototype.open=function(a){this.tab(a),this.reportUrl(a.url()),this.visible(!0)},a}();b.ReportDialogBase=c;var d=function(c){function d(d,e){c.call(this),this.title="Open Report",this.template("dxrd-openreport-dialog-content"),this.urls=d;var f=this;this.buttons=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Open"),onClick:function(){b.ReportStorageWeb.getData(f.reportUrl()).done(function(a){if(a){var c=new b.ReportViewModel(JSON.parse(a.reportLayout));c.dataSourceRefs=a.dataSourceRefInfo,c.dataSourceHelper(new b.DataSourceHelper(c.objectStorage,c.dataSourceRefs,a.dataSources)),e.addTab(ko.observable(c),ko.observable(f.reportUrl()),"dx-icon-close"),f.visible(!1)}})}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Cancel"),onClick:function(){f.visible(!1)}}}]}return __extends(d,c),d.prototype.open=function(){var a=this;b.ReportStorageWeb.getUrls().done(function(b){a.urls(b)}),this.visible(!0)},d}(c);b.OpenReportDialog=d;var e=function(c){function d(b){c.call(this),this.saveText=ko.observable(""),this.template("dxrd-savereport-dialog-content-light"),this.width("auto"),this.height(260);var d=this;this.buttons=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Yes"),onClick:function(){d.visible(!1),d.save(b)}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("No"),onClick:function(){d.visible(!1),d.tab().undoEngine.undoAll(),d.tab().close.resolve()}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Cancel"),onClick:function(){d.visible(!1)}}}]}return __extends(d,c),d.prototype.open=function(b){this.saveText('"'+b.displayName()+'" '+a.getLocalization("has been changed. Do you want to save changes?")),c.prototype.open.call(this,b)},d.prototype.save=function(a){var c=this;b.reportStorageWebIsRegister?c.reportUrl()?b.ReportStorageWeb.setData(c.tab().report().serialize(),this.reportUrl()).done(function(){c.tab().undoEngine.clearHistory(),c.tab().close.resolve()}).fail(function(){c.tab().report().save()}):(a.open(c.tab()),a.closeAfterSave(!0)):(c.tab().report().save(),c.tab().close.resolve())},d}(c);b.SaveReportDialogLight=e;var f=function(c){function d(b){var d=this;c.call(this),this.closeAfterSave=ko.observable(!1),this.reportName=ko.observable(""),this.template("dxrd-savereport-dialog-content"),this.urls=b;var e=this;this.buttons=[{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Save"),disabled:ko.computed(function(){return!d.reportName()}),onClick:function(){e.visible(!1),e.save(),e.closeAfterSave()&&e.tab().close.resolve()}}},{toolbar:"bottom",location:"after",widget:"button",options:{text:a.getLocalization("Cancel"),onClick:function(){e.visible(!1)}}}]}return __extends(d,c),d.prototype.open=function(a){var d=this;b.ReportStorageWeb.getUrls().done(function(a){d.urls(a)}),this.closeAfterSave(!1),c.prototype.open.call(this,a);var e=this.urls().filter(function(a){return a.Key===d.reportUrl()})[0];this.reportName(e&&e.Value||a.displayName())},d.prototype.save=function(){var a=this,c=a.tab().report().serialize();b.ReportStorageWeb.setNewData(c,this.reportName()).done(function(b){a.tab().url(b),a.tab().undoEngine.clearHistory()}).fail(function(){a.tab().report().save()})},d}(c);b.SaveReportDialog=f}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d;!function(c){var d=function(c){function d(d){var e=this;c.call(this,d),this.template="dxrd-page-configure-parameters",this._begin=function(b){e.parametersEditorOptions.hideButtons(b.sqlQuery.type()===a.Data.SqlQueryType.storedProcQuery),e.parametersEditorOptions.values(b.sqlQuery.parameters)},this.actionPrevious.isDisabled(!1),this.actionNext.isDisabled(!0),this.actionFinish.isDisabled(!1),this.parametersEditorOptions={addHandler:function(){return new a.Data.DataSourceParameter({"@Name":b.getUniqueNameForNamedObjectsArray(e.parametersEditorOptions.values.peek().peek(),"param"),"@Type":"System.Int32"})},values:ko.observable(ko.observableArray([])),displayName:"Parameters",level:0,info:ko.observable({displayName:"Parameters",propertyName:"parameters",modelName:"Parameter",array:!0,editor:a.JS.Widgets.editorTemplates.commonCollection,template:"#dxrd-parameter-collection-item"}),editorTemplate:"#dxrd-wizard-datasource-parameters",hideButtons:ko.observable(!1),collapsed:!1}}return __extends(d,c),d}(c.WizardPage);c.ConfigureParametersPage=d}(d=c.Wizard||(c.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d;!function(c){var d=function(d){function g(h,i,j){var k=this;void 0===j&&(j=!1),d.call(this,h),this.template="dxrd-page-create-query",this.title="Create a query or select a stored procedure",this.queryTypeItems=[g.QUERY_TEXT,g.SP_TEXT],this.selectedQueryType=ko.observable(),this.isDataLoadingInProcess=ko.observable(!1),this.queryControl=ko.observable(),this._begin=function(b){k._data!==b&&(k._proceduresList.setQuery(new a.Data.StoredProcQuery({"@Name":b.sqlQuery&&b.sqlQuery.name()},b.dataSource)),k._selectStatementControl.setQuery(new a.Data.CustomSqlQuery({"@Name":b.sqlQuery&&b.sqlQuery.name()},b.dataSource)),k.selectedQueryType(g.QUERY_TEXT),k._data=b),b.sqlQuery&&(k.selectedQueryType(b.sqlQuery.type()===a.Data.SqlQueryType.storedProcQuery?g.SP_TEXT:g.QUERY_TEXT),k.queryControl().setQuery(b.sqlQuery)),k.popupQueryBuilder.isVisible(!1)},this.commit=function(a){var b=k.queryControl().getQuery();b&&(a.sqlQuery=b)},this._proceduresList=new f,this._selectStatementControl=new e(function(a){return k.isDataLoadingInProcess(!0),i.selectStatement(k._dataSource.connection.name(),a,k._dataSource.base64()).fail(function(a){var c=b.getErrorMessage(a);b.ShowMessage("Unable to build a SQL string"+(c?": "+c:"."))}).always(function(){k.isDataLoadingInProcess(!1)})},j),this._disposables.push(this.selectedQueryType.subscribe(function(a){a===k.queryTypeItems[1]?(k._retrieveDbSchema(function(a){k._proceduresList.storedProcedures(a.procedures)}),k.queryControl(k._proceduresList)):k.queryControl(k._selectStatementControl)})),this.selectedQueryType(g.QUERY_TEXT),this.popupQueryBuilder=new c.QueryBuilderPopup(function(a){k._selectStatementControl.setQuery(a)}),this.actionPrevious.isDisabled=ko.pureComputed(function(){return k.isDataLoadingInProcess()}),this.actionNext.isDisabled=ko.pureComputed(function(){return k.isDataLoadingInProcess()||k.queryControl().isNextDisabled()}),this.actionFinish.isDisabled=ko.pureComputed(function(){return k.isDataLoadingInProcess()||k.queryControl().isFinishDisabled()}),this.actionCancel.handler=function(){k.isDataLoadingInProcess(!1),h.cancel()}}return __extends(g,d),Object.defineProperty(g.prototype,"_dataSource",{get:function(){return this._data&&this._data.dataSource},enumerable:!0,configurable:!0}),g.prototype._retrieveDbSchema=function(a){var b=this;this.isDataLoadingInProcess(!0),this._dataSource.dbSchemaProvider.getDbSchema().done(function(b){a(b)}).always(function(){b.isDataLoadingInProcess(!1)})},g.prototype.runQueryBuilder=function(){var b=this;this._retrieveDbSchema(function(){var c=b.queryControl().getQuery();c.type()===a.Data.SqlQueryType.tableQuery?b.popupQueryBuilder.show(c,b._dataSource):b.popupQueryBuilder.show(new a.Data.TableQuery({"@Name":c.name()},b._dataSource),b._dataSource)})},g.QUERY_TEXT="Query",g.SP_TEXT="Stored Procedure",g}(c.WizardPage);c.CreateQueryPage=d;var e=function(){function b(b,c){var d=this;this._tableQueryString=ko.observable(""),this._query=ko.observable(),this._needToCustomizeParameters=ko.pureComputed(function(){return d._query()&&(d._query().type()===a.Data.SqlQueryType.customSqlQuery||d._query().parameters().length>0)}),this.template="dxrd-select-control",this.sqlString=ko.pureComputed({read:function(){return d._query()&&d._query().type()===a.Data.SqlQueryType.customSqlQuery?d._query().sqlString():d._tableQueryString()},write:function(b){if(d._query().type()!==a.Data.SqlQueryType.customSqlQuery){var c=new a.Data.CustomSqlQuery({"@Name":d._query().name()},d._query().parent);c.parameters(d._query().parameters()),d._query(c)}d._query().sqlString(b)}}),this.isNextDisabled=ko.pureComputed(function(){return!d.sqlString()||!d._needToCustomizeParameters()}),this.isFinishDisabled=ko.pureComputed(function(){return!d.sqlString()||d._needToCustomizeParameters()}),this._retrieveTableQuerySql=b,this.disableCustomSql=function(){return c}}return b.prototype.setQuery=function(b){var c=this;this._query()!==b&&b.type()===a.Data.SqlQueryType.tableQuery?this._retrieveTableQuerySql(b).done(function(a){c._tableQueryString(a.sqlSelectStatement),c._query(b)}):this._query(b)},b.prototype.getQuery=function(){return this._query()},Object.defineProperty(b.prototype,"runQueryBuilderDisabled",{get:function(){return!1},enumerable:!0,configurable:!0}),b}();c.SelectStatementQueryControl=e;var f=function(c){function d(){var a=this;c.call(this),this.template="dxrd-procedures-control",this.storedProcedures=ko.observableArray([]),this.selectedProcedure=ko.observableArray([]),this.isNextDisabled=ko.pureComputed(function(){return!a._selectedProcedure||!a._needToProcessParameters(a._selectedProcedure)}),this.isFinishDisabled=ko.pureComputed(function(){return!a._selectedProcedure||a._needToProcessParameters(a._selectedProcedure)}),this._disposables.push(this.storedProcedures.subscribe(function(c){a._selectedProcedure=c?a._selectedProcedure?b.getFirstItemByPropertyValue(a.storedProcedures(),"name",a._selectedProcedure.name):c[0]:null}))}return __extends(d,c),d.prototype._needToProcessParameters=function(a){return a.arguments.some(d._availableConvertToParameter)},d._availableConvertToParameter=function(b){return b.direction!==a.Data.DBStoredProcedureArgument.directions.out},Object.defineProperty(d.prototype,"_selectedProcedure",{get:function(){return this.selectedProcedure()[0]},set:function(a){this.selectedProcedure(a?[a]:[])},enumerable:!0,configurable:!0}),d.generateStoredProcedureDisplayName=function(a){return 0===a.arguments.length?a.name:a.arguments.reduce(function(a,b,c,d){return a+=b.name+(c<d.length-1?", ":")")},a.name+"(")},d.prototype.setQuery=function(a){this._query=a,this._selectedProcedure=b.getFirstItemByPropertyValue(this.storedProcedures(),"name",a.procName())},d.prototype.getQuery=function(){var c=this;if(!this._selectedProcedure)return null;var e=new a.Data.StoredProcQuery({"@Name":this._query.name()||this._selectedProcedure.name,ProcName:this._selectedProcedure.name},this._query.parent);return this._selectedProcedure.arguments.forEach(function(f){d._availableConvertToParameter(f)&&e.parameters.push(b.getFirstItemByPropertyValue(c._query.parameters(),"name",f.name)||new a.Data.DataSourceParameter({"@Name":f.name,"@Type":a.Data.DBColumn.GetType(f.type)}))}),e},Object.defineProperty(d.prototype,"runQueryBuilderDisabled",{get:function(){return!0},enumerable:!0,configurable:!0}),d}(b.Disposable);c.StoredProceduresQueryControl=f}(d=c.Wizard||(c.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d;!function(c){var d=function(){function c(a){var b=this;this._query=ko.observable(null),this._dbSchemaProvider=ko.observable(null),this._customizeQueryBuilderActions=function(a){a.forEach(function(a){a.visible=!1})},this.designer=ko.observable(),this.okButtonDisabled=ko.pureComputed(function(){return b.designer()&&!b.designer().model().isValid()}),this.isVisible=ko.observable(!1),this._applyQuery=a}return c.prototype.show=function(c,d){this._dataSource=d,this._dbSchemaProvider(d.dbSchemaProvider),this._query((new a.JS.Utils.ModelSerializer).serialize(c));var e={querySource:this._query,dbSchemaProvider:this._dbSchemaProvider,parametersEditingEnabled:!0};this.designer(this.designer()||b.QueryBuilder.createQueryBuilder(null,e,{customizeActions:this._customizeQueryBuilderActions})),this.isVisible(!0),this.designer().updateSurface()},c.prototype.cancelHandler=function(){this.isVisible(!1)},c.prototype.previewHandler=function(){this.designer().showPreview()},c.prototype.okHandler=function(){this.isVisible(!1),this._applyQuery(new a.Data.TableQuery(this.designer().model().serialize(),this._dataSource))},c.prototype.onHiddenHandler=function(){this.designer().dataPreview.isVisible(!1)},c}();c.QueryBuilderPopup=d}(d=c.Wizard||(c.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c;!function(b){var c=function(b){function c(c,d){var e=this;b.call(this,c),this.template="dxrd-page-connectionstring",this.title="Choose a data connection",this.selectedConnectionString=ko.observableArray([]),this._begin=function(b){if(b.dataSource.base64())e.isVisible=!1,e.selectedConnectionString([]);else if(1===e.connectionStrings.length)e.selectedConnectionString([e.connectionStrings[0]]),e.isVisible=!1;else{var c=a.getFirstItemByPropertyValue(e.connectionStrings,"name",b.connectionString());e.selectedConnectionString(c?[c]:[]),e.isVisible=!0}},this.commit=function(a){e.selectedConnectionString()[0]&&a.connectionString(e.selectedConnectionString()[0].name)},this.actionPrevious.isVisible(!1),this.actionNext.isDisabled=ko.pureComputed(function(){return 0===e.selectedConnectionString().length}),this.actionFinish.isDisabled(!0),this.connectionStrings=d}return __extends(c,b),c}(b.WizardPage);b.SelectConnectionString=c}(c=b.Wizard||(b.Wizard={}))}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c;!function(b){var c=function(a){function c(c,d,e){a.call(this),this.title="Sql Data Source Wizard",this.extendCssClass="dxrd-sqldatasource-wizard",this.height=ko.observable("491"),this.steps=[new b.SelectConnectionString(this,c),new b.CreateQueryPage(this,d,e),new b.ConfigureParametersPage(this)],this.connectionStrings=c}return __extends(c,a),c.prototype.start=function(b){b=b||new d,a.prototype.start.call(this,b)},c}(b.WizardViewModel);b.SqlDataSourceWizard=c;var d=function(){function b(b,c){var d=this;this.connectionString=ko.observable(),this.dataSource=b||new a.Data.SqlDataSource({}),c?this.dataSource.queries().some(function(a,b){return a.name()===c?(d._queryIndex=b,!0):!1}):this._queryIndex=this.dataSource.queries().length,this.connectionString=this.dataSource.connection.name}return Object.defineProperty(b.prototype,"sqlQuery",{get:function(){return this.dataSource.queries()[this._queryIndex]},set:function(a){a&&(a.parent=this.dataSource),this.dataSource.queries()[this._queryIndex]=a},enumerable:!0,configurable:!0}),b.prototype.getQueryIndex=function(){return this._queryIndex},b}();b.SqlDataSourceWizardModel=d}(c=b.Wizard||(b.Wizard={}))}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(b){var c=function(){function c(b,d,e,f,g){var h=this;this.itemsProvider=new a.ObjectExplorerProvider([{model:b,displayName:"Report",className:"master_report"},{model:ko.pureComputed(function(){return b().styles()}),displayName:"Styles",className:"styles"},{model:ko.pureComputed(function(){return b().formattingRuleSheet()}),displayName:"Formatting Rules",className:"formattingrules"},{model:ko.pureComputed(function(){return b().crossBandControls()}),displayName:"Crossband Controls",className:"xrcrossbandbox"}],["bands","controls","rows","cells","subBands"],d),this.itemsProvider.getPathByMember=function(a){return c.getPathByMember(a)},this.treeListController=new a.ObjectExplorerTreeListController(d,["bands","controls","rows","cells","Report","subBands","Styles","Formatting Rules","Crossband Controls"]),this.treeListController.getActions=function(a){return"Crossband Controls"!==a.data.displayName?"Styles"!==a.data.displayName&&"Formatting Rules"!==a.data.displayName?h._createActionsForOneElement(e,g,d,b,a):h._createActionsForArray(a,b):void 0},this.treeListController.dragDropHandler=f}return c.getPathByMember=function(a){return a.parentModel&&a.parentModel()?a instanceof b.BandViewModel&&"SubBand"===a.controlType?c.getPathByMember(a.parentModel())+".subBands."+a.parentModel().subBands().indexOf(a):a instanceof b.BandViewModel?c.getPathByMember(a.parentModel())+".bands."+a.parentModel().bands().indexOf(a):a instanceof b.CrossBandControlViewModel?"Crossband Controls.Crossband Controls."+a.parentModel().crossBandControls().indexOf(a):a instanceof b.TableCellViewModel?c.getPathByMember(a.parentModel())+".cells."+a.parentModel().cells().indexOf(a):a instanceof b.TableRowViewModel?c.getPathByMember(a.parentModel())+".rows."+a.parentModel().rows().indexOf(a):a instanceof b.ReportElementViewModel?c.getPathByMember(a.parentModel())+".controls."+a.parentModel().controls().indexOf(a):void 0:a instanceof b.ReportViewModel?"Report":null},c.prototype._createActionsForOneElement=function(c,d,e,f,g){var h=[{text:"Properties",imageClassName:"dx-image-edit",clickAction:function(){c()}}];return g.data&&g.data.data&&(g.data.data.getMetaData&&!g.data.data.getMetaData().isDeleteDeny||!g.data.data.getMetaData)&&h.push({text:"Delete",imageClassName:"dxrd-image-recycle-bin",clickAction:function(){var c=ko.unwrap(e);c instanceof b.StyleModel?f().styles.remove(c):c instanceof b.FormattingRule?f().formattingRuleSheet.remove(c):a.deleteSelection(d)}}),h},c.prototype._createActionsForArray=function(c,d){return"Styles"===c.data.displayName||"Formatting Rules"===c.data.displayName?[{text:"Add New "+("Styles"===c.data.displayName?"Style":"Formatting Rule"),imageClassName:"dx-image-add",clickAction:function(){if("Styles"===c.data.displayName){var e=a.getUniqueNameForNamedObjectsArray(d().styles(),"xrControlStyle");d().styles.push(new b.StyleModel({"@Name":e}))}else d().formattingRuleSheet.push(b.FormattingRule.createNew(d()))}}]:[]},c}();b.ReportExplorerModel=c}(b=a.Report||(a.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));
var MVCx = {};
(function() {
MVCx.CallbackHtmlContentPrefix = "/*DXHTML*/";
MVCx.CallbackHtmlContentPlaceholder = "<%html%>";
MVCx.EditorsValuesKey = "DXMVCEditorsValues";
MVCx.PerformControlCallback = function(name, url, arg, params, customParams) {
 if(ASPx.GetPostHandler().cancelPostProcessing)
  return;
 var data = {};
 data.DXCallbackName = name;
 data.DXCallbackArgument = arg;
 MVCx.MergeHashTables(data, params);
 MVCx.MergeHashTables(data, customParams);
 $.ajax({
  type: 'POST',
  url: url,
  dataType: 'html',
  data: data,
  error: function(response) {
   var ctrl = ASPx.GetControlCollection().Get(data.DXCallbackName);
   if (ctrl != null) {
    if(typeof(response.responseText) == "string" && response.responseText != "")
     ctrl.DoCallbackError(response.responseText);
    else if(typeof(response) == "string" && response != "")
     ctrl.DoCallbackError(response);
   }
  },
  success: function(response) {
   var ctrl = ASPx.GetControlCollection().Get(data.DXCallbackName);
   if (ctrl != null) ctrl.DoCallback(response);
  }
 });
}
MVCx.IsCustomCallback = function(command){
 return command.toUpperCase() == "CUSTOMCALLBACK";
}
MVCx.IsCustomDataCallback = function(command) {
 var commandInUpperCase = command.toUpperCase();
 return commandInUpperCase == "CUSTOMDATACALLBACK" || commandInUpperCase == "CUSTOMVALUES";
}
MVCx.GetCustomActionCallBackMethod = function(control){
 return control.customActionCallBack || control.callBack;
}
MVCx.MergeHashTables = function(target, object){
 if(!object || typeof(object) == "string")
  return target;
 if (!target )
  target = {};
 for(var key in object)
  if(key && !(key in target))
   target[key] = object[key];
 return target;
}
MVCx.AddCallbackParam = function(params, input) {
 if(!params || !input || input.name == "undefined") return;
 if(!params[input.name]){
  switch(input.type){
   case "checkbox":
    params[input.name] = input.checked;
    break;
   case "radio":
    if(input.checked)
     params[input.name] = input.value;
    break;
   case "select-multiple":
    var values = $(input).val() || [];
    params[input.name] = values.join ? values.join(',') : values;
    break;
   default:
    params[input.name] = input.value;
  }
 }
}
MVCx.AddCallbackParamsInContainer = function(params, container) {
 if(!params || !container) return;
 $(container).find("input,textarea,select").each(function() {
  MVCx.AddCallbackParam(params, this);
 });
}
MVCx.AddDXEditorValuesInContainer = function(params, container){
 if(!params || !container) return;
 var editorValues = {};
 ASPx.GetControlCollection().ForEachControl(function(control){
  if(!ASPx.Ident.IsASPxClientEdit(control)) return;
  var mainElement = control.GetMainElement();
  if(mainElement && ASPx.IsValidElement(mainElement)){
   if(ASPx.GetIsParent(container, mainElement))
    editorValues[control.name] = MVCx.GetEditorValueByControl(control);
  }
 });
 params[MVCx.EditorsValuesKey] = ASPx.Json.ToJson(editorValues);
}
MVCx.EditorValuesSynchronizer = {
 RefreshFormsCache: function(){
  ASPx.GetControlCollection().ForEachControl(function(control){ this.UpdateFormValue(control); }.aspxBind(this));
  this.CacheAllFormValues();
 },
 UpdateFormValue: function(control, isPushValueToCache){
  if(!control || !control.GetMainElement) return;
  var mainElement = control.GetMainElement();
  var form = ASPx.GetParentByTagName(mainElement, "FORM");
  if(!form || !MVCx.IsExistingClientEdit(control) || !mainElement || !ASPx.IsValidElement(mainElement)){
   this.RemoveFormCacheValue(form);
   return;
  }
  var newEditorValue = control.GetEnabled() ? MVCx.GetEditorValueByControl(control) : null;
  this.SetFormCacheValue(form, control.name, newEditorValue);
  if(isPushValueToCache)
   this.CacheFormValues(form);
 },
 CacheAllFormValues: function(){
  for(var i = 0; i < document.forms.length; i++){
   this.CacheFormValues(document.forms[i]);
  }
 },
 CacheFormValues: function(form){
  if(!form || !form.DXEditorValues || !form.dxRequireCache)
   return;
  if(!ASPx.IsValidElement(form.DXEditorValuesField)){
   form.DXEditorValuesField = ASPx.CreateHiddenField(MVCx.EditorsValuesKey, "");
   form.appendChild(form.DXEditorValuesField);
  }
  if(form.DXEditorValuesField)
   form.DXEditorValuesField.value = ASPx.Json.ToJson(form.DXEditorValues);
 },
 SetFormCacheValue: function(form, controlName, value){
  if(!form.DXEditorValues)
   form.DXEditorValues = {};
  if(form.DXEditorValues[controlName] !== value){
   form.DXEditorValues[controlName] = value;
   form.dxRequireCache = true;
  }
 },
 RemoveFormCacheValue: function(form, controlName){
  if(!form || !form.DXEditorValues) return;
  if(ASPx.IsExistsElement(form.DXEditorValues[controlName])){
   delete form.DXEditorValues[controlName];
   form.dxRequireCache = true;
  }
 }
};
MVCx.IsExistingClientEdit = function(control){
 if(!ASPx.Ident.IsASPxClientEdit(control))
  return false;
 var getValueInputMethod = MVCx.GetValueInputMethod(control);
 return getValueInputMethod ? ASPx.IsExistsElement(getValueInputMethod.call(control)) : true;
},
MVCx.GetValueInputElement = function(control){
 var method = MVCx.GetValueInputMethod(control);
 return method ? method.call(control) : null;
},
MVCx.GetValueInputMethod = function(control){
 return control.FindStateInputElement || control.GetStateInput || control.GetInputElement;
},
MVCx.GetEditorValueByControl = function(control){
 if(IsMultipleValueOwner(control))
  return control.GetSelectedValues();
 if(IsTokenBox(control))
  return control.GetTokenValuesCollection();
 return control.GetValue();
}
MVCx.EditorValueChanged = function(s, e){
 MVCx.EditorValuesSynchronizer.UpdateFormValue(s, true);
 if(s.context) s.context.validate("blur");
}
MVCx.GetEditorByElements = function(elements){
 for(var i = 0; i < elements.length; i++){
  var control = MVCx.GetEditorByElement(elements[i]);
  if (control)
   return control;
 }
 return null;
}
MVCx.GetEditorByElement = function(element){
 var control = MVCx.GetControlByElement(element);
 return control && ASPx.Ident.IsASPxClientEdit(control) ? control : null;
}
MVCx.GetControlByElement = function(element){
 var valueInputPostfixes = [ "", "_I", "_S", "_VI", "_STATE", "_KBS" ];
 for(var j = 0; j < valueInputPostfixes.length; j++){
  var regexp = new RegExp("(\S*)" + valueInputPostfixes[j] + "$");
  var controlName = regexp.test(element.id) ? element.id.replace(regexp, function(a,b){ return b; }) : "";
  var control = ASPx.GetControlCollection().Get(controlName);
  if(control) 
   return control;
 }
 return null;
}
MVCx.JQueryValidation = {
 IsEnabled: function(control) {
  return !!($.validator && control.GetParentForm());
 },
 Validate:function(control){
  var valueInput = MVCx.GetValueInputElement(control);
  return $(valueInput).valid();
 },
 SetUVAttributes: function(editor, rules){
  if(!editor || !rules) return;
  $input = $(MVCx.GetValueInputElement(editor));
  $.each(rules, function(ruleName, ruleValue){
   var attrValue = ruleName === 'data-val-remote-dxfieldsmap' ? JSON.stringify(ruleValue) : ruleValue; 
   $input.attr(ruleName, attrValue);
  });
 },
 PrepareUVRules: function(control){
  var form = control.GetParentForm();
  if(form.dxUVExecuted)
   return;
  $(form).removeData("validator");
  $.validator.unobtrusive.parse(form);
  form.dxUVExecuted = true;
 },
 ResetUVRules: function(control){
  var form = control.GetParentForm();
  if(form)
   delete form.dxUVExecuted;
 },
 HasPendingRequests: function(control){
  var validator = this.GetValidator(control);
  return validator && validator.pendingRequest
 },
 SetOnStopRequestHandler: function(control, handler){
  var validator = this.GetValidator(control);
  if(validator)
   validator.dxOnStopRequestHandler = handler;
 },
 GetValidator: function(control){
  var form = control.GetParentForm();
  return form ? $(form).data('validator') : null;
 },
 EnsureStopRequestHandling: function(validator){
  if(!validator || validator.pendingRequest || !validator.dxOnStopRequestHandler) return;
  validator.dxOnStopRequestHandler();
  delete validator.dxOnStopRequestHandler;
 }
}
if(typeof(Sys) != "undefined" && typeof(Sys.Mvc) != "undefined") {
 MVCx.RequiredValidator = function MVCx_RequiredValidator(){
  MVCx.RequiredValidator.initializeBase(this);
 }
 MVCx.RequiredValidator.prototype = {
  editor: null,
  getEditor: function(context){
   if(!this.editor)
    this.editor = MVCx.GetEditorByElements(context.fieldContext.elements);
   return this.editor;
  },
  validate: function(value, context){
   var editor = this.getEditor(context);
   if(editor)
    return value != null && String(value).length > 0;
   return MVCx.RequiredValidator.callBaseMethod(this, 'validate', [value, context]);
  }
 }
 MVCx.RequiredValidator.registerClass('MVCx.RequiredValidator', Sys.Mvc.RequiredValidator);
 MVCx.RequiredValidator.create = function (rule) {
  return Function.createDelegate(new MVCx.RequiredValidator(), new MVCx.RequiredValidator().validate);
 }
 Sys.Mvc.ValidatorRegistry.validators["required"] = MVCx.RequiredValidator.create;
 MVCx.FieldContext = function MVCx_FieldContext(formContext){
  MVCx.FieldContext.initializeBase(this);
 }
 MVCx.FieldContext.prototype = {
  editor: null,
  getEditor: function(){
   if(!this.editor)
    this.editor = MVCx.GetEditorByElements(this.elements);
   return this.editor;
  },
  getDisabled: function() {
   var editor = this.getEditor();
   return this.elements[0].disabled || editor && !editor.GetEnabled();
  },
  enableDynamicValidation: function(){
   MVCx.FieldContext.callBaseMethod(this, 'enableDynamicValidation');
   var editor = this.getEditor(this.elements);
   if(editor) editor.context = this;
  },
  _getStringValue: function(){
   var editor = this.getEditor();
   if(editor)
    return editor.GetValueString();
   return MVCx.FieldContext.callBaseMethod(this, '_getStringValue');
  },
  $12: function(){
   var editor = this.getEditor();
   if(editor)
    return editor.GetValueString();
   return MVCx.FieldContext.callBaseMethod(this, '$12');
  },
  validate: function(eventName) {
   var errors = MVCx.FieldContext.callBaseMethod(this, 'validate', [eventName]);
   var editor = this.getEditor();
   if(editor){
    var errorMessage = errors.length == 0 ? null : errors[0];
    MVCx.SetEditorValidationParameters(editor, errorMessage);
   }
   return errors;
  }
 }
 MVCx.FieldContext.registerClass('MVCx.FieldContext', Sys.Mvc.FieldContext);
 if(Sys.Mvc.FormContext){
  if(Sys.Mvc.FormContext._parseJsonOptions)
   eval("Sys.Mvc.FormContext._parseJsonOptions = " + Sys.Mvc.FormContext._parseJsonOptions.toString().replace("Sys.Mvc.FieldContext", "MVCx.FieldContext"));
  else if(Sys.Mvc.FormContext.$12)
   eval("Sys.Mvc.FormContext.$12 = " + Sys.Mvc.FormContext.$12.toString().replace("Sys.Mvc.FieldContext", "MVCx.FieldContext"));
  if(Sys.Mvc.FormContext.prototype.validate)
   eval("Sys.Mvc.FormContext.prototype.validate = " + Sys.Mvc.FormContext.prototype.validate.toString().replace("elements[0].disabled", "getDisabled()"));
 }
 if(typeof(ASPx.ClearProcessingProc) != "undefined"){
  MVCx.ClearProcessingProc = ASPx.ClearProcessingProc;
  ASPx.ClearProcessingProc = function(edit) {
   MVCx.ClearProcessingProc(edit);
   if(edit.context) edit.context.clearErrors();
  }
 }
 if(typeof(Sys.Mvc.MvcHelpers) != "undefined"){
  var _asyncRequestInternal = Sys.Mvc.MvcHelpers._asyncRequest || Sys.Mvc.MvcHelpers.$2;
  Sys.Mvc.MvcHelpers._asyncRequest = Sys.Mvc.MvcHelpers.$2 = function(url, verb, body, triggerElement, ajaxOptions){
   ASPx.ResourceManager.SynchronizeResources(
    function(name, resource) { 
     if(body && body.length > 0 && !body.endsWith('&'))
      body += '&';
     body += (name + "=" + resource);
    }
   );
   var customMethodOnSuccess = ajaxOptions.onSuccess;
   ajaxOptions.onSuccess = function(ajaxContext){
    if(customMethodOnSuccess)
     customMethodOnSuccess(ajaxContext);
    ASPx.ProcessScriptsAndLinks('', true);
   }
   _asyncRequestInternal(url, verb, body, triggerElement, ajaxOptions);
  }
 }
}
if (typeof(jQuery) != "undefined") {
 if (typeof(jQuery.validator) != "undefined"){
  MVCx.getValueOfEditor = function(element){
   var control = MVCx.GetEditorByElement(element);
   return control ? control.GetValueString() : element.value.replace(/\r/g, "");
  }
  function getMainElement(element){
   var control = MVCx.GetEditorByElement(element);
   if (!control)
    return element;
   return control.GetExternalTable() || control.GetMainElement();
  }
  var elementsInternal = $.validator.prototype.elements;
  $.validator.prototype.elements = function(){
   var $elements = elementsInternal.call(this);
   var $dxElements = $();
   ASPxClientControl.GetControlCollection().ProcessControlsInContainer(this.currentForm, function(control){
    if(!MVCx.IsExistingClientEdit(control))
     return;
    var input = MVCx.GetValueInputElement(control);
    if(input && $.inArray(input, $elements) == -1)
     $dxElements = $dxElements.add(input);
   });
   return $.merge($elements, $dxElements);
  };
  var validationTargetForBase = $.validator.prototype.validationTargetFor;
  $.validator.prototype.validationTargetFor = function(element){
   return MVCx.GetEditorByElement(element) ? element : validationTargetForBase.call(this, element);
  };
  var checkInternal = $.validator.prototype.check;
  $.validator.prototype.check = function(element){
   var control = MVCx.GetEditorByElement(element);
   if(control && (!control.GetEnabled() || !MVCx.validateInvisibleEditors && !control.IsVisible()))
    return;
   var isValid = checkInternal.call(this, element, $);
   if(control)
    MVCx.SetEditorValidationParameters(control, this.errorMap[element.name]);
   return isValid;
  };
  var elementValueBase = $.validator.prototype.elementValue;
  $.validator.prototype.elementValue = elementValueBase && function(element){
   var dxControl = MVCx.GetEditorByElement(element)
   return dxControl ? GetStringValue(dxControl): elementValueBase.call(this, element);
  }
  var GetStringValue = function(dxControl){
   var value = dxControl.GetValueString();
   return value == null ? '' : value;
  }
  var showLabelInternal = $.validator.prototype.showLabel;
  $.validator.prototype.showLabel = function(element, message){
   var control = MVCx.GetEditorByElement(element);
   if(control)
    MVCx.SetEditorValidationParameters(control, message);
   if(control && !$.validator.unobtrusive)
    element = control.GetMainElement();
   if(!control || !control.GetErrorCell() && !control.dxgvColumnIndex)
    showLabelInternal.call(this, element, message);
  }
  var optionalInternal = $.validator.prototype.optional;
  $.validator.prototype.optional = function(element){
   var dxControl = MVCx.GetEditorByElement(element);
   if(!this.elementValue && dxControl)
    return !$.validator.methods.required.call(this, dxControl.GetValueString(), element) && "dependency-mismatch";
   return optionalInternal.call(this, element);
  }
  if (!$.validator.prototype.elementValue){
   var requiredInternal = $.validator.methods.required;
   $.validator.methods.required = function(value, element, param){
    return requiredInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var rangeInternal = $.validator.methods.range;
   $.validator.methods.range = function(value, element, param){
    return rangeInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var minlengthInternal = $.validator.methods.minlength;
   $.validator.methods.minlength = function(value, element, param){
    return minlengthInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var maxlengthInternal = $.validator.methods.maxlength;
   $.validator.methods.maxlength = function(value, element, param){
    return maxlengthInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var rangelengthInternal = $.validator.methods.rangelength;
   $.validator.methods.rangelength = function(value, element, param){
    return rangelengthInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var minInternal = $.validator.methods.min;
   $.validator.methods.min = function(value, element, param){
    return minInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var maxInternal = $.validator.methods.max;
   $.validator.methods.max = function(value, element, param){
    return maxInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
   var emailInternal = $.validator.methods.email;
   $.validator.methods.email = function(value, element){
    return emailInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var urlInternal = $.validator.methods.url;
   $.validator.methods.url = function(value, element){
    return urlInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var dateISOInternal = $.validator.methods.dateISO;
   $.validator.methods.dateISO = function(value, element){
    return dateISOInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var numberInternal = $.validator.methods.number;
   $.validator.methods.number = function(value, element){
    return numberInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var digitsInternal = $.validator.methods.digits;
   $.validator.methods.digits = function(value, element){
    return digitsInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var creditcardInternal = $.validator.methods.creditcard;
   $.validator.methods.creditcard = function(value, element){
    return creditcardInternal.call(this, MVCx.getValueOfEditor(element), element);
   }
   var acceptInternal = $.validator.methods.accept;
   $.validator.methods.accept = function(value, element, param){
    return acceptInternal.call(this, MVCx.getValueOfEditor(element), element, param);
   }
  }
  var dateInternal = $.validator.methods.date;
  $.validator.methods.date = function(value, element){
   var editor = MVCx.GetEditorByElement(element);
   if(editor)
    value = editor.GetValue();
   return dateInternal.call(this, value, element);
  };
  var equalToInternal = $.validator.methods.equalTo;
  $.validator.methods.equalTo = function(value, element, param){
   var target = $(param).unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
    $(element).valid();
   });
   var dxEditor;
   if(target.length > 0)
    dxEditor = MVCx.GetEditorByElement(target[0]);
   return dxEditor ? value == dxEditor.GetValue() : equalToInternal.call(this, value, element, param);
  }
  var remoteInternal = $.validator.methods.remote;
  $.validator.methods.remote = function(value, element, param){
   if(param && param.data){
    $.each(param.data, function(fieldName){
     var editorName = param.dxfieldsmap && param.dxfieldsmap[fieldName] || fieldName;
     var dxeditor = ASPx.GetControlCollection().Get(editorName);
     if(dxeditor)
      param.data[fieldName] = dxeditor.GetValueString();
    });
   }
   return remoteInternal.call(this, value, element, param);
  };
  var stopRequestInternal = $.validator.prototype.stopRequest;
  $.validator.prototype.stopRequest = function(element, valid) {
   stopRequestInternal.call(this, element, valid);
   MVCx.JQueryValidation.EnsureStopRequestHandling(this);
  }
  $.validator.addMethod("dxmask", function (value, element, params) {
   var control = MVCx.GetEditorByElement(element);
   if(control && control.maskInfo)
    return control.maskInfo.IsValid();
   return true;
  });
  $.validator.addMethod("dxdaterange", function (value, element, params) {
   var control = MVCx.GetEditorByElement(element);
   if(!control || !control.GetStartDateEdit)
    return;
   if(control.MinOrMaxRangeExist && !control.MinOrMaxRangeExist())
    return true;
   var pattern = new ASPx.DateRangeValidationPattern(control.GetStartDateEdit(), control);
   return pattern && pattern.EvaluateIsValid();
  });
 }
 if(typeof(jQuery.validator) != "undefined" && typeof(jQuery.validator.unobtrusive) != "undefined"){
  jQuery.validator.unobtrusive.adapters.add("dxmask", [], function (options) {
   options.rules["dxmask"] = { };
   options.messages["dxmask"] = options.message;
  });
  jQuery.validator.unobtrusive.adapters.add("dxdaterange", [], function (options) {
   options.rules["dxdaterange"] = { };
   options.messages["dxdaterange"] = options.message;
  });
  $.each(jQuery.validator.unobtrusive.adapters, function (i, adapter) {
   if (adapter.name != "remote") return;
   adapter.params.push("dxfieldsmap");
   adapter.adaptCore = adapter.adapt;
   adapter.adapt = function (options) {
    this.adaptCore(options);
    if (options.params.dxfieldsmap)
     $.extend(options.rules["remote"], { dxfieldsmap: ASPx.Json.Eval(options.params.dxfieldsmap) });
   }
  });
  jQuery.validator.unobtrusive.prototype = {
   parseElement: jQuery.validator.unobtrusive.parseElement
  };
  jQuery.validator.unobtrusive.parseElement = function (element, skipAttach) {
   jQuery.validator.unobtrusive.prototype.parseElement.call(this, element, skipAttach);
   var editor = MVCx.GetEditorByElement(element);
   if (editor && ASPx.IsExists(editor.validationPatterns))
    editor.validationPatterns = [ ];
  };
 }
 if(jQuery.expr && jQuery.expr[":"] && jQuery.expr[":"].tabbable) {
    var tabbableCore = jQuery.expr[":"].tabbable;
    jQuery.expr[":"].tabbable = function(element) {
   return tabbableCore.call(this, element) || isInternalTabbableInput(element);
  }
  function isInternalTabbableInput(element) {
   if (!element || element.tagName != 'INPUT') return false;
   var tabIndex = ASPx.Attr.GetAttribute(element, ASPx.Attr.GetTabIndexAttributeName());
   return (!tabIndex || tabIndex >= 0) && IsVisibleControlInput(element);
  }
  function IsVisibleControlInput(element) {
   var control = MVCx.GetControlByElement(element);
   return control && control.IsVisible();
  }
 }
 jQuery.prototype.ajax = jQuery.ajax;
 jQuery.ajax = function(url, settings){
  if(typeof url === "object"){
   settings = url;
   url = undefined;
  }
  var baseBeforeSendMethod = settings.beforeSend;
  settings.beforeSend = function(jqXHR, options){
   var result;
   if(baseBeforeSendMethod)
    result = baseBeforeSendMethod.call(this, jqXHR, options);
   ASPx.ResourceManager.SynchronizeResources(
    function(name, resource) { 
     jqXHR.setRequestHeader(name, resource); 
    }
   );
   return result;
  };
  var baseCompleteMethod = settings.complete;
  settings.complete = function(jqXHR, status) {
   $("[data-ajax=true]")
   .filter(function() { return (this.action || this.href) === settings.url; })
   .each(function() {
    var insertionMode = ($(this).attr("data-ajax-mode") || "").toUpperCase();
    if(insertionMode && insertionMode != "REPLACE" && MVCx.isDXScriptInitializedOnLoad)
     ASPx.RunStartupScripts();
   });
   var result;
   if(baseCompleteMethod)
    result = baseCompleteMethod.call(this, jqXHR, status);
   return result;
  }
  var params = [ ];
  if(url)
   params.push(url);
  params.push(settings);
  return this.prototype.ajax.apply(this, params);
 };
 var mapBase = jQuery.map;
 jQuery.map = function (elems, callback, arg){
  function calbackInternal(element, index, arg){
   if(isDXScriptElement(element) && !element.dxStoredContent){
    element.dxStoredContent = element.textContent;
    element.textContent = element.id;
   }
   return callback(element, index, arg);
  }
  return mapBase.call(this, elems, calbackInternal, arg);
 }
 var globalEvalBase = jQuery.globalEval;
 jQuery.globalEval = function(code){
  var dxScriptBlock = code.indexOf(ASPx.startupScriptPrefix) == 0 ? document.getElementById(code) : null;
  if(!dxScriptBlock){
   globalEvalBase.call(this, code);
   return;
  }
  evalDXScript(dxScriptBlock);
  if(!this.lockRunStartupScripts){
   this.lockRunStartupScripts = true;
   window.setTimeout(function(){
    delete this.lockRunStartupScripts;
    ASPx.RunStartupScripts();
   }.aspxBind(this), 0);
  }
 }
 function isDXScriptElement(element){
  return element && element.id && element.id.indexOf && element.id.indexOf(ASPx.startupScriptPrefix) == 0;
 }
 function evalDXScript(script){
  if(script.executed) return;
  script.textContent = script.dxStoredContent;
  var code = ASPx.GetScriptCode(script);
  eval(code);
  script.executed = true;
 }
}
MVCx.isDXScriptInitializedOnLoad = false;
MVCx.validateInvisibleEditors = false;
MVCx.EditorSetValue = function(value){
 if(this.oldSetValue)
  this.oldSetValue(value);
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
}
MVCx.SetEditorValidationParameters = function(control, errorText){
 var isValid = !errorText;
 if(control.GetIsValid() == isValid && (isValid || control.GetErrorText() == errorText))
  return;
 !isValid && control.SetErrorText(errorText, true);
 if(typeof(ASPxClientValidationSummary) != "undefined")
  ASPx.GetClientValidationSummaryCollection().AllowNewErrorsAccepting();
 control.SetIsValid(isValid);
 if(typeof(ASPxClientValidationSummary) != "undefined")
  ASPx.GetClientValidationSummaryCollection().ForbidNewErrorsAccepting();
}
MVCx.MultipleEditorSelectValues = function(values){
 if(this.oldSelectValues)
  this.oldSelectValues(values);
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
}
MVCx.MultipleEditorSelectAll = function(){
 if(this.oldSelectAll)
  this.oldSelectAll();
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
}
MVCx.MultipleEditorUnselectAll = function(){
 if(this.oldUnselectAll)
  this.oldUnselectAll();
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
}
MVCx.ListBoxSetSelectedIndex = function(index){
 if(this.oldSetSelectedIndex)
  this.oldSetSelectedIndex(index);
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
}
MVCx.ListBoxSetIndicesSelectionState = function(indices, selected){
 if(this.oldSetIndicesSelectionState){
  this.oldSetIndicesSelectionState(indices, selected);
 }
 MVCx.EditorValueChanged(this.listBoxControl, new ASPxClientEventArgs());
}
MVCx.ComboBoxSelectIndex = function(index, initialize){
 if(this.oldSelectIndex)
  this.oldSelectIndex(index, initialize);
 MVCx.EditorValueChanged(this, new ASPxClientEventArgs());
 MVCx.EditorValueChanged(this.GetListBoxControl(), new ASPxClientEventArgs());
}
function aspxMVCControlsInitialized(s, e){
 ASPx.GetControlCollection().ForEachControl(function(control){
  if(!MVCx.IsExistingClientEdit(control) || control.AreSyncHandlersAdded || !control.ValueChanged)
   return;
  if(IsTokenBox(control))
   control.TokensChanged.InsertFirstHandler(MVCx.EditorValueChanged);
  else
   control.ValueChanged.InsertFirstHandler(MVCx.EditorValueChanged);
  control.EnabledChanged.InsertFirstHandler(MVCx.EditorValueChanged);
  control.LostFocus.InsertFirstHandler(function(){ MVCx.EditorValuesSynchronizer.RefreshFormsCache(); });
  if (IsMultipleValueOwner(control))
   control.SelectedIndexChanged.InsertFirstHandler(MVCx.EditorValueChanged);
  if(!control.oldSetValue){
   control.oldSetValue = control.SetValue;
   control.SetValue = MVCx.EditorSetValue;
  }
  if(IsMultipleValueOwner(control) && !control.oldSelectValues){
   control.oldSelectValues = control.SelectValues;
   control.SelectValues = MVCx.MultipleEditorSelectValues;
  }
  if(IsMultipleValueOwner(control) && !control.oldSelectAll){
   control.oldSelectAll = control.SelectAll;
   control.SelectAll = MVCx.MultipleEditorSelectAll;
  }
  if(IsMultipleValueOwner(control) && !control.oldUnselectAll){
   control.oldUnselectAll = control.UnselectAll;
   control.UnselectAll = MVCx.MultipleEditorUnselectAll;
  }
  if(IsListBox(control)){
   if(!control.oldSetSelectedIndex){
    control.oldSetSelectedIndex = control.SetSelectedIndex;
    control.SetSelectedIndex = MVCx.ListBoxSetSelectedIndex;
   }
   var itemSelectionHelper = control.GetItemSelectionHelper();
   if(itemSelectionHelper && !itemSelectionHelper.oldSetIndicesSelectionState){
    itemSelectionHelper.oldSetIndicesSelectionState = itemSelectionHelper.SetIndicesSelectionState;
    itemSelectionHelper.SetIndicesSelectionState = MVCx.ListBoxSetIndicesSelectionState;
   }
  }
  if(IsComboBox(control) && !control.oldSelectIndex){
   control.oldSelectIndex = control.SelectIndex;
   control.SelectIndex = MVCx.ComboBoxSelectIndex;
  }
  if(jQuery.validator && (IsGridLookup(control) || IsSpinEdit(control) || HasControlDxMaskAttribute(control))){ 
   control.ValueChanged.AddHandler(function(s, e){
    if(MVCx.JQueryValidation.IsEnabled(s))
     MVCx.JQueryValidation.Validate(s);
   });
  }
  control.AreSyncHandlersAdded = true;
 });
 ASPx.GetPostHandler().Update();
 MVCx.EditorValuesSynchronizer.RefreshFormsCache();
}
function HasControlDxMaskAttribute(control){
 var inputElement = MVCx.GetValueInputElement(control);
 return inputElement && inputElement.getAttribute("data-val-dxmask");
}
function IsMultipleValueOwner(control) {
 return IsListBox(control) || IsCheckBoxList(control);
}
function IsCheckBoxList(control) {
 return control && typeof(ASPxClientCheckBoxList) != "undefined" && control instanceof ASPxClientCheckBoxList;
}
function IsListBox(control) {
 return control && typeof(ASPxClientListBox) != "undefined" && control instanceof ASPxClientListBox;
}
function IsComboBox(control) {
 return control && typeof(ASPxClientComboBox) != "undefined" && control instanceof ASPxClientComboBox;
}
function IsTokenBox(control) {
 return control && typeof(ASPxClientTokenBox) != "undefined" && control instanceof ASPxClientTokenBox;
}
function IsGridLookup(control) {
 return control && typeof(MVCxClientGridLookup) != "undefined" && control instanceof MVCxClientGridLookup;
}
function IsSpinEdit(control){
 return control && typeof(ASPxClientSpinEdit) != "undefined" && control instanceof ASPxClientSpinEdit;
}
ASPx.GetControlCollection().ControlsInitialized.AddHandler(aspxMVCControlsInitialized);
ASPx.Evt.AttachEventToElement(window, "load", function (evt) { MVCx.isDXScriptInitializedOnLoad = true; });
var MVCxClientUtils = {};
MVCxClientUtils.FinalizeCallback = function(){
 ASPx.ProcessScriptsAndLinks('', true);
}
var MVCxClientBeginCallbackEventArgs = ASPx.CreateClass(ASPxClientBeginCallbackEventArgs, {
 constructor: function(command){
  this.constructor.prototype.constructor.call(this, command);
  this.customArgs = {};
 }
});
var MVCxClientGlobalEvents = {
 ControlsInitialized: new ASPxClientEvent(),
 BeginCallback: new ASPxClientEvent(),
 EndCallback: new ASPxClientEvent(),
 CallbackError: new ASPxClientEvent(),
 AddControlsInitializedEventHandler: function(handler) {
  this.ControlsInitialized.AddHandler(handler);
 },
 AddBeginCallbackEventHandler: function(handler) {
  this.BeginCallback.AddHandler(handler);
 },
 AddEndCallbackEventHandler: function(handler) {
  this.EndCallback.AddHandler(handler);
 },
 AddCallbackErrorHandler: function(handler) {
  this.CallbackError.AddHandler(handler);
 },
 OnControlsInitialized: function(sender, args) {
  if(!this.ControlsInitialized.IsEmpty())
   this.ControlsInitialized.FireEvent(this, args);
 },
 OnBeginCallback: function(sender, args) {
  if(!this.BeginCallback.IsEmpty())
   this.BeginCallback.FireEvent(this, args);
 },
 OnEndCallback: function(sender, args) {
  if(!this.EndCallback.IsEmpty()) {
   var args = new ASPxClientEndCallbackEventArgs();
   this.EndCallback.FireEvent(this, args);
  }
 },
 OnCallbackError: function(sender, args) {
  if(!this.CallbackError.IsEmpty())
   this.CallbackError.FireEvent(this, args);
 }
};
var collection = ASPx.GetControlCollection();
if(collection){
 function AddHandlerToCollection(eventName){
  collection[eventName].AddHandler(MVCxClientGlobalEvents["On" + eventName].aspxBind(MVCxClientGlobalEvents));
 };
 AddHandlerToCollection("ControlsInitialized");
 AddHandlerToCollection("BeginCallback");
 AddHandlerToCollection("EndCallback");
 AddHandlerToCollection("CallbackError");
};
window.MVCxClientUtils = MVCxClientUtils;
window.MVCxClientGlobalEvents = MVCxClientGlobalEvents;
window.MVCxClientBeginCallbackEventArgs = MVCxClientBeginCallbackEventArgs;
})();
(function(window) {
 var MVCxClientReportDesigner = ASPx.CreateClass(ASPxClientReportDesigner, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.callbackUrl = "";
   this.downloadUrl = "";
   this.callbackCustomArgs = {};
   this.SaveCommandExecuted = new ASPxClientEvent();
  },
  InlineInitialize: function() {
   if(this.callbackUrl != "")
    this.callBack = function(arg) { MVCx.PerformControlCallback(this.name, this.callbackUrl, arg, this.GetCallbackParams(arg), this.callbackCustomArgs) };
   ASPxClientReportDesigner.prototype.InlineInitialize.call(this);
  },
  PerformCallback: function(args) {
   if(args && typeof args !== 'object') {
    args = { args: args };
   }
   this.callbackCustomArgs = args || {};
   this.performCallbackCore();
  },
  RaiseBeginCallbackInternal: function(command) {
   var args = new MVCxClientBeginCallbackEventArgs(command);
   if(!this.BeginCallback.IsEmpty())
    this.BeginCallback.FireEvent(this, args);
   MVCx.MergeHashTables(this.callbackCustomArgs, args.customArgs);
  },
  CreateCallbackByInfo: function(arg, command, callbackInfo) {
   this.CreateCallbackInternal(arg, command, true, callbackInfo);
  },
  CreateCallbackCore: function(arg, command, callbackID) {
   window.setTimeout(function() { this.callbackCustomArgs = {}; }.aspxBind(this), 0);
   ASPxClientReportDesigner.prototype.CreateCallbackCore.call(this, arg, command, callbackID);
  },
  GetCallbackMethod: function(command) {
   return MVCx.IsCustomCallback(command) ? MVCx.GetCustomActionCallBackMethod(this) : this.callBack;
  },
  GetCallbackParams: function(arg) {
   var params = {};
   params[this.name + "_DXReportDesigner"] = arg;
   return params;
  },
  DoCallback: function(result) {
   if(result.indexOf(ASPx.CallbackResultPrefix) === 0) {
    ASPxClientReportDesigner.prototype.DoCallback.call(this, result);
    return;
   }
   this.DoLoadCallbackScripts();
   var args = new MVCxClientReportDesignerSaveCommandExecutedEventArgs(result);
   this.SaveCommandExecuted.FireEvent(this, args);
  },
  canSaveExecuteCore: function(arg) {
   return this.callBack && ASPxClientReportDesigner.prototype.canSaveExecuteCore(arg);
  }
 });
 var MVCxClientReportDesignerSaveCommandExecutedEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function(result) {
   this.constructor.prototype.constructor.call(this);
   this.Result = result;
  }
 });
 window.MVCxClientReportDesigner = MVCxClientReportDesigner;
 window.MVCxClientReportDesignerSaveCommandExecutedEventArgs = MVCxClientReportDesignerSaveCommandExecutedEventArgs;
})(window);
(function(window) {
 var ASPxClientWebDocumentViewer = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.CustomizeMenuActions = new ASPxClientEvent();
   this.CustomizeParameterEditors = new ASPxClientEvent();
  },
  Initialize: function() {
   if(this.selfInitialized) {
    return;
   }
   this.selfInitialized = true;
   ASPxClientControl.prototype.Initialize.call(this);
   var holder = ASPx.GetNodeByClassName(this.GetMainElement(), 'dx-designer');
   var platformErrorElement = ASPx.GetNodeByClassName(holder, 'dxwcuic-platformError');
   if(!ASPx.WebClientUIControl.validateSupportedBrowser(platformErrorElement, 'dxwcuic-hidden')) {
    return;
   }
   ASPx.WebClientUIControl.initDebugMode(this);
   ASPx.WebClientUIControl.initViewerHandlerUri(this.viewerHandlerUri);
   ASPx.WebClientUIControl.initGlobalization(this.currentCulture);
   if(this.menuItems && this.menuItemActions) {
    ASPx.WebClientUIControl.initMenuItems(this.menuItems, this.menuItemActions);
   }
   var self = this;
   function customizeParameterEditors(parameter, info) {
    var arg = new ASPxClientCustomizeParameterEditorsEventArgs(parameter, info);
    self.CustomizeParameterEditors.FireEvent(self, arg);
   }
   function customizeActions(actions) {
    if(self.menuItems) {
     for(var i = 0; i < self.menuItems.length; i++) {
      var menuItem = self.menuItems[i];
      actions.push(menuItem);
     }
    }
    var arg = new ASPxClientWebDocumentViewerCustomizeMenuActionsEventArgs(actions);
    self.CustomizeMenuActions.FireEvent(self, arg);
   }
   var callbacks = {
    customizeParameterEditors: customizeParameterEditors,
    customizeActions: customizeActions
   };
   this.previewModel = DevExpress.Report.Preview.createAndInitPreviewModel(this, holder, callbacks);
  },
  GetPreviewModel: function() {
   return this.previewModel;
  },
  OpenReport: function(reportName) {
   return this.previewModel && this.previewModel.reportPreview && this.previewModel.reportPreview.openReport(reportName);
  },
  Print: function(pageIndex) {
   return this.previewModel && this.previewModel.reportPreview && this.previewModel.reportPreview.printDocument(pageIndex);
  },
  ExportTo: function(format) {
   if(this.previewModel && this.previewModel.reportPreview && !this.previewModel.reportPreview.exportDisabled()) {
    this.previewModel.reportPreview.exportDocumentTo(format || 'pdf');
   }
  },
  UpdateLocalization: function(localization) {
   DevExpress.Designer.updateLocalization(localization);
  },
  AdjustControlCore: function() {
   this.previewModel && this.previewModel.updateSurfaceSize && this.previewModel.updateSurfaceSize();
  }
 });
 ASPxClientWebDocumentViewer.Cast = ASPxClientControl.Cast;
 var ASPxClientWebDocumentViewerCustomizeMenuActionsEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function(actions) {
   this.constructor.prototype.constructor.call(this);
   this.Actions = actions;
  }
 });
 window.ASPxClientWebDocumentViewer = ASPxClientWebDocumentViewer;
 window.ASPxClientWebDocumentViewerCustomizeMenuActionsEventArgs = ASPxClientWebDocumentViewerCustomizeMenuActionsEventArgs;
})(window);

/*! DevExpress HTML/JS Designer - v15.2.6 - 2016-02-29
* http://www.devexpress.com
* Copyright (c) 2016 Developer Express Inc; Licensed Commercial */

var DevExpress;!function(a){var b;!function(b){var c;!function(c){function d(a){return ko.observable("DifferentFiles"===a?"SingleFile":a)}c.pageBorderColor={propertyName:"pageBorderColor",modelName:"@PageBorderColor",from:b.colorFromString,toJsonObject:b.colorToString,displayName:"Page Border Color",editor:b.Widgets.editorTemplates.customColorEditor,defaultVal:"Black"},c.pageBorderWidth={propertyName:"pageBorderWidth",modelName:"@PageBorderWidth",displayName:"Page Border Width",from:b.floatFromModel,editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:1},c.pageRange={propertyName:"pageRange",modelName:"@PageRange",displayName:"Page Range",editor:a.JS.Widgets.editorTemplates.text,defaultVal:""},c.expotOptionsTitle={propertyName:"title",modelName:"@Title",displayName:"Title",editor:a.JS.Widgets.editorTemplates.text,defaultVal:"Document"},c.tableLayout={propertyName:"tableLayout",modelName:"@TableLayout",displayName:"Table Layout",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!0},c.removeSecondarySymbols={propertyName:"removeSecondarySymbols",modelName:"@RemoveSecondarySymbols",displayName:"Remove Secondary Symbols",editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,defaultVal:!1},c.characterSet={propertyName:"characterSet",modelName:"@CharacterSet",displayName:"Character Set",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"utf-8",values:{"utf-8":"utf-8","windows-1256":"Arabic (Windows)","iso-8859-4":"Baltic (ISO)","windows-1257":"Baltic (Windows)","iso-8859-2":"Central European (ISO)","windows-1250":"Central European (Windows)","iso-8859-5":"Cyrillic (ISO)","koi8-r":"Cyrillic (KOI8-r)","windows-1251":"Cyrillic (Windows)","iso-8859-15":"Latin 9 (ISO)","utf-7":"Unicode (UTF-7)","iso-8859-1":"Western European (ISO)","windows-1252":"Western European (Windows)"}},c.rtfExportMode={propertyName:"rtfExportMode",modelName:"@ExportMode",defaultVal:"SingleFilePageByPage",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.htmlExportMode={propertyName:"htmlExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.embedImagesInHTML={propertyName:"embedImagesInHTML",modelName:"@EmbedImagesInHTML",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool,displayName:"Embed Images In HTML"},c.imageExportMode={propertyName:"imageExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.xlsExportMode={propertyName:"xlsExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",DifferentFiles:"Different Files"}},c.xlsxExportMode={propertyName:"xlsxExportMode",modelName:"@ExportMode",defaultVal:"SingleFile",editor:a.JS.Widgets.editorTemplates.combobox,displayName:"Export Mode",values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage",DifferentFiles:"Different Files"}},c.textExportMode={propertyName:"textExportMode",modelName:"@TextExportMode",displayName:"Text Export Mode",defaultVal:"Text",editor:a.JS.Widgets.editorTemplates.combobox,values:{Text:"Text",Value:"Value"}},c.xlsTextExportMode={propertyName:"textExportMode",modelName:"@TextExportMode",displayName:"Text Export Mode",defaultVal:"Value",editor:a.JS.Widgets.editorTemplates.combobox,values:{Text:"Text",Value:"Value"}},c.csvTextSeparator={propertyName:"separator",modelName:"@Separator",displayName:"Separator",editor:a.JS.Widgets.editorTemplates.text,defaultVal:","},c.textEncodingType={propertyName:"encodingType",modelName:"@EncodingType",displayName:"Encoding",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Default",from:b.fromEnum,values:{Default:"Windows-1252",ASCII:"us-ascii",Unicode:"utf-16",BigEndianUnicode:"utf-16BE",UTF7:"utf-7",UTF8:"utf-8",UTF32:"utf-32"}},c.xlsExportHyperlinks={propertyName:"exportHyperlinks",modelName:"@ExportHyperlinks",displayName:"Export Hyperlinks",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsRawDataMode={propertyName:"rawDataMode",modelName:"@RawDataMode",displayName:"Raw Data Mode",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsShowGridLines={propertyName:"showGridLines",modelName:"@ShowGridLines",displayName:"Show Grid Lines",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsExportOptionsSheetName={propertyName:"sheetName",modelName:"@SheetName",displayName:"Sheet Name",defaultVal:"Sheet",editor:a.JS.Widgets.editorTemplates.text},c.excludeDifferentFilesMode=d,c.htmlExportModePreview={propertyName:c.htmlExportMode.propertyName,modelName:c.htmlExportMode.modelName,defaultVal:c.htmlExportMode.defaultVal,editor:c.htmlExportMode.editor,displayName:c.htmlExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.xlsExportModePreview={propertyName:c.xlsExportMode.propertyName,modelName:c.xlsExportMode.modelName,defaultVal:c.xlsExportMode.defaultVal,editor:c.xlsExportMode.editor,displayName:c.xlsExportMode.displayName,from:d,values:{SingleFile:"Single File"}},c.imageExportModePreview={propertyName:c.imageExportMode.propertyName,modelName:c.imageExportMode.modelName,defaultVal:c.imageExportMode.defaultVal,editor:c.imageExportMode.editor,displayName:c.imageExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}},c.xlsxExportModePreview={propertyName:c.xlsxExportMode.propertyName,modelName:c.xlsxExportMode.modelName,defaultVal:c.xlsxExportMode.defaultVal,editor:c.xlsxExportMode.editor,displayName:c.xlsxExportMode.displayName,from:d,values:{SingleFile:"Single File",SingleFilePageByPage:"Single File PageByPage"}}}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var __extends=this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},DevExpress;!function(a){var b;!function(b){var c;!function(b){b.AsyncExportApproach=!1;var c=function(){function b(b){this.actions=[],this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Export Options"),"dxrd-preview-export-options",b.exportOptionsModel,"properties",ko.pureComputed(function(){return!!b.exportOptionsModel()})),this.actions.push({text:"Export To",disabled:b.exportDisabled,visible:!0,clickAction:function(a){b.exportDisabled()||a.itemData.format&&b.exportDocumentTo(a.itemData.format)},items:ko.pureComputed(function(){var a=[];return b.exportOptionsModel()&&(b.exportOptionsModel().pdf&&a.push({text:"PDF",format:"pdf"}),b.exportOptionsModel().xls&&a.push({text:"XLS",format:"xls"}),b.exportOptionsModel().xlsx&&a.push({text:"XLSX",format:"xlsx"}),b.exportOptionsModel().rtf&&a.push({text:"RTF",format:"rtf"}),b.exportOptionsModel().mht&&a.push({text:"MHT",format:"mht"}),b.exportOptionsModel().html&&a.push({text:"HTML",format:"html"}),b.exportOptionsModel().textExportOptions&&a.push({text:"Text",format:"txt"}),b.exportOptionsModel().csv&&a.push({text:"CSV",format:"csv"}),b.exportOptionsModel().image&&a.push({text:"Image",format:"image"})),[{text:"Export To",imageClassName:"dxrd-image-export-to",items:a}]}),templateName:"dxrd-preview-export-to"})}return b.prototype.getActions=function(){return this.actions},b}();b.ExportOptionsModel=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(c){var d=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,e,c)},b.prototype.getInfo=function(){return e},b}();c.CsvExportOptions=d;var e=[c.textEncodingType,c.textExportMode,{propertyName:"quoteStringsWithSeparators",modelName:"@QuoteStringsWithSeparators",displayName:"Quote Strings with Separators",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.csvTextSeparator,{propertyName:"skipEmptyRows",modelName:"@SkipEmptyRows",displayName:"Skip Empty Rows",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"skipEmptyColumns",modelName:"@SkipEmptyColumns",displayName:"Skip Empty Columns",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],f=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,h,c)},b.prototype.getInfo=function(){return h},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.imageExportMode()},b}();c.ImageExportOptions=f;var g=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,{propertyName:"resolution",modelName:"@Resolution",displayName:"Resolution",editor:a.JS.Widgets.editorTemplates.numeric,defaultVal:96},{propertyName:"format",modelName:"@Format",displayName:"Format",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Png",from:b.fromEnum,values:{Bmp:"BMP",Gif:"GIF",Jpeg:"JPEG",Png:"PNG",Emf:"EMF",Wmf:"WMF",Tiff:"TIFF"}}],h=[c.imageExportMode].concat(g),i=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,c.expotOptionsTitle,c.tableLayout,c.removeSecondarySymbols],j=[c.htmlExportMode,c.embedImagesInHTML].concat(i),k=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,j,c)},b.prototype.getInfo=function(){return j},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.htmlExportMode()},b}();c.HtmlExportOptions=k;var l=[c.pageBorderColor,c.pageBorderWidth,c.pageRange,c.expotOptionsTitle,c.characterSet,c.tableLayout,c.removeSecondarySymbols],m=[c.htmlExportMode].concat(l),n=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,m,c)},b.prototype.getInfo=function(){return m},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"pageBorderWidth"===a)&&"SingleFile"===this.htmlExportMode()},b}();c.MhtExportOptions=n;var o=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,p,c)},b.prototype.getInfo=function(){return p},b}();c.PdfExportDocumentOptions=o;var p=[{propertyName:"author",modelName:"@Author",displayName:"Author",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"application",modelName:"@Application",displayName:"Application",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"title",modelName:"@Title",displayName:"Title",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"subject",modelName:"@Subject",displayName:"Subject",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"keywords",modelName:"@Keywords",displayName:"Keywords",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text}],q=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,r,c)},b.prototype.getInfo=function(){return r},b}();c.PdfPermissionsOptions=q;var r=[{propertyName:"printingPermissions",modelName:"@PrintingPermissions",displayName:"PrintingPermissions",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",LowResolution:"LowResolution",HighResolution:"HighResolution"}},{propertyName:"changingPermissions",modelName:"@ChangingPermissions",displayName:"ChangingPermissions",defaultVal:"None",editor:a.JS.Widgets.editorTemplates.combobox,values:{None:"None",InsertingDeletingRotating:"InsertingDeletingRotating",FillingSigning:"FillingSigning",CommentingFillingSigning:"CommentingFillingSigning",AnyExceptExtractingPages:"AnyExceptExtractingPages"}},{propertyName:"enableCopying",modelName:"@EnableCopying",displayName:"EnableCopying",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"enableScreenReaders",modelName:"@EnableScreenReaders",displayName:"EnableScreenReaders",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],s=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,t,c)},b.prototype.getInfo=function(){return t},b}();c.PdfPasswordSecurityOptions=s;var t=[{propertyName:"openPassword",modelName:"@OpenPassword",displayName:"OpenPassword",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"permissionsPassword",modelName:"@PermissionsPassword",displayName:"PermissionsPassword",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"permissionsOptions",modelName:"PermissionsOptions",displayName:"Pdf Permissions Options",from:q.from,toJsonObject:q.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],u=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,v,c)},b.prototype.getInfo=function(){return v},b.prototype.isPropertyDisabled=function(){return!1},b}();c.PdfExportOptions=u;var v=[{propertyName:"convertImagesToJpeg",modelName:"@ConvertImagesToJpeg",displayName:"Convert Images to Jpeg",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"showPrintDialogOnOpen",modelName:"@ShowPrintDialogOnOpen",displayName:"Show Print Dialog on Open",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"compressed",modelName:"@Compressed",displayName:"Compressed",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"neverEmbeddedFonts",modelName:"@NeverEmbeddedFonts",displayName:"Never Embedded Fonts",defaultVal:"",editor:a.JS.Widgets.editorTemplates.text},{propertyName:"imageQuality",modelName:"@ImageQuality",displayName:"Image Quality",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"Highest",from:b.fromEnum,values:{Lowest:"Lowest",Low:"Low",Medium:"Medium",Hight:"Hight",Highest:"Highest"}},{propertyName:"pdfACompatibility",modelName:"@PdfACompatibility",displayName:"PDF A Compatibility",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"None",from:b.fromEnum,values:{Hight:"None",PdfA2b:"PdfA2b"}},c.pageRange,{propertyName:"documentOptions",modelName:"DocumentOptions",displayName:"Document Options",from:o.from,toJsonObject:o.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdfPasswordSecurityOptions",modelName:"PdfPasswordSecurityOptions",displayName:"Pdf Password Security Options",from:s.from,toJsonObject:s.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],w=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,x,c)},b.prototype.getInfo=function(){return x},b.prototype.isPropertyDisabled=function(a){return("pageRange"===a||"exportWatermarks"===a)&&"SingleFile"===this.rtfExportMode()},b}();c.RtfExportOptions=w;var x=[c.rtfExportMode,c.pageRange,{propertyName:"exportWatermarks",modelName:"@ExportWatermarks",displayName:"Export Watermarks",defaultVal:!0,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool}],y=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,z,c)},b.prototype.getInfo=function(){return z},b}();c.TextExportOptions=y;var z=[c.textEncodingType,{propertyName:"quoteStringsWithSeparators",modelName:"@QuoteStringsWithSeparators",displayName:"Quote Strings with Separators",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"separator",modelName:"@Separator",displayName:"Separator",defaultVal:"TAB",editor:a.JS.Widgets.editorTemplates.text},c.textExportMode],A=[c.xlsExportHyperlinks,c.pageRange,c.xlsRawDataMode,c.xlsExportOptionsSheetName,c.xlsShowGridLines,{propertyName:"suppress256ColumnsWarning",modelName:"@Suppress256ColumnsWarning",displayName:"Suppress 256 Columns Warning",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},{propertyName:"suppress65536RowsWarning",modelName:"@Suppress65536RowsWarning",displayName:"Suppress 65536 Rows Warning",defaultVal:!1,editor:a.JS.Widgets.editorTemplates.bool,from:b.parseBool},c.xlsTextExportMode,{propertyName:"workbookColorPaletteCompliance",modelName:"@WorkbookColorPaletteCompliance",displayName:"Workbook Color Palette Compliance",editor:a.JS.Widgets.editorTemplates.combobox,defaultVal:"ReducePaletteForExactColors",from:b.fromEnum,values:{ReducePaletteForExactColors:"ReducePaletteForExactColors",AdjustColorsToDefaultPalette:"AdjustColorsToDefaultPalette"}}],B=[c.xlsExportMode].concat(A),C=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,B,c)},b.prototype.getInfo=function(){return B},b.prototype.isPropertyDisabled=function(a){return"pageRange"===a&&"SingleFile"===this.xlsExportMode()},b}();c.XlsExportOptions=C;var D=[c.xlsExportHyperlinks,c.pageRange,c.xlsRawDataMode,c.xlsExportOptionsSheetName,c.xlsShowGridLines,c.xlsTextExportMode],E=[c.xlsxExportMode].concat(D),F=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,E,c)},b.prototype.getInfo=function(){return E},b.prototype.isPropertyDisabled=function(a){return"pageRange"===a&&"SingleFile"===this.xlsxExportMode()},b}();c.XlsxExportOptions=F;var G=function(){function b(b,c){c=c||new a.JS.Utils.ModelSerializer,c.deserialize(this,b)}return b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,H,c)},b.prototype.getInfo=function(){return H},b}();c.ExportOptions=G;var H=[{propertyName:"csv",modelName:"Csv",displayName:"CSV Export Options",from:d.from,toJsonObject:d.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"html",modelName:"Html",displayName:"HTML Export Options",from:k.from,toJsonObject:k.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"image",modelName:"Image",displayName:"Image Export Options",from:f.from,toJsonObject:f.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"mht",modelName:"Mht",displayName:"MHT Export Options",from:n.from,toJsonObject:n.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdf",modelName:"Pdf",displayName:"PDF Export Options",from:u.from,toJsonObject:u.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"rtf",modelName:"Rtf",displayName:"RTF Export Options",from:w.from,toJsonObject:w.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"textExportOptions",modelName:"Text",displayName:"Text Export Options",from:y.from,toJsonObject:y.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xls",modelName:"Xls",displayName:"XLS Export Options",from:C.from,toJsonObject:C.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xlsx",modelName:"Xlsx",displayName:"XLSx Export Options",from:F.from,toJsonObject:F.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}],I=[c.htmlExportModePreview].concat(i),J=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,I,c)},b.prototype.getInfo=function(){return I},b}(k);c.HtmlExportOptionsPreview=J;var K=[c.imageExportModePreview].concat(g),L=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,K,c)},b.prototype.getInfo=function(){return K},b}(f);c.ImageExportOptionsPreview=L;var M=[c.htmlExportModePreview].concat(l),N=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,M,c)},b.prototype.getInfo=function(){return M},b}(n);c.MhtExportOptionsPreview=N;var O=[c.xlsExportModePreview].concat(A),P=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,O,c)},b.prototype.getInfo=function(){return O},b}(C);c.XlsExportOptionsPreview=P;var Q=[c.xlsxExportModePreview].concat(D),R=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,Q,c)},b.prototype.getInfo=function(){return Q},b}(F);c.XlsxExportOptionsPreview=R;var S=function(a){function b(){a.apply(this,arguments)}return __extends(b,a),b.from=function(a,c){return new b(a||{},c)},b.toJson=function(a,b,c){return b.serialize(a,T,c)},b.prototype.getInfo=function(){return T},b}(G);c.ExportOptionsPreview=S;var T=[{propertyName:"csv",modelName:"Csv",displayName:"CSV Export Options",from:d.from,toJsonObject:d.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"html",modelName:"Html",displayName:"HTML Export Options",from:J.from,toJsonObject:J.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"image",modelName:"Image",displayName:"Image Export Options",from:L.from,toJsonObject:L.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"mht",modelName:"Mht",displayName:"MHT Export Options",from:N.from,toJsonObject:N.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"pdf",modelName:"Pdf",displayName:"PDF Export Options",from:u.from,toJsonObject:u.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"rtf",modelName:"Rtf",displayName:"RTF Export Options",from:w.from,toJsonObject:w.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"textExportOptions",modelName:"Text",displayName:"Text Export Options",from:y.from,toJsonObject:y.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xls",modelName:"Xls",displayName:"XLS Export Options",from:P.from,toJsonObject:P.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor},{propertyName:"xlsx",modelName:"Xlsx",displayName:"XLSx Export Options",from:R.from,toJsonObject:R.toJson,editor:a.JS.Widgets.editorTemplates.objecteditor}]}(c=b.Report||(b.Report={}))}(b=a.Designer||(a.Designer={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){function c(a,b){return 100*a/b+"%"}function d(a,b){a&&(!!a.active&&!!a.active(!1)||(a.active=ko.observable(!1)),a.onClick=function(){b&&b(a)},a.bricks&&a.bricks.forEach(function(e){e.leftP=c(e.left,a.width),e.widthP=c(e.width,a.width),e.topP=c(e.top,a.height),e.heightP=c(e.height,a.height),d(e,b)}))}var e=96;b.initializeBrick=d;var f=function(){function b(b,c){this.getBricks=function(d){return a.Designer.ajax(b,"getBrickMap",encodeURIComponent(JSON.stringify({pageIndex:d,documentId:c})))}}return b}();b.PreviewPageBrickProvider=f;var g=function(a){function f(b,f,g,h,i,j,k,l){var m=this;a.call(this),this.isClientVisible=ko.observable(!1),this.originalHeight=ko.observable(0),this.originalWidth=ko.observable(0),this.loadingText="Loading...",this.realZoom=ko.observable(1),this.actualResolution=0,this.pageLoadFailed=ko.observable(!1),this.imageSrc=ko.observable(""),this.cachedImageSrc=ko.observable(""),this.brick=ko.observable(null),this.brickLoading=ko.observable(!0),this.active=ko.observable(!1),this._selectedBrickPath=null,this.pageIndex=b,this.documentId=i||ko.observable(null),this.brickProvider=j,this.pageLoading=k||ko.observable(!0),this.originalHeight(ko.unwrap(g)),this.originalWidth(ko.unwrap(f)),this.zoom=h,this.isClientVisible.subscribe(function(){m.isClientVisible()&&m._setPageImgSrc(i(),m.zoom())}),this.width=ko.pureComputed(function(){return Math.ceil(m.originalWidth()*m._getCurrentResolution(m.zoom())/e)}),this.height=ko.pureComputed(function(){return Math.ceil(m.originalHeight()*m._getCurrentResolution(m.zoom())/e)});var n=this;this.isEmpty=-1===b&&!j&&!l,this.onPageLoaded=function(){n.pageLoading(!1),n.pageLoadFailed(!1),n.cachedImageSrc()!==n.imageSrc()&&(n.originalHeight()&&ko.isObservable(g)&&g(n.originalHeight()),n.originalWidth()&&ko.isObservable(f)&&f(n.originalWidth()),!n.brick()&&n.brickProvider?n.brickProvider.getBricks(n.pageIndex).done(function(a){try{if(!a||!a.brick)return;n.brickColumnWidthArray=a.columnWidthArray,n.originalWidth(a.brick.width),n.originalHeight(a.brick.height),d(a.brick,l),a.brick.leftP=c(a.brick.left,m.originalWidth()),a.brick.widthP=c(a.brick.width,m.originalWidth()),a.brick.topP=c(a.brick.top,m.originalHeight()),a.brick.heightP=c(a.brick.height,m.originalHeight()),n.brick(a.brick),n._selectedBrickPath&&n.selectBrick(n._selectedBrickPath)}finally{n.brickLoading(!1)}}).fail(function(){n.brickLoading(!1)}):n.brickLoading(!1),n.cachedImageSrc(n.imageSrc()))},this.onPageLoadFailed=function(){-1!==n.pageIndex&&n.isClientVisible()&&(n.pageLoadFailed(!0),n.pageLoading(!1),n.brickLoading(!1))},this.resetBrickRecusive=function(a){a&&a.active&&(a.active(!1),a.bricks&&a.bricks.forEach(function(a){n.resetBrickRecusive(a)}))},this.selectBrick=function(a,b){l&&l(null);var c=n.brick();if(!b&&n.resetBrickRecusive(c),a){if(!c)return void(n._selectedBrickPath=a);var d=a.split(",");d.forEach(function(a){c=c.bricks[parseInt(a)]}),c.active(!0)}},this._disposables.push(ko.computed(function(){m.active()||(m.resetBrickRecusive(m.brick()),m._selectedBrickPath=null)}))}return __extends(f,a),f.prototype._getCurrentResolution=function(a){return Math.round((a?a:1)*e)},f.prototype.updateSize=function(a){var b=this._getCurrentResolution(a);return this.realZoom(b/e),b},f.prototype._setPageImgSrc=function(a,c){if(this.pageLoadFailed(!1),!a||-1===this.pageIndex)return void this.imageSrc(null);var d=this.updateSize(c);this.actualResolution===d&&this.imageSrc()||(this.actualResolution=d,this.imageSrc(b.HandlerUri+"?actionKey=getPage&unifier="+b.generateGuid()+"&arg="+encodeURIComponent(JSON.stringify({pageIndex:this.pageIndex,documentId:a,resolution:d}))))},f}(a.Designer.Disposable);b.PreviewPage=g}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){b.formatSearchResult=function(a){return a&&"page "+(a.pageIndex+1)},b.searchAvailable=ko.observable(!0);var c=function(c){function e(d){var f=this;c.call(this),this._cachedRequests={},this._cachedWholeWordRequests={},this._cachedCaseSensitiveRequests={},this._cachedWholeWordWithCaseRequests={},this.actions=[],this.focusRequested=ko.observable(!0),this.matchWholeWord=ko.observable(!1),this.matchCase=ko.observable(!1),this.searchUp=ko.observable(!1),this.searchText=ko.observable(""),this.searchResult=ko.observable([]),this.loading=ko.observable(!1),this._resultNavigator=e.createResultNavigator(this,d),this.clean=function(){f.searchText("")};var g=this.matchCase(),h=this.matchWholeWord();this.findUp=function(){f.searchUp(!0),f.findNext()},this.findDown=function(){f.searchUp(!1),f.findNext()},this.goToResult=function(a){f._resultNavigator.goToResult(a.id)};var i=function(b){if(f.searchResult([]),f._resultNavigator.currentResult(null),g=f.matchCase(),h=f.matchWholeWord(),!b)return void(d.pages()&&d.pages()[d.pageIndex()]&&d.pages()[d.pageIndex()].selectBrick(""));var c=f.matchCase(),b=c?f.searchText():f.searchText().toLocaleLowerCase(),e=f.matchWholeWord()?c?f._cachedWholeWordWithCaseRequests:f._cachedWholeWordRequests:c?f._cachedCaseSensitiveRequests:f._cachedRequests;if(e[b])return void f.searchResult(e[b]);f.loading(!0);var i=f;d.previewWrapper.findTextRequest(b).done(function(a){i.findTextRequestDone(a,e[b])}).fail(function(){i.loading(!1),d._processError(a.Designer.getLocalization("An error occurred during search"))})};this.findNext=function(){f.loading()||(g===f.matchCase()||f.searchText().toUpperCase()===f.searchText().toLowerCase())&&h===f.matchWholeWord()&&f._resultNavigator.next(f.searchUp())||i(f.searchText())},this._disposables.push(this.searchText.subscribe(function(a){i(a)}));var j=ko.pureComputed(function(){var a=d._currentDocumentId();return d.documentBuilding()||!a});this.actions.push({text:"Search",imageClassName:"dxrd-image-search",disabled:j,visible:ko.pureComputed(function(){return b.searchAvailable()}),hasSeparator:!0,clickAction:function(){f.tabInfo.active()?f.tabInfo.active.notifySubscribers(!0):f.tabInfo.active(!0)}}),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Search"),"dxrd-preview-search",this,"search",ko.pureComputed(function(){return!j()&&b.searchAvailable()})),this._disposables.push(this.tabInfo.active.subscribe(function(a){a&&setTimeout(function(){return f.focusRequested.notifySubscribers()},100)}))}return __extends(e,c),e.prototype.findTextRequestDone=function(a,b){return this.loading(!1),a?(b=(a.success?a.matches:[])||[],void this.searchResult(b)):void this.searchResult([])},e.prototype.getActions=function(){return this.actions},Object.defineProperty(e.prototype,"disabled",{get:function(){return this.loading()},enumerable:!0,configurable:!0}),e.createResultNavigator=function(a,b){return new d(a,b)},e}(a.Designer.Disposable);b.SearchViewModel=c;var d=function(a){function b(b,c){var d=this;a.call(this),this.currentResult=ko.observable(null);var e=function(a){if(a){c.goToPage&&c.goToPage(a.pageIndex);var b=c.pages.peek()[a.pageIndex];b&&b.selectBrick(a.indexes)}};this.getFirstMatchFromPage=function(a,d,e){if(!b.searchResult()||0===b.searchResult().length)return null;var f,g=function(a){b.searchResult().forEach(function(b){e&&b.pageIndex===a?(!f||b.id<f.id&&!d||b.id>f.id&&d)&&(f=b):(b.pageIndex>=a&&!d&&(!f||b.id<f.id)||b.pageIndex<=a&&d&&(!f||b.id>f.id))&&(f=b)})};return g(a),!f&&g(d?c.pages().length:0),f};var f=function(a,f,g){if(b.searchResult()&&0!==b.searchResult().length){var h=f>=0&&b.searchResult().length>f?b.searchResult()[f]:d.getFirstMatchFromPage(c.pageIndex.peek(),b.searchUp.peek(),g);d.currentResult(h),a&&e(d.currentResult.peek())}else c.pages()&&c.pages()[c.pageIndex()]&&c.pages()[c.pageIndex()].selectBrick("")};this.goToResult=function(a){return 0===a||a?void f(!0,a):null},this._disposables.push(c.pageIndex.subscribe(function(){d.currentResult(null)})),this._disposables.push(b.searchResult.subscribe(function(){f(!0)})),this.next=function(a){if(!b.searchResult())return!1;if(!d.currentResult()&&d.currentResult(d.getFirstMatchFromPage(c.pageIndex(),a)),!d.currentResult())return!1;var f,g=d.currentResult().id;return f=a?0===g?b.searchResult().length-1:g-1:g===b.searchResult().length-1?0:g+1,d.currentResult(b.searchResult()[f]),e(d.currentResult()),!0}}return __extends(b,a),b}(a.Designer.Disposable);b.SearchResultNavigator=d;var e="dx-searcheditor",f=e+"",g=e+"-button dx-widget dx-dropdowneditor-button",h="."+e+"-button",i=e+"-icon dx-dropdowneditor-icon dx-icon-dxrd-image-move",j=function(b){function c(c,d){this._activeStateUnit=h;var e=this,f=d&&d.searchModel;this._focusRequestRaised=function(){e.focus()},f().focusRequested.subscribe(function(){return e._focusRequestRaised();

}),d.onEnterKey=function(b){a.browser&&a.browser.msie&&b&&b.component&&(b.component.blur(),b.component.focus()),e.findNext(f,b&&b.jQueryEvent&&b.jQueryEvent.shiftKey)},b.call(this,c,d)}return __extends(c,b),c.prototype.findNext=function(a,b){if(!a||!a())return!1;try{b?a().loading&&!a().loading()&&a().findUp():a().loading&&!a().loading()&&a().findDown()}finally{return!0}},c.prototype._init=function(){b.prototype._init.call(this),this.element().addClass(f)},c.prototype._optionChanged=function(a,c){var d=a.name||a,e=c||a.value;switch(d){case"searchModel":e&&this.option("value",e.searchText());break;case"value":var f=this.option("searchModel");f&&f()&&f().searchText(e);default:b.prototype._optionChanged.apply(this,arguments)}},c.prototype._render=function(){b.prototype._render.call(this),this._renderButton("Down"),this._renderButton("Up")},c.prototype._renderButton=function(a){this._button=$("<div />").addClass(g),this._attachButtonEvents(a),this._buttonIcon=$("<div />").addClass(i+a.toLowerCase()).appendTo(this._button);var c=b.prototype._buttonsContainer.call(this);this._button.appendTo(c)},c.prototype._attachButtonEvents=function(a){var b=this;this._button.off("click"),this.option("disabled")||this._button.on("click",function(c){b.findNext(b.option("searchModel"),"up"===a.toLowerCase())&&c.stopPropagation()})},c}(a.ui.dxTextBox);b.dxSearchEditor=j,a.registerComponent("dxSearchEditor",j)}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b){var c=this,f=new e;this.isEmpty=ko.pureComputed(function(){return!(b.documentMap()&&b.documentMap().nodes&&0!==b.documentMap().nodes.length)}),f.clickHandler=function(a){var c=a.data.bookmark;if(c){var d=c.pageIndex<0?0:c.pageIndex;b.pages.peek()[d].selectBrick(c.indexes)}},this.documentMapOptions=ko.pureComputed(function(){var a=f.selectedItem.subscribe(function(b){"0"===b.path&&b.collapsed()&&b.toggleCollapsed(),a.dispose()});return{itemsProvider:new d(b.documentMap()),selectedPath:ko.observable("0"),treeListController:f}}),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Document Map"),"dxrd-preview-document-map",this,"reportexplorer",ko.pureComputed(function(){return!c.isEmpty()}))}return b}();b.DocumentMapModel=c;var d=function(){function a(a){var b=this;this.bookmarkDict={},this.getItems=function(c){var d=$.Deferred();if(a)if(c.fullPath){var e=b._selectNode(a,c.fullPath);d.resolve(e)}else{var f=b._getRootNode(a);d.resolve(f)}return d.promise()}}return a.prototype._selectNode=function(b,c){if(this.bookmarkDict[c])return this.bookmarkDict[c];var d=c.split("."),e=b;if("0"!==d[0])return null;for(var f=1,g=d[f];f<d.length;f++,g=d[f]){if(!(e&&e.nodes&&e.nodes[g]))return null;e=e.nodes[g]}var h=a.fillNode(e);return h&&0!==h.length&&(this.bookmarkDict[c]=h),h},a.fillNode=function(a){return!a||!a.nodes||a.nodes.length<=0?null:a.nodes.map(function(a,b){return{name:b+"",displayName:a.text,isList:a.nodes&&a.nodes.length>0,bookmark:a,specifics:"node"}})},a.prototype._getRootNode=function(a){return[{name:"0",displayName:a.text,isList:a.nodes&&a.nodes.length>0,bookmark:a,specifics:"node"}]},a}();b.DocumentMapItemsProvider=d;var e=function(){function a(){this.selectedItem=ko.observable(null),this.clickHandler=function(){return void 0}}return a.prototype.itemsFilter=function(){return!0},a.prototype.hasItems=function(a){return a.isList===!0},a.prototype.canSelect=function(){return!0},a.prototype.select=function(a){this.canSelect(a)&&a!==this.selectedItem.peek()&&(this.selectedItem.peek()&&this.selectedItem.peek().isSelected(!1),this.selectedItem(a),a.isSelected(!0))},a}();b.DocumentMapTreeListController=e}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(){}return b.prototype._isKnownEnumType=function(a){return!!this._knownEnums&&this._knownEnums.some(function(b){return b.enumType===a})},b.getSerializationValue=function(a,b){return a instanceof Array?a.map(function(a){var c=ko.isObservable(a.value)?a.value():a;return c instanceof Date?b(c):c}):a instanceof Date?b(a):a},b.prototype.initialize=function(a,b){arguments.length>0&&(this._knownEnums=a,arguments.length>1&&(this._customizeParameterEditors=b))},b.prototype.createInfo=function(b){var c=b.getParameterDescriptor(),d=this.isEnumType(b)?"Enum":ko.unwrap(c.type);return{propertyName:"value",displayName:c.displayName,editor:a.Designer.getEditorType(d),valuesArray:this.getValueCollection(b)}},b.prototype.createMultiValue=function(a,b){var c=ko.observable();return null!==b&&void 0!==b&&c(b),{value:c,getInfo:function(){return[a.multiValueInfo()]}}},b.prototype.createMultiValueArray=function(a,b,c){var d=this,e=c?c:this.valueConverter(ko.unwrap(b.type));return ko.observableArray(a.map(function(a){return d.createMultiValue(b,e(a))}))},b.prototype.isEnumType=function(a){return this._isKnownEnumType(ko.unwrap(a.type))},b.prototype.getValueCollection=function(a){var b=ko.unwrap(a.type);if(this._isKnownEnumType(b)){var c=this._knownEnums.filter(function(a){return a.enumType===b})[0];if(c&&c.values&&0!==c.values.length)return c.values.map(function(a){return{value:a.value,displayValue:a.displayName}})}},b.prototype.getParameterInfo=function(b){var c=this,d=this.createInfo(b);return this._customizeParameterEditors&&this._customizeParameterEditors(b.getParameterDescriptor(),d),b.multiValueInfo($.extend(!0,{},d,{propertyName:"value"})),ko.unwrap(b.isMultiValue)&&(d.editor=a.Designer.getEditorType(b.isMultiValueWithLookUp?"multiValueWithLookUp":"multiValue"),d.addHandler=function(){return c.createMultiValue(b)}),d},b.prototype.valueConverter=function(){return function(a){return a}},b}();b.ParameterHelper=c;var d=function(b){function c(a,c){b.call(this),this.initialize(a,c)}return __extends(c,b),c.prototype.mapLookUpValues=function(a,b){var c=this.valueConverter(a);return $.map(b||[],function(a){return{value:c(a.Value),displayValue:a.Description}})},c.prototype.createInfo=function(c){var d=this,e=b.prototype.createInfo.call(this,c);return e.propertyName=c.path,"System.DateTime"===c.type&&(e.validationRules=[{type:"required",message:a.Designer.getLocalization("The value cannot be empty")}]),Object.defineProperty(e,"valuesArray",{get:function(){return c.isFilteredLookUpSettings||c.lookUpValues()&&0!==c.lookUpValues().length?c.lookUpValues():d.getValueCollection(c)},set:function(a){c.lookUpValues(a)}}),e},c.prototype.isEnumType=function(a){return a.isFilteredLookUpSettings||!!a.lookUpValues()||b.prototype.isEnumType.call(this,a)},c.prototype.valueConverter=function(a){return"System.DateTime"===a?function(a){return Globalize.parseDate(a,["yyyy-MM-dd","MM/dd/yyyy HH:mm:ss"])}:b.prototype.valueConverter.call(this,a)},c}(c);b.PreviewParameterHelper=d;var e=function(b){function c(a,c){var d=this;b.call(this),this.valueInfo=ko.observable(),this.lookUpValues=ko.observableArray(),this.multiValueInfo=ko.observable(),this.type=a.TypeString,this.path=a.Path,this.isFilteredLookUpSettings=a.IsFilteredLookUpSettings,this._originalLookUpValues=a.LookUpValues?c.mapLookUpValues(this.type,a.LookUpValues||[]):null,this.lookUpValues(this._originalLookUpValues),this.isMultiValue=a.MultiValue,this.isMultiValueWithLookUp=this.isMultiValue&&!!this.lookUpValues(),this.getParameterDescriptor=function(){return{description:a.Description,displayName:a.Description||a.Name,name:a.Name,type:a.TypeString,value:a.Value,visible:a.Visible}},this._disposables.push(ko.computed(function(){var b=c.getParameterInfo(d);b.propertyName=a.Path,d.valueInfo(b)})),this._originalValue=a.Value,this.initialize(this._originalValue,c)}return __extends(c,b),c.prototype.safeAssignObservable=function(a,b){this[a]?this[a](b()):this[a]=b},c.prototype.initialize=function(b,c){var d=this;this.isMultiValueWithLookUp?(this.safeAssignObservable("_value",ko.observableArray((b||[]).map(function(a){return c.valueConverter(d.type)(a)}))),this.safeAssignObservable("value",ko.observable(new a.Designer.Widgets.MultiValuesHelper(this._value,this.lookUpValues())))):this.isMultiValue?this.safeAssignObservable("value",c.createMultiValueArray(b,this)):this.safeAssignObservable("value",ko.observable(c.valueConverter(this.type)(b)))},c}(a.Designer.Disposable);b.PreviewParameter=e;var f=function(f){function g(c,e){var g=this;f.call(this),this._parameters=[],this._getLookUpValueRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getLookUpValues",encodeURIComponent(JSON.stringify(c)))},this._getDoneGetLookUpValueHandler=function(){var a=g;return function(b){try{if(!b||!b.parameters)return;b.parameters.forEach(function(b,c){a._setLookUpValues(b.Key,b.Value,0===c)})}finally{a.parametersLoading(!1)}}},this._getFailGetLookUpValueHandler=function(){var c=g;return function(d){c.parametersLoading(!1);var e=a.Designer.getLocalization("Cannot supply filtered lookup values to a report parameter editor"),f=a.Designer.getErrorMessage(d);f&&(e+=": "+f),b.MessageHandler.processError(e)}},this.getInfo=ko.observable(null),this.needToRefreshLookUps=ko.observable(!1),this.isEmpty=ko.observable(!0),this.parametersLoading=ko.observable(!1),this._reportPreview=c,this.parameterHelper=e||new d;var h=this;this.submit=function(){if(!h.parametersLoading()){h.parametersLoading(!0);var a=c.startBuild();a&&a.done(function(){h.parametersLoading(!1)})}},this._disposables.push(c.originalParametersInfo.subscribe(function(a){g.initialize(a)})),this.initialize(c.originalParametersInfo()),this.tabInfo=new a.Designer.TabInfo(a.Designer.getLocalization("Parameters"),"dxrd-preview-parameters",this,"parameters",ko.pureComputed(function(){return!g.isEmpty()}))}return __extends(g,f),g.prototype._convertLocalDateToUTC=function(a){return new Date(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds()))},g.prototype._add=function(a){var b=this;this.isEmpty(!1);var c=new e(a,this.parameterHelper);this._parameters.push(c),this.needToRefreshLookUps(this.needToRefreshLookUps()||c.isFilteredLookUpSettings),this._disposables.push((c.isMultiValueWithLookUp?c._value:c.value).subscribe(function(){!b.parametersLoading()&&b.needToRefreshLookUps()&&b.getLookUpValues(c.path)})),this[c.path]=c.value},g.prototype._setLookUpValues=function(a,b,c){var d=this;this[a]&&this._parameters.forEach(function(e){if(e.path===a){e.lookUpValues(d.parameterHelper.mapLookUpValues(e.type,b));var f=d._getParameterValuesContainedInLookups(b,e);e.isMultiValue?e.initialize(f.length>0?f:c&&b.length>0?[b[0].Value]:[],d.parameterHelper):e.initialize(f[0]&&f[0].Value||c&&b.length>0?b[0].Value:null,d.parameterHelper)}})},g.prototype._getParameterValuesContainedInLookups=function(a,b){var c=this;if(a){if(b.isMultiValue){var d=(b.value()&&b.value().selectedItems()||[]).map(function(a){return a.value});return d.filter(function(d){return c._filterParameterValuesContainsInLookups(a,b.type,d).length>0})}return this._filterParameterValuesContainsInLookups(a,b.type,b.value())}return[]},g.prototype._filterParameterValuesContainsInLookups=function(a,b,c){var d=this;return a.filter(function(a){return d._compareValues(d.parameterHelper.valueConverter(b)(a.Value),c)})},g.prototype._compareValues=function(a,b){return a instanceof Date&&b instanceof Date?a-b===0:a===b},g.prototype.initialize=function(a){var b=this;if(this._parameters.forEach(function(a){delete b[a.path]}),this._parameters=[],!a)return this.isEmpty(!0),void this.getInfo([]);this.parameterHelper.initialize(a.knownEnums),(a.parameters||[]).forEach(function(a){a.Visible&&b._add(a)}),0===this._parameters.length&&this.isEmpty(!0);var c=this._parameters.map(function(a){return a.valueInfo()});this.getInfo(c),!a.shouldRequestParameters||this.isEmpty()?this.submit():(this._reportPreview.removeEmptyPages(),this.tabInfo.active(!0),this._reportPreview.pageLoading(!1))},g.prototype.getPathsAfterPath=function(a){var b=0;$.each(this._parameters,function(c,d){return d.path===a?(b=c+1,!0):void 0});var c=this._parameters.filter(function(a,c){return a.isFilteredLookUpSettings&&c>=b}).map(function(a){return a.path});return c||[]},g.prototype.serializeParameters=function(){var a=[],b=this;return this._parameters.forEach(function(d){var e=function(a){return"System.DateTime"===d.type&&a&&a instanceof Date?b._convertLocalDateToUTC(a):a},f=d.isMultiValueWithLookUp?d._value():d.value();a.push({Value:c.getSerializationValue(f,e),Key:d.path,TypeString:d.type})}),a},g.prototype.restore=function(){var a=this;if(!this.parametersLoading())try{this.parametersLoading(!0),this._parameters.forEach(function(b){b.lookUpValues(b._originalLookUpValues),b.initialize(b._originalValue,a.parameterHelper)})}finally{this.parametersLoading(!1)}},g.prototype.isPropertyDisabled=function(){return this.parametersLoading()},g.prototype.getLookUpValues=function(a){var b=this.getPathsAfterPath(a);if(b&&0!==b.length){this.parametersLoading(!0);var c={reportId:this._reportPreview.reportId,requiredParameterPaths:b,parameters:this.serializeParameters(),timeZoneOffset:0-(new Date).getTimezoneOffset()};this._getLookUpValueRequest(c).done(this._getDoneGetLookUpValueHandler()).fail(this._getFailGetLookUpValueHandler())}},g}(a.Designer.Disposable);b.PreviewParametersViewModel=f}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){function c(a,b){return function(){var c=$(b),d=c.find(".dxrd-preview .dxrd-right-panel").outerWidth()+c.find(".dxrd-right-tabs").outerWidth(),e=c.find(".dxrd-preview").width()-(d+5);c.find(".dxrd-preview-wrapper").css("right",d),c.find(".dxrd-preview-wrapper").css("width",e),a(e)}}function d(a,b,c){var d=$(c),e=d.closest(".dxrd-preview-wrapper"),f=d.closest(".dxrd-preview");if(0===e.length||0===f.length)return 1;var g=f.find(".dxrd-right-panel").outerWidth()+f.find(".dxrd-right-tabs").outerWidth(),h=f.width()-(g+10),i=parseFloat(e.css("top").split("px")[0]),j=f.outerHeight(),k=j-i,l=k/(b+6),m=h/a;return Math.min(l,m)}function e(d,e,f,h,i,j){void 0===j&&(j=!0),f&&Globalize.addCultureInfo("default",{messages:f});var k=new b.PreviewRequestWrapper,l=new g(i,k),m=new b.SearchViewModel(l),n=new b.DocumentMapModel(l),o=new b.PreviewParametersViewModel(l,new b.PreviewParameterHelper(h&&h.knownEnums,e&&e.customizeParameterEditors)),p=new b.ExportOptionsModel(l);l.canSwitchToDesigner=!j,k.initialize(l,o,m);var q=new a.Designer.TabPanel([o.tabInfo,p.tabInfo,m.tabInfo,n.tabInfo],!0);q.collapsed(!0);var r=ko.observableArray([new b.PreviewActions(l),p,m,new b.PreviewDesignerActions(l)]);l.previewVisible(j);var s={reportPreview:l,parametersModel:o,exportModel:p,searchModel:m,documentMapModel:n,tabPanel:q,globalActionProviders:r,globalActions:ko.pureComputed(function(){var a=[];return r().forEach(function(b){a.push.apply(a,b.getActions(l))}),e&&e.customizeActions&&e.customizeActions(a),a})};d&&!l.canSwitchToDesigner&&($(d).children().remove(),ko.applyBindings(s,d));var t=c(l.previewSize,d);return s.updateSurfaceSize=function(){t()},$(window).bind("resize",function(){t()}),q.width.subscribe(function(){setTimeout(t,1)}),t(),s}function f(b,c,d){var e=a.Report.Preview.createPreview(c,d,b.localization,b.parametersInfo,b.handlerUri);return(b.reportId||b.documentId)&&e.reportPreview.initialize($.Deferred().resolve(b)),e}b.HandlerUri="DXXRDV.axd",b.TimeOut=12e4,b.MessageHandler={processError:function(b){a.Designer.NotifyAboutWarning(b)},processMessage:function(b){a.Designer.NotifyAboutWarning(b)},processWarning:function(b){a.Designer.NotifyAboutWarning(b)}},b.generateGuid=function(){var a=function(a){return Math.floor((1+Math.random())*Math.pow(65536,a)).toString(16).substring(1)};return a(2)+"-"+a(1)+"-"+a(1)+"-"+a(1)+"-"+a(3)};var g=function(c){function d(d,e,f){var g=this;c.call(this),this.getPreviewPageBrickProvider=function(a,c){return new b.PreviewPageBrickProvider(a,c)},this.predefinedZoomLevels=ko.observableArray([5,2,1.5,1,.75,.5,.25]),this._pageWidth=ko.observable(818),this._pageHeight=ko.observable(1058),this._currentReportId=ko.observable(null),this._currentDocumentId=ko.observable(null),this._currentOperationId=ko.observable(null),this._stopBuildRequests={},this._closeDocumentRequests={},this._startBuildOperationId="",this._drillDownState=[],this.originalParametersInfo=ko.observable(null),this.pageIndex=ko.observable(0),this.showMultipagePreview=ko.observable(!1),this.documentMap=ko.observable(),this.exportOptionsModel=ko.observable(),this.pageLoading=ko.observable(!1),this.documentBuilding=ko.observable(!1),this.pendingOperation=ko.observable(!1),this.progressBar=new b.ProgressViewModel,this.pages=ko.observableArray([]).extend({rateLimit:{timeout:20,method:"notifyWhenChangesStop"}}),this.isAutoFit=ko.observable(!0),this.exportDisabled=ko.pureComputed(function(){var a=g.progressBar.inProgress(),b=g.documentBuilding();return-1===g.pageIndex()||a||b}),this._zoom=ko.observable(1),this.zoom=ko.pureComputed({read:function(){return g.isAutoFit()||0===g._zoom()?0:g._zoom()},write:function(a){0!==a?(g._zoom(a),g.isAutoFit(!1)):g.isAutoFit(!0)}}),this._currentPage=ko.pureComputed(function(){return-1===g.pageIndex()?a.Designer.getLocalization("0 pages"):g.pageIndex()+1+" "+a.Designer.getLocalization("of")+" "+g.pages().length}),this._raiseOnSizeChanged=function(){g.onSizeChanged()&&g.onSizeChanged()()},this.previewSize=ko.observable(0),this.onSizeChanged=ko.observable(),this.previewVisible=ko.observable(!1),this.canSwitchToDesigner=!0,b.HandlerUri=d||b.HandlerUri,this.previewHandlersHelper=f||new b.PreviewHandlersHelper(this),this.previewWrapper=e||new b.PreviewRequestWrapper,this._disposables.push(this.previewSize.subscribe(function(){return g._raiseOnSizeChanged()})),this._disposables.push(this._zoom.subscribe(function(){if(g.showMultipagePreview())g.pages().forEach(function(a){a.updateSize(a.zoom()),a.isClientVisible(!1)}),g._raiseOnSizeChanged();else{var a=g.pages()[g.pageIndex()];a&&a.isClientVisible.notifySubscribers()}}))}return __extends(d,c),d.prototype._doDrillDown=function(a){this._drillDownState.filter(function(b){return b.Key===a&&(b.Value=!b.Value)}),this.closeDocument(),this.progressBar.complete(),this.documentMap(null);for(var b=this.pages().length-1;b>=0;b--){var c=this.pages()[b];b>this.pageIndex()?this.pages.remove(c):(c.pageIndex=-1,c.brick(null),c._setPageImgSrc(null,1))}this._startBuildRequest()},d.prototype.removeEmptyPages=function(a){a&&this.pages.removeAll();for(var b=this.pages().length-1;b>=0;b--){var c=this.pages()[b];(c.isEmpty||-1===c.pageIndex)&&this.pages.remove(c)}},d.prototype._initialize=function(){this._drillDownState=[],this.closeDocument(),this.documentMap(null),this.pageIndex(-1),this.pageLoading(!0),this.progressBar.complete(),this.pages([new b.PreviewPage(-1,this._pageWidth,this._pageHeight,this._zoom,this._currentDocumentId,null,this.pageLoading)])},d.prototype._cleanTabInfo=function(){this.exportOptionsModel(null),this.documentMap(null)},d.prototype._export=function(c,d,e){var f=this,g=$.Deferred();if(b.AsyncExportApproach){var h=this;this.progressBar.text(a.Designer.getLocalization("Exporting the document...")),this.progressBar.cancelText(a.Designer.getLocalization("Cancel")),this.progressBar.startProgress(function(){f._currentOperationId(null)}),this.previewWrapper.getStartExportOperation(c).done(function(a){h.previewHandlersHelper.doneStartExportHandler(g,e,a)}).fail(function(a){h.previewHandlersHelper.getErrorStartBuildHandler(g,a)})}else g.resolve(!0),window.open(d+"?actionKey=exportTo&arg="+c,"_blank");return g.promise()},d.prototype.createBrickClickProcessor=function(a){var b=this;return function(c){if(b.goToPage(a,!0),c&&b.pages()[a].selectBrick(""),(!b.customProcessBrickClick||!b.customProcessBrickClick(a,c))&&c&&c.navigation)if(c.navigation.drillDownKey&&b.reportId&&b._doDrillDown&&b._doDrillDown(c.navigation.drillDownKey),c.navigation.pageIndex>=0){var d=b.pages().filter(function(a){return a.pageIndex===c.navigation.pageIndex})[0];d&&(b.goToPage(c.navigation.pageIndex),d.selectBrick(c.navigation.indexes))}else{var e=c.navigation.target||"_blank";c.navigation.url&&window.open(c.navigation.url,e)}}},d.prototype.openReport=function(b){var c=this;this._cleanTabInfo(),this.closeReport(),this.originalParametersInfo(null);var d=$.Deferred();this._openReportOperationDeferred=d,this.previewWrapper.openReport(b).done(function(a){d.resolve(a)}).fail(function(e){d.reject(e),c._processError(a.Designer.getLocalization("Could not open report '"+b+"'"),e)}),this.initialize(d.promise())},d.prototype.initialize=function(b){this._currentReportId(null),this._currentDocumentId(null);var c=this;this._initialize(),b.done(function(b){if(b&&!b.error&&(b.reportId||b.documentId)){c._currentReportId(b.reportId),c._currentDocumentId(b.documentId),b.pageHeight&&c._pageHeight(b.pageHeight),b.pageWidth&&c._pageWidth(b.pageWidth);var d=new a.Designer.Report.ExportOptionsPreview(JSON.parse(b.exportOptions));if(c.exportOptionsModel(d),b.parametersInfo)c.originalParametersInfo(b.parametersInfo);else{var e=c.getDoGetBuildStatusFunc();e(b.documentId)}}else c.pageLoading(!1),c._processError(a.Designer.getLocalization("The report preview initialization has failed"),b&&b.error)}).fail(function(){c.removeEmptyPages()})},d.prototype.deactivate=function(){this._initialize(),this._cleanTabInfo(),this.closeReport(),this._currentDocumentId(null),this._currentReportId(null)},d.prototype.startBuild=function(){return this._initialize(),this._startBuildRequest()},d.prototype._initializeStartBuild=function(){var c=this;return this.pendingOperation()||this._startBuildOperationId?!1:(this._startBuildOperationId=b.generateGuid(),this._currentDocumentId(null),this.progressBar.text(a.Designer.getLocalization("Document is building...")),this.progressBar.cancelText(a.Designer.getLocalization("Cancel")),this.progressBar.startProgress(function(){c.documentBuilding(!1)},function(){c.stopBuild()}),this.documentBuilding(!0),!0)},d.prototype._startBuildRequest=function(){if(!this._initializeStartBuild())return null;var a=this,b=$.Deferred();return this.previewWrapper.startBuildRequest().done(function(c){a.previewHandlersHelper.doneStartBuildHandler(b,c)}).fail(function(c){a.previewHandlersHelper.getErrorStartBuildHandler(b,c)}),b.promise()},d.prototype.getExportStatus=function(a){var b=this,c=this,d=$.Deferred();return setTimeout(function(){b.previewWrapper.getExportStatusRequest(a).done(function(b){c.previewHandlersHelper.doneExportStatusHandler(d,a,b)}).fail(function(a){c.previewHandlersHelper.errorExportStatusHandler(d,a)})},250),d.promise()},d.prototype.getExportResult=function(a,c){var d=encodeURIComponent(JSON.stringify({id:a,printable:!!c}));window.open(b.HandlerUri+"?actionKey=getExportResult&arg="+d,"_blank")},d.prototype.getBuildStatus=function(a){var b=this,c=this,d=$.Deferred();return setTimeout(function(){b.previewWrapper.getBuildStatusRequest(a).done(function(b){c.previewHandlersHelper.getDoneGetBuildStatusHandler(d,a,b)}).fail(function(a){c.previewHandlersHelper.getErrorGetBuildStatusHandler(d,a)})},250),d.promise()},d.prototype.getDoGetBuildStatusFunc=function(){var a=this,b=function(c){var d=a.getBuildStatus(c);d.done(function(d){if(d&&d.requestAgain&&!a._stopBuildRequests[c]&&!a._closeDocumentRequests[c])b(c);else try{if(d.error||!d.requestAgain&&!d.pageCount)return void a.removeEmptyPages(!d.pageCount);if(!d.completed)return;a.getDocumentData(c),a.pages().forEach(function(b){b.updateSize(a._zoom());var d=b.pageIndex===a.pageIndex();b.actualResolution=0,b.isClientVisible(d),d&&b._setPageImgSrc(c,a._zoom())})}finally{a.progressBar.complete(),setTimeout(a._raiseOnSizeChanged,1e3)}})};return b},d.prototype.getDocumentData=function(b){var c=this;this.previewWrapper.getDocumentData(b).done(function(a){a&&(c._drillDownState=a.drillDownKeys||[],c.documentMap(a.documentMap))}).fail(function(d){c._processError(a.Designer.getLocalization("Cannot obtain additional document data for the current document"),d,c._closeDocumentRequests[b])})},d.prototype.exportDocumentTo=function(c){if(this._currentDocumentId()){var d=this.exportOptionsModel()?JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(this.exportOptionsModel())):null,e=encodeURIComponent(JSON.stringify({documentId:this._currentDocumentId(),exportOptions:d,format:c}));this._export(e,b.HandlerUri)}},d.prototype.printDocument=function(c){if(this._currentDocumentId()){var d=new a.Designer.Report.ExportOptionsPreview({});d.pdf.showPrintDialogOnOpen=!0,c=parseInt(c),(c&&c>0||0===c)&&this.pages().length>c&&(d.pdf.pageRange=c+1);var e=JSON.stringify((new a.JS.Utils.ModelSerializer).serialize(d)),f=encodeURIComponent(JSON.stringify({documentId:this._currentDocumentId(),exportOptions:e,format:"printpdf"}));this._export(f,b.HandlerUri,!0)}},d.prototype.stopBuild=function(a){var b=a||this._currentDocumentId();return b?(this._stopBuildRequests[b]=!0,this.progressBar.complete(),void this.previewWrapper.stopBuild(b)):void(this._startBuildOperationId&&(this._stopBuildRequests[this._startBuildOperationId]=!0))},d.prototype.closeDocument=function(a){var b=a||this._currentDocumentId();return b?(this._closeDocumentRequests[b]=!0,this.progressBar.complete(),void this.previewWrapper.sendCloseRequest(b)):void(this._startBuildOperationId&&(this._closeDocumentRequests[this._startBuildOperationId]=!0))},d.prototype.closeReport=function(){this._openReportOperationDeferred&&this._openReportOperationDeferred.reject(),this._currentReportId()&&this.previewWrapper.sendCloseRequest(null,this._currentReportId())},d.prototype.goToPage=function(a,b){!b&&this.pageIndex.peek()===a||0===this.pages.peek().length||0>a||a>=this.pages.peek().length||(this.pageIndex(a),this.pages.peek().forEach(function(b){var c=b.pageIndex===a;b.active(c),b.isClientVisible(c)}))},d.prototype.getSelectedContent=function(){var a=this.pages()[this.pageIndex()];if(!a||!a.brickColumnWidthArray)return"";var b=[],c=function(a,d){a&&(a.active()&&-1!=a.genlIndex&&b.push(a),a.bricks&&0!=a.bricks.length&&a.bricks.forEach(function(a){c(a,d)}))};if(c(a.brick(),b),!b)return"";var d=[],e=function(a,b){b=b||"";for(var c=a-b.length,d=0;c>=d;d++)b+=" ";return b},f=a.brickColumnWidthArray.length,g=-1;b.forEach(function(a){var b=d[a.row];b||(b=[],d[a.row]=b);var c=a.content&&a.content.filter(function(a){return"text"===a.Key})[0];b[a.col]=c&&c.Value,f>a.col&&(f=a.col),g<a.col&&(g=a.col)});var h="";return d.forEach(function(b){for(var c=f;g>=c;c++)h+=e(a.brickColumnWidthArray[c],b[c]);h+="\r\n"}),h},d.prototype._processError=function(c,d,e){if(!e){var f=a.Designer.getErrorMessage(d);f&&(c+=": "+f),b.MessageHandler.processError(c)}},Object.defineProperty(d.prototype,"reportId",{get:function(){return this._currentReportId()},enumerable:!0,configurable:!0}),Object.defineProperty(d.prototype,"documentId",{get:function(){return this._currentDocumentId()},enumerable:!0,configurable:!0}),d}(a.Designer.Disposable);b.ReportPreview=g,b.updatePreviewContentSize=c,b.updatePreviewZoomWithAutoFit=d,b.createPreview=e,b.createAndInitPreviewModel=f}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(b){this.actions=[],this.actions.push({text:a.Designer.getLocalization("Design"),imageClassName:"dxrd-image-design",disabled:ko.observable(!1),visible:b.canSwitchToDesigner,hotKey:{ctrlKey:!0,keyCode:"P".charCodeAt(0)},clickAction:function(){b.previewVisible(!1),b.deactivate()}})}return b.prototype.getActions=function(){return this.actions},b}();b.PreviewDesignerActions=c;var d=function(){function b(b){this.actions=[];var c=ko.observable(.01),d=ko.pureComputed(function(){var a=b.progressBar.inProgress(),c=b.documentBuilding();return-1===b.pageIndex()||a||c});this.actions.push({text:a.Designer.getLocalization("First Page"),imageClassName:"dxrd-image-preview-first",disabled:ko.pureComputed(function(){return b.pageIndex()<1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"1".charCodeAt(0)},clickAction:function(){b.pageIndex()>0&&b.goToPage(0)}}),this.actions.push({text:a.Designer.getLocalization("Previous Page"),imageClassName:"dxrd-image-preview-prev",disabled:ko.pureComputed(function(){return b.pageIndex()<1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:",".charCodeAt(0)},clickAction:function(){b.pageIndex()>=1&&b.goToPage(b.pageIndex()-1)}});var e={text:"Pagination",imageClassName:"dxrd-image-pager",disabled:ko.observable(!1),visible:ko.pureComputed(function(){return b.previewVisible()}),clickAction:$.noop,selectedItem:ko.pureComputed({read:function(){if(b.pageIndex()<0)return null;var a=e.pageItems();return a&&a.store&&a.store.length>b.pageIndex()&&a.store[b.pageIndex()]},write:function(a){a&&(a.index||0===a.index)&&b.goToPage(a.index)},deferEvaluation:!0}),pageItems:ko.pureComputed(function(){var a=b.pages().length;if(0===a||-1===b.pageIndex.peek())return[];for(var c=new Array,d=0;a>d;)c.push({index:d,text:++d});return{store:c,paginate:a>200,pageSize:100}}),currentPage:b._currentPage,focusOut:function(){b._currentPage.notifySubscribers()},valueChanged:function(a){var c=parseInt&&parseInt(a.value);c&&c-->0&&c<b.pages().length&&b.goToPage(c)},templateName:"dxrd-preview-pager"};this.actions.push(e),this.actions.push({text:a.Designer.getLocalization("Next Page"),imageClassName:"dxrd-image-preview-next",disabled:ko.pureComputed(function(){return b.pageIndex()<0||b.pageIndex()>=b.pages().length-1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:".".charCodeAt(0)},clickAction:function(){b.pageIndex()<b.pages().length-1&&b.goToPage(b.pageIndex()+1)}}),this.actions.push({text:a.Designer.getLocalization("Last Page"),imageClassName:"dxrd-image-preview-last",disabled:ko.pureComputed(function(){return b.pageIndex()<0||b.pageIndex()>=b.pages().length-1}),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"L".charCodeAt(0)},clickAction:function(){b.pageIndex()<b.pages().length-1&&b.goToPage(b.pages().length-1)}}),this.actions.push({text:a.Designer.getLocalization("Toggle Multipage Mode"),imageClassName:ko.pureComputed(function(){return b.showMultipagePreview()?"dxrd-image-preview-single-page":"dxrd-image-preview-multipage"}),disabled:ko.observable(!1),visible:ko.pureComputed(function(){return b.previewVisible()}),hotKey:{ctrlKey:!0,keyCode:"M".charCodeAt(0)},clickAction:function(){var a=b._zoom();b.showMultipagePreview(!b.showMultipagePreview()),b.zoom(a)},hasSeparator:!0}),this.actions.push({text:a.Designer.getLocalization("Zoom Out"),imageClassName:"dxrd-image-zoomout",disabled:ko.pureComputed(function(){return b.isAutoFit()}),visible:!0,zoomStep:c,clickAction:function(){b.zoom(Math.max(b.zoom()-c(),.01))},hasSeparator:!0}),this.actions.push({text:a.Designer.getLocalization("Zoom 100%"),imageClassName:"dxrd-image-zoom",disabled:ko.observable(!1),visible:!0,clickAction:function(){b.zoom(1)},templateName:"dxrd-zoom-autofit-select-template",zoom:b.zoom,zoomLevels:b.predefinedZoomLevels,zoomItems:ko.pureComputed(function(){var a=b.predefinedZoomLevels.slice(0);return b.showMultipagePreview()===!1&&-1===a.indexOf(0)&&a.push(0),a})}),this.actions.push({text:a.Designer.getLocalization("Zoom In"),imageClassName:"dxrd-image-zoomin",disabled:ko.pureComputed(function(){return b.isAutoFit()}),visible:!0,zoomStep:c,clickAction:function(){b.zoom(Math.min(b.zoom()+c(),10))}}),this.actions.push({text:a.Designer.getLocalization("Print"),imageClassName:"dxrd-image-print",hasSeparator:!0,disabled:d,visible:!0,clickAction:function(){d()||b.printDocument()}}),this.actions.push({text:a.Designer.getLocalization("Print Page"),imageClassName:"dxrd-image-print-page",disabled:d,visible:!0,clickAction:function(){d()||b.printDocument(b.pageIndex())}})}return b.prototype.getActions=function(){
return this.actions},b}();b.PreviewActions=d}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(a){var b;!function(a){ko.bindingHandlers.toView={init:function(a,b){var c=$(a),d=c.parent(".dxrd-report-preview-holder"),e=b().active,f=e.subscribe(function(a){if(a){var b=c.position().top;(0>b&&b+c.height()<0||b>d.height())&&d.scrollTop(d.scrollTop()+b)}});ko.utils.domNodeDisposal.addDisposeCallback(a,function(){f.dispose()})}},ko.bindingHandlers.lazyImages={init:function(a,b){var c=$(a),d=b().enabled,e=function(){if(d())for(var b=c.height()+100,e=0;e<a.children.length;e++){var f=a.children[e],g=f.getBoundingClientRect(),h=g.top;if(b>h&&h>=0||0>h&&h+g.height>-100){var i=ko.dataFor(f);i&&i.isClientVisible(!0)}}};ko.isObservable(b().updateCallback)&&b().updateCallback(e);var f,g=function(){f&&clearTimeout(f),f=setTimeout(function(){e(),f=void 0},700)},h=d.subscribe(function(a){a&&e()});c.on("scroll",g),setTimeout(e,500),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){c.off("scroll",g),h.dispose()})}},ko.bindingHandlers["brick-selection"]={update:function(a,b){var c=b(),d=ko.unwrap(c).selectBrick,e=function(a,b){if(a){var c=ko.dataFor(a);c&&c.active&&c.active(b||!c.active())}},f=function(a){if(a){var b=ko.dataFor(a);b&&b.active&&b.active(!1)}},g=$.extend({filter:".dxrd-report-preview-brick-selectable",distance:5},ko.unwrap(c),{selecting:function(a,b){e(b.selecting,a.ctrlKey)},start:function(a){d&&d("",a.ctrlKey)},unselecting:function(a,b){f(b.unselecting)}});$(a).selectable(g)}},ko.bindingHandlers.textCopier={init:function(a,b,c,d){var e=function(a){var b=d.getSelectedContent();if(!(!b||!a.ctrlKey&&!a.metaKey||$(a.target).is("input:visible,textarea:visible")||window.getSelection&&window.getSelection()&&window.getSelection().toString()||document.selection&&document.selection.createRange().text)){var c=$("#clipboard-container");c.empty().show(),$("<textarea id='clipboard'></textarea>").val(b).appendTo(c).focus().select()}},f=function(a){$(a.target).is("#clipboard")&&$("#clipboard-container").empty().hide()};$(document).on("keydown",e),$(document).on("keyup",f),ko.utils.domNodeDisposal.addDisposeCallback(a,function(){$(document).off("keydown",e),$(document).off("keyup",f)})}},ko.bindingHandlers.autoFit={init:function(b,c){var d=c(),e=[],f=function(c){if(c.isAutoFit()===!0&&!c.brickLoading()){var d=Math.round(100*a.updatePreviewZoomWithAutoFit(c.width(),c.height(),b)-1)/100;c.zoom(Math.max(d,.02))}};f(d);var g=function(){f(d)};$(window).bind("resize",g),e.push(d.rightPanelWidth.subscribe(function(){f(d)})),e.push(d.width.subscribe(function(){f(d)})),e.push(d.height.subscribe(function(){f(d)})),e.push(d.previewSize.subscribe(function(){f(d)})),e.push(d.isAutoFit.subscribe(function(){f(d)})),e.push(d.brickLoading.subscribe(function(){f(d)})),ko.utils.domNodeDisposal.addDisposeCallback(b,function(){$(window).unbind("resize",g),e.forEach(function(a){a.dispose()})})}}}(b=a.Preview||(a.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function c(a){this._preview=a}return c.prototype.doneStartExportHandler=function(b,c,d){var e=this;try{if(!d)return void this._preview.progressBar.complete();this._preview._currentOperationId(d);var f=function(b){var d=e._preview.getExportStatus(b);d.done(function(d){if(d&&d.requestAgain)e._preview.progressBar&&e._preview.progressBar.updateProgress(d.progress),f(b);else if(e._preview.progressBar.complete(),!d.requestAgain&&d.completed&&e._preview.getExportResult(b,c),d.error)return void e._preview._processError(a.Designer.getLocalization("Error on retrieving an exporting status: ")+d.error)})};f(this._preview._currentOperationId())}finally{b.resolve(!0),this._preview._startBuildOperationId=""}},c.prototype.errorStartExportHandler=function(b,c){this._preview.progressBar.complete(),c&&this._preview._processError(a.Designer.getLocalization("An error occurred during the export"),c)},c.prototype.doneExportStatusHandler=function(a,b,c){try{if(!c)return a.resolve({requestAgain:!1}),void this._preview.progressBar.complete();if(c.faultMessage)return a.resolve({requestAgain:!1,error:c.faultMessage}),this._preview._processError(c.faultMessage,null),void this._preview.progressBar.complete();this._preview.progressBar&&this._preview.progressBar.progress()<c.progress&&this._preview.progressBar.updateProgress(c.progress),a.resolve(c)}catch(d){a.resolve({requestAgain:!1})}},c.prototype.errorExportStatusHandler=function(b,c){this._preview.progressBar.complete(),b.resolve({requestAgain:!1,created:!1}),this._preview._processError(a.Designer.getLocalization("Error obtaining an export status"),c)},c.prototype.doneStartBuildHandler=function(a,b){var c=this;try{var d=function(a){a&&c._preview.pages.removeAll(),c._preview.removeEmptyPages()};if(!b||!b.documentId)return this._preview.progressBar.complete(),void d();var e=this._preview._stopBuildRequests[this._preview._startBuildOperationId],f=this._preview._closeDocumentRequests[this._preview._startBuildOperationId];if(this._preview._startBuildOperationId&&(e||f))return f?f&&this._preview.closeDocument(b.documentId):e&&this._preview.stopBuild(b.documentId),this._preview.progressBar.complete(),void d();this._preview._currentDocumentId(b.documentId);var g=this._preview.getDoGetBuildStatusFunc();g(this._preview._currentDocumentId())}finally{a.resolve(!0),this._preview._startBuildOperationId=""}},c.prototype.getErrorStartBuildHandler=function(b,c){this._preview.pageLoading(!1),this._preview.progressBar.complete(),b.resolve(!0),this._preview._startBuildOperationId="",this._preview.removeEmptyPages(),this._preview._processError(a.Designer.getLocalization("Cannot create a document for the current report"),c,this._preview._closeDocumentRequests[this._preview._startBuildOperationId])},c.prototype.getErrorGetBuildStatusHandler=function(b,c){b.resolve({requestAgain:!1,created:!1}),this._preview._processError(a.Designer.getLocalization("Error obtaining a build status"),c,this._preview._closeDocumentRequests[this._preview._currentDocumentId()])},c.prototype.getDoneGetBuildStatusHandler=function(a,c,d){var e=this;try{if(!d)return void a.resolve({requestAgain:!1});if(d.faultMessage)return a.resolve({requestAgain:!1,pageCount:-1,error:d.faultMessage}),void this._preview._processError(d.faultMessage,null,this._preview._closeDocumentRequests[c]);this._preview.progressBar.progress()<d.progress&&!this._preview._stopBuildRequests[c]&&!this._preview._closeDocumentRequests[c]&&this._preview.progressBar.updateProgress(d.progress);var f=-1===this._preview.pageIndex()&&d.pageCount>0;f&&this._preview.pageIndex(0);for(var g=this._preview.getPreviewPageBrickProvider(b.HandlerUri,c),h=0;h<d.pageCount&&!this._preview._stopBuildRequests[c]&&!this._preview._closeDocumentRequests[c];h++){var i=function(a){return new b.PreviewPage(a,e._preview._pageWidth,e._preview._pageHeight,e._preview._zoom,e._preview._currentDocumentId,g,null,e._preview.createBrickClickProcessor(a))};if(h<this._preview.pages().length){var j=this._preview.pages()[h];(!j||j.isEmpty)&&(j=i(h),this._preview.pages.splice(h,1,j)),-1===j.pageIndex&&(j.pageIndex=h,j.brickProvider=g)}else{var k=i(h);this._preview.pages.push(k)}}if(this._preview._raiseOnSizeChanged(),f){var l=this._preview.pages().length?0:-1;this._preview.goToPage(l,!0)}a.resolve(d)}catch(m){a.resolve({requestAgain:!1})}},c}();b.PreviewHandlersHelper=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function b(){var b=this;this._progressObservable=ko.observable(0),this._forceInvisible=ko.observable(!1),this.stop=ko.observable(function(){}),this.inProgress=ko.observable(!1),this.cancelText=ko.observable(a.Designer.getLocalization("Cancel")),this.text=ko.observable(""),this.visible=ko.pureComputed({read:function(){return b._forceInvisible()?!1:b.inProgress()},write:function(a){b._forceInvisible(!a)}}),this.complete=function(){b.inProgress(!1),b._progressObservable(0),$.isFunction(b._onComplete)&&b._onComplete(),b._onComplete=null},this.startProgress=function(a,c){b.inProgress(!0),b._progressObservable(0),b._onComplete=a,b.stop(function(){try{$.isFunction(c)&&c()}finally{b.complete()}})},this.progress=ko.pureComputed({read:function(){return b._progressObservable()}})}return b.prototype.updateProgress=function(a){this._progressObservable(a)},b}();b.ProgressViewModel=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));var DevExpress;!function(a){var b;!function(b){var c;!function(b){var c=function(){function c(a){var b=this;$.each(a||{},function(a,c){b[a]=c})}return c.prototype.initialize=function(a,b,c){this._reportPreview=a,this._parametersModel=b,this._searchModel=c},c.prototype.findTextRequest=function(c){return a.Designer.ajax(b.HandlerUri,"findText",encodeURIComponent(JSON.stringify({text:c,documentId:this._reportPreview.documentId,matchCase:this._searchModel.matchCase(),wholeWord:this._searchModel.matchWholeWord(),searchUp:this._searchModel.searchUp()})))},c.prototype.stopBuild=function(c){a.Designer.ajax(b.HandlerUri,"stopBuild",encodeURIComponent(c))},c.prototype.sendCloseRequest=function(c,d){a.Designer.ajax(b.HandlerUri,"close",encodeURIComponent(JSON.stringify({reportId:d,documentId:c})))},c.prototype.startBuildRequest=function(){return a.Designer.ajax(b.HandlerUri,"startBuild",encodeURIComponent(JSON.stringify({reportId:this._reportPreview.reportId,drillDownKeys:this._reportPreview._drillDownState,timeZoneOffset:0-(new Date).getTimezoneOffset(),parameters:this._parametersModel.serializeParameters()})))},c.prototype.getBuildStatusRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getBuildStatus",encodeURIComponent(JSON.stringify({documentId:c,timeOut:Math.max(5e3,a.Report.Preview.TimeOut)})))},c.prototype.getDocumentData=function(c){return a.Designer.ajax(b.HandlerUri,"getDocumentData",encodeURIComponent(c))},c.prototype.openReport=function(c){return a.Designer.ajax(b.HandlerUri,"openReport",encodeURIComponent(c))},c.prototype.getStartExportOperation=function(c){return a.Designer.ajax(b.HandlerUri,"startExport",c)},c.prototype.getExportStatusRequest=function(c){return a.Designer.ajax(b.HandlerUri,"getExportStatus",encodeURIComponent(JSON.stringify({id:c,timeOut:Math.max(5e3,a.Report.Preview.TimeOut)})))},c}();b.PreviewRequestWrapper=c}(c=b.Preview||(b.Preview={}))}(b=a.Report||(a.Report={}))}(DevExpress||(DevExpress={}));
(function(window) {
 var MVCxClientWebDocumentViewer = ASPx.CreateClass(ASPxClientWebDocumentViewer, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
  }
 });
 window.MVCxClientWebDocumentViewer = MVCxClientWebDocumentViewer;
})(window);
(function(window) {
 var ASPxClientReportViewer = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.searchWindow = null;
   this.textRange = null;
   this.pageCount = 0;
   this.exportWindow = null;
   this.pageByPage = true;
   this.printUsingAdobePlugIn = true;
   this.searchPopupControl = null;
   this.useIFrame = true;
   this.loadPage = true;
   this.DefaultSaveFormat = "pdf";
   var me = this;
   ASPx.Evt.AttachEventToElement(window, "beforeunload", function() { me.onunload(); });
   this.printHelper = new ASPx.dx_PrintHelper();
   this.PageLoad = new ASPxClientEvent();
   this.postBackStarted = false;
   this.ChangedParameterKeyName = "$changed";
   this.submitParametersComplete = new ASPxClientEvent();
   this.refreshRising = new ASPxClientEvent();
  },
  InlineInitialize: function() {
   ASPxClientControl.prototype.InlineInitialize.call(this);
   this.formHelper = this.createFormHelper();
  },
  AfterInitialize: function() {
   if(this.loadPage && this.useIFrame)
    this.LoadInitialPage();
   this.constructor.prototype.AfterInitialize.call(this);
   if(!this.loadPage || !this.useIFrame) {
    this.RaisePageLoadEvent();
   }
   this.subscribeToAspForm();
  },
  subscribeToAspForm: function() {
   if(typeof (theForm) !== 'undefined') {
    var obj = this;
    this.addBeforeFormSubmit(theForm, function() {
     obj.postBackStarted = true;
    });
   }
  },
  addBeforeFormSubmit: function(form, beforeSubmitFunction) {
   var original = form.submit;
   form.submit = function() {
    beforeSubmitFunction();
    var callee = arguments.callee;
    this.submit = original;
    var submitResult = this.submit();
    this.submit = callee;
    return submitResult;
   };
  },
  LoadInitialPage: function() {
   this.gotoPageInternal(this.getCurrentPageIndex());
  },
  createFormHelper: function() {
   return ASPxClientReportViewer.__useMobileSpecificExport
    ? new dx_FormHelperMobile(this)
    : new dx_FormHelper();
  },
  onunload: function() {
   this.closeWindow(this.searchWindow);
  },
  closeWindow: function(win) {
   if(win != null && !win.closed) {
    win.close();
   }
  },
  OnCallbackInternal: function(result, isError) {
   if(result == "" || isError) {
    this.ShowCallbackError(result == "" ? "unknown report error" : result);
    return;
   }
   var callbackType = this.getResultParam(result);
   if(callbackType != null) {
    var hiddenFieldAssignmentScript = this.getResultParam(callbackType.remainder);
    var callbackScript = this.getResultParam(hiddenFieldAssignmentScript.remainder);
    var resultRemainder = callbackScript.remainder;
    eval(this.protectEscapes(hiddenFieldAssignmentScript.param));
    switch(callbackType.param) {
     case "submitParameters":
      this.clearParametersChanged();
      this.submitParametersComplete.FireEvent(this);
     case "page":
      this.OnPageChanged(resultRemainder);
      break;
     case "print":
      this.OnPrint(resultRemainder);
      break;
     case "search":
      this.OnSearch(resultRemainder);
      break;
     case "searchControl":
      this.OnSearchControl(resultRemainder);
      break;
     case "saveToWindow":
      this.OnSaveToWindow(resultRemainder);
      break;
     case "saveToDisk":
      this.OnSaveToDisk(resultRemainder);
      break;
     case "bookmark":
      this.OnBookmark(resultRemainder);
      break;
    }
    eval(this.protectEscapes(callbackScript.param));
   }
  },
  DoEndCallback: function() {
   this.constructor.prototype.DoEndCallback.call(this);
   if(this.pendingBookmark) {
    this.GotoBookmarkCore(this.pendingBookmark.pageIndex, this.pendingBookmark.bookmarkPath);
    delete this.pendingBookmark;
   }
  },
  ShowCallbackError: function(result) {
   alert(result);
  },
  protectEscapes: function (str) {
   return decodeURIComponent(str.replace(/\\/g, "\\\\").replace(/\\\\"/g, '\\\\\\"'));
  },
  clearParametersChanged: function() {
   var parameters = this.stateObject.parameters;
   delete parameters[this.ChangedParameterKeyName];
  },
  alert: function(x) {
   alert(x);
  },
  gotoPageInternal: function(pageIndex) {
   this.execContentChangingCallback(pageIndex, "page");
  },
  getHiddenFields: function() {
   return [this.GetStateHiddenField()];
  },
  getResultParam: function(result) {
   var pos = result.indexOf("|");
   if(pos > -1) {
    var len = parseInt(result.substr(0, pos), 10);
    return { param: result.substr(pos + 1, len), remainder: result.substr(len + pos + 1) };
   }
   return null;
  },
  execExport: function(exportKind, params, win) {
   this.execPostbackInWindow((win != null ? win : this.getFrameForExport()), exportKind, params);
  },
  execPrintPdf: function(pageIndex) {
   if(this.printHelper.pdfExists())
    this.execExport("saveToDisk", { format: "pdf", showPrintDialog: "true", idx: pageIndex });
   else
    this.execCallbackPrint(pageIndex);
  },
  execCallbackPrint: function(pageIndex) {
   this.execCallback("print", { idx: pageIndex });
  },
  execCallback: function(command, params) {
   if(!this.postBackStarted && !this.InCallback()) {
    this.ShowLoadingElements();
    this.CreateCallback(this.createEventArgument(command, params));
   }
  },
  execPostbackInWindow: function(win, command, params) {
   ASPx.RaisePostHandlerOnPost();
   this.formHelper.sendPostbackInWindow(win, this.uniqueID, this.createEventArgument(command, params));
  },
  createEventArgument: function(command, params) {
   var formatter = new dx_ParamFormatter();
   formatter.params = params;
   return command + "=" + formatter.getValue();
  },
  execContentChangingCallback: function(pageIndex, command, params) {
   this.setCurrentPageIndex(pageIndex);
   this.execCallback(command, params);
  },
  isContentEmpty: function() {
   var strippedContent = this.getContentElement().innerHTML.replace(/\s/g, '');
   return this.useIFrame ? strippedContent === "<table></table>" : !strippedContent;
  },
  ShowLoadingPanel: function() {
   this.CreateLoadingPanelWithAbsolutePosition(this.GetMainElement());
  },
  OnCallback: function(result) {
   this.OnCallbackInternal(result, false);
  },
  OnCallbackError: function(result, data) {
   this.OnCallbackInternal(result, true);
  },
  OnPageChanged: function(result) {
   var element = this.getContentElement();
   if(element != null) {
    ASPx.SetInnerHtml(element, result);
   }
   this.assignPageBackColor();
  },
  OnSearch: function(result) {
   this.OnPageChanged(result);
  },
  OnSearchControl: function(result) {
   var div = document.createElement("DIV");
   var element = this.getOuterContentElement();
   element.parentNode.appendChild(div);
   div.outerHTML = result;
  },
  OnPrint: function(result) {
   this.printHelper.print(result, this.getContentElement().className);
  },
  OnSaveToWindow: function(result) {
   if(this.exportWindow != null && !this.exportWindow.closed) {
    this.setWindowLocation(this.exportWindow, result);
   }
  },
  OnSaveToDisk: function(result) {
   this.printHelper.getFrame().location = result;
  },
  OnBookmark: function(result) {
   this.OnPageChanged(result);
  },
  showSearchWindow: function() {
   if(this.searchPopupControl == null) {
    this.execCallback("searchControl", {});
    return;
   }
   this.closeTextRange();
   this.searchPopupControl.ShowAndFocus();
  },
  findText: function(s) {
   var f = new dx_ParamFormatter();
   f.parse(s);
   this.findTextCore(f.params, true);
  },
  findTextCore: function(params, isServerCallback) {
   var isTrue = function(val) {
    return val == true || val === "true";
   }
   var text = params["txt"];
   var mword = isTrue(params["word"]);
   var mcase = isTrue(params["case"]);
   var up = isTrue(params["up"]);
   if(text === "")
    return;
   var range = this.getTextRange(up);
   if(!range.findText(text, mword, mcase, up, isServerCallback) && !isServerCallback)
    this.execCallback("search", params);
  },
  getTextRange: function(up) {
   if(!ASPx.IsExists(this.textRange)) {
    var f = this.getContentElement();
    this.textRange = ASPx.Browser.IE ? new ASPx.dx_TextRange(f, up) : new ASPx.dx_Range(f, up, !this.useIFrame);
   }
   return this.textRange;
  },
  closeTextRange: function() {
   if(ASPx.IsExists(this.textRange))
    this.textRange.empty();
   this.textRange = null;
  },
  getContentElementDiv: function() {
   return this.getElement("Div");
  },
  getContentElementIFrame: function() {
   var frameDocument = this.getContentDocument(this.getContentFrameElement());
   var divElement = frameDocument.getElementById("report_div");
   if(!ASPx.IsExists(divElement)) {
    frameDocument.open("text/html", "replace");
    frameDocument.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><body style="margin:0px;"><div id="report_div" style="width:100%;height:100%;overflow:hidden;"><div></body></html>');
    frameDocument.close();
    divElement = frameDocument.getElementById("report_div");
    var paddingString = this.padding.join(' ').replace(/^\s+|\s+$/g, ''); 
    divElement.style.padding = paddingString;
    var frameWindow = this.getContentWindow(this.contentFrame);
    if(!frameWindow.ASPx)
     frameWindow.ASPx = {};
    frameWindow.ASPx.xr_NavigateUrl = function(url, target) {
     window.ASPx.xr_NavigateUrl(url, target);
    }
    frameWindow.ASPx.RVGotoBM = function(name, pageIndex, bookmarkIndices) {
     window.ASPx.RVGotoBM(name, pageIndex, bookmarkIndices);
    }
    frameWindow.ASPx.xr_NavigateDrillDown = function(viewerName, drillDownKey) {
     window.ASPx.xr_NavigateDrillDown(viewerName, drillDownKey);
    };
    frameWindow.DXReportViewerWindow = window;
   }
   return divElement;
  },
  getContentFrameElement: function() {
   if(!ASPx.IsExists(this.contentFrame))
    this.createContent();
   return this.contentFrame;
  },
  createContent: function() {
   this.container = this.getElement("Div");
   this.contentFrame = document.createElement("iframe");
   this.contentFrame.id = this.getElementName("ContentFrame");
   this.contentFrame.name = this.contentFrame.id;
   this.contentFrame.frameBorder = 0;
   if(ASPx.Browser.IE)
    this.contentFrame.allowTransparency = true;
   this.container.appendChild(this.contentFrame);
   if(!this.autosize) {
    this.contentFrame.style.width = this.container.style.width;
    this.contentFrame.style.height = this.container.style.height;
   }
  },
  GetMainElement: function() {
   return this.getContentElementDiv();
  },
  getOuterContentElement: function() {
   if(!this.useIFrame)
    return this.getContentElementDiv();
   return this.getContentFrameElement();
  },
  getContentElement: function() {
   if(!this.useIFrame)
    return this.getContentElementDiv();
   return this.getContentElementIFrame();
  },
  getContentDocument: function(frameElement) {
   return frameElement.contentDocument || frameElement.contentWindow.document;
  },
  getContentWindow: function(frameElement) {
   return frameElement.contentWindow;
  },
  getElement: function(elementNameSuffix) {
   return ASPx.GetElementById(this.getElementName(elementNameSuffix));
  },
  getElementName: function(elementNameSuffix) {
   return this.name + "_" + elementNameSuffix;
  },
  setViewSize: function(w, h) {
   var el = this.getContentElement();
   var mainElement = this.GetMainElement();
   if(!mainElement.offsetParent && !this.autosize) {
    return;
   }
   if(!ASPx.IsExists(el)) {
    return;
   }
   var width = 0,
    height = 0;
   if(!ASPx.IsExists(w) && !ASPx.IsExists(h)) {
    var children = el.childNodes;
    for(var i = 0; i < children.length; i++) {
     var child = children[i];
     if(child.tagName != "DIV" && child.tagName != "TABLE") {
      continue;
     }
     width = Math.max(child.clientWidth, width);
     height += child.clientHeight;
    }
    if(height === 0) { 
     setTimeout(function() { this.setViewSize(w, h); }.aspxBind(this), 100);
     return;
    }
   } else {
    width = w;
    height = h;
   }
   el.style.width = getValueWithPxUnitEx(width);
   el.style.height = getValueWithPxUnitEx(height);
   if(!this.useIFrame) {
    return;
   }
   var fel = this.getContentFrameElement();
   if(fel == null) {
    return;
   }
   if(this.autosize) {
    fel.style.width = fel.parentNode.style.width = getValueWithPxUnitEx(this.getFrameSize(el.clientWidth, width, this.padding[1], this.padding[3]));
    fel.style.height = fel.parentNode.style.height = getValueWithPxUnitEx(this.getFrameSize(el.clientHeight, height, this.padding[0], this.padding[2]));
   }
  },
  getFrameSize: function(clientSize, size, nearPadding, farPadding) {
   return clientSize > 0
    ? clientSize
    : getValueWithoutPxUnit(size) + getValueWithoutPxUnit(nearPadding) + getValueWithoutPxUnit(farPadding);
  },
  onPageLoad: function(pageCount) {
   this.textRange = null;
   if(ASPx.IsExists(this.bookmarkHighlighter))
    this.bookmarkHighlighter.Reset();
   this.pageCount = pageCount;
   if(this.isInitialized)
    this.RaisePageLoadEvent();
  },
  assignPageBackColor: function() {
   var contentElement = this.getContentElement();
   for(var child in contentElement.childNodes)
    if(contentElement.childNodes[child].className === 'page-background-color-holder') {
     contentElement.style.backgroundColor = contentElement.childNodes[child].style.backgroundColor;
     break;
    }
  },
  getCurrentPageIndex: function() {
   return this.stateObject.currentPageIndex;
  },
  setCurrentPageIndex: function(pageIndex) {
   this.stateObject.currentPageIndex = parseInt(pageIndex, 10);
  },
  setStateObjectKey: function(key, value) {
   this.stateObject[key] = value;
  },
  RaisePageLoadEvent: function() {
   var args = new ASPxClientReportViewerPageLoadEventArgs(this.getCurrentPageIndex(), this.pageCount);
   this.PageLoad.FireEvent(this, args);
  },
  GotoBookmark: function(pageIndex, bookmarkPath) {
   if(!this.pageByPage) return;
   if(this.InCallback())
    this.pendingBookmark = { pageIndex: pageIndex, bookmarkPath: bookmarkPath };
   else
    this.GotoBookmarkCore(pageIndex, bookmarkPath);
  },
  GotoBookmarkCore: function(pageIndex, bookmarkPath) {
   if(pageIndex != this.getCurrentPageIndex()) {
    this.execContentChangingCallback(pageIndex, "bookmark", { path: bookmarkPath });
   } else {
    this.HighlightBookmark(bookmarkPath);
   }
  },
  HighlightBookmark: function(bookmarkPath) {
   if(!ASPx.IsExists(this.bookmarkHighlighter))
    this.bookmarkHighlighter = new dx_BookmarkHighlighter(this.getContentElement(), this.name);
   this.bookmarkHighlighter.Highlight(this.getCurrentPageIndex(), bookmarkPath);
  },
  setWindowLocation: function(win, loc) {
   if(ASPx.Browser.IE) { 
    win.document.open("text/html", "replace");
    win.document.write("<frameset><frame src='" + loc + "'></frame></frameset>");
    win.document.close();
   } else
    win.location = loc;
  },
  getFrameForExport: function() {
   if(ASPx.Browser.Firefox) {
    var win = this.printHelper.getFrame();
    try {
     var doc = win.document;
    } catch(e) {
     return this.printHelper.getFrameRecreated();
    }
    return win;
   }
   return (ASPx.Browser.IE || ASPx.Browser.Chrome || ASPx.Browser.Safari) ? this.printHelper.getFrameRecreated() : this.printHelper.getFrame();
  },
  SubmitParameters: function(parameters) {
   this.stateObject.drillDown = {};
   this.submitParametersCore(0, parameters);
  },
  navigateDrillDown: function(drillDownKey) {
   var drillDown = this.stateObject.drillDown;
   if(drillDown.hasOwnProperty(drillDownKey)) {
    drillDown[drillDownKey] = !drillDown[drillDownKey];
   } else {
    drillDown[drillDownKey] = true;
   }
   this.submitParametersCore(this.getCurrentPageIndex());
  },
  submitParametersCore: function(pageIndex, parameters) {
   parameters = parameters || {};
   parameters[this.ChangedParameterKeyName] = true;
   for(var i in parameters) {
    if(!parameters.hasOwnProperty(i)) {
     continue;
    }
    var value = parameters[i];
    this.stateObject.parameters[i] = value;
   }
   this.execContentChangingCallback(pageIndex, 'submitParameters');
  }
 });
 ASPxClientReportViewer.__useMobileSpecificExport = ASPx.Browser.MacOSMobilePlatform || ASPx.Browser.AndroidMobilePlatform;
 function getValueWithPxUnit(value) {
  return value.toString() + 'px';
 }
 function getValueWithPxUnitEx(value) {
  var str = value.toString();
  return (str.length < 3 || str.substr(str.length - 2) != 'px') ? getValueWithPxUnit(value) : str;
 }
 function getValueWithoutPxUnit(value) {
  if(value === '') {
   return 0;
  }
  var str = value.toString();
  if(str.length >= 3 && str.substr(str.length - 2) === 'px') {
   str = str.substr(0, str.length - 2);
  }
  return parseInt(str, 10);
 }
 function rvsdLoaded(reportViewerID, popupControlID, textEditID, buttonFindID, checkWordID, checkCaseID, radioUpID, radioDownID) {
  var controlCollection = ASPx.GetControlCollection();
  var popupControl = controlCollection.Get(popupControlID);
  popupControl.reportViewer = controlCollection.Get(reportViewerID);
  popupControl.buttonFind = controlCollection.Get(buttonFindID);
  popupControl.textEdit = controlCollection.Get(textEditID);
  popupControl.checkWord = controlCollection.Get(checkWordID);
  popupControl.checkCase = controlCollection.Get(checkCaseID);
  popupControl.radioUp = controlCollection.Get(radioUpID);
  popupControl.radioDown = controlCollection.Get(radioDownID);
  var textEdit = popupControl.textEdit;
  var inputElement = textEdit.GetInputElement();
  inputElement.onpropertychange = function() {
   if(popupControl.buttonFind)
    popupControl.buttonFind.SetEnabled(inputElement.value != "" && ASPx.Browser.IE);
  };
  if(popupControl.reportViewer) {
   popupControl.reportViewer.searchPopupControl = popupControl;
   if(ASPx.Browser.MacOSMobilePlatform && popupControl.reportViewer.searchPopupControl && popupControl.reportViewer.searchPopupControl.Closing) {
    popupControl.reportViewer.searchPopupControl.Closing.AddHandler(function() {
     try {
      if(this.textRange)
       this.textRange.empty();
     } catch(e) { }
    }, popupControl.reportViewer);
   }
  }
  popupControl.ShowAndFocus = function() {
   this.Show();
   this.buttonFind.Focus();
   this.textEdit.SelectAll();
  };
  popupControl.ShowAndFocus();
 }
 function rvsdFind(popupControlID) {
  var popupControl = ASPx.GetControlCollection().Get(popupControlID);
  if(popupControl) {
   var params = {
    "txt": popupControl.textEdit.GetText(),
    "case": popupControl.checkCase.GetChecked(),
    "word": popupControl.checkWord.GetChecked(),
    "up": popupControl.radioUp.GetChecked()
   };
   popupControl.reportViewer.findTextCore(params);
  }
 }
 function rvsdClose(popupControlID) {
  var popupControl = ASPx.GetControlCollection().Get(popupControlID);
  if(popupControl)
   popupControl.Hide();
 }
 function rvGotoBM(name, pageIndex, bookmarkIndices) {
  var reportViewer = ASPx.GetControlCollection().Get(name);
  if(reportViewer) {
   reportViewer.GotoBookmark(pageIndex, bookmarkIndices);
  }
 }
 function dx_ParamFormatter() {
  this.params = [];
  this.addParam = function(name, val) {
   this.params[name] = val;
  }
  this.getValue = function() {
   var val = "";
   for(var i in this.params)
    val += this.format(i, this.params[i]);
   return val;
  }
  this.format = function(name, val) {
   if(!ASPx.IsExists(val)) {
    return name + ":;";
   }
   var value = val.toString().replace(/&/g, "&a")
    .replace(/:/g, "&c")
    .replace(/;/g, "&s");
   return name + ":" + value + ";";
  }
  this.parse = function(s) {
   var ss = s.split(";");
   for(var i = 0; i < ss.length; i++) {
    var sss = ss[i].split(":");
    if(sss.length === 2) {
     var sss1 = sss[1].replace(/&c/g, ":")
      .replace(/&s/g, ";")
      .replace(/&a/g, "&");
     this.addParam(sss[0], sss[1]);
    }
   }
  }
 }
 function dx_BookmarkHighlighter(contentElement, ownerName) {
  this.contentElement = contentElement;
  this.bookmarkElement = null;
  this.selectionTemplate = ASPx.GetElementById(ownerName + "_Bookmark");
  this.Highlight = function(pageIndex, bookmarkPath) {
   if(ASPx.IsExists(this.bookmarkElement)) {
    try {
     this.contentElement.removeChild(this.bookmarkElement)
    } catch(e) { }
    this.bookmarkElement = null;
   }
   bookmarkPath = pageIndex.toString() + "_" + bookmarkPath;
   var bookmarkElements = this.getBookmarkElements(ASPx.GetNodesByTagName(this.contentElement, "A"), bookmarkPath);
   if(bookmarkElements.length === 0)
    return;
   var bounds = this.getBookmarkBounds(bookmarkElements);
   this.bookmarkElement = this.addBookmarkElement(bounds);
  }
  this.Reset = function() {
   this.bookmarkElement = null;
  }
  this.getBorderWidth = function() {
   return parseInt(this.selectionTemplate.style.borderWidth, 10);
  }
  this.getBookmarkElements = function(elements, name) {
   var bookmarkElements = [];
   for(var i = 0; i < elements.length; i++) {
    if(elements[i].name === name)
     bookmarkElements.push(elements[i].parentNode);
   }
   return bookmarkElements;
  }
  this.getBookmarkBounds = function(bookmarkElements) {
   var x = this.getLeft(bookmarkElements[0]);
   var y = this.getTop(bookmarkElements[0]);
   var right = this.getRight(bookmarkElements[0]);
   var bottom = this.getBottom(bookmarkElements[0]);
   for(var i = 1; i < bookmarkElements.length; i++) {
    x = Math.min(x, this.getLeft(bookmarkElements[i]));
    y = Math.min(y, this.getTop(bookmarkElements[i]));
    right = Math.max(right, this.getRight(bookmarkElements[i]));
    bottom = Math.max(bottom, this.getBottom(bookmarkElements[i]));
   }
   var width = right - x - 2 * this.getBorderWidth();
   var height = bottom - y - 2 * this.getBorderWidth();
   return { 'left': x, 'top': y, 'width': width, 'height': height };
  }
  this.getLeft = function(el) {
   return ASPx.GetAbsoluteX(el) - ASPx.GetAbsoluteX(this.contentElement);
  };
  this.getTop = function(el) {
   return ASPx.GetAbsoluteY(el) - ASPx.GetAbsoluteY(this.contentElement);
  };
  this.getWidth = function(el) {
   return el.offsetWidth;
  };
  this.getHeight = function(el) {
   return el.offsetHeight;
  };
  this.getRight = function(el) {
   return this.getLeft(el) + this.getWidth(el);
  };
  this.getBottom = function(el) {
   return this.getTop(el) + this.getHeight(el);
  };
  this.addBookmarkElement = function(bounds) {
   var newEl = this.cloneElement(this.selectionTemplate, this.contentElement);
   newEl.style.display = 'block';
   newEl.style.backgroundColor = '';
   this.contentElement.appendChild(newEl);
   bounds.left -= this.getLeft(newEl);
   bounds.top -= this.getTop(newEl);
   newEl.style.width = getValueWithPxUnit(bounds.width);
   newEl.style.height = getValueWithPxUnit(bounds.height);
   newEl.style.position = 'relative';
   newEl.style.left = getValueWithPxUnit(bounds.left);
   newEl.style.top = getValueWithPxUnit(bounds.top);
   if(ASPx.Browser.Opera) {
    this.contentElement.appendChild(newEl);
   }
   return newEl;
  }
  this.cloneElement = function(element, elementFromTargetDocument) {
   return element.cloneNode(false);
  }
 }
 var dx_FormHelper = ASPx.CreateClass(null, {
  constructor: function() {
   this.targetFieldName = '__EVENTTARGET';
   this.argumentFieldName = '__EVENTARGUMENT';
  },
  sendPostbackInWindow: function(win, eventTarget, eventArgument) {
   this.eventTarget = eventTarget;
   this.eventArgument = eventArgument;
   var theForm = this.getTheForm();
   var formAttributes = { name: theForm.name, method: theForm.method, action: this.getCorectedAction(theForm.action), id: theForm.id };
   this.inputValues = {};
   this.inputUniqueIdCounter = 1;
   var content = "<html><body><div style='overflow:hidden;width:0px;height:0px'>"
    + this.buildTag("form", formAttributes, this.getInputsAndInitInputValues() + "<input type='submit' value='submit'/>")
    + '</div></body></html>';
   this.submitForm(win, content);
  },
  submitForm: function(win, content) {
   var submitFormCore = function() {
    this.writeContent(win, content);
    this.applyInputValues(win);
    var theForm = this.getTheForm();
    var form = win.document.getElementById(theForm.id);
    if(ASPx.Browser.Chrome && !ASPx.IsExists(form.submit)) { 
     var fakeInput = win.document.createElement("input");
     fakeInput.setAttribute("type", "submit");
     win.document.forms[0].appendChild(fakeInput);
     fakeInput.click();
    } else
     form.submit();
   }.aspxBind(this);
   if(typeof (win.document) === 'object') {
    submitFormCore();
    return;
   }
   var frameElement = win.frameElement;
   if(frameElement) {
    ASPx.Evt.AttachEventToElement(frameElement, "readystatechange", function submitFormCoreEventHandler() {
     if(frameElement.readyState === "complete") {
      ASPx.Evt.DetachEventFromElement(frameElement, "readystatechange", submitFormCoreEventHandler);
      submitFormCore();
     }
    });
    win.location = "about:blank";
   }
  },
  getCorectedAction: function(action) {
   var formAction = action;
   if(ASPx.Browser.Chrome || ASPx.Browser.Safari) {
    if(formAction.indexOf('?') < 0)
     formAction = formAction + "?dxrep_fake=";
    else
     formAction = formAction.replace('?', "?dxrep_fake=&");
   }
   return formAction;
  },
  writeContent: function(win, content) {
   var doc = win.document;
   doc.open("text/html", "replace");
   doc.write(content);
   doc.close();
  },
  applyInputValues: function(win) {
   for(var inputId in this.inputValues) {
    try {
     win.document.getElementById(inputId).value = this.inputValues[inputId];
    } catch(e) {
    }
   }
  },
  getInputsAndInitInputValues: function() {
   var formElements = this.getTheForm().elements;
   var count = formElements.length;
   var result = '';
   for(var i = 0; i < count; i++) {
    var element = formElements[i];
    var tagName = element.tagName.toLowerCase();
    if(tagName === 'input') {
     var type = element.type;
     if((type === 'checkbox' || type === 'radio') && element.checked)
      result += this.buildInput(element.type, this.getElementName(element.name), this.getElementName(element.id), this.getElementValue(element), element.checked);
     else if(type === 'text' || type === 'hidden' || type === 'password')
      result += this.buildInput(element.type, this.getElementName(element.name), this.getElementName(element.id), this.getElementValue(element));
    }
    else if(tagName === 'select') {
     var selectCount = element.options.length;
     for(var j = 0; j < selectCount; j++) {
      var selectChild = element.options[j];
      if(selectChild.selected === true) {
       result += this.buildInput('hidden', this.getElementName(element.name), this.getElementName(element.id), selectChild.value);
      }
     }
    }
    else if(tagName === 'textarea') {
     result += this.buildTextArea(this.getElementName(element.name), this.getElementName(element.id), element.value);
    }
   }
   return result;
  },
  getTheForm: function() {
   return theForm;
  },
  getElementName: function(name) {
   return name;
  },
  getElementValue: function(element) {
   if(element.id === this.targetFieldName)
    return this.eventTarget;
   if(element.id === this.argumentFieldName)
    return this.eventArgument;
   return element.value;
  },
  saveValue: function(id, value) {
   if(id === '' || this.inputValues[id] !== undefined)
    id = 'dx_fh_uniqueId' + this.inputUniqueIdCounter++;
   this.inputValues[id] = value;
   return id;
  },
  buildInput: function(type, name, id, value, checked) {
   id = this.saveValue(id, value);
   var params = { type: type, name: name, id: id };
   if(checked)
    params.checked = checked;
   return this.buildTag("input", params);
  },
  buildTextArea: function(name, id, value) {
   id = this.saveValue(id, value);
   return this.buildTag("textarea", { name: name, id: id }, '');
  },
  buildTag: function(tag, attributes, content) {
   var result = '<' + tag + ' ';
   for(var attrName in attributes)
    result += attrName + '="' + attributes[attrName].toString().replace(/"/g, '&quot;') + '" ';
   result += content != null
    ? '>' + content + '</' + tag + '>\n'
    : '/>\n';
   return result;
  }
 });
 var dx_FormHelperMobile = ASPx.CreateClass(dx_FormHelper, {
  constructor: function(owner) {
   this.owner = owner;
   this.constructor.prototype.constructor.call(this);
  },
  sendPostbackInWindow: function(win, eventTarget, eventArgument) {
   this.owner.SendPostBack(eventArgument);
  }
 });
 function xr_NavigateUrlForIE(url, target) {
  if(url == null)
   return;
  var a = document.createElement("a");
  a.setAttribute('href', url);
  if(target != null)
   a.setAttribute('target', target);
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
 }
 function xr_NavigateUrl(url, target) {
  if(ASPx.Browser.IE)
   xr_NavigateUrlForIE(url, target);
  else
   ASPx.Url.Navigate(url, target);
 }
 function xr_NavigateDrillDown(viewerName, drillDownKey) {
  var viewer = ASPx.GetControlCollection().Get(viewerName);
  if(viewer) {
   viewer.navigateDrillDown(drillDownKey);
  }
 }
 ASPxClientReportViewer.Cast = ASPxClientControl.Cast;
 ASPxClientReportViewer.prototype.Print = function(pageIndex) {
  if(pageIndex == null)
   pageIndex = "";
  if(this.printUsingAdobePlugIn)
   this.execPrintPdf(pageIndex);
  else
   this.execCallbackPrint(pageIndex);
 };
 ASPxClientReportViewer.prototype.GotoPage = function(pageIndex) {
  pageIndex = Math.max(0, Math.min(pageIndex, this.pageCount - 1));
  if(pageIndex !== this.getCurrentPageIndex()) {
   this.gotoPageInternal(pageIndex);
  }
 };
 ASPxClientReportViewer.prototype.Refresh = function() {
  this.gotoPageInternal(0);
  this.refreshRising.FireEvent(this);
 };
 ASPxClientReportViewer.prototype.Search = function() {
  if(this.IsSearchAllowed())
   this.showSearchWindow();
 };
 ASPxClientReportViewer.prototype.SaveToWindow = function(format) {
  this.exportWindow = window.open('', '_blank', 'toolbars=no, resizable=yes, scrollbars=yes');
  this.execExport("saveToWindow", { format: format }, this.exportWindow);
 };
 ASPxClientReportViewer.prototype.SaveToDisk = function(format) {
  this.execExport("saveToDisk", { format: format });
 };
 ASPxClientReportViewer.prototype.IsSearchAllowed = function() {
  if(!(this.pageCount > 0) || !this.pageByPage) {
   return false;
  }
  try {
   if(ASPx.Browser.IE) {
    var body = document.body;
    return body.createTextRange && body.createTextRange();
   } else {
    return window.find;
   }
  } catch(e) {
   return false;
  }
 };
 var ASPxClientReportViewerPageLoadEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function(pageIndex, pageCount) {
   this.constructor.prototype.constructor.call(this);
   this.PageIndex = pageIndex;
   this.PageCount = pageCount;
  },
  IsFirstPage: function() {
   return this.PageIndex === 0;
  },
  IsLastPage: function() {
   return this.PageIndex === this.PageCount - 1;
  }
 });
 window.ASPxClientReportViewer = ASPxClientReportViewer;
 window.ASPxClientReportViewerPageLoadEventArgs = ASPxClientReportViewerPageLoadEventArgs;
 ASPx.RVSDLoaded = rvsdLoaded;
 ASPx.RVSDFind = rvsdFind;
 ASPx.RVSDClose = rvsdClose;
 ASPx.RVGotoBM = rvGotoBM;
 ASPx.dx_FormHelper = dx_FormHelper;
 ASPx.dx_FormHelperMobile = dx_FormHelperMobile;
 ASPx.xr_NavigateUrl = xr_NavigateUrl;
 ASPx.xr_NavigateDrillDown = xr_NavigateDrillDown;
})(window);
(function(window) {
 var ASPxClientReportDocumentMap = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.ContentChanged = new ASPxClientEvent();
  },
  InlineInitialize: function() {
   ASPxClientControl.prototype.InlineInitialize.call(this);
   var callbackPanel = ASPxClientReportDocumentMap.findValidControl(this.callbackPanelId);
   if(callbackPanel) {
    this.callbackPanel = callbackPanel;
    var self = this;
    callbackPanel.EndCallback.AddHandler(function() { self.updateContent(); });
    this.updateTreeViewInstance();
   }
  },
  Initialize: function() {
   this.constructor.prototype.Initialize.call(this);
   if(this.reportViewerId) {
    this.reportViewer = ASPx.GetControlCollection().Get(this.reportViewerId);
    if(this.reportViewer) {
     this.subscribeReportViewerEvents();
    }
   }
  },
  isValid: function() {
   return this.callbackPanel && ASPx.IsExistsElement(this.callbackPanel.GetMainElement());
  },
  hasTreeView: function() {
   return ASPx.IsExists(this.treeView);
  },
  subscribeReportViewerEvents: function() {
   var self = this;
   this.reportViewer.submitParametersComplete.AddHandler(function(s) { self.submitParametersComplete(s); });
   this.reportViewer.refreshRising.AddHandler(function(s) { self.submitParametersComplete(s); });
  },
  updateTreeViewInstance: function() {
   var treeView = ASPxClientReportDocumentMap.findValidControl(this.callbackPanel.name + '_TreeView');
   if(!treeView) {
    return;
   }
   this.treeView = treeView;
   var treeViewInit = function treeVewInit() {
    treeView.Init.RemoveHandler(treeViewInit);
    var rootNode = treeView.GetNode(0);
    if(rootNode) {
     rootNode.SetExpanded(false); 
     rootNode.SetExpanded(true);
    }
   };
   treeView.Init.AddHandler(treeViewInit);
  },
  updateContent: function() {
   this.updateTreeViewInstance();
   this.ContentChanged.FireEvent(this, new ASPxClientEventArgs());
  },
  submitParametersComplete: function() {
   this.callbackPanel.PerformCallback();
  }
 });
 ASPxClientReportDocumentMap.findValidControl = function(name) {
  var control = ASPx.GetControlCollection().Get(name);
  return control && ASPx.IsExistsElement(control.GetMainElement())
   ? control
   : null;
 };
 window.ASPxClientReportDocumentMap = ASPxClientReportDocumentMap;
})(window);
(function(window) {
 var ASPxClientDocumentViewer = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.ToolbarItemValueChanged = new ASPxClientEvent();
   this.ToolbarItemClick = new ASPxClientEvent();
   this.PageLoad = new ASPxClientEvent();
   this.forceDocumentMapCollapsed = false;
   this.ignoreItems = {};
   this.enabledItems = [];
   this.exportToPrefix = 'dxxrdvExportTo';
   this.searchItemName = 'dxxrdvBtnSearch';
   this.saveToDiskItemName = 'dxxrdvBtnSave';
   this.saveToWindowItemName = 'dxxrdvBtnSaveWindow';
   this.parametersPanelToggleCommandName = 'dxxrdvBtnParameters';
   this.documentMapToggleCommandName = 'dxxrdvBtnDocumentMap';
  },
  InlineInitialize: function() {
   ASPxClientControl.prototype.InlineInitialize.call(this);
   var controlCollection = ASPx.GetControlCollection();
   this.splitter = controlCollection.Get(this.name + '_Splitter');
   var splitterName = this.splitter.name;
   this.sideCenterPane = this.splitter.GetPaneByName('SideCenterPane');
   this.parametersPanelPane = this.splitter.GetPaneByName('ParametersPanelPane');
   this.documentMapPane = this.splitter.GetPaneByName('DocumentMapPane');
   this.viewerPane = this.splitter.GetPaneByName('ViewerPane');
   this.toolbarPane = this.splitter.GetPaneByName('ToolbarPane');
   this.viewer = controlCollection.Get(splitterName + '_Viewer');
   var toolbar = controlCollection.Get(splitterName + '_Toolbar');
   if(toolbar && toolbar.isValid()) {
    this.toolbar = toolbar;
   }
   this.parametersPanel = ASPxClientDocumentViewer.findValidControl(splitterName + '_ParametersPanel');
   if(this.externalRibbonID) {
    this.ribbonToolbar = ASPxClientDocumentViewer.findValidControl(this.externalRibbonID);
   } else {
    this.ribbonToolbar = ASPxClientDocumentViewer.findValidControl(splitterName + '_RibbonToolbar');
   }
   this.initializeToogleButtons();
   this.subscribeSplitterCollapsing();
  },
  Initialize: function() {
   ASPxClientControl.prototype.Initialize.call(this);
   var self = this;
   if(this.viewer) {
    this.viewer.createCallbackCoreEvent.AddHandler(function(s, e) { self.executeCallback(e.callbackString); });
    this.viewer.PageLoad.AddHandler(function(s, e) { self.PageLoad.FireEvent(self, e); });
    this.lastSaveFormat = this.viewer.DefaultSaveFormat;
   }
   if(this.parametersPanel) {
    this.parametersPanel.cascadeLookupValuesRequest.AddHandler(function(_, e) { self.execCascadeLookupCallback(e); });
   }
   if(this.ribbonToolbar) {
    this.ribbonToolbar.CommandExecuted.AddHandler(function(s, a) { self.handleButton(a.item, a.parameter); });
    this.viewer.PageLoad.AddHandler(function(s, a) { self.pageLoadRibbonEventHandler(s, a); });
    this.viewer.BeginCallback.AddHandler(function() { self.beginCallbackRibbonEventHanler(); });
    this.viewer.EndCallback.AddHandler(function() { self.endCallbackRibbonEventHanler(); });
    this.prepareRibbonItems();
   }
   this.assignDocumentMap();
   if(this.documentMapPane && this.documentMapPane.autoHeight) {
    this.splitter.PaneResized.AddHandler(function(s, e) {
     if(e.pane === self.documentMapPane) {
      self.correctDocumentMapHeight();
     }
    });
   }
   if(!this.parametersPanel && this.documentMap) {
    this.stretchDocumentMap();
   }
  },
  GetSplitter: function() {
   return this.splitter;
  },
  GetViewer: function() {
   return this.viewer;
  },
  GetToolbar: function() {
   return this.toolbar;
  },
  GetRibbonToolbar: function() {
   return this.ribbonToolbar;
  },
  GetParametersPanel: function() {
   return this.parametersPanel;
  },
  GetDocumentMap: function() {
   return this.documentMap;
  },
  GotoBookmark: function(pageIndex, bookmarkPath) {
   return this.viewer.GotoBookmark(pageIndex, bookmarkPath);
  },
  Refresh: function() {
   return this.viewer.Refresh();
  },
  AdjustControlCore: function () {
   if(this.splitter) {
    this.splitter.AdjustControlCore();
    this.splitter.UpdateAdjustedSizes();
   }
  },
  Print: function(pageIndex) {
   this.viewer.Print(pageIndex);
  },
  GotoPage: function(pageIndex) {
   this.viewer.GotoPage(pageIndex);
  },
  Search: function() {
   this.viewer.Search();
  },
  IsSearchAllowed: function() {
   return this.viewer.IsSearchAllowed();
  },
  SaveToWindow: function(format) {
   this.viewer.SaveToWindow(format);
  },
  SaveToDisk: function(format) {
   this.viewer.SaveToDisk(format);
  },
  SetWidth: function(width) {
   this.splitter.SetWidth(width);
  },
  SetHeight: function(height) {
   this.splitter.SetHeight(height);
  },
  SetVisible: function(value) {
   this.splitter.SetVisible(value);
  },
  GetMainElement: function() {
   return this.splitter
    ? this.splitter.GetMainElement()
    : ASPxClientControl.prototype.GetMainElement.call(this);
  },
  initializeToogleButtons: function() {
   if(this.ribbonToolbar) {
    this.parametersPanelToggle = this.ribbonToolbar.GetItemByName(this.parametersPanelToggleCommandName);
    this.documentMapToggle = this.ribbonToolbar.GetItemByName(this.documentMapToggleCommandName);
    this.setToggleValues(this.parametersPanelToggle, (this.parametersPanelPane && !this.parametersPanelPane.IsCollapsed()) != null);
    this.setToggleValues(this.documentMapToggle, null, false);
    if(!this.sideCenterPane) {
     this.setToggleValues(this.documentMapToggle, false, false);
     this.setToggleValues(this.parametersPanelToggle, false, false);
    } else if(!this.documentMapPane) {
     this.setToggleValues(this.documentMapToggle, false, false);
    } else if(!this.parametersPanelPane) {
     this.setToggleValues(this.parametersPanelToggle, false, false);
    }
   }
  },
  assignDocumentMap: function() {
   var documentMap = ASPx.GetControlCollection().Get(this.splitter.name + '_DocumentMap');
   if(documentMap && documentMap.isValid()) {
    this.documentMap = documentMap;
   }
   this.refreshDocumentMapPaneLayout();
  },
  execCascadeLookupCallback: function(pathsWithCallbackArguments) {
   var json = ASPx.Json.ToJson(pathsWithCallbackArguments);
   var encodedJson = encodeURIComponent(json);
   var callbackString = 'cascadeLookups=' + json;
   this.executeCallback(callbackString);
  },
  getCommandName: function(callbackString) {
   var parts = callbackString.split('=');
   return parts.length > 0
    ? parts[0]
    : null;
  },
  executeCallback: function(callbackString) {
   var command = this.getCommandName(callbackString);
   if(command === 'submitParameters') {
    this.clearRemoteDocumentInformation();
    if(this.documentMap) {
     this.documentMap.onBeginCallback();
    }
   }
   this.CreateCallback(callbackString);
  },
  clearRemoteDocumentInformation: function() {
   var value = this.viewer.stateObject.remote;
   if(value) {
    value = value.split(';', 1);
   }
   this.viewer.stateObject.remote = value;
  },
  OnCallback: function(result) {
   if (result.viewer) {
    this.viewer.DoBeginCallback();
    this.viewer.OnCallback(result.viewer);
    this.viewer.DoEndCallback();
   }
   this.documentMapExisted = this.documentMap && this.documentMap.hasTreeView();
   if(result.documentMap && this.documentMap) {
    this.documentMap.onEndCallback();
    this.documentMapPane.helper.GetContentContainerElement().innerHTML = result.documentMap;
    var controlCollection = ASPx.GetControlCollection();
    var documentMapInitialized;
    documentMapInitialized = function() {
     controlCollection.ControlsInitialized.RemoveHandler(documentMapInitialized);
     this.assignDocumentMap();
    }.aspxBind(this);
    controlCollection.ControlsInitialized.AddHandler(documentMapInitialized);
   }
   if(result.cascadeLookups && this.parametersPanel) {
    this.parametersPanel.onCascadeLookupsCallbackCore(result.cascadeLookups);
   }
  },
  correctDocumentMapHeight: function() {
   var documentMapPaneElement = this.documentMapPane.GetElement();
   var div = documentMapPaneElement.childNodes[0];
   if(!ASPx.IsExists(div)) {
    return;
   }
   ASPx.SetElementDisplay(div, false);
   var offsetHeight = documentMapPaneElement.offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(div) - this.documentMapPane.heightDiff;
   ASPx.SetStyles(div, {
    display: "",
    height: offsetHeight
   });
  },
  stretchDocumentMap: function() {
   var paneElement = this.documentMapPane.GetElement();
   var child = paneElement.childNodes[0];
   child.style.overflowX = "auto";
  },
  refreshDocumentMapPaneLayout: function() {
   if(this.documentMap && this.documentMap.hasTreeView()) {
    this.setToggleValues(this.documentMapToggle, null, true);
   }
   var hideDocumentMap = false;
   if(!this.documentMap || !this.documentMap.hasTreeView()) {
    hideDocumentMap = true;
   } else if(this.forceDocumentMapCollapsed) {
    hideDocumentMap = true;
    this.forceDocumentMapCollapsed = null;
   } else if(!this.documentMapExisted) {
    if(this.sideCenterPane && this.sideCenterPane.IsCollapsed()) {
     this.sideCenterPane.Expand();
    }
    if(this.documentMapPane) {
     this.documentMapPane.Expand();
    }
   }
   if(hideDocumentMap) {
    this.ensurePaneCollapsing(this.documentMapPane);
    if(!this.parametersPanelPane || this.parametersPanelPane.IsCollapsed())
     this.ensurePaneCollapsing(this.sideCenterPane);
   }
   var documentMapToggleValue = this.sideCenterPane && !this.sideCenterPane.IsCollapsed() && this.documentMapPane && !this.documentMapPane.IsCollapsed();
   this.setToggleValues(this.documentMapToggle, documentMapToggleValue != null);
   this.updateDocumentMapPaneVisible();
  },
  updateDocumentMapPaneVisible: function() {
   var hideDocumentMap = !this.documentMap || !this.documentMap.hasTreeView();
   var hideSidePane = !this.parametersPanel && hideDocumentMap;
   var separatorElement = this.viewerPane.helper.GetSeparatorElement() || (this.sideCenterPane && this.sideCenterPane.helper.GetSeparatorElement());
   var someCollapsedPaneElement = this.sideCenterPane && this.sideCenterPane.GetElement();
   var documentViewerSeparatorDivElement = this.documentMapPane && this.documentMapPane.helper.GetSeparatorDivElement();
   var documentMapStyleDisplay = hideDocumentMap ? "none" : "";
   var sidePaneStyleDisplay = hideSidePane ? "none" : "";
   if(separatorElement)
    separatorElement.style.display = sidePaneStyleDisplay;
   if(someCollapsedPaneElement)
    someCollapsedPaneElement.style.display = sidePaneStyleDisplay;
   if(documentViewerSeparatorDivElement)
    documentViewerSeparatorDivElement.style.display = documentMapStyleDisplay;
   if(!hideDocumentMap && !hideSidePane)
    this.correctDocumentMapHeight();
  },
  pageLoadRibbonEventHandler: function(s, a) {
   this.pageIndex = a.PageIndex;
   this.pageCount = a.PageCount;
   for(var i = 0; i < this.enabledItems.length; i++)
    this.enabledItems[i].SetEnabled(true);
   this.updatePageIndexes();
   this.updateElements();
  },
  updatePageIndexes: function() {
   if(!this.ribbonToolbar) {
    return;
   }
   var pageCountLabelText = '';
   if(this.pageCountLabelElement) {
    pageCountLabelText = this.pageCountText + ' ' + this.pageCount;
    if(ASPx.Browser.Firefox) {
     this.pageCountLabelElement.textContent = pageCountLabelText;
    } else {
     this.pageCountLabelElement.innerText = pageCountLabelText;
    }
   }
   if(!this.pageNumberEditor)
    return;
   if(this.pageNumberEditor.GetItemCount() == this.pageCount) {
    this.updatePageIndexes_selectPageIndex(this.pageNumberEditor);
    return;
   }
   this.pageNumberEditor.BeginUpdate();
   this.pageNumberEditor.ClearItems();
   this.runLoopInPortionsAsync(
    { to: this.pageCount },
    function(i) {
     var text = (i + 1).toString();
     this.pageNumberEditor.AddItem(text, text);
     if(i === this.pageIndex) {
      this.updatePageIndexes_selectPageIndex(this.pageNumberEditor);
     }
    }.aspxBind(this),
    function() { this.pageNumberEditor.EndUpdate(); }.aspxBind(this));
  },
  runLoopInPortionsAsync: function runLoopInPortionsAsync(args, actionCallback, completeCallback) {
   var from = args.from || 0;
   var step = args.step || 100;
   if(from > args.to) {
    throw new Error("Argument 'args.from' can not be greater than 'args.to'.");
   }
   if(step <= 0) {
    throw new Error("Argument 'args.step' can not be less than or equal to zero.");
   }
   var nextBound = from + step;
   if(nextBound > args.to) {
    nextBound = args.to;
   }
   var current;
   for(current = from; current < nextBound; current++) {
    actionCallback(current);
   }
   if(current < args.to) {
    var newArgs = { from: current, to: args.to, step: args.step, timeout: args.timeout };
    var timeout = args.timeout || 50;
    setTimeout(function() { runLoopInPortionsAsync(newArgs, actionCallback, completeCallback); }, timeout);
   } else {
    completeCallback();
   }
  },
  updatePageIndexes_selectPageIndex: function(cbx) {
   cbx.SetSelectedIndex(this.pageIndex);
   if(ASPx.Browser.WebKitFamily)
    cbx.GetInputElement().value = (this.pageIndex + 1).toString();
  },
  beginCallbackRibbonEventHanler: function() {
   this.disableRibbonItems();
  },
  endCallbackRibbonEventHanler: function() {
   for(var i = 0; i < this.enabledItems.length; i++)
    this.enabledItems[i].SetEnabled(true);
   this.updateElements();
  },
  prepareRibbonItems: function() {
   var i;
   var currentChild;
   var pageInfoTemplate = this.ribbonToolbar.GetItemByName("dxxrdvPageNumbers");
   var pageNumberElementId;
   if(pageInfoTemplate && pageInfoTemplate.element.children) {
    if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 10) {
     for(i = 0; i < pageInfoTemplate.element.children.length; i++) {
      currentChild = pageInfoTemplate.element.children[i];
      if(!currentChild || !currentChild.className)
       continue;
      if(currentChild.className.indexOf("dxxrdvrPageNumberComboBox") >= 0)
       pageNumberElementId = currentChild.id;
      if(currentChild.className.indexOf("dxxrdvrPageCountLabel") >= 0)
       this.pageCountLabelElement = currentChild;
     }
    } else {
     for(i = 0; i < pageInfoTemplate.element.childElementCount; i++) {
      currentChild = pageInfoTemplate.element.children[i];
      if(!currentChild || !currentChild.classList || !currentChild.classList.length)
       continue;
      for(var j = 0; j < currentChild.classList.length; j++) {
       if(currentChild.classList[j] === "dxxrdvrPageNumberComboBox")
        pageNumberElementId = currentChild.id;
       if(currentChild.classList[j] === "dxxrdvrPageCountLabel")
        this.pageCountLabelElement = currentChild;
      }
     }
    }
   }
   this.pageNumberEditor = ASPx.GetControlCollection().Get(pageNumberElementId);
   if(this.pageNumberEditor) {
    this.pageNumberEditor.ValueChanged.AddHandler(function(s) {
     if(pageInfoTemplate && s && s.GetValue)
      this.ribbonToolbar.onExecCommand(pageInfoTemplate, s.GetValue());
    }.aspxBind(this));
   }
   this.fillIgnoredItems();
   this.disableRibbonItems();
  },
  updateElements: function() {
   var pagesExist = this.pageCount > 0;
   var val = this.pageIndex > 0 && pagesExist;
   this.setRibbonItemEnabled("dxxrdvBtnFirstPage", val);
   this.setRibbonItemEnabled("dxxrdvBtnPrevPage", val);
   val = pagesExist > 0 && this.pageIndex < this.pageCount - 1;
   this.setRibbonItemEnabled("dxxrdvBtnNextPage", val);
   this.setRibbonItemEnabled("dxxrdvBtnLastPage", val);
   this.setRibbonItemEnabled(this.searchItemName, this.viewer.IsSearchAllowed());
   val = pagesExist || !this.viewer.pageByPage && !this.viewer.isContentEmpty();
   this.setRibbonItemEnabled("dxxrdvBtnPrint", val);
   this.setRibbonItemEnabled("dxxrdvBtnPrintPage", val);
   this.setRibbonItemEnabled("dxxrdvBtnSave", val);
   this.setRibbonItemEnabled("dxxrdvBtnSaveWindow", val);
   this.setRibbonItemEnabled("dxxrdvPageNumbers", pagesExist);
  },
  setToggleValues: function(toggle, value, enabled) {
   if(!toggle)
    return;
   if(value != null)
    toggle.SetValue(value);
   if(enabled != null)
    toggle.SetEnabled(enabled);
  },
  setRibbonItemEnabled: function(name, enabled) {
   if(this.ignoreItems[name])
    return;
   var item = this.ribbonToolbar.GetItemByName(name);
   if(item)
    item.SetEnabled(enabled);
  },
  disableRibbonItems: function() {
   if(!this.enabledItems)
    this.enabledItems = [];
   else if(this.enabledItems.length > 0)
    return;
   var tabCount = this.ribbonToolbar.GetTabCount();
   for(var tabIndex = 0; tabIndex < tabCount; tabIndex++) {
    var currentRibbonTab = this.ribbonToolbar.GetTab(tabIndex);
    if(!currentRibbonTab)
     continue;
    for(var i = 0; i < currentRibbonTab.groups.length; i++) {
     var currentGroup = currentRibbonTab.groups[i];
     if(!currentGroup.items)
      continue;
     for(var j = 0; j < currentGroup.items.length; j++) {
      var itemElement = currentGroup.items[j];
      if(itemElement.GetEnabled() && itemElement.name.substring(0, 6) === "dxxrdv"
       && !(itemElement.name === this.parametersPanelToggleCommandName || itemElement.name === this.documentMapToggleCommandName)) {
       this.enabledItems[this.enabledItems.length] = itemElement;
       itemElement.SetEnabled(false);
      }
     }
    }
   }
  },
  fillIgnoredItems: function() {
   var tabCount = this.ribbonToolbar.GetTabCount();
   for(var tabIndex = 0; tabIndex < tabCount; tabIndex++) {
    var currentRibbonTab = this.ribbonToolbar.GetTab(tabIndex);
    if(!currentRibbonTab)
     continue;
    for(var i = 0; i < currentRibbonTab.groups.length; i++) {
     var currentGroup = currentRibbonTab.groups[i];
     if(!currentGroup.items)
      continue;
     for(var j = 0; j < currentGroup.items.length; j++) {
      var itemElement = currentGroup.items[j];
      if(!itemElement.GetEnabled() && itemElement.name.substring(0, 6) === "dxxrdv") {
       this.ignoreItems[itemElement.name] = itemElement;
      }
     }
    }
   }
  },
  fireToolbarItemValueChanged: function(sender, eventArgs) {
   var item = this.toolbar.getItemByEditor(sender);
   this.ToolbarItemValueChanged.FireEvent(this, new ASPxClientToolbarItemValueChangedEventArgs(eventArgs.processOnServer, item, sender));
  },
  fireToolbarItemClick: function(sender, eventArgs) {
   this.ToolbarItemClick.FireEvent(this, eventArgs);
  },
  handleButton: function(item, parameter) {
   var btnId = item.name;
   if(!ASPx.IsExists(this.viewer))
    return;
   if(btnId === this.searchItemName) {
    this.viewer.Search();
    return;
   }
   if(btnId === this.parametersPanelToggleCommandName || btnId === this.documentMapToggleCommandName) {
    this.handleSidePanelControlsToggle(btnId === this.parametersPanelToggleCommandName, parameter);
    return;
   }
   if(btnId === "dxxrdvBtnPrint") {
    this.viewer.Print();
    return;
   }
   if(btnId === "dxxrdvBtnPrintPage") {
    this.viewer.Print(this.pageIndex);
    return;
   }
   if(item.parent) {
    var saveToDisk = item.parent.name === this.saveToDiskItemName;
    var saveToWindow = item.parent.name === this.saveToWindowItemName;
    if (btnId.indexOf("dxxrdv") === 0 && (saveToDisk || saveToWindow)) {
     var format = btnId.indexOf(this.exportToPrefix) === 0 ? btnId.substring(this.exportToPrefix.length) : btnId;
     this.lastSaveFormat = (format === "Img") ? "Png" : format;
     saveToDisk ? this.viewer.SaveToDisk(this.lastSaveFormat) : this.viewer.SaveToWindow(this.lastSaveFormat);
     return;
    }
   }
   if(btnId === this.saveToWindowItemName) {
    this.viewer.SaveToWindow(this.lastSaveFormat);
    return;
   }
   if(btnId === this.saveToDiskItemName) {
    this.viewer.SaveToDisk(this.lastSaveFormat);
    return;
   }
   if(this.pageIndex < 0 || this.pageCount <= 0)
    return;
   var index = this.pageIndex;
   if(btnId === "dxxrdvBtnFirstPage") {
    index = 0;
   } else if(btnId === "dxxrdvBtnPrevPage") {
    index = this.pageIndex - 1;
   } else if(btnId === "dxxrdvBtnNextPage") {
    index = this.pageIndex + 1;
   } else if(btnId === "dxxrdvBtnLastPage") {
    index = this.pageCount - 1;
   } else if(btnId === "dxxrdvPageNumbers") {
    index = parameter - 1;
   }
   this.viewer.GotoPage(index);
  },
  handleSidePanelControlsToggle: function(isParametersPanelToggle, toggleChecked) {
   this.unsubscribeSplitterCollapsing();
   var otherPane = isParametersPanelToggle ? this.documentMapPane : this.parametersPanelPane;
   var currentPane = isParametersPanelToggle ? this.parametersPanelPane : this.documentMapPane;
   if(!currentPane || (!toggleChecked && currentPane.IsCollapsed()))
    return;
   if(toggleChecked) {
    currentPane.Expand();
    if(this.sideCenterPane.IsCollapsed()) {
     this.ensurePaneCollapsing(otherPane);
     this.sideCenterPane.Expand();
    }
   } else if(!this.sideCenterPane.IsCollapsed()) {
    if(!otherPane || otherPane.IsCollapsed()) {
     this.ensurePaneCollapsing(this.sideCenterPane);
    } else {
     if(isParametersPanelToggle && !this.documentMap.hasTreeView()) {
      this.ensurePaneCollapsing(this.sideCenterPane);
      this.ensurePaneCollapsing(otherPane);
     } else
      this.ensurePaneCollapsing(currentPane);
    }
   }
   this.subscribeSplitterCollapsing();
  },
  ensurePaneCollapsing: function(pane) {
   if(pane && !pane.CollapseForward())
    pane.CollapseBackward();
  },
  splitterPaneCollapseStateChanged: function(s, e) {
   var pane = e.pane;
   if(!pane)
    return;
   if(pane.IsCollapsed())
    this.splitterPaneCollapsed(pane);
   else
    this.splitterPaneExpanded(pane);
  },
  splitterPaneCollapsed: function(pane) {
   if(this.sideCenterPane && pane.name === this.sideCenterPane.name) {
    this.setToggleValues(this.parametersPanelToggle, false);
    this.setToggleValues(this.documentMapToggle, false);
   }
   if(this.parametersPanelPane && pane.name === this.parametersPanelPane.name)
    this.setToggleValues(this.parametersPanelToggle, false);
   if(this.documentMapPane && pane.name === this.documentMapPane.name)
    this.setToggleValues(this.documentMapToggle, false);
  },
  splitterPaneExpanded: function(pane) {
   if(pane.name === this.sideCenterPane.name) {
    if(this.documentMapPane) {
     if(this.parametersPanelPane) {
      this.documentMapPane.IsCollapsed() && this.parametersPanelPane.Expand();
     } else {
      this.documentMapPane.Expand();
     }
    } else {
     this.parametersPanelPane && this.parametersPanelPane.Expand();
    }
   }
   if(this.documentMapPane && (pane.name === this.documentMapPane.name || pane.name === this.sideCenterPane.name))
    this.correctDocumentMapHeight();
   if(this.parametersPanelPane && !this.parametersPanelPane.IsCollapsed())
    this.setToggleValues(this.parametersPanelToggle, true);
   if(this.documentMapPane && !this.documentMapPane.IsCollapsed())
    this.setToggleValues(this.documentMapToggle, true);
  },
  subscribeSplitterCollapsing: function() {
   if(this.splitter) {
    this.splitter.PaneCollapsed.AddHandler(this.splitterPaneCollapseStateChanged, this);
    this.splitter.PaneExpanded.AddHandler(this.splitterPaneCollapseStateChanged, this);
   }
  },
  unsubscribeSplitterCollapsing: function() {
   if(this.splitter) {
    this.splitter.PaneCollapsed.RemoveHandler(this.splitterPaneCollapseStateChanged, this);
    this.splitter.PaneExpanded.RemoveHandler(this.splitterPaneCollapseStateChanged, this);
   }
  },
  getControlIntValue: function(name) {
   var val = this.getControlValue(name);
   return val ? parseInt(val, 10) : -1;
  },
  getControlValue: function(name) {
   return this.ribbonToolbar.GetItemValueByName(name);
  }
 });
 ASPxClientDocumentViewer.findValidControl = function(name) {
  var control = ASPx.GetControlCollection().Get(name);
  return control && ASPx.IsExistsElement(control.GetMainElement())
   ? control
   : null;
 };
 ASPxClientDocumentViewer.Cast = ASPxClientControl.Cast;
 var ASPxClientToolbarItemValueChangedEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
  constructor: function(processOnServer, item, editor) {
   this.constructor.prototype.constructor.call(this, processOnServer);
   this.item = item;
   this.editor = editor;
  }
 });
 var ASPxClientCreateCallbackEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function(callbackString, command) {
   this.constructor.prototype.constructor.call(this);
   this.callbackString = callbackString;
   this.command = command;
  }
 });
 var ASPxClientDocumentViewerReportViewer = ASPx.CreateClass(ASPxClientReportViewer, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.createCallbackCoreEvent = new ASPxClientEvent();
  },
  CreateCallback: function(callbackString, command) {
   this.RaiseBeginCallbackInternal();
   this.createCallbackCoreEvent.FireEvent(this, new ASPxClientCreateCallbackEventArgs(callbackString, command));
  },
  setFormHelper: function(formHelper) {
   this.formHelper = formHelper;
  },
  removeContentPaddings: function() {
   var viewerContent = this.getContentElement();
   if(viewerContent)
    viewerContent.style.padding = "0px";
  },
  IsSearchAllowed: function() {
   return this.shouldDisableSearchButton ? false : ASPxClientReportViewer.prototype.IsSearchAllowed.call(this);
  },
  subscribeToAspForm: function() {
  }
 });
 var ASPxClientDocumentViewerReportDocumentMap = ASPx.CreateClass(ASPxClientReportDocumentMap, {
  subscribeReportViewerEvents: function() {
  },
  onBeginCallback: function() {
   this.callbackPanel.ShowLoadingElements();
  },
  onEndCallback: function() {
   this.callbackPanel.HideLoadingElements();
  }
 });
 window.ASPxClientDocumentViewer = ASPxClientDocumentViewer;
 window.ASPxClientToolbarItemValueChangedEventArgs = ASPxClientToolbarItemValueChangedEventArgs;
 window.ASPxClientCreateCallbackEventArgs = ASPxClientCreateCallbackEventArgs;
 window.ASPxClientDocumentViewerReportViewer = ASPxClientDocumentViewerReportViewer;
 window.ASPxClientDocumentViewerReportDocumentMap = ASPxClientDocumentViewerReportDocumentMap;
})(window);

(function(window) {
 var MVCxClientDocumentViewer = ASPx.CreateClass(ASPxClientDocumentViewer, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.callbackUrl = "";
   this.exportUrl = "";
   this.callbackCustomArgs = {};
   this.BeforeExportRequest = new ASPxClientEvent();
  },
  Initialize: function() {
   ASPxClientDocumentViewer.prototype.Initialize.call(this);
   this.viewer.setFormHelper(this.createFormHelper());
  },
  InlineInitialize: function() {
   if(this.callbackUrl != "") {
    this.callBack = function(arg) {
     MVCx.PerformControlCallback(this.name, this.callbackUrl, arg, this.GetCallbackParams(), this.callbackCustomArgs);
    };
   }
   ASPxClientDocumentViewer.prototype.InlineInitialize.call(this);
  },
  GetCallbackParams: function() {
   var result = {};
   MVCx.AddCallbackParam(result, this.viewer.GetStateHiddenField());
   MVCx.MergeHashTables(result, this.collectParameterPanelEditorsParams());
   return result;
  },
  getHiddenFields: function() {
   return ASPxClientDocumentViewerReportViewer.prototype.getHiddenFields.call(this.viewer);
  },
  CreateCallbackByInfo: function(arg, command, callbackInfo) {
   this.CreateCallbackInternal(arg, command, true, callbackInfo);
  },
  CreateCallbackCore: function(arg, command, callbackID) {
   if(this.callbackCustomArgs != {})
    window.setTimeout(function() { this.callbackCustomArgs = {}; }.aspxBind(this), 0);
   ASPxClientDocumentViewer.prototype.CreateCallbackCore.call(this, arg, command, callbackID);
  },
  GetCallbackMethod: function(command) {
   return MVCx.IsCustomCallback(command) ? MVCx.GetCustomActionCallBackMethod(this) : this.callBack;
  },
  createFormHelper: function() {
   var helper = ASPxClientReportViewer.__useMobileSpecificExport
    ? new FormHelperMobile(this.exportUrl, this.getHiddenFields(), this.viewer.uniqueID)
    : new FormHelper(this.exportUrl, this.getHiddenFields(), this.viewer.uniqueID);
   helper.BeforeSendPostback.AddHandler(function(_, e) {
    var args = new MVCxClientBeforeExportRequestEventArgs();
    this.BeforeExportRequest.FireEvent(this, args);
    helper.customArgs = args.customArgs;
   }.aspxBind(this));
   return helper;
  },
  RaiseBeginCallbackInternal: function(command) {
   var args = new MVCxClientBeginCallbackEventArgs(command);
   if(!this.BeginCallback.IsEmpty())
    this.BeginCallback.FireEvent(this, args);
   this.callbackCustomArgs = args.customArgs;
  },
  collectParameterPanelEditorsParams: function() {
   if(!ASPx.IsExists(this.parametersPanel)) {
    return {};
   }
   var result = {};
   var editors = this.parametersPanel.collectEditors();
   $(editors).each(function(i, v) {
    if(v["parameterName"]) {
     result[v["parameterName"]] = v["value"];
    } else {
     $(v.GetMainElement()).find("input,textarea,select").each(function() {
      result[this.name] = this.value;
     });
    }
   });
   return result;
  }
 });
 MVCxClientDocumentViewer.arrayAny = function(arr, condition) {
  for(var i = 0; i < arr.length; i++) {
   if(condition(arr[i])) {
    return true;
   }
  }
  return false;
 };
 var MVCxClientReportViewer = ASPx.CreateClass(ASPxClientReportViewer, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.callbackUrl = "";
   this.exportUrl = "";
   this.callbackCustomArgs = {};
   this.BeforeExportRequest = new ASPxClientEvent();
  },
  InlineInitialize: function() {
   if(this.callbackUrl != "") {
    this.callBack = function(arg) { MVCx.PerformControlCallback(this.name, this.callbackUrl, arg, this.GetCallbackParams(), this.callbackCustomArgs) };
   }
   ASPxClientReportViewer.prototype.InlineInitialize.call(this);
  },
  GetCallbackParams: function() {
   var params = {};
   MVCx.AddCallbackParam(params, this.GetStateHiddenField());
   return params;
  },
  CreateCallbackByInfo: function(arg, command, callbackInfo) {
   this.CreateCallbackInternal(arg, command, true, callbackInfo);
  },
  createFormHelper: function() {
   return ASPxClientReportViewer.__useMobileSpecificExport
    ? new FormHelperMobile(this.exportUrl, this.getHiddenFields(), this.name)
    : new FormHelper(this.exportUrl, this.getHiddenFields(), this.name);
  },
  RaiseBeginCallbackInternal: function(command) {
   var args = new MVCxClientBeginCallbackEventArgs(command);
   if(!this.BeginCallback.IsEmpty())
    this.BeginCallback.FireEvent(this, args);
   this.callbackCustomArgs = args.customArgs;
  },
  RaiseBeforeExportRequestEvent: function() {
   if(!this.BeforeExportRequest.IsEmpty()) {
    var args = new MVCxClientBeforeExportRequestEventArgs();
    this.BeforeExportRequest.FireEvent(this, args);
    this.formHelper.customArgs = args.customArgs;
   }
  },
  execExport: function(exportKind, params, win) {
   this.RaiseBeforeExportRequestEvent();
   ASPxClientReportViewer.prototype.execExport.call(this, exportKind, params, win);
  },
  subscribeToAspForm: function() {
  }
 });
 var MVCxClientBeforeExportRequestEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
  constructor: function() {
   this.constructor.prototype.constructor.call(this);
   this.customArgs = {};
  }
 });
 var FormHelper = ASPx.CreateClass(ASPx.dx_FormHelper, {
  constructor: function(action, hiddenFields, viewerName) {
   this.action = action;
   this.viewerName = viewerName;
   this.argumentFieldName = "DXArgument";
   this.stateFieldName = "DXRVState";
   this.hiddenFields = hiddenFields;
   this.hiddenFields.push({ tagName: "input", type: "hidden", id: this.argumentFieldName, name: this.argumentFieldName });
   this.customArgs = {};
   this.BeforeSendPostback = new ASPxClientEvent();
  },
  getTheForm: function() {
   return {
    method: "POST",
    action: this.action,
    id: "form1",
    elements: this.getElements(),
    name: ""
   };
  },
  getElements: function(originalName) {
   var elements = [];
   for(var i = 0; i < this.hiddenFields.length; i++) {
    elements.push(this.hiddenFields[i]);
   }
   for(var arg in this.customArgs) {
    if(this.customArgs.hasOwnProperty(arg)) {
     elements.push({ tagName: 'input', type: 'hidden', id: arg, name: arg, value: this.customArgs[arg] });
    }
   }
   return elements;
  },
  getElementName: function(originalName) {
   if(originalName === this.viewerName) {
    return this.stateFieldName;
   }
   return originalName;
  },
  sendPostbackInWindow: function(win, eventTarget, eventArgument) {
   this.BeforeSendPostback.FireEvent(this);
   ASPx.dx_FormHelper.prototype.sendPostbackInWindow.call(this, win, eventTarget, eventArgument);
  }
 });
 var FormHelperMobile = ASPx.CreateClass(FormHelper, {
  constructor: function(action, hiddenFields, viewerName) {
   this.constructor.prototype.constructor.call(this, action, hiddenFields, viewerName);
  },
  sendPostbackInWindow: function(_, eventTarget, eventArgument) {
   this.BeforeSendPostback.FireEvent(this);
   this.eventTarget = eventTarget;
   this.eventArgument = eventArgument;
   this.inputValues = {};
   this.inputUniqueIdCounter = 1;
   var form = this.forceRecreateForm();
   this.applyInputValues(form);
   form.submit();
  },
  forceRecreateForm: function() {
   var theForm = this.getTheForm();
   var id = "DXXRMobileSpecificExportForm";
   var prevForm = document.getElementById(id);
   if(prevForm) {
    var $parentElement = $(prevForm.parentElement);
    $parentElement.remove();
   }
   var formAttributes = {
    id: id,
    method: theForm.method,
    action: this.getCorectedAction(this.action)
   };
   var container = document.createElement('div');
   container.style.overflow = 'hidden';
   container.style.width = '0px';
   container.style.height = '0px';
   container.innerHTML = this.buildTag('form', formAttributes, this.getInputsAndInitInputValues() + "<input type='submit' value='submit'/>");
   document.body.appendChild(container);
   return document.getElementById(id);
  },
  applyInputValues: function(form) {
   for(var inputId in this.inputValues) {
    try {
     var input = form.querySelector("#" + inputId);
     input && (input.value = this.inputValues[inputId]);
    } catch(e) {
    }
   }
  }
 });
 window.MVCxClientDocumentViewer = MVCxClientDocumentViewer;
 window.MVCxClientReportViewer = MVCxClientReportViewer;
 window.MVCxClientBeforeExportRequestEventArgs = MVCxClientBeforeExportRequestEventArgs;
})(window);

(function () {
ASPx.StateItemsExist = false;
ASPx.FocusedItemKind = "FocusedStateItem";
ASPx.HoverItemKind = "HoverStateItem";
ASPx.PressedItemKind = "PressedStateItem";
ASPx.SelectedItemKind = "SelectedStateItem";
ASPx.DisabledItemKind = "DisabledStateItem";
ASPx.CachedStatePrefix = "cached";
ASPxStateItem = ASPx.CreateClass(null, {
 constructor: function(name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, kind, disableApplyingStyleToLink){
  this.name = name;
  this.classNames = classNames;
  this.customClassNames = [];
  this.resultClassNames = [];
  this.cssTexts = cssTexts;
  this.postfixes = postfixes;
  this.imageObjs = imageObjs;
  this.imagePostfixes = imagePostfixes;
  this.kind = kind;
  this.classNamePostfix = kind.substr(0, 1).toLowerCase();
  this.enabled = true;
  this.needRefreshBetweenElements = false;
  this.elements = null;
  this.images = null;
  this.links = [];
  this.linkColor = null;
  this.linkTextDecoration = null;
  this.disableApplyingStyleToLink = !!disableApplyingStyleToLink; 
 },
 GetCssText: function(index){
  if(ASPx.IsExists(this.cssTexts[index]))
   return this.cssTexts[index];
  return this.cssTexts[0];
 },
 CreateStyleRule: function(index){
  if(this.GetCssText(index) == "") return "";
  var styleSheet = ASPx.GetCurrentStyleSheet();
  if(styleSheet)
   return ASPx.CreateImportantStyleRule(styleSheet, this.GetCssText(index), this.classNamePostfix);  
  return ""; 
 },
 GetClassName: function(index){
  if(ASPx.IsExists(this.classNames[index]))
   return this.classNames[index];
  return this.classNames[0];
 },
 GetResultClassName: function(index){
  if(!ASPx.IsExists(this.resultClassNames[index])) {
   if(!ASPx.IsExists(this.customClassNames[index]))
    this.customClassNames[index] = this.CreateStyleRule(index);
   if(this.GetClassName(index) != "" && this.customClassNames[index] != "")
    this.resultClassNames[index] = this.GetClassName(index) + " " + this.customClassNames[index];
   else if(this.GetClassName(index) != "")
    this.resultClassNames[index] = this.GetClassName(index);
   else if(this.customClassNames[index] != "")
    this.resultClassNames[index] = this.customClassNames[index];
   else
    this.resultClassNames[index] = "";
  }
  return this.resultClassNames[index];
 },
 GetElements: function(element){
  if(!this.elements || !ASPx.IsValidElements(this.elements)){
   if(this.postfixes && this.postfixes.length > 0){
    this.elements = [ ];
    var parentNode = element.parentNode;
    if(parentNode){
     for(var i = 0; i < this.postfixes.length; i++){
      var id = this.name + this.postfixes[i];
      this.elements[i] = ASPx.GetChildById(parentNode, id);
      if(!this.elements[i])
       this.elements[i] = ASPx.GetElementById(id);
     }
    }
   }
   else
    this.elements = [element];
  }
  return this.elements;
 },
 GetImages: function(element){
  if(!this.images || !ASPx.IsValidElements(this.images)){
   this.images = [ ];
   if(this.imagePostfixes && this.imagePostfixes.length > 0){
    var elements = this.GetElements(element);
    for(var i = 0; i < this.imagePostfixes.length; i++){
     var id = this.name + this.imagePostfixes[i];
     for(var j = 0; j < elements.length; j++){
      if(!elements[j]) continue;
      if(elements[j].id == id)
       this.images[i] = elements[j];
      else
       this.images[i] = ASPx.GetChildById(elements[j], id);
      if(this.images[i])
       break;
     }
    }
   }
  }
  return this.images;
 },
 Apply: function(element){
  if(!this.enabled) return;
  try{
   this.ApplyStyle(element);
   if(this.imageObjs && this.imageObjs.length > 0)
    this.ApplyImage(element);
   if(ASPx.Browser.IE && ASPx.Browser.MajorVersion >= 11)
    this.ForceRedrawAppearance(element);
  }
  catch(e){
  }
 },
 ApplyStyle: function(element){
  var elements = this.GetElements(element);
  for(var i = 0; i < elements.length; i++){
   if(!elements[i]) continue;
   var className = elements[i].className.replace(this.GetResultClassName(i), "");
   elements[i].className = ASPx.Str.Trim(className) + " " + this.GetResultClassName(i);
   if(!ASPx.Browser.Opera || ASPx.Browser.Version >= 9)
    this.ApplyStyleToLinks(elements, i);
  }
 },
 ApplyStyleToLinks: function(elements, index){
  if(this.disableApplyingStyleToLink)
   return;
  if(!ASPx.IsValidElements(this.links[index]))
   this.links[index] = ASPx.GetNodesByTagName(elements[index], "A");
  for(var i = 0; i < this.links[index].length; i++)
   this.ApplyStyleToLinkElement(this.links[index][i], index);
 },
 ApplyStyleToLinkElement: function(link, index){
  if(this.GetLinkColor(index) != "")
   ASPx.Attr.ChangeAttributeExtended(link.style, "color", link, "saved" + this.kind + "Color", this.GetLinkColor(index));
  if(this.GetLinkTextDecoration(index) != "")
   ASPx.Attr.ChangeAttributeExtended(link.style, "textDecoration", link, "saved" + this.kind + "TextDecoration", this.GetLinkTextDecoration(index));
 },
 ApplyImage: function(element){
  var images = this.GetImages(element);
  for(var i = 0; i < images.length; i++){
   if(!images[i] || !this.imageObjs[i]) continue;
   var useSpriteImage = typeof(this.imageObjs[i]) != "string";
   var newUrl = "", newCssClass = "", newBackground = "";
   if(useSpriteImage){
    newUrl = ASPx.EmptyImageUrl;           
    if(this.imageObjs[i].spriteCssClass) 
     newCssClass = this.imageObjs[i].spriteCssClass;
    if(this.imageObjs[i].spriteBackground)
     newBackground = this.imageObjs[i].spriteBackground;
   }
   else{
    newUrl = this.imageObjs[i];
    if(ASPx.Attr.IsExistsAttribute(images[i].style, "background"))   
     newBackground = " ";
   }
   if(newUrl != "")
    ASPx.Attr.ChangeAttributeExtended(images[i], "src", images[i], "saved" + this.kind + "Src", newUrl);
   if(newCssClass != "")
    this.ApplyImageClassName(images[i], newCssClass);
   if(newBackground != ""){
    if(ASPx.Browser.WebKitFamily) {
     var savedBackground = ASPx.Attr.GetAttribute(images[i].style, "background");
     if(!useSpriteImage)
      savedBackground += " " + images[i].style["backgroundPosition"];
     ASPx.Attr.SetAttribute(images[i], "saved" + this.kind + "Background", savedBackground);
     ASPx.Attr.SetAttribute(images[i].style, "background", newBackground);
    }
    else
     ASPx.Attr.ChangeAttributeExtended(images[i].style, "background", images[i], "saved" + this.kind + "Background", newBackground);
   }     
  }
 },
 ApplyImageClassName: function(element, newClassName){
  var className = element.className.replace(newClassName, "");
  ASPx.Attr.SetAttribute(element, "saved" + this.kind + "ClassName", className);
  element.className = className + " " + newClassName;
 },
 Cancel: function(element){
  if(!this.enabled) return;
  try{  
   if(this.imageObjs && this.imageObjs.length > 0)
    this.CancelImage(element);
   this.CancelStyle(element);
  }
  catch(e){
  }
 },
 CancelStyle: function(element){
  var elements = this.GetElements(element);
  for(var i = 0; i < elements.length; i++){
   if(!elements[i]) continue;
   var className = ASPx.Str.Trim(elements[i].className.replace(this.GetResultClassName(i), ""));
   elements[i].className = className;
   if(!ASPx.Browser.Opera || ASPx.Browser.Version >= 9)
    this.CancelStyleFromLinks(elements, i);
  }
 },
 CancelStyleFromLinks: function(elements, index){
  if(this.disableApplyingStyleToLink)
   return;
  if(!ASPx.IsValidElements(this.links[index]))
   this.links[index] = ASPx.GetNodesByTagName(elements[index], "A");
  for(var i = 0; i < this.links[index].length; i++)
   this.CancelStyleFromLinkElement(this.links[index][i], index);
 },
 CancelStyleFromLinkElement: function(link, index){
  if(this.GetLinkColor(index) != "")
   ASPx.Attr.RestoreAttributeExtended(link.style, "color", link, "saved" + this.kind + "Color");
  if(this.GetLinkTextDecoration(index) != "")
   ASPx.Attr.RestoreAttributeExtended(link.style, "textDecoration", link, "saved" + this.kind + "TextDecoration");
 },
 CancelImage: function(element){
  var images = this.GetImages(element);
  for(var i = 0; i < images.length; i++){
   if(!images[i] || !this.imageObjs[i]) continue;
   ASPx.Attr.RestoreAttributeExtended(images[i], "src", images[i], "saved" + this.kind + "Src");
   this.CancelImageClassName(images[i]);
   ASPx.Attr.RestoreAttributeExtended(images[i].style, "background", images[i], "saved" + this.kind + "Background");
  }
 },
 CancelImageClassName: function(element){
  var savedClassName = ASPx.Attr.GetAttribute(element, "saved" + this.kind + "ClassName");
  if(ASPx.IsExists(savedClassName)) {
   element.className = savedClassName;
   ASPx.Attr.RemoveAttribute(element, "saved" + this.kind + "ClassName");
  }
 },
 Clone: function(){
  return new ASPxStateItem(this.name, this.classNames, this.cssTexts, this.postfixes, 
   this.imageObjs, this.imagePostfixes, this.kind, this.disableApplyingStyleToLink);
 },
 IsChildElement: function(element){
  if(element != null){
   var elements = this.GetElements(element);
   for(var i = 0; i < elements.length; i++){
    if(!elements[i]) continue;
    if(ASPx.GetIsParent(elements[i], element)) 
     return true;
   }
  }
  return false;
 },
 ForceRedrawAppearance: function(element) {
  var value = element.style.opacity;
  element.style.opacity = "0.7777";
  var dummy = element.offsetWidth;
  element.style.opacity = value;
 },
 GetLinkColor: function(index){
  if(!ASPx.IsExists(this.linkColor)){
   var rule = ASPx.GetStyleSheetRules(this.customClassNames[index]);
   this.linkColor = rule ? rule.style.color : null;
   if(!ASPx.IsExists(this.linkColor)){
    var rule = ASPx.GetStyleSheetRules(this.GetClassName(index));
    this.linkColor = rule ? rule.style.color : null;
   }
   if(this.linkColor == null) 
    this.linkColor = "";
  }
  return this.linkColor;
 },
 GetLinkTextDecoration: function(index){
  if(!ASPx.IsExists(this.linkTextDecoration)){
   var rule = ASPx.GetStyleSheetRules(this.customClassNames[index]);
   this.linkTextDecoration = rule ? rule.style.textDecoration : null;
   if(!ASPx.IsExists(this.linkTextDecoration)){
    var rule = ASPx.GetStyleSheetRules(this.GetClassName(index));
    this.linkTextDecoration = rule ? rule.style.textDecoration : null;
   }
   if(this.linkTextDecoration == null) 
    this.linkTextDecoration = "";
  }
  return this.linkTextDecoration;
 }
});
ASPxClientStateEventArgs = ASPx.CreateClass(null, {
 constructor: function(item, element){
  this.item = item;
  this.element = element;
  this.toElement = null;
  this.fromElement = null;
  this.htmlEvent = null;
 }
});
ASPxStateController = ASPx.CreateClass(null, {
 constructor: function(){
  this.focusedItems = { };
  this.hoverItems = { };
  this.pressedItems = { };
  this.selectedItems = { };
  this.disabledItems = { };
  this.disabledScheme = {};
  this.currentFocusedElement = null;
  this.currentFocusedItemName = null;
  this.currentHoverElement = null;
  this.currentHoverItemName = null;
  this.currentPressedElement = null;
  this.currentPressedItemName = null;
  this.savedCurrentPressedElement = null;
  this.savedCurrentMouseMoveSrcElement = null;
  this.AfterSetFocusedState = new ASPxClientEvent();
  this.AfterClearFocusedState = new ASPxClientEvent();
  this.AfterSetHoverState = new ASPxClientEvent();
  this.AfterClearHoverState = new ASPxClientEvent();
  this.AfterSetPressedState = new ASPxClientEvent();
  this.AfterClearPressedState = new ASPxClientEvent();
  this.AfterDisabled = new ASPxClientEvent();
  this.AfterEnabled = new ASPxClientEvent();
  this.BeforeSetFocusedState = new ASPxClientEvent();
  this.BeforeClearFocusedState = new ASPxClientEvent();
  this.BeforeSetHoverState = new ASPxClientEvent();
  this.BeforeClearHoverState = new ASPxClientEvent();
  this.BeforeSetPressedState = new ASPxClientEvent();
  this.BeforeClearPressedState = new ASPxClientEvent();
  this.BeforeDisabled = new ASPxClientEvent();
  this.BeforeEnabled = new ASPxClientEvent();
  this.FocusedItemKeyDown = new ASPxClientEvent();
 }, 
 AddHoverItem: function(name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, disableApplyingStyleToLink){
  this.AddItem(this.hoverItems, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, ASPx.HoverItemKind, disableApplyingStyleToLink);
  this.AddItem(this.focusedItems, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, ASPx.FocusedItemKind, disableApplyingStyleToLink);
 },
 AddPressedItem: function(name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes ,disableApplyingStyleToLink){
  this.AddItem(this.pressedItems, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, ASPx.PressedItemKind, disableApplyingStyleToLink);
 },
 AddSelectedItem: function(name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, disableApplyingStyleToLink){
  this.AddItem(this.selectedItems, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, ASPx.SelectedItemKind, disableApplyingStyleToLink);
 },
 AddDisabledItem: function (name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, disableApplyingStyleToLink, rootId) {
  this.AddItem(this.disabledItems, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes,
   ASPx.DisabledItemKind, disableApplyingStyleToLink, this.addIdToDisabledItemScheme, rootId);
 },
 addIdToDisabledItemScheme: function(rootId, childId) {
  if (!rootId)
   return;
  if (!this.disabledScheme[rootId])
   this.disabledScheme[rootId] = [rootId];
  if (childId && (rootId != childId) && ASPx.Data.ArrayIndexOf(this.disabledScheme[rootId], childId) == -1)
   this.disabledScheme[rootId].push(childId);
 },
 removeIdFromDisabledItemScheme: function(rootId, childId) {
  if (!rootId || !this.disabledScheme[rootId])
   return;
  ASPx.Data.ArrayRemove(this.disabledScheme[rootId], childId);
  if (this.disabledScheme[rootId].length == 0)
   delete this.disabledScheme[rootId];
 },
 AddItem: function (items, name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, kind, disableApplyingStyleToLink, onAdd, rootId) {
  var stateItem = new ASPxStateItem(name, classNames, cssTexts, postfixes, imageObjs, imagePostfixes, kind, disableApplyingStyleToLink);
  if (postfixes && postfixes.length > 0) {
   for (var i = 0; i < postfixes.length; i++) {
    items[name + postfixes[i]] = stateItem;
    if (onAdd)
     onAdd.call(this, rootId, name + postfixes[i]);
   }
  }
  else {
   if (onAdd)
    onAdd.call(this, rootId, name);
   items[name] = stateItem;
  }
  ASPx.StateItemsExist = true;
 },
 RemoveHoverItem: function(name, postfixes){
  this.RemoveItem(this.hoverItems, name, postfixes);
  this.RemoveItem(this.focusedItems, name, postfixes);
 },
 RemovePressedItem: function(name, postfixes){
  this.RemoveItem(this.pressedItems, name, postfixes);
 },
 RemoveSelectedItem: function(name, postfixes){
  this.RemoveItem(this.selectedItems, name, postfixes);
 },
 RemoveDisabledItem: function (name, postfixes, rootId) {
  this.RemoveItem(this.disabledItems, name, postfixes, this.removeIdFromDisabledItemScheme, rootId);
 },
 RemoveItem: function (items, name, postfixes, onRemove, rootId) {
  if (postfixes && postfixes.length > 0) {
   for (var i = 0; i < postfixes.length; i++) {
    delete items[name + postfixes[i]];
    if (onRemove)
     onRemove.call(this, rootId, name + postfixes[i]);
   }
  }
  else {
   delete items[name];
   if (onRemove)
    onRemove.call(this, rootId, name);
  }
 },
 RemoveDisposedItems: function(){
  this.RemoveDisposedItemsByType(this.hoverItems);
  this.RemoveDisposedItemsByType(this.pressedItems);
  this.RemoveDisposedItemsByType(this.focusedItems);
  this.RemoveDisposedItemsByType(this.selectedItems);
  this.RemoveDisposedItemsByType(this.disabledItems);
  this.RemoveDisposedItemsByType(this.disabledScheme);
 },
 RemoveDisposedItemsByType: function(items){
  for(var key in items) {
   var item = items[key];
   var element = document.getElementById(key);
   if(!element || !ASPx.IsValidElement(element))
    delete items[key];
   if(item && item.elements) {
    for(var i = 0; i < item.elements.length; i++) {
     if(!ASPx.IsValidElements(item.links[i]))
      item.links[i] = null;
    }
   }
  }
 },
 GetFocusedElement: function(srcElement){
  return this.GetItemElement(srcElement, this.focusedItems, ASPx.FocusedItemKind);
 },
 GetHoverElement: function(srcElement){
  return this.GetItemElement(srcElement, this.hoverItems, ASPx.HoverItemKind);
 },
 GetPressedElement: function(srcElement){
  return this.GetItemElement(srcElement, this.pressedItems, ASPx.PressedItemKind);
 },
 GetSelectedElement: function(srcElement){
  return this.GetItemElement(srcElement, this.selectedItems, ASPx.SelectedItemKind);
 },
 GetDisabledElement: function(srcElement){
  return this.GetItemElement(srcElement, this.disabledItems, ASPx.DisabledItemKind);
 },
 GetItemElement: function(srcElement, items, kind){
  if(srcElement && srcElement[ASPx.CachedStatePrefix + kind]){
   var cachedElement = srcElement[ASPx.CachedStatePrefix + kind];
   if(cachedElement != ASPx.EmptyObject)
    return cachedElement;
   return null;
  }
  var element = srcElement;
  while(element != null) {
   var item = items[element.id];
   if(item){
    this.CacheItemElement(srcElement, kind, element);
    element[kind] = item;
    return element;
   }
   element = element.parentNode;
  }
  this.CacheItemElement(srcElement, kind, ASPx.EmptyObject);
  return null;
 },
 CacheItemElement: function(srcElement, kind, value){
  if(srcElement && !srcElement[ASPx.CachedStatePrefix + kind])
   srcElement[ASPx.CachedStatePrefix + kind] = value;
 },
 DoSetFocusedState: function(element, fromElement){
  var item = element[ASPx.FocusedItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   args.fromElement = fromElement;
   this.BeforeSetFocusedState.FireEvent(this, args);
   item.Apply(element);
   this.AfterSetFocusedState.FireEvent(this, args);
  }
 },
 DoClearFocusedState: function(element, toElement){
  var item = element[ASPx.FocusedItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   args.toElement = toElement;
   this.BeforeClearFocusedState.FireEvent(this, args);
   item.Cancel(element);
   this.AfterClearFocusedState.FireEvent(this, args);
  }
 },
 DoSetHoverState: function(element, fromElement){
  var item = element[ASPx.HoverItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   args.fromElement = fromElement;
   this.BeforeSetHoverState.FireEvent(this, args);
   item.Apply(element);
   this.AfterSetHoverState.FireEvent(this, args);
  }
 },
 DoClearHoverState: function(element, toElement){
  var item = element[ASPx.HoverItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   args.toElement = toElement;
   this.BeforeClearHoverState.FireEvent(this, args);
   item.Cancel(element);
   this.AfterClearHoverState.FireEvent(this, args);
  }
 },
 DoSetPressedState: function(element){
  var item = element[ASPx.PressedItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   this.BeforeSetPressedState.FireEvent(this, args);
   item.Apply(element);
   this.AfterSetPressedState.FireEvent(this, args);
  }
 },
 DoClearPressedState: function(element){
  var item = element[ASPx.PressedItemKind];
  if(item){
   var args = new ASPxClientStateEventArgs(item, element);
   this.BeforeClearPressedState.FireEvent(this, args);
   item.Cancel(element);
   this.AfterClearPressedState.FireEvent(this, args);
  }
 },
 SetCurrentFocusedElement: function(element){
  if(this.currentFocusedElement && !ASPx.IsValidElement(this.currentFocusedElement)){
   this.currentFocusedElement = null;
   this.currentFocusedItemName = "";
  }
  if(this.currentFocusedElement != element){
   var oldCurrentFocusedElement = this.currentFocusedElement;
   var item = (element != null) ? element[ASPx.FocusedItemKind] : null;
   var itemName = (item != null) ? item.name : "";
   if(this.currentFocusedItemName != itemName){
    if(this.currentHoverItemName != "")
     this.SetCurrentHoverElement(null);
    if(this.currentFocusedElement != null)
     this.DoClearFocusedState(this.currentFocusedElement, element);
    this.currentFocusedElement = element;
    item = (element != null) ? element[ASPx.FocusedItemKind] : null;
    this.currentFocusedItemName = (item != null) ? item.name : "";
    if(this.currentFocusedElement != null)
     this.DoSetFocusedState(this.currentFocusedElement, oldCurrentFocusedElement);
   }
  }
 },
 SetCurrentHoverElement: function(element){
  if(this.currentHoverElement && !ASPx.IsValidElement(this.currentHoverElement)){
   this.currentHoverElement = null;
   this.currentHoverItemName = "";
  }
  var item = (element != null) ? element[ASPx.HoverItemKind] : null;
  if(item && !item.enabled) { 
   element = this.GetItemElement(element.parentNode, this.hoverItems, ASPx.HoverItemKind);
   item = (element != null) ? element[ASPx.HoverItemKind] : null;
  }
  if(this.currentHoverElement != element){
   var oldCurrentHoverElement = this.currentHoverElement,
    itemName = (item != null) ? item.name : "";
   if(this.currentHoverItemName != itemName || (item != null && item.needRefreshBetweenElements)){
    if(this.currentHoverElement != null)
     this.DoClearHoverState(this.currentHoverElement, element);
    item = (element != null) ? element[ASPx.HoverItemKind] : null;
    if(item == null || item.enabled){
     this.currentHoverElement = element;
     this.currentHoverItemName = (item != null) ? item.name : "";
     if(this.currentHoverElement != null)
      this.DoSetHoverState(this.currentHoverElement, oldCurrentHoverElement);
    }
   }
  }
 },
 SetCurrentPressedElement: function(element){
  if(this.currentPressedElement && !ASPx.IsValidElement(this.currentPressedElement)){
   this.currentPressedElement = null;
   this.currentPressedItemName = "";
  }
  if(this.currentPressedElement != element){
   if(this.currentPressedElement != null)
    this.DoClearPressedState(this.currentPressedElement);
   var item = (element != null) ? element[ASPx.PressedItemKind] : null;
   if(item == null || item.enabled){
    this.currentPressedElement = element;
    this.currentPressedItemName = (item != null) ? item.name : "";
    if(this.currentPressedElement != null)
     this.DoSetPressedState(this.currentPressedElement);
   }
  }
 },
 SetCurrentFocusedElementBySrcElement: function(srcElement){
  var element = this.GetFocusedElement(srcElement);
  this.SetCurrentFocusedElement(element);
 },
 SetCurrentHoverElementBySrcElement: function(srcElement){
  var element = this.GetHoverElement(srcElement);
  this.SetCurrentHoverElement(element);
 },
 SetCurrentPressedElementBySrcElement: function(srcElement){
  var element = this.GetPressedElement(srcElement);
  this.SetCurrentPressedElement(element);
 },
 SetPressedElement: function (element) {
  this.SetCurrentHoverElement(null);
  this.SetCurrentPressedElementBySrcElement(element);
  this.savedCurrentPressedElement = this.currentPressedElement;
 },
 SelectElement: function (element) {
  var item = element[ASPx.SelectedItemKind];
  if(item)
   item.Apply(element);
 }, 
 SelectElementBySrcElement: function(srcElement){
  var element = this.GetSelectedElement(srcElement);
  if(element != null) this.SelectElement(element);
 }, 
 DeselectElement: function(element){
  var item = element[ASPx.SelectedItemKind];
  if(item)
   item.Cancel(element);
 }, 
 DeselectElementBySrcElement: function(srcElement){
  var element = this.GetSelectedElement(srcElement);
  if(element != null) this.DeselectElement(element);
 },
 SetElementEnabled: function(element, enable){
  if(enable)
   this.EnableElement(element);
  else
   this.DisableElement(element);
 },
 SetElementWithChildNodesEnabled: function (parentName, enabled) {
  var procFunct = (enabled ? this.EnableElement : this.DisableElement);
  var childItems = this.disabledScheme[parentName];
  if (childItems && childItems.length > 0)
   for (var i = 0; i < childItems.length; i++) {
    procFunct.call(this, document.getElementById(childItems[i]));
   }
 },
 DisableElement: function (element) {
  var element = this.GetDisabledElement(element);
  if(element != null) {
   var item = element[ASPx.DisabledItemKind];
   if(item){
    var args = new ASPxClientStateEventArgs(item, element);
    this.BeforeDisabled.FireEvent(this, args);
    if(item.name == this.currentPressedItemName)
     this.SetCurrentPressedElement(null);
    if(item.name == this.currentHoverItemName)
     this.SetCurrentHoverElement(null);
    item.Apply(element);
    this.SetMouseStateItemsEnabled(item.name, item.postfixes, false);
    this.AfterDisabled.FireEvent(this, args);
   }
  }
 }, 
 EnableElement: function(element){
  var element = this.GetDisabledElement(element);
  if(element != null) {
   var item = element[ASPx.DisabledItemKind];
   if(item){
    var args = new ASPxClientStateEventArgs(item, element);
    this.BeforeEnabled.FireEvent(this, args);
    item.Cancel(element);
    this.SetMouseStateItemsEnabled(item.name, item.postfixes, true);
    this.AfterEnabled.FireEvent(this, args);
   }
  }
 }, 
 SetMouseStateItemsEnabled: function(name, postfixes, enabled){   
  if(postfixes && postfixes.length > 0){
   for(var i = 0; i < postfixes.length; i ++){
    this.SetItemsEnabled(this.hoverItems, name + postfixes[i], enabled);
    this.SetItemsEnabled(this.pressedItems, name + postfixes[i], enabled);
    this.SetItemsEnabled(this.focusedItems, name + postfixes[i], enabled);
   }
  }
  else{
   this.SetItemsEnabled(this.hoverItems, name, enabled);
   this.SetItemsEnabled(this.pressedItems, name, enabled);
   this.SetItemsEnabled(this.focusedItems, name, enabled);
  }  
 },
 SetItemsEnabled: function(items, name, enabled){   
  if(items[name])
   items[name].enabled = enabled;
 },
 OnFocusMove: function(evt){
  var element = ASPx.Evt.GetEventSource(evt);
  aspxGetStateController().SetCurrentFocusedElementBySrcElement(element);
 },
 OnMouseMove: function(evt, checkElementChanged){
  var srcElement = ASPx.Evt.GetEventSource(evt);
  if(checkElementChanged && srcElement == this.savedCurrentMouseMoveSrcElement) return;
  this.savedCurrentMouseMoveSrcElement = srcElement;
  if(ASPx.Browser.IE && !ASPx.Evt.IsLeftButtonPressed(evt) && this.savedCurrentPressedElement != null)
   this.ClearSavedCurrentPressedElement();
  if(this.savedCurrentPressedElement == null)
   this.SetCurrentHoverElementBySrcElement(srcElement);
  else{
   var element = this.GetPressedElement(srcElement);
   if(element != this.currentPressedElement){
    if(element == this.savedCurrentPressedElement)
     this.SetCurrentPressedElement(this.savedCurrentPressedElement);
    else
     this.SetCurrentPressedElement(null);
   }
  }
 },
 OnMouseDown: function(evt){
  if(!ASPx.Evt.IsLeftButtonPressed(evt)) return;
  var srcElement = ASPx.Evt.GetEventSource(evt);
  this.OnMouseDownOnElement(srcElement);
 },
 OnMouseDownOnElement: function (element) {
  if(this.GetPressedElement(element) == null) return;
  this.SetPressedElement(element);
 },
 OnMouseUp: function(evt){
  var srcElement = ASPx.Evt.GetEventSource(evt);
  this.OnMouseUpOnElement(srcElement);
 },
 OnMouseUpOnElement: function(element){
  if(this.savedCurrentPressedElement == null) return;
  this.ClearSavedCurrentPressedElement();
  this.SetCurrentHoverElementBySrcElement(element);
 },
 OnMouseOver: function(evt){
  var element = ASPx.Evt.GetEventSource(evt);
  if(element && element.tagName == "IFRAME")
   this.OnMouseMove(evt, true);
 },
 OnKeyDown: function(evt){
  var element = this.GetFocusedElement(ASPx.Evt.GetEventSource(evt));
  if(element != null && element == this.currentFocusedElement) {
   var item = element[ASPx.FocusedItemKind];
   if(item){
    var args = new ASPxClientStateEventArgs(item, element);
    args.htmlEvent = evt;
    this.FocusedItemKeyDown.FireEvent(this, args);
   }
  }
 },
 OnSelectStart: function(evt){
  if(this.savedCurrentPressedElement) {
   ASPx.Selection.Clear();
   return false;
  }
 },
 ClearSavedCurrentPressedElement: function() {
  this.savedCurrentPressedElement = null;
  this.SetCurrentPressedElement(null);
 },
 ClearCache: function(srcElement, kind) {
  if(srcElement[ASPx.CachedStatePrefix + kind])
   srcElement[ASPx.CachedStatePrefix + kind] = null;
 },
 ClearElementCache: function(srcElement) {
  this.ClearCache(srcElement, ASPx.FocusedItemKind);
  this.ClearCache(srcElement, ASPx.HoverItemKind);
  this.ClearCache(srcElement, ASPx.PressedItemKind);
  this.ClearCache(srcElement, ASPx.SelectedItemKind);
  this.ClearCache(srcElement, ASPx.DisabledItemKind);
 }
});
var stateController = null;
function aspxGetStateController(){
 if(stateController == null)
  stateController = new ASPxStateController();
 return stateController;
}
function aspxAddStateItems(method, namePrefix, classes, disableApplyingStyleToLink){
 for(var i = 0; i < classes.length; i ++){
  for(var j = 0; j < classes[i][2].length; j ++) {
   var name = namePrefix;
   if(classes[i][2][j])
    name += "_" + classes[i][2][j];
   var postfixes = classes[i][3] || null;
   var imageObjs = (classes[i][4] && classes[i][4][j]) || null;
   var imagePostfixes = classes[i][5] || null;
   method.call(aspxGetStateController(), name, classes[i][0], classes[i][1], postfixes, imageObjs, imagePostfixes, disableApplyingStyleToLink, namePrefix);
  }
 }
}
ASPx.AddHoverItems = function(namePrefix, classes, disableApplyingStyleToLink){
 aspxAddStateItems(aspxGetStateController().AddHoverItem, namePrefix, classes, disableApplyingStyleToLink);
}
ASPx.AddPressedItems = function(namePrefix, classes, disableApplyingStyleToLink){
 aspxAddStateItems(aspxGetStateController().AddPressedItem, namePrefix, classes, disableApplyingStyleToLink);
}
ASPx.AddSelectedItems = function(namePrefix, classes, disableApplyingStyleToLink){
 aspxAddStateItems(aspxGetStateController().AddSelectedItem, namePrefix, classes, disableApplyingStyleToLink);
}
ASPx.AddDisabledItems = function(namePrefix, classes, disableApplyingStyleToLink){
 aspxAddStateItems(aspxGetStateController().AddDisabledItem, namePrefix, classes, disableApplyingStyleToLink);
}
function aspxRemoveStateItems(method, namePrefix, classes){
 for(var i = 0; i < classes.length; i ++){
  for(var j = 0; j < classes[i][0].length; j ++) {
   var name = namePrefix;
   if(classes[i][0][j])
    name += "_" + classes[i][0][j];
   method.call(aspxGetStateController(), name, classes[i][1], namePrefix);
  }
 }
}
ASPx.RemoveHoverItems = function(namePrefix, classes){
 aspxRemoveStateItems(aspxGetStateController().RemoveHoverItem, namePrefix, classes);
}
ASPx.RemovePressedItems = function(namePrefix, classes){
 aspxRemoveStateItems(aspxGetStateController().RemovePressedItem, namePrefix, classes);
}
ASPx.RemoveSelectedItems = function(namePrefix, classes){
 aspxRemoveStateItems(aspxGetStateController().RemoveSelectedItem, namePrefix, classes);
}
ASPx.RemoveDisabledItems = function(namePrefix, classes){
 aspxRemoveStateItems(aspxGetStateController().RemoveDisabledItem, namePrefix, classes);
}
ASPx.AddAfterClearFocusedState = function(handler){
 aspxGetStateController().AfterClearFocusedState.AddHandler(handler);
}
ASPx.AddAfterSetFocusedState = function(handler){
 aspxGetStateController().AfterSetFocusedState.AddHandler(handler);
}
ASPx.AddAfterClearHoverState = function(handler){
 aspxGetStateController().AfterClearHoverState.AddHandler(handler);
}
ASPx.AddAfterSetHoverState = function(handler){
 aspxGetStateController().AfterSetHoverState.AddHandler(handler);
}
ASPx.AddAfterClearPressedState = function(handler){
 aspxGetStateController().AfterClearPressedState.AddHandler(handler);
}
ASPx.AddAfterSetPressedState = function(handler){
 aspxGetStateController().AfterSetPressedState.AddHandler(handler);
}
ASPx.AddAfterDisabled = function(handler){
 aspxGetStateController().AfterDisabled.AddHandler(handler);
}
ASPx.AddAfterEnabled = function(handler){
 aspxGetStateController().AfterEnabled.AddHandler(handler);
}
ASPx.AddBeforeClearFocusedState = function(handler){
 aspxGetStateController().BeforeClearFocusedState.AddHandler(handler);
}
ASPx.AddBeforeSetFocusedState = function(handler){
 aspxGetStateController().BeforeSetFocusedState.AddHandler(handler);
}
ASPx.AddBeforeClearHoverState = function(handler){
 aspxGetStateController().BeforeClearHoverState.AddHandler(handler);
}
ASPx.AddBeforeSetHoverState = function(handler){
 aspxGetStateController().BeforeSetHoverState.AddHandler(handler);
}
ASPx.AddBeforeClearPressedState = function(handler){
 aspxGetStateController().BeforeClearPressedState.AddHandler(handler);
}
ASPx.AddBeforeSetPressedState = function(handler){
 aspxGetStateController().BeforeSetPressedState.AddHandler(handler);
}
ASPx.AddBeforeDisabled = function(handler){
 aspxGetStateController().BeforeDisabled.AddHandler(handler);
}
ASPx.AddBeforeEnabled = function(handler){
 aspxGetStateController().BeforeEnabled.AddHandler(handler);
}
ASPx.AddFocusedItemKeyDown = function(handler){
 aspxGetStateController().FocusedItemKeyDown.AddHandler(handler);
}
ASPx.SetHoverState = function(element){
 aspxGetStateController().SetCurrentHoverElementBySrcElement(element);
}
ASPx.ClearHoverState = function(evt){
 aspxGetStateController().SetCurrentHoverElementBySrcElement(null);
}
ASPx.UpdateHoverState = function(evt){
 aspxGetStateController().OnMouseMove(evt, false);
}
ASPx.SetFocusedState = function(element){
 aspxGetStateController().SetCurrentFocusedElementBySrcElement(element);
}
ASPx.ClearFocusedState = function(evt){
 aspxGetStateController().SetCurrentFocusedElementBySrcElement(null);
}
ASPx.UpdateFocusedState = function(evt){
 aspxGetStateController().OnFocusMove(evt);
}
ASPx.AccessibilityMarkerClass = "dxalink";
ASPx.AssignAccessabilityEventsToChildrenLinks = function(container){
 var links = ASPx.GetNodesByPartialClassName(container, ASPx.AccessibilityMarkerClass);
 for(var i = 0; i < links.length; i++)
  ASPx.AssignAccessabilityEventsToLink(links[i]);
}
ASPx.AssignAccessabilityEventsToLink = function(link) {
 if(!ASPx.ElementContainsCssClass(link, ASPx.AccessibilityMarkerClass))
  return;
 ASPx.Evt.AttachEventToElement(link, "focus", function(e) { ASPx.UpdateFocusedState(e); });
 ASPx.Evt.AttachEventToElement(link, "blur", function(e) { ASPx.ClearFocusedState(e); });
}
ASPx.Evt.AttachEventToDocument("mousemove", function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  aspxGetStateController().OnMouseMove(evt, true);
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseDownEventName, function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  aspxGetStateController().OnMouseDown(evt);
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseUpEventName, function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  aspxGetStateController().OnMouseUp(evt);
});
ASPx.Evt.AttachEventToDocument("mouseover", function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  aspxGetStateController().OnMouseOver(evt);
});
ASPx.Evt.AttachEventToDocument("keydown", function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  aspxGetStateController().OnKeyDown(evt);
});
ASPx.Evt.AttachEventToDocument("selectstart", function(evt) {
 if(ASPx.classesScriptParsed && ASPx.StateItemsExist)
  return aspxGetStateController().OnSelectStart(evt);
});
ASPx.GetStateController = aspxGetStateController;
})();
(function () {
var SplitterHelper = ASPx.CreateClass(null, {
 constructor: function (splitter) {
  this.splitter = splitter;
 },
 GetMoveMaxDeltaSize: function (deltaSize) {
  if(deltaSize == 0)
   return 0;
  var splitter = this.splitter,
   leftPane = splitter.moveLeftPane,
   rightPane = splitter.moveRightPane;
  if(splitter.isHeavyUpdate) {
   var parent = leftPane.parent;
   var totalSize = 0, minSize = 0;
   for(var i = 0; i < parent.panes.length; i++) {
    var pane = parent.panes[i];
    if(pane.isSizePx)
     continue;
    if(pane.collapsed) {
     var collapsedSize = pane.GetSizeDiff(pane.isVertical);
     totalSize += collapsedSize;
     minSize += collapsedSize;
    }
    else {
     totalSize += pane.GetOffsetSize();
     minSize += pane.GetMinSize();
    }
   }
   var rightPanePx = rightPane.isSizePx;
   if(rightPanePx)
    deltaSize = this.GetPaneMaxDeltaSize(rightPane, -deltaSize);
   deltaSize = this.GetMaxDeltaSize(totalSize, minSize, Number.MAX_VALUE, -deltaSize);
   if(!rightPanePx)
    deltaSize = this.GetPaneMaxDeltaSize(leftPane, -deltaSize);
  }
  else {
   var parent = leftPane.parent,
    rightPaneAutoSize = rightPane.IsAutoSize(parent.isVertical),
    leftPaneAutoSize = leftPane.IsAutoSize(parent.isVertical);
   if(!rightPaneAutoSize)
    deltaSize = -this.GetPaneMaxDeltaSize(rightPane, -1 * deltaSize);
   if(!leftPaneAutoSize)
    deltaSize = this.GetPaneMaxDeltaSize(leftPane, deltaSize);
  }
  return deltaSize;
 },
 GetPaneMaxDeltaSize: function (pane, deltaSize) {
  return this.GetMaxDeltaSize(pane.GetOffsetSize(), pane.GetMinSize(), pane.maxSize, deltaSize);
 },
 GetMaxDeltaSize: function (size, min, max, deltaSize) {
  var minDeltaSize = Math.floor(min - size);
  var maxDeltaSize = Math.floor(max - size);
  if(deltaSize < minDeltaSize)
   return (size < min) ? 0 : minDeltaSize;
  else if(deltaSize > maxDeltaSize)
   return (size > max) ? 0 : maxDeltaSize;
  return deltaSize;
 },
 GetCurrentPos: function () {
  return this.splitter.moveIsVertical
   ? ASPxClientSplitter.CurrentYPos
   : ASPxClientSplitter.CurrentXPos;
 },
 SetResizingPanelVisibility: function (visible, cursor) {
  var resizingPanel = ASPx.CacheHelper.GetCachedValue(this, "resizingPanel", function () {
   var resizingPanel = document.createElement("DIV");
   resizingPanel.style.overflow = "hidden";
   resizingPanel.style.position = "absolute";
   if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 10) {
    resizingPanel.style.backgroundColor = "White";
    resizingPanel.style.filter = "alpha(opacity=1)";
   }
   resizingPanel.isVisible = false;
   return resizingPanel;
  });
  if(resizingPanel.isVisible != visible) {
   if(visible) {
    var mainElement = this.splitter.GetMainElement();
    ASPx.SetStyles(resizingPanel, {
     width: mainElement.offsetWidth,
     height: mainElement.offsetHeight
    });
    if(cursor)
     resizingPanel.style.cursor = cursor;
    mainElement.parentNode.appendChild(resizingPanel);
    ASPx.SetAbsoluteX(resizingPanel, ASPx.GetAbsoluteX(mainElement));
    ASPx.SetAbsoluteY(resizingPanel, ASPx.GetAbsoluteY(mainElement));
   }
   else
    resizingPanel.parentNode.removeChild(resizingPanel);
   resizingPanel.isVisible = visible;
  }
 }
});
SplitterHelper.Resize = function (pane1, pane2, deltaSize) {
 if(pane1.isSizePx || pane2.isSizePx) {
  var parent = pane1.parent;
  if(pane1.isSizePx && !pane1.IsAutoSize(parent.isVertical))
   pane1.size += deltaSize;
  if(pane2.isSizePx && !pane2.IsAutoSize(parent.isVertical))
   pane2.size -= deltaSize;
 }
 else {
  var c = (pane1.size + pane2.size) / (pane1.GetOffsetSize() + pane2.GetOffsetSize());
  pane1.size = c * (pane1.GetOffsetSize() + deltaSize);
  pane2.size = c * (pane2.GetOffsetSize() - deltaSize);
 }
};
SplitterHelper.IsAllowResize = function (pane1, pane2) {
 if(!pane1 || !pane2)
  return false;
 if(!pane1.splitter.enabled)
  return false;
 var bothAutoSizeOrPercent = pane1.isVertical
  ? pane1.autoHeight && pane2.autoHeight || pane1.autoHeight && !pane2.isSizePx || !pane1.isSizePx && pane2.autoHeight
  : pane1.autoWidth && pane2.autoWidth || pane1.autoWidth && !pane2.isSizePx || !pane1.isSizePx && pane2.autoWidth;
 if(bothAutoSizeOrPercent)
  return false;
 return pane1.splitter.allowResize && pane1.allowResize && pane2.allowResize;
};
var ASPxSplitterPaneHelper = ASPx.CreateClass(null, {
 constructor: function (pane) {
  this.pane = pane;
  this.indexPath = this.GetIndexPath();
  var paneIdPostfix = this.pane.isRootPane ? "" : "_" + this.indexPath;
  var separatorIdPostfix = paneIdPostfix + "_S";
  this.postfixes = {
   pane: paneIdPostfix,
   separator: separatorIdPostfix,
   table: paneIdPostfix + "_T",
   contentContainer: paneIdPostfix + "_CC",
   collapseForwardButton: separatorIdPostfix + "_CF",
   collapseBackwardButton: separatorIdPostfix + "_CB",
   collapseButtonsSeparator: separatorIdPostfix + "_CS"
  };
  this.buttonsTableExists = !!this.GetCollapseBackwardButton();
  this.separatorImageExists = !!this.GetCollapseButtonsSeparatorImage();
  this.buttonsExists = this.buttonsTableExists || this.separatorImageExists;
 },
 GetCachedValue: function (name, func) {
  return ASPx.CacheHelper.GetCachedValue(this, name, func);
 },
 DropCachedValue: function (name) {
  ASPx.CacheHelper.DropCachedValue(this, name);
 },
 GetIndexPath: function () {
  if(this.pane.isRootPane)
   return "";
  var parentPane = this.pane.parent;
  if(parentPane.isRootPane)
   return "" + this.pane.index;
  return parentPane.helper.indexPath + ASPx.ItemIndexSeparator + this.pane.index;
 },
 GetChildElement: function (idPostfix) {
  return this.pane.splitter.GetChildElement(idPostfix);
 },
 GetPaneElement: function () {
  return this.GetChildElement(this.postfixes.pane);
 },
 GetTableElement: function () {
  return this.GetChildElement(this.postfixes.table);
 },
 GetContentContainerElement: function () {
  return this.GetCachedValue(this.postfixes.contentContainer, 
   function () { return ASPx.GetElementById(this.pane.splitter.name + this.postfixes.contentContainer); });
 },
 DropContentContainerElementFromCache: function () {
  this.DropCachedValue(this.postfixes.contentContainer);
 },
 GetSeparatorElementId: function () {
  return this.pane.splitter.name + this.postfixes.separator;
 },
 GetSeparatorElement: function () {
  return this.GetChildElement(this.postfixes.separator);
 },
 GetSeparatorDivElement: function () {
  return this.GetCachedValue("separatorDivElement", function () {
   var separatorElement = this.GetSeparatorElement();
   return separatorElement ? separatorElement.childNodes[0] : null;
  });
 },
 GetCollapseBackwardButton: function () {
  return this.GetChildElement(this.postfixes.collapseBackwardButton);
 },
 GetCollapseForwardButton: function () {
  return this.GetChildElement(this.postfixes.collapseForwardButton);
 },
 GetCollapseButtonsSeparator: function () {
  return this.GetChildElement(this.postfixes.collapseButtonsSeparator);
 },
 GetCollapseButtonsTable: function () {
  return this.GetCachedValue("collapseButtonsTable", function () {
   return this.buttonsTableExists ? ASPx.GetParentByTagName(this.GetCollapseForwardButton(), "TABLE") : null;
  });
 },
 GetCollapseButtonsSeparatorImage: function () {
  return this.GetCachedValue("collapseButtonsSeparatorImage", function () {
   var separator = this.GetCollapseButtonsSeparator();
   if(!separator) {
    if(!this.buttonsTableExists)
     separator = this.GetSeparatorElement();
    else
     return null;
   }
   return ASPx.GetNodeByTagName(separator, "IMG", 0);
  });
 },
 GetButtonUpdateElement: function (buttonElement) {
  return !this.pane.isVertical ? buttonElement.parentNode : buttonElement;
 },
 ClearElementSizeProperty: function (property) {
  var element = this.GetPaneElement(),
   isVertical = property === "width";
  this.pane.savedSizeProperty = element.style[property];
  element.style[property] = "";
  if(!this.pane.IsAutoSize(isVertical)) {
   var contentContainerElement = this.GetContentContainerElement();
   this.pane.savedContentSizeProperty = contentContainerElement.style[property];
   contentContainerElement.style[property] = (this.pane.GetMinSize() - (isVertical ? this.pane.contentContainerWidthDiff : this.pane.contentContainerHeightDiff)) + "px";
  }
 },
 RestoreElementSizeProperty: function (property) {
  if(this.pane.savedSizeProperty) {
   this.GetPaneElement().style[property] = this.pane.savedSizeProperty;
   this.pane.savedSizeProperty = null;
  }
  if(!this.pane.IsAutoSize(property === "width")) {
   this.GetContentContainerElement().style[property] = this.pane.savedContentSizeProperty;
   this.pane.savedContentSizeProperty = null;
  }
 },
 SetEmptyDivVisible: function (visible) {
  var emptyDiv = this.GetCachedValue("emptyDiv", function () {
   var emptyDiv = document.createElement("DIV");
   emptyDiv.style.cssText = "overflow: hidden; width: 0px; height: 0px";
   emptyDiv.isVisible = false;
   return emptyDiv;
  });
  if(visible != emptyDiv.isVisible) {
   if(visible)
    this.GetPaneElement().appendChild(emptyDiv);
   else
    this.GetPaneElement().removeChild(emptyDiv);
   emptyDiv.isVisible = visible;
  }
 },
 HasCollapsedParent: function () {
  var parent = this.pane.parent;
  if(parent)
   return parent.collapsed || parent.helper.HasCollapsedParent();
  return false;
 },
 HasVisibleAutoSizeChildren: function (isVertical) {
  var result = false;
  if(!ASPx.IsExists(isVertical))
   isVertical = this.pane.isVertical;
  for(var i = 0; i < this.pane.panes.length; i++) {
   var pane = this.pane.panes[i];
   result = result || !pane.collapsed && pane.IsAutoSize(isVertical) && (!pane.panes.length || pane.helper.HasVisibleAutoSizeChildren(isVertical));
  }
  return result;
 }
});
var ASPxSplitterResizingPointer = ASPx.CreateClass(null, {
 constructor: function (elementId) {
  this.elementId = elementId;
  this.element = ASPx.GetElementById(this.elementId);
  this.x = 0;
  this.y = 0;
 },
 SetCursor: function (cursor) {
  this.element.style.cursor = cursor;
 },
 SetPosition: function (x, y) {
  this.x = x;
  this.y = y;
  ASPx.SetAbsoluteY(this.element, this.y);
  ASPx.SetAbsoluteX(this.element, this.x);
 },
 SetVisibility: function (isVisible) {
  ASPx.SetElementDisplay(this.element, isVisible);
 },
 Move: function (delta, isX) {
  if(isX)
   this.x += delta;
  else
   this.y += delta;
  this.SetPosition(this.x, this.y);
 },
 AttachToElement: function (element, isShow) {
  ASPx.SetStyles(this.element, {
   width: element.offsetWidth, height: element.offsetHeight
  });
  this.SetVisibility(true);
  this.SetPosition(ASPx.GetAbsoluteX(element), ASPx.GetAbsoluteY(element));
 }
});
var ASPxClientSplitter = ASPx.CreateClass(ASPxClientControl, {
 constructor: function (name) {
  this.constructor.prototype.constructor.call(this, name);
  this.leadingAfterInitCall = ASPxClientControl.LeadingAfterInitCallConsts.Reverse;
  this.emptyUrls = [
   "javascript:false",
   "about:blank",
   "#"
  ];
  this.width = "100%";
  this.height = "200px";
  this.helper = new SplitterHelper(this);
  this.resizingPointer = new ASPxSplitterResizingPointer(this.name + "_RP");
  this.rootPane = new ASPxClientSplitterPane(this, null, 0, 0, {});
  this.liveResizing = false;
  this.allowResize = true;
  this.defaultMinSize = 5;
  this.showSeparatorImage = true;
  this.showCollapseBackwardButton = false;
  this.showCollapseForwardButton = false;
  this.fullScreen = false;
  this.prepared = false;
  this.PaneResizing = new ASPxClientEvent();
  this.PaneResized = new ASPxClientEvent();
  this.PaneCollapsing = new ASPxClientEvent();
  this.PaneCollapsed = new ASPxClientEvent();
  this.PaneExpanding = new ASPxClientEvent();
  this.PaneExpanded = new ASPxClientEvent();
  this.PaneResizeCompleted = new ASPxClientEvent();
  this.PaneContentUrlLoaded = new ASPxClientEvent();
  this.autoHeightPanes = [];
  this.autoWidthPanes = [];
 },
 CreatePanes: function (panesInfo) {
  this.CreatePanesInternal(this.rootPane, panesInfo);
  this.rootPane.ForEach("UpdateSize");
  this.rootPane.ForEach("UpdateAutoSize");
  this.state = this.GetStateObj(panesInfo);
 },
 CreatePanesInternal: function (parent, panesInfo) {
  var prevPane = null,
   visibleIndex = 0;
  for(var i = 0; i < panesInfo.length; i++) {
   var paneInfo = panesInfo[i];
   if(!paneInfo.v) continue; 
   var pane = new ASPxClientSplitterPane(this, parent, visibleIndex++, i, paneInfo);
   updatePrevNext(pane);
   updateAutoSize(parent, pane.autoWidth, pane.autoHeight);
   parent.panes.push(pane);
   if(ASPx.IsExists(paneInfo["i"]))
    this.CreatePanesInternal(pane, paneInfo["i"]);
  }
  function updatePrevNext(pane) {
   pane.prevPane = prevPane;
   if(prevPane != null)
    prevPane.nextPane = pane;
   prevPane = pane;
  }
  function updateAutoSize(pane, autoWidth, autoHeight) {
   if(pane && (autoWidth || autoHeight)) {
    if(autoWidth)
     pane.autoWidth = true;
    if(autoHeight)
     pane.autoHeight = true;
    if(!pane.splitter.hasAutoSizePane)
     pane.splitter.hasAutoSizePane = true;
    updateAutoSize(pane.parent, autoWidth, autoHeight);
   }
  }
 },
 GetStateObj: function (panesInfo) {
  var result = [];
  for(var i = 0; i < panesInfo.length; i++) {
   var paneState = {};
   if(panesInfo[i].st) {
    paneState.st = panesInfo[i].st;
    paneState.s = panesInfo[i].s;
   }
   if(panesInfo[i].c)
    paneState.c = panesInfo[i].c;
   if(panesInfo[i]["i"])
    paneState["i"] = this.GetStateObj(panesInfo[i]["i"]);
   result.push(paneState);
  }
  return result;
 },
 GetClientStateString: function () {
  return ASPx.Json.ToJson(this.GetClientStateObject());
 },
 GetClientStateObject: function () {
  return this.RefreshState(this.state, this.rootPane.panes);
 },
 RefreshState: function (state, panes) {
  for(var i = 0; i < panes.length; i++) {
   var pane = panes[i];
   var paneState = state[pane._index];
   paneState.s = Math.round(pane.size * 1000) / 1000;
   paneState.st = pane.sizeType;
   paneState.c = pane.collapsed ? 1 : 0;
   if(pane.panes.length == 0) {
    paneState.spt = Math.round(pane.scrollTop);
    paneState.spl = Math.round(pane.scrollLeft);
   }
   if(pane.panes.length > 0)
    this.RefreshState(paneState["i"], pane.panes);
  }
  return state;
 },
 InlineInitialize: function () {
  this.EnsureFullscreenMode();
  this.rootPane.ForEach("Initialize");
  this.constructor.prototype.InlineInitialize.call(this);
 },
 EnsureFullscreenMode: function () {
  if(this.fullScreen) {
   var overflowProperty = "overflow",
    oldIEOverflowAutoProperty = null,
    autoWidth = this.rootPane.autoWidth,
    autoHeight = this.rootPane.autoHeight;
   if(autoWidth && autoHeight) {
    overflowProperty = null;
    oldIEOverflowAutoProperty = "overflow";
   }
   else if(autoWidth) {
    overflowProperty = "overflowY";
    oldIEOverflowAutoProperty = "overflowX";
   }
   else if(autoHeight) {
    overflowProperty = "overflowX";
    oldIEOverflowAutoProperty = "overflowY";
   }
   var element = this.GetMainElement().parentNode;
   while(element && element.tagName) {
    var tagName = element.tagName.toLowerCase();
    if(tagName != "tbody") {
     element.style.height = "100%";
     if(tagName == "form" || tagName == "body" || tagName == "html") {
      element.style.margin = "0px";
      element.style.padding = "0px";
      if(overflowProperty)
       element.style[overflowProperty] = "hidden";
      if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9 && tagName == "form" && oldIEOverflowAutoProperty)
       element.style[oldIEOverflowAutoProperty] = "auto";
      if((autoHeight != autoWidth || (ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9)) && (tagName == "body" || tagName == "html"))
       element.style.overflow = "hidden";
     }
     if(tagName == "html")
      break;
    }
    element = element.parentNode;
   }
  }
 },
 Initialize: function () {
  this.constructor.prototype.Initialize.call(this);
  this.rootPane.ForEach("CreateContentUrlIFrame", true);
 },
 AfterInitialize: function () {
  this.constructor.prototype.AfterInitialize.call(this);
  this.rootPane.ForEach("RaiseResizedEvent", true);
 },
 IsPrepared: function () {
  return this.prepared;
 },
 Prepare: function () {
  if(this.IsPrepared() || !this.IsDisplayed())
   return;
  this.rootPane.ForEach("Prepare", true);
  ASPxClientSplitter.Instances.Add(this);
  this.prepared = true;
 },
 UpdateAdjustmentFlags: function () {
  var mainElement = this.GetMainElement();
  if(mainElement) {
   var mainElementStyle = ASPx.GetCurrentStyle(mainElement);
   this.UpdatePercentSizeConfig([mainElementStyle.width, this.width], [mainElementStyle.height, this.height]);
  }
 },
 AdjustControlCore: function () {
  this.Prepare();
  this.UpdateControlSizes(false, this.isInsideHierarchyAdjustment);
 },
 NeedCollapseControlCore: function () {
  return true;
 },
 NeedUpdateControlSizes: function () {
  return ASPx.IsPercentageSize(this.width) || ASPx.IsPercentageSize(this.height) || !this.sizeUpdatedOnce;
 },
 UpdateControlSizes: function (forceUpdate, disableControlsAdjustment) {
  if(!(forceUpdate || this.NeedUpdateControlSizes()) || !this.IsDisplayed())
   return;
  var element = this.GetMainElement(),
   autoHeightSpacer;
  if(this.rootPane.autoHeight && !ASPx.Browser.Chrome) {
   autoHeightSpacer = ASPx.CreateHtmlElementFromString("<div style='float: left; width: 0px; height: " + element.offsetHeight + "px'></div>");
   element.parentNode.insertBefore(autoHeightSpacer, element);
  }
  element.style.width = this.width;
  element.style.height = this.height;
  var focusedElement = ASPx.GetFocusedElement(); 
  if(ASPx.Browser.IE && ASPx.Browser.Version === 9) {  
   ASPx.Attr.ChangeStyleAttribute(this.GetMainElement(), "display", "none");
   this.UpdatePanesVisible(ASPx.Attr.ChangeStyleAttribute);
   ASPx.Attr.RestoreStyleAttribute(this.GetMainElement(), "display");
  }
  else
   this.UpdatePanesVisible(ASPx.Attr.ChangeStyleAttribute);
  if(ASPx.Browser.WebKitFamily)
   this.CreateWebkitSpecialElement();
  var newWidth = ASPx.GetClearClientWidth(element);
  var newHeight = ASPx.GetClearClientHeight(element);
  this.UpdatePanesVisible(ASPx.Attr.RestoreStyleAttribute);
  if(autoHeightSpacer)
   element.parentNode.removeChild(autoHeightSpacer);
  if((this.rootPane.offsetWidth != newWidth) || (this.rootPane.offsetHeight != newHeight)) {
   this.rootPane.offsetWidth = Math.max(newWidth, this.defaultMinSize);
   this.rootPane.offsetHeight = Math.max(newHeight, this.defaultMinSize);
   this.rootPane.UpdatePanes(true);
  }
  try { 
   if(focusedElement &&  
    !ASPx.Browser.AndroidMobilePlatform && 
    !(ASPx.Browser.MacOSMobilePlatform && ASPx.Browser.Version >= 6) && 
    ASPx.GetIsParent(element, focusedElement) && 
    !(focusedElement.tagName && focusedElement.tagName == "IFRAME")) { 
    focusedElement.blur();
    focusedElement.focus(); 
   }
  }
  catch (e) { }
  this.rootPane.ForEach("ApplyScrollPosition", true);
  if(this.isInitialized && !disableControlsAdjustment)
   this.rootPane.ForEach("AdjustControls", true);
  if(this.IsPrepared())
   this.sizeUpdatedOnce = true;
  this.UpdateCookie();
 },
 UpdateAutoSizePanes: function (forced) {
  if(this.hasAutoSizePane) {
   var heightChanged = this.UpdateAutoHeightPanes(forced),
    widthChanged = this.UpdateAutoWidthPanes(forced);
   if(forced || heightChanged || widthChanged)
    this.rootPane.ForEach("UpdateChildrenSize");
  }
 },
 UpdateAutoHeightPanes: function (forced) {
  var changed = false;
  for(var i = 0; i < this.autoHeightPanes.length; i++)
   changed = this.autoHeightPanes[i].IsContentHeightChanged() || changed;
  if(forced || changed)
   this.UpdateAutoSizePanesSizes(false);
  return changed;
 },
 UpdateAutoWidthPanes: function (forced) {
  var changed = false;
  for(var i = 0; i < this.autoWidthPanes.length; i++)
   changed = this.autoWidthPanes[i].IsContentWidthChanged() || changed;
  if(forced || changed)
   this.UpdateAutoSizePanesSizes(true);
  return changed;
 },
 UpdateAutoSizePanesSizes: function (isVertical) {
  var autoSizePanes = isVertical
   ? this.autoWidthPanes
   : this.autoHeightPanes,
   property = isVertical ? "width" : "height",
   percentPanes = [];
  for(var i = 0; i < autoSizePanes.length; i++) {
   var pane = autoSizePanes[i];
   if(!pane.helper.HasCollapsedParent()) {
    pane.helper.ClearElementSizeProperty(property);
    for(var child = pane.panes[0]; child; child = child.nextPane)
     if(!child.isSizePx) {
      percentPanes.push(child);
      child.helper.ClearElementSizeProperty(property);
     }
   }
  }
  for(var i = 0; i < autoSizePanes.length; i++)
   autoSizePanes[i].UpdateOffsetSize(isVertical);
  for(var i = 0; i < autoSizePanes.length; i++) {
   var pane = autoSizePanes[i];
   if(!pane.helper.HasCollapsedParent())
    pane.helper.RestoreElementSizeProperty(property);
  }
  for(var i = 0; i < percentPanes.length; i++)
   percentPanes[i].helper.RestoreElementSizeProperty(property);
 },
 UpdatePanesVisible: function (func) {
  var firstTD = this.rootPane.panes[0].helper.GetPaneElement();
  func(firstTD, "width", "1px");
  func(firstTD, "height", "1px");
  func(this.rootPane.panes[0].helper.GetContentContainerElement(), "display", "none");
  for(var i = 1; i < this.rootPane.panes.length; i++) {
   var pane = this.rootPane.panes[i];
   func(pane.helper.GetPaneElement(), "display", "none");
   var separator = pane.helper.GetSeparatorElement();
   if(separator)
    func(separator, "display", "none");
  }
 },
 UpdateCookie: function () {
  if(this.cookieName && this.cookieName != "") {
   ASPx.Cookie.DelCookie(this.cookieName);
   ASPx.Cookie.SetCookie(this.cookieName, this.GetClientStateString());
  }
 },
 UpdateStateObject: function(){
  this.UpdateStateObjectWithObject({ state: this.GetClientStateObject() });
 },
 GetPaneByPath: function (panePath, parentPane) {
  var pane = parentPane || this.rootPane;
  for(var i = 0; i < panePath.length; i++)
   pane = pane.panes[panePath[i]];
  return pane;
 },
 GetPaneByStringPath: function (paneStringPath, paneIndexSeparator) {
  if(!paneIndexSeparator)
   paneIndexSeparator = ASPx.ItemIndexSeparator;
  return this.GetPaneByPath(paneStringPath.split(paneIndexSeparator));
 },
 IsDocumentWidthChanged: function () {
  var documentWidth = this.GetDocumentWidth();
  if(!ASPx.IsExists(this.lastDocumentWidth) || documentWidth != this.lastDocumentWidth) {
   this.lastDocumentWidth = documentWidth;
   return true;
  }
  return false;
 },
 GetDocumentWidth: function () {
  if(this.fullScreen && (this.rootPane.autoHeight || this.rootPane.autoWidth))
   return this.GetDocumentWidthFullscreen();
  return ASPx.GetDocumentWidth();
 },
 GetDocumentWidthFullscreen: function () {
  var sizeElement = ASPx.CacheHelper.GetCachedValue(this, "fullscreenWidthElement", function () {
   var element = ASPx.CreateHtmlElementFromString("<div style='width: 100%; height: 0px'></div>");
   this.GetMainElement().parentNode.insertBefore(element, this.GetMainElement());
   return element;
  });
  return sizeElement.offsetWidth;
 },
 CreateWebkitSpecialElement: function () {
  var webkitSpecialElement = document.createElement("DIV"),
    element = this.GetMainElement();
  element.parentNode.appendChild(webkitSpecialElement);
  var offsetHeight = element.offsetHeight;
  element.parentNode.removeChild(webkitSpecialElement);
 },
 OnBrowserWindowResize: function () {
  this.UpdateControlSizes(false, true);
  this.lastDocumentWidth = this.GetDocumentWidth();
 },
 OnSeparatorMouseDown: function (moveRightPanePath) {
  var pane = this.GetPaneByStringPath(moveRightPanePath);
  var invert = this.rtl && !pane.isVertical;
  this.moveRightPane = invert ? pane.prevPane : pane;
  this.moveLeftPane = invert ? pane : pane.prevPane;
  this.moveIsVertical = pane.isVertical;
  this.moveStartPos = this.helper.GetCurrentPos();
  this.moveLastPos = this.moveStartPos;
  this.isHeavyUpdate = this.moveLeftPane.isSizePx != this.moveRightPane.isSizePx
   && !this.moveLeftPane.parent.IsAutoSize();
  if(!SplitterHelper.IsAllowResize(this.moveLeftPane, this.moveRightPane))
   return false;
  if(this.moveLeftPane.collapsed || this.moveRightPane.collapsed)
   return false;
  if(this.RaiseCancelEvent("PaneResizing", this.moveRightPane) || this.RaiseCancelEvent("PaneResizing", this.moveLeftPane))
   return false;
  var cursor = this.moveIsVertical ? "n-resize" : "w-resize";
  if(!this.liveResizing) {
   this.resizingPointer.SetCursor(cursor);
   this.resizingPointer.AttachToElement(pane.helper.GetSeparatorElement(), true);
  }
  else
   this.isInLiveResizing = true;
  this.helper.SetResizingPanelVisibility(true, cursor);
  return true;
 },
 OnSeparatorMouseUp: function () {
  this.helper.SetResizingPanelVisibility(false);
  if(!this.liveResizing || !this.isHeavyUpdate) {
   var deltaSize = this.moveLastPos - this.moveStartPos;
   if(!this.moveLeftPane.IsAutoSize(!this.moveLeftPane.isVertical)) {
    this.moveLeftPane.SetOffsetSize(this.moveLeftPane.GetOffsetSize() - deltaSize);
    this.moveLeftPane.inResizing = true;
   }
   if(!this.moveRightPane.IsAutoSize(!this.moveRightPane.isVertical)) {
    this.moveRightPane.SetOffsetSize(this.moveRightPane.GetOffsetSize() + deltaSize);
    this.moveRightPane.inResizing = true;
   }
   if(!this.liveResizing || !this.hasAutoSizePane)
    SplitterHelper.Resize(this.moveLeftPane, this.moveRightPane, deltaSize);
   this.moveLeftPane.parent.ForEach("UpdateChildrenSize");
  }
  if(!this.liveResizing)
   this.resizingPointer.SetVisibility(false);
  else
   this.isInLiveResizing = null;
  this.UpdateAutoSizePanes(true);
  this.moveLeftPane.parent.ForEach("AdjustControls");
  if(!this.liveResizing && (this.rootPane.autoHeight || this.rootPane.autoWidth) && this.IsDocumentWidthChanged())
   this.UpdateControlSizes();
  this.moveLeftPane.inResizing = null;
  this.moveRightPane.inResizing = null;
  this.UpdateCookie();
  this.RaiseEvent("PaneResizeCompleted", this.moveLeftPane);
  this.RaiseEvent("PaneResizeCompleted", this.moveRightPane);
 },
 OnMouseMove: function () {
  var deltaSize = this.helper.GetMoveMaxDeltaSize(this.helper.GetCurrentPos() - this.moveLastPos);
  if(deltaSize == 0) return;
  if(!this.moveLeftPane.IsAutoSize(!this.moveLeftPane.isVertical) || this.liveResizing)
   this.moveLeftPane.SetOffsetSize(this.moveLeftPane.GetOffsetSize() + deltaSize);
  if(!this.moveRightPane.IsAutoSize(!this.moveRightPane.isVertical) || this.liveResizing)
   this.moveRightPane.SetOffsetSize(this.moveRightPane.GetOffsetSize() - deltaSize);
  if(this.liveResizing) {
   var changePaneSize = function (pane, deltaSize) {
    pane.SetContentVisible(false);
    if(pane.ApplyElementSize()) {
     pane.ForEach("UpdateChildrenSize");
     pane.SetContentVisible(true);
     pane.RaiseResizedEvent();
    }
   }
   if(this.isHeavyUpdate || this.moveLeftPane.parent.autoHeight || this.moveLeftPane.parent.autoWidth) {
    SplitterHelper.Resize(this.moveLeftPane, this.moveRightPane, this.moveLeftPane.isSizePx || this.moveRightPane.isSizePx ? deltaSize : 0);
    this.moveLeftPane.parent.ForEach("UpdateChildrenSize");
   }
   else {
    changePaneSize(this.moveLeftPane, deltaSize, this.helper);
    changePaneSize(this.moveRightPane, -deltaSize, this.helper);
   }
   this.UpdateAutoSizePanes(this.liveResizing);
  }
  else
   this.resizingPointer.Move(deltaSize, !this.moveIsVertical);
  this.moveLastPos += deltaSize;
 },
 OnCollapseButtonClick: function (panePath, forwardDirection) {
  var rightPane = this.GetPaneByStringPath(panePath);
  var pane1 = forwardDirection ? rightPane.prevPane : rightPane;
  var pane2 = forwardDirection ? rightPane : rightPane.prevPane;
  if(pane1.collapsed && pane1.maximizedPane == pane2) {
   if(!this.RaiseCancelEvent("PaneExpanding", pane1)) {
    pane1.Expand();
    if(this.savedSize) {
     var rootPaneChildren = this.rootPane.panes;
     for(var i = 0; i < rootPaneChildren.length; i++) {
      if(rootPaneChildren[i].IsCollapsed())
       return;
     }
     for(var sizeProperty in this.savedSize)
      this.GetMainElement().style[sizeProperty] = this.savedSize[sizeProperty];
     this.savedSize = null;
    }
   }
  }
  else {
   if(!this.RaiseCancelEvent("PaneCollapsing", pane2)) {
    if(pane2.NeedResetSplitterSizeOnCollapsing(pane1)) {
     if(!this.savedSize)
      this.savedSize = {};
     var sizeProperty = pane1.isVertical ? "height" : "width";
     if(!this.savedSize[sizeProperty]) {
      this.savedSize[sizeProperty] = this.GetMainElement().style[sizeProperty];
      this.GetMainElement().style[sizeProperty] = "";
     }
    }
    pane2.Collapse(pane1);
   }
  }
 },
 IsEmptyUrl: function (url) {
  for(var i = 0; i < this.emptyUrls.length; i++)
   if(url == this.emptyUrls[i])
    return true;
  return false;
 },
 RaiseEvent: function (eventName, pane) {
  if(this.isInitialized)
   this[eventName].FireEvent(this, new ASPxClientSplitterPaneEventArgs(pane));
 },
 RaiseCancelEvent: function (eventName, pane) {
  var args = new ASPxClientSplitterPaneCancelEventArgs(pane);
  this[eventName].FireEvent(this, args);
  return args.cancel;
 },
 GetPaneCount: function () {
  return this.rootPane.GetPaneCount();
 },
 GetPane: function (index) {
  return this.rootPane.GetPane(index);
 },
 GetPaneByName: function (name) {
  return this.rootPane.GetPaneByName(name);
 },
 SetAllowResize: function (allowResize) {
  if(this.allowResize == allowResize)
   return;
  this.allowResize = allowResize;
  this.rootPane.ForEach("UpdateSeparatorStyle", true);
 },
 GetLayoutData: function() {
  return this.GetClientStateString();
 },
 SetWidth: function (width) {
  this.width = width + "px";
  if(this.IsPrepared())
   this.UpdateControlSizes(true);
 },
 SetHeight: function (height) {
  this.height = height + "px";
  if(this.IsPrepared())
   this.UpdateControlSizes(true);
 }
});
ASPxClientSplitter.Cast = ASPxClientControl.Cast;
var ASPxClientSplitterPane = ASPx.CreateClass(null, {
 constructor: function (splitter, parent, visibleIndex, index, paneInfo) {
  this.splitter = splitter;
  this.parent = parent;
  this.index = visibleIndex;
  this._index = index;
  this.name = paneInfo.n || "";
  this.isRootPane = (this.parent == null);
  this.helper = new ASPxSplitterPaneHelper(this);
  this.prevPane = null;
  this.nextPane = null;
  this.panes = [];
  this.isVertical = this.isRootPane ? false : !parent.isVertical;
  this.hasSeparator = (this.index > 0);
  this.collapsed = ASPx.IsExists(paneInfo.c);
  this.size = ASPx.IsExists(paneInfo.s) ? paneInfo.s : 0;
  this.sizeType = ASPx.IsExists(paneInfo.st) ? paneInfo.st : null;
  this.autoWidth = ASPx.IsExists(paneInfo.aw);
  this.autoHeight = ASPx.IsExists(paneInfo.ah);
  this.maxSize = ASPx.IsExists(paneInfo.smax) ? paneInfo.smax : Number.MAX_VALUE;
  this.minSize = ASPx.IsExists(paneInfo.smin) ? paneInfo.smin : this.splitter.defaultMinSize;
  this.allowResize = !ASPx.IsExists(paneInfo.nar);
  this.showCollapseBackwardButton = ASPx.IsExists(paneInfo.scbb);
  this.showCollapseForwardButton = ASPx.IsExists(paneInfo.scfb);
  this.iframe = {};
  if(paneInfo.iframe) {
   this.iframe = {
    src: paneInfo.iframe[0],
    scrolling: paneInfo.iframe[1]
   };
   if(paneInfo.iframe[2] != "")
    this.iframe.name = paneInfo.iframe[2];
   if(paneInfo.iframe[3] != "")
    this.iframe.title = paneInfo.iframe[3];
   this.isContentUrl = true;
  }
  this.scrollTop = paneInfo.spt || 0;
  this.scrollLeft = paneInfo.spl || 0;
  this.isSizePx = (this.sizeType == "px");
  this.maximizedPane = null;
  this.dragPrevented = false;
  this.offsetWidth = 0;
  this.offsetHeight = 0;
  this.widthDiff = 0;
  this.heightDiff = 0;
  this.contentContainerWidthDiff = 0;
  this.contentContainerHeightDiff = 0;
  this.collapsedWidthDiff = 0;
  this.collapsedHeightDiff = 0;
  this.isASPxClientSplitterPane = true;
 },
 UpdateSize: function () {
  if(!this.panes.length) return;
  var prcSum = 0,
   emptyPanesCount = 0;
  for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
   if(!pane.sizeType)
    emptyPanesCount++;
   else if(pane.sizeType == "%")
    prcSum += pane.size;
  }
  if(emptyPanesCount) {
   var emptyPaneSize = Math.max(100 - prcSum, 0) / emptyPanesCount;
   for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
    if(!pane.sizeType) {
     pane.sizeType = "%";
     pane.size = emptyPaneSize;
    }
   }
  }
  if(prcSum && (!emptyPanesCount && prcSum != 100 || prcSum > 100)) {
   for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
    if(pane.sizeType == "%")
     pane.size = 100 * pane.size / prcSum;
   }
  }
 },
 UpdateAutoSize: function () {
  if(this.panes.length) {
   var propertyAll = this.isVertical ? "autoHeight" : "autoWidth",
    propertyOne = this.isVertical ? "autoWidth" : "autoHeight";
   if(this[propertyAll]) {
    for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
     pane[propertyAll] = true;
    }
   }
   if(this[propertyOne]) {
    var selected;
    for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
     if(pane[propertyOne] || !pane.isSizePx || pane.isSizePx && !selected && !pane.nextPane)
      selected = pane;
     if(pane[propertyOne])
      break;
    }
    selected[propertyOne] = true;
   }
   for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
    if(pane.isSizePx)
     continue;
    if(pane[propertyOne]) {
     pane.size = pane.GetMinSize();
     pane.sizeType = "px";
     pane.isSizePx = true;
    }
   }
  }
  if(!this.isRootPane) {
   if(this.autoHeight)
    this.splitter.autoHeightPanes.push(this);
   if(this.autoWidth)
    this.splitter.autoWidthPanes.push(this);
  }
 },
 IsAutoSize: function (isVertical) {
  if(isVertical == null)
   isVertical = this.isVertical;
  return isVertical ? this.autoWidth : this.autoHeight;
 },
 IsContentHeightChanged: function () {
  var contentHeight = this.helper.GetContentContainerElement().offsetHeight;
  if(!ASPx.IsExists(this.lastContentHeight) || contentHeight != this.lastContentHeight) {
   this.lastContentHeight = contentHeight;
   return true;
  }
  return false;
 },
 IsContentWidthChanged: function () {
  var contentWidth = this.helper.GetContentContainerElement().offsetWidth;
  if(!ASPx.IsExists(this.lastContentWidth) || contentWidth != this.lastContentWidth) {
   this.lastContentWidth = contentWidth;
   return true;
  }
  return false;
 },
 UpdateOffsetSize: function (isVertical) {
  var hasPanes = !!this.panes.length,
   contentContainerSizeDiff = hasPanes
    ? 0
    : isVertical
     ? this.widthDiff
     : this.heightDiff,
    contentSize = 0;
  if(this.isContentUrl && !hasPanes) {
   var element = this.helper.GetContentContainerElement();
   element.style.display = "none";
  }
  var contentSize = this.GetContentMinSize(isVertical);
  this.SetOffsetSize(Math.max(this.GetMinSize(!isVertical), contentSize), !isVertical);
  if(this.isContentUrl && !hasPanes) {
   element.style[isVertical ? "width" : "height"] = this.isVertical || isVertical
    ? "100%"
    : this.helper.GetPaneElement().offsetHeight - contentContainerSizeDiff + "px";
   element.style.display = "";
  }
 },
 GetContentMinSize: function (isVertical) {
  if(!this.panes.length) {
   var contentContainerElement = this.helper.GetContentContainerElement(),
    contentContainerSizeDiff = isVertical
     ? this.widthDiff
     : this.heightDiff;
   return (isVertical ? contentContainerElement.offsetWidth : contentContainerElement.offsetHeight) + contentContainerSizeDiff;
  }
  var contentSize = 0;
  if(this.isVertical != isVertical)
   for(var pane = this.panes[0]; pane; pane = pane.nextPane)
    contentSize = Math.max(contentSize, pane.GetContentMinSize(isVertical));
  else {
   for(var pane = this.panes[0]; pane; pane = pane.nextPane)
    contentSize += pane.GetContentMinSize(isVertical);
   contentSize += this.GetTotalSeparatorsSize(!this.isVertical);
  }
  return contentSize;
 },
 Initialize: function () {
  this.InitializePreventDragging();
  if(this.isRootPane)
   return;
  if(this.collapsed) {
   if(this.IsFirstPane())
    this.maximizedPane = this.GetNextPane();
   else if(this.IsLastPane())
    this.maximizedPane = this.GetPrevPane();
   else if(this.prevPane.maximizedPane && this.IsFirstPane())
    this.maximizedPane = this.prevPane;
   else
    this.maximizedPane = this.nextPane;
   if(this.maximizedPane == null)
    this.collapsed = false;
  }
 },
 Prepare: function () {
  var EvaluateWidthDiff = function (element) {
   return element.offsetWidth - element.clientWidth;
  };
  var EvaluateHeightDiff = function (element) {
   var elementClientHeight = ((ASPx.Browser.Safari && (ASPx.Browser.Version < 4)) || (ASPx.Browser.Chrome && (ASPx.Browser.Version < 2))) ? (element.offsetHeight - element.clientTop * 2) : element.clientHeight;
   return element.offsetHeight - elementClientHeight;
  };
  this.GetSeparatorSize();
  var element = this.helper.GetPaneElement();
  if(ASPx.Browser.IE && ASPx.Browser.MajorVersion == 9) { 
   var b203253_TestWidth = EvaluateWidthDiff(element);
   if(b203253_TestWidth > 10000) { 
    ASPx.Attr.ChangeStyleAttribute(document.body, "width", "1px");
    var b203253_BodyWidthChanged = true;
   }
  }
  this.widthDiff = EvaluateWidthDiff(element);
  this.heightDiff = EvaluateHeightDiff(element); 
  if(this.panes.length == 0) {
   var contentContainerElement = this.helper.GetContentContainerElement();
   ASPx.SetScrollBarVisibility(contentContainerElement, false);
   ASPx.SetStyles(contentContainerElement, { width: 1, height: 1 });
   this.contentContainerWidthDiff = contentContainerElement.offsetWidth - 1;
   this.contentContainerHeightDiff = contentContainerElement.offsetHeight - 1;
   if(this.autoWidth) {
    contentContainerElement.style.width = "";
    var minWidthValue = this.splitter.defaultMinSize - this.contentContainerWidthDiff;
    if(minWidthValue > -1)
     contentContainerElement.style.minWidth = minWidthValue + "px";
   }
   if(this.autoHeight) {
    contentContainerElement.style.height = "";
    var minHeightValue = this.splitter.defaultMinSize - this.contentContainerWidthDiff;
    if(minHeightValue > -1)
     contentContainerElement.style.minHeight = minHeightValue + "px";
   }
   ASPx.SetScrollBarVisibility(contentContainerElement, true);
   if(!this.scrollEventAttached) {
    var _this = this;
    ASPx.Evt.AttachEventToElement(contentContainerElement, "scroll", function () {
     if(contentContainerElement.scrollTop >= 0)
      _this.scrollTop = contentContainerElement.scrollTop;
     if(contentContainerElement.scrollLeft >= 0)
      _this.scrollLeft = contentContainerElement.scrollLeft;
     _this.splitter.UpdateCookie();
    });
    this.scrollEventAttached = true;
   }
  }
  this.UpdateStyle(element, true);
  this.collapsedWidthDiff = EvaluateWidthDiff(element);
  this.collapsedHeightDiff = EvaluateHeightDiff(element);
  this.UpdateStyle(element, false);
  if(ASPx.Browser.IE && ASPx.Browser.MajorVersion == 9 && b203253_BodyWidthChanged) 
   ASPx.Attr.RestoreStyleAttribute(document.body, "width");
  var separator = this.helper.GetSeparatorElement();
  if(separator) {
   ASPx.SetElementDisplay(this.helper.GetSeparatorDivElement(), false);
   if(!this.isVertical)
    this.separatorSizeDiff = separator.offsetWidth - separator.clientWidth;
   else
    this.separatorSizeDiff = separator.offsetHeight - separator.clientHeight;
   ASPx.SetElementDisplay(this.helper.GetSeparatorDivElement(), true);
  }
  else
   this.separatorSizeDiff = 0;
  this.PrepareSeparatorButtons();
  if(ASPx.Browser.WebKitTouchUI) {
   var contentContainer = this.helper.GetContentContainerElement();
   var scrollbarVisible = contentContainer.style.overflow == "auto" || contentContainer.style.overflow == "scroll";
   var hScrollbarVisible = scrollbarVisible || contentContainer.style.overflowX == "scroll";
   var vScrollbarVisible = scrollbarVisible || contentContainer.style.overflowY == "scroll";
   if(hScrollbarVisible || vScrollbarVisible) {
    ASPx.TouchUIHelper.MakeScrollable(contentContainer, { showHorizontalScrollbar: hScrollbarVisible, showVerticalScrollbar: vScrollbarVisible });
   }
  }
  if(!this.isRootPane) {
   if(this.autoHeight)
    this.offsetHeight = this.GetMinSize(true);
   if(this.autoWidth)
    this.offsetWidth = this.GetMinSize(false);
  }
 },
 PrepareSeparatorButtons: function () {
  if(!(this.hasSeparator && this.helper.buttonsExists))
   return;
  var sizeProperty = this.isVertical ? "offsetWidth" : "offsetHeight";
  if(this.helper.buttonsTableExists) {
   this.collapseBackwardButtonSize = this.helper.GetButtonUpdateElement(this.helper.GetCollapseBackwardButton())[sizeProperty];
   this.collapseForwardButtonSize = this.helper.GetButtonUpdateElement(this.helper.GetCollapseForwardButton())[sizeProperty];
   this.buttonsTableDiffSize = this.helper.GetCollapseButtonsTable()[sizeProperty] - this.collapseBackwardButtonSize - this.collapseForwardButtonSize;
   if(this.helper.separatorImageExists) {
    this.collapseButtonsSeparatorSize = this.helper.GetButtonUpdateElement(this.helper.GetCollapseButtonsSeparator())[sizeProperty];
    this.buttonsTableDiffSize -= this.collapseButtonsSeparatorSize;
   }
  }
  else
   this.collapseButtonsSeparatorSize = this.helper.GetCollapseButtonsSeparatorImage()[sizeProperty];
 },
 InitializePreventDragging: function () {
  if(!this.dragPrevented && this.helper.separatorImageExists) {
   ASPx.Evt.PreventElementDrag(this.helper.GetCollapseButtonsSeparatorImage());
   this.dragPrevented = true;
  }
 },
 ApplyScrollPosition: function () {
  if(this.panes.length == 0) {
   this.SetScrollTop(this.scrollTop);
   this.SetScrollLeft(this.scrollLeft);
  }
 },
 ForEach: function (funcName, skippSelf) {
  if(!skippSelf)
   this[funcName]();
  for(var i = 0; i < this.panes.length; i++)
   this.panes[i].ForEach(funcName);
 },
 SetContentVisible: function (visible) {
  ASPx.SetElementDisplay(this.helper.GetContentContainerElement(), visible);
  if(ASPx.Browser.IE)
   this.helper.SetEmptyDivVisible(!visible);
 },
 AdjustControls: function () {
  if(this.panes.length == 0 && !this.collapsed && !this.isContentUrl)
   ASPx.GetControlCollection().AdjustControls(this.helper.GetContentContainerElement(), true);
 },
 UpdatePanes: function (forceAutoSizeUpdate) {
  this.ForEach("UpdateVisualElements", true);
  this.ForEach("UpdateChildrenSize");
  this.splitter.UpdateAutoSizePanes(forceAutoSizeUpdate);
 },
 UpdateVisualElements: function () {
  this.UpdateButtonsVisibility();
  this.UpdateSeparatorStyle();
  this.UpdatePaneStyle();
 },
 IsBackwardButtonVisible: function () {
  return ASPx.CacheHelper.GetCachedValue(this, "isBackwardButtonVisible", function () {
   if(!this.helper.buttonsTableExists)
    return false;
   if(this.collapsed && (this.maximizedPane == this.prevPane))
    return true;
   if(this.nextPane && this.collapsed && this.nextPane.collapsed)
    return true;
   if(this.prevPane.collapsed)
    return false;
   return this.showCollapseBackwardButton;
  }, this.helper);
 },
 IsForwardButtonVisible: function () {
  return ASPx.CacheHelper.GetCachedValue(this, "isForwardButtonVisible", function () {
   if(!this.helper.buttonsTableExists)
    return false;
   if(this.prevPane.collapsed && (this.prevPane.maximizedPane == this))
    return true;
   if(this.prevPane.collapsed && !this.collapsed)
    return true;
   if(this.collapsed)
    return false;
   return this.showCollapseForwardButton;
  }, this.helper);
 },
 DropCachedButtonsVisible: function () {
  ASPx.CacheHelper.DropCachedValue(this.helper, "isBackwardButtonVisible");
  ASPx.CacheHelper.DropCachedValue(this.helper, "isForwardButtonVisible");
 },
 UpdateSeparatorStyle: function () {
  var separator = this.helper.GetSeparatorElement();
  if(!separator) return;
  var prevPane = this.prevPane,
   isCollapsed = this.collapsed || prevPane && prevPane.collapsed,
   resizingEnabled = SplitterHelper.IsAllowResize(this, prevPane);
  if(this.splitter.IsStateControllerEnabled())
   ASPx.GetStateController().SetMouseStateItemsEnabled(this.helper.GetSeparatorElementId(), null, !isCollapsed && resizingEnabled);
  this.UpdateStyle(separator, isCollapsed);
 },
 UpdatePaneStyle: function () {
  this.UpdateStyle(this.helper.GetPaneElement(),
   this.collapsed && !this.NeedResetSplitterSizeOnCollapsing(this.maximizedPane) && !this.NeedKeepOffsetSizeOnCollapsing()
  );
 },
 UpdateStyle: function (element, isSelect) {
  if(!this.splitter.IsStateControllerEnabled()) return;
  if(isSelect)
   ASPx.GetStateController().SelectElementBySrcElement(element);
  else
   ASPx.GetStateController().DeselectElementBySrcElement(element);
 },
 UpdateButtonsVisibility: function () {
  if(!(this.hasSeparator && this.helper.buttonsExists))
   return;
  var separatorSize = this.GetOffsetSize(!this.isVertical) - this.separatorSizeDiff;
  if(this.helper.buttonsTableExists) {
   var buttonsSize = this.buttonsTableDiffSize;
   if(this.IsBackwardButtonVisible())
    buttonsSize += this.collapseBackwardButtonSize;
   if(this.IsForwardButtonVisible())
    buttonsSize += this.collapseForwardButtonSize;
   var buttonsVisible = (buttonsSize <= separatorSize);
   var backwardButtonVisible = buttonsVisible && this.IsBackwardButtonVisible();
   var forwardButtonVisible = buttonsVisible && this.IsForwardButtonVisible();
   ASPx.SetElementDisplay(this.helper.GetButtonUpdateElement(this.helper.GetCollapseBackwardButton()), backwardButtonVisible);
   ASPx.SetElementDisplay(this.helper.GetButtonUpdateElement(this.helper.GetCollapseForwardButton()), forwardButtonVisible);
   if(this.helper.separatorImageExists) {
    if(!buttonsVisible)
     buttonsSize = this.buttonsTableDiffSize;
    buttonsSize += this.collapseButtonsSeparatorSize;
    var separatorImageVisible = this.splitter.showSeparatorImage && (backwardButtonVisible === forwardButtonVisible) && (buttonsSize <= separatorSize);
    ASPx.SetElementDisplay(this.helper.GetButtonUpdateElement(this.helper.GetCollapseButtonsSeparator()), separatorImageVisible);
   }
  }
  else {
   var separatorImageVisible = this.splitter.showSeparatorImage && (this.collapseButtonsSeparatorSize <= separatorSize);
   ASPx.SetElementDisplay(this.helper.GetCollapseButtonsSeparatorImage(), separatorImageVisible);
  }
 },
 GetSeparatorSize: function () {
  return ASPx.CacheHelper.GetCachedValue(this, "SeparatorSize", function () {
   var separator = this.helper.GetSeparatorElement();
   return separator ? (this.isVertical ? separator.offsetHeight : separator.offsetWidth) : 0;
  }, this.helper);
 },
 GetTotalSeparatorsSize: function (isVertical) {
  if(!ASPx.IsExists(isVertical) || (isVertical == this.isVertical))
   return 0;
  var cacheKey = (isVertical ? "v" : "h") + "TotalSeparatorsSize";
  return ASPx.CacheHelper.GetCachedValue(this, cacheKey, function () {
   var result = 0;
   for(var i = 0; i < this.panes.length; i++)
    result += this.panes[i].GetSeparatorSize();
   return result;
  }, this.helper);
 },
 GetMinSize: function (isVertical) {
  if(!ASPx.IsExists(isVertical))
   isVertical = this.isVertical;
  var cacheKey = (isVertical ? "v" : "h") + "ItemMinSize";
  return ASPx.CacheHelper.GetCachedValue(this, cacheKey, function () {
   var result = 0;
   for(var i = 0; i < this.panes.length; i++)
    if(isVertical != this.isVertical)
     result += this.panes[i].GetMinSize(isVertical);
    else
     result = Math.max(result, this.panes[i].GetMinSize(isVertical));
   result += this.GetTotalSeparatorsSize(isVertical);
   var minSize = (isVertical == this.isVertical) ? this.minSize : this.splitter.defaultMinSize;
   result = Math.max(result, Math.max(minSize, this.GetSizeDiff(isVertical)));
   return result;
  }, this.helper);
 },
 DropCachedSizes: function () {
  ASPx.CacheHelper.DropCachedValue(this.helper, "SeparatorSize");
  ASPx.CacheHelper.DropCachedValue(this.helper, "vTotalSeparatorsSize");
  ASPx.CacheHelper.DropCachedValue(this.helper, "hTotalSeparatorsSize");
  ASPx.CacheHelper.DropCachedValue(this.helper, "ItemMinSize");
 },
 IsMaxSizeSpecified: function () {
  return this.maxSize != Number.MAX_VALUE;
 },
 GetMaxSize: function () {
  return Math.max(this.maxSize, this.GetSizeDiff(this.isVertical));
 },
 PrepareUpdateInfo: function () {
  var updateInfo = {};
  var prepareUpdateInfoPart = function () {
   return {
    panes: [],
    sum: 0,
    sumMin: 0,
    sumMax: 0,
    addPane: function () {
     this.panes.push(pane);
     if(pane.collapsed) {
      var sizeDiff = pane.GetSizeDiff(pane.isVertical);
      this.sum += sizeDiff;
      this.sumMin += sizeDiff;
     }
     else {
      this.sum += pane.size;
      this.sumMin += pane.GetMinSize();
     }
     this.sumMax += pane.GetMaxSize();
    },
    IsIgnoreMaxSize: function () {
     return this.sumMax < this.sum;
    }
   };
  };
  updateInfo.px = prepareUpdateInfoPart();
  updateInfo.prc = prepareUpdateInfoPart();
  updateInfo.collapsed = prepareUpdateInfoPart();
  updateInfo.autoSize = prepareUpdateInfoPart();
  updateInfo.onlyPxPanes = true; 
  updateInfo.hasPxPanesShown = false;
  updateInfo.hasPrcPanesShown = false;
  for(var i = 0; i < this.panes.length; i++) {
   var pane = this.panes[i];
   if(pane.collapsed)
    updateInfo.collapsed.addPane(pane);
   else if(pane.IsAutoSize(this.isVertical) && pane.GetOffsetSize()) {
    updateInfo.autoSize.addPane(pane)
   }
   else if(pane.isSizePx) {
    updateInfo.px.addPane(pane);
    updateInfo.hasPxPanesShown = true;
   }
   else {
    updateInfo.prc.addPane(pane);
    updateInfo.hasPrcPanesShown = true;
   }
   if(!pane.isSizePx)
    updateInfo.onlyPxPanes = false;
  }
  updateInfo.px.isIgnoreMaxSize = (!updateInfo.hasPrcPanesShown && (updateInfo.px.sumMax < updateInfo.px.sum));
  updateInfo.prc.isIgnoreMaxSize = (updateInfo.prc.sumMax < updateInfo.prc.sum);
  return updateInfo;
 },
 SetChildrenSecondSize: function () {
  var orientation = this.isVertical;
  var size = this.GetClientSize(orientation);
  if(this.isRootPane)
   for(var pane = this.panes[0]; pane; pane = pane.nextPane) {
    if(pane.IsAutoSize(!this.isVertical))
     size = Math.max(size, pane.GetOffsetSize(this.isVertical));
   }
  for(var i = 0; i < this.panes.length; i++)
   this.panes[i].SetOffsetSize(size, orientation);
 },
 GetChildrenTotalSize: function () {
  return this.GetClientSize(!this.isVertical) - this.GetTotalSeparatorsSize(!this.isVertical);
 },
 UpdateChildrenSize: function () {
  if(this.collapsed || (this.panes.length == 0))
   return;
  var updateInfo = this.PrepareUpdateInfo();
  var childrenTotalSize = this.GetChildrenTotalSize();
  var asTotalSize = 0;
  for(var i = 0; i < updateInfo.autoSize.panes.length; i++) {
   var pane = updateInfo.autoSize.panes[i];
   pane.size = pane.GetOffsetSize();
   asTotalSize += pane.size;
  }
  if(!updateInfo.hasPxPanesShown && !updateInfo.hasPrcPanesShown) {
   var asMaxSize = childrenTotalSize - (updateInfo.px.sumMin + updateInfo.prc.sumMin + updateInfo.collapsed.sumMin);
   asTotalSize = this.NormalizePanesSizes(updateInfo.autoSize.panes, asTotalSize, asMaxSize);
  }
  else {
   var pxMaxSize = childrenTotalSize - (updateInfo.prc.sumMin + updateInfo.collapsed.sumMin) - asTotalSize,
    isOutOfParentSize = !!(pxMaxSize < 0 && updateInfo.autoSize.panes.length);
   if(isOutOfParentSize)
    pxMaxSize = updateInfo.px.sum;
   var pxTotalSize = 0;
   if(updateInfo.hasPxPanesShown) {
    var c = !updateInfo.hasPrcPanesShown && !isOutOfParentSize && !updateInfo.autoSize.panes.length
     ? (pxMaxSize / (updateInfo.px.sum + updateInfo.autoSize.sum))
     : 1;
    for(var i = 0; i < updateInfo.px.panes.length; i++) {
     var pane = updateInfo.px.panes[i];
     var newSize = pxMaxSize > 0
      ? Math.max(Math.round(pane.size * c), pane.GetMinSize())
      : pane.GetMinSize();
     if(!updateInfo.px.isIgnoreMaxSize)
      newSize = Math.min(newSize, pane.GetMaxSize());
     pane.SetOffsetSize(newSize);
     pxTotalSize += newSize;
    }
    if(pxMaxSize > 0 && (!updateInfo.hasPrcPanesShown || (pxTotalSize > pxMaxSize))) {
     pxTotalSize = this.NormalizePanesSizes(updateInfo.autoSize.panes, pxTotalSize, pxMaxSize);
     pxTotalSize = this.NormalizePanesSizes(updateInfo.px.panes, pxTotalSize, pxMaxSize);
    }
    if(updateInfo.onlyPxPanes && !(this.IsAutoSize(this.isVertical) && !updateInfo.autoSize.panes.length)) {
     for(var i = 0; i < updateInfo.px.panes.length; i++) {
      var pane = updateInfo.px.panes[i];
      pane.size = pane.GetOffsetSize();
     }
    }
   }
   var prcMaxSize = pxMaxSize - pxTotalSize + updateInfo.prc.sumMin;
   var prcTotalSize = 0;
   if((prcMaxSize > 0) && updateInfo.hasPrcPanesShown) {
    var c = 1 / updateInfo.prc.sum;
    for(var i = 0; i < updateInfo.prc.panes.length; i++) {
     var pane = updateInfo.prc.panes[i];
     var newSize = Math.max(Math.round(pane.size * c * (childrenTotalSize - pxTotalSize - asTotalSize)), pane.GetMinSize());
     if(!updateInfo.prc.isIgnoreMaxSize)
      newSize = Math.min(newSize, pane.GetMaxSize());
     pane.SetOffsetSize(newSize);
     prcTotalSize += newSize;
    }
    if(prcTotalSize != prcMaxSize)
     prcTotalSize = this.NormalizePanesSizes(updateInfo.prc.panes, prcTotalSize, prcMaxSize);
   }
  }
  for(var i = 0; i < updateInfo.collapsed.panes.length; i++) {
   var pane = updateInfo.collapsed.panes[i],
    collapsedSize = pane.GetSizeDiff(pane.isVertical);
   if(!(ASPx.Browser.IE && pane.NeedKeepOffsetSizeOnCollapsing()))
    pane.SetOffsetSize(collapsedSize);
  }
  if(ASPx.Browser.WebKitFamily && updateInfo.collapsed.panes.length && this.IsAutoSize(this.IsVertical))
   this.splitter.CreateWebkitSpecialElement();
  this.SetChildrenSecondSize();
  for(var i = 0; i < this.panes.length; i++) {
   var pane = this.panes[i];
   if(pane.collapsed)
    pane.SetContentVisible(false);
   else
    pane.SetContentVisible(true);
   if(pane.ApplyElementSize())
    pane.RaiseResizedEvent();
  }
  if(ASPx.Browser.Chrome) { 
   for(var i = 0; i < this.panes.length; i++)
    this.panes[i].doLessWidth();
   this.splitter.GetMainElement().offsetWidth;
   for(var i = 0; i < this.panes.length; i++)
    this.panes[i].restoreWidth();
  }
  this.ForEach("UpdateButtonsVisibility", true);
 },
 GetPossibleUp: function () {
  if(this.inResizing)
   return -1;
  return this.GetMaxSize() - this.GetOffsetSize();
 },
 GetPossibleDown: function () {
  if(this.IsAutoSize(!this.isVertical) && !(this.panes.length && !this.helper.HasVisibleAutoSizeChildren(!this.isVertical)))
   return -1;
  if(this.inResizing)
   return -1;
  return this.GetOffsetSize() - this.GetMinSize();
 },
 NormalizePanesSizes: function (panes, size, maxSize) {
  var insufficientSize = maxSize - size;
  var changeStep = (insufficientSize > 0) ? 1 : -1;
  var possibleChangeFunction = (insufficientSize > 0) ? "GetPossibleUp" : "GetPossibleDown";
  var changed = true;
  while((Math.floor(insufficientSize) != 0) && changed) {
   changed = false;
   for(var i = 0; i < panes.length; i++) {
    var pane = panes[i];
    if(pane[possibleChangeFunction]() > 0) {
     pane.SetOffsetSize(pane.GetOffsetSize() + changeStep);
     insufficientSize -= changeStep;
     changed = true;
     if(insufficientSize == 0)
      break;
    }
   }
  }
  return maxSize - insufficientSize;
 },
 GetOffsetSize: function (isVertical) {
  if(!ASPx.IsExists(isVertical))
   isVertical = this.isVertical;
  return isVertical ? this.offsetHeight : this.offsetWidth;
 },
 GetClientSize: function (isVertical) {
  return isVertical ? this.GetClientHeightInternal(true) : this.GetClientWidthInternal(true);
 },
 SetOffsetSize: function (value, isVertical) {
  if(!ASPx.IsExists(isVertical))
   isVertical = this.isVertical;
  if(isVertical)
   this.offsetHeight = value;
  else
   this.offsetWidth = value;
 },
 GetSizeDiff: function (isVertical) {
  return isVertical ? this.GetHeightDiff(true) : this.GetWidthDiff(true);
 },
 GetWidthDiff: function (isContainer) {
  if(this.collapsed)
   return this.collapsedWidthDiff;
  return this.widthDiff + (isContainer ? this.contentContainerWidthDiff : 0);
 },
 GetHeightDiff: function (isContainer) {
  if(this.collapsed)
   return this.collapsedHeightDiff;
  return this.heightDiff + (isContainer ? this.contentContainerHeightDiff : 0);
 },
 GetClientWidthInternal: function (isContainer) {
  if(ASPx.Browser.Firefox && this.autoWidth)
   return this.offsetWidth;
  return this.offsetWidth - this.GetWidthDiff(isContainer);
 },
 GetClientHeightInternal: function (isContainer) {
  if(ASPx.Browser.Firefox && this.autoHeight)
   return this.offsetHeight - (isContainer ? 0 : ASPx.GetVerticalBordersWidth(this.GetElement()));
  return this.offsetHeight - this.GetHeightDiff(isContainer);
 },
 ApplyElementSize: function () {
  if(this.IsSizeChanged()) {
   this.ApplyElementSizeCore();
   var contentContainerElement = this.helper.GetContentContainerElement();
   if(ASPx.Browser.Chrome && ASPx.Browser.MajorVersion >= 3
     || ASPx.Browser.Safari && ASPx.Browser.MajorVersion >= 5) {
    var marginRight = ASPx.PxToInt(contentContainerElement.style.marginRight);
    marginRight -= ASPx.PxToInt(ASPx.GetCurrentStyle(contentContainerElement).marginRight);
    contentContainerElement.style.marginRight = marginRight + "px";
   }
   if(ASPx.Browser.WebKitFamily) {
    this.splitter.CreateWebkitSpecialElement(); 
    var updated = ASPx.SetScrollBarVisibilityCore(contentContainerElement, "overflowY", this.GetClientWidthInternal(true) > ASPx.GetVerticalScrollBarWidth());
    if(updated && this.isContentUrl)
     this.RefreshContentUrl();
   }
   return true;
  }
  return false;
 },
 ApplyElementSizeCore: function () {
  var paneWidth = this.GetClientWidthInternal(false);
  var paneHeight = this.GetClientHeightInternal(false);
  var contentContainerWidth = this.GetClientWidthInternal(true);
  var contentContainerHeight = this.GetClientHeightInternal(true);
  if(contentContainerWidth < 0) {
   paneWidth -= contentContainerWidth;
   contentContainerWidth = 0;
  }
  if(contentContainerHeight < 0) {
   paneHeight -= contentContainerHeight;
   contentContainerHeight = 0;
  }
  var paneElement = this.helper.GetPaneElement(),
   contentContainerElement = this.helper.GetContentContainerElement();
  if(!isNaN(paneWidth) && !(paneWidth === 0 && !this.collapsed))
   paneElement.style.width = paneWidth + "px";
  if(!isNaN(paneHeight) && !(paneHeight === 0 && !this.collapsed))
   paneElement.style.height = paneHeight + "px";
  if(!this.autoWidth && !isNaN(contentContainerWidth))
   contentContainerElement.style.width = contentContainerWidth + "px";
  if(!this.autoHeight && !isNaN(contentContainerHeight))
   contentContainerElement.style.height = contentContainerHeight + "px";
 },
 IsSizeChanged: function () {
  if(!ASPx.IsExists(this.lastWidth) || !ASPx.IsExists(this.lastHeight) ||
   (this.offsetWidth != this.lastWidth) || (this.offsetHeight != this.lastHeight)) {
   this.lastWidth = this.offsetWidth;
   this.lastHeight = this.offsetHeight;
   return true;
  }
  return false;
 },
 doLessWidth: function() {
  var scrollBarWidth = 17;
  var contentContainerElement = this.helper.GetContentContainerElement();
  if(!this.collapsed && !this.autoWidth && contentContainerElement) {
   contentContainerElement.dxWidth = contentContainerElement.style.width;
   contentContainerElement.style.width = ASPx.PxToInt(contentContainerElement.style.width) - scrollBarWidth + "px";
  }
 },
 restoreWidth: function() {
  var contentContainerElement = this.helper.GetContentContainerElement();
  if(!this.collapsed && !this.autoWidth && contentContainerElement) {
   contentContainerElement.style.width = contentContainerElement.dxWidth;
   contentContainerElement.dxWidth = undefined;
  }
 },
 GetSplitter: function () {
  return this.splitter;
 },
 GetParentPane: function () {
  return this.parent;
 },
 GetPrevPane: function () {
  return this.prevPane;
 },
 GetNextPane: function () {
  return this.nextPane;
 },
 IsFirstPane: function () {
  return (this.prevPane == null);
 },
 IsLastPane: function () {
  return (this.nextPane == null);
 },
 IsVertical: function () {
  return this.isVertical;
 },
 GetPaneCount: function () {
  return this.panes.length;
 },
 GetPane: function (index) {
  return (0 <= index && index < this.panes.length) ? this.panes[index] : null;
 },
 GetPaneByName: function (name) {
  for(var i = 0; i < this.panes.length; i++)
   if(this.panes[i].name == name) return this.panes[i];
  for(var i = 0; i < this.panes.length; i++) {
   var pane = this.panes[i].GetPaneByName(name);
   if(pane != null) return pane;
  }
  return null;
 },
 GetClientWidth: function () {
  var clientWidth = this.GetClientWidthInternal(true);
  if(!this.IsContentUrlPane()) {
   var contentContainer = this.helper.GetContentContainerElement();
   if((contentContainer.style.overflow == "auto" && contentContainer.scrollHeight > contentContainer.clientHeight)
     || contentContainer.style.overflow == "scroll"
     || contentContainer.style.overflowY == "scroll") {
    clientWidth = clientWidth - ASPx.GetVerticalScrollBarWidth();
   }
  }
  return clientWidth;
 },
 GetClientHeight: function () {
  return this.GetClientHeightInternal(true);
 },
 Collapse: function (maximizedPane) {
  if(!this.splitter.IsPrepared())
   return false;
  if(this.collapsed)
   return false;
  if(!ASPx.IsExists(maximizedPane) || !maximizedPane.isASPxClientSplitterPane)
   return false;
  return this.CollapseExpandCore(true, maximizedPane, "PaneCollapsed");
 },
 CollapseForward: function () {
  return this.Collapse(this.prevPane);
 },
 CollapseBackward: function () {
  return this.Collapse(this.nextPane);
 },
 Expand: function () {
  if(!this.splitter.IsPrepared())
   return false;
  if(!this.collapsed)
   return false;
  return this.CollapseExpandCore(false, null, "PaneExpanded");
 },
 CollapseExpandCore: function (collapsed, maximizedPane, eventName) {
  this.collapsed = collapsed;
  this.maximizedPane = maximizedPane;
  this.DropCachedButtonsVisible();
  if(this.nextPane != null)
   this.nextPane.DropCachedButtonsVisible();
  this.GetParentPane().UpdatePanes(!collapsed);
  this.GetParentPane().ForEach("AdjustControls");
  this.splitter.RaiseEvent(eventName, this);
  this.splitter.UpdateCookie();
  return true;
 },
 IsCollapsed: function () {
  return this.collapsed;
 },
 NeedResetSplitterSizeOnCollapsing: function (maximizedPane) {
  return maximizedPane.IsMaxSizeSpecified() && maximizedPane.GetParentPane().isRootPane;
 },
 NeedKeepOffsetSizeOnCollapsing: function () {
  return this.maximizedPane.IsMaxSizeSpecified() && !this.GetParentPane().isRootPane && this.GetParentPane().GetPaneCount() == 2;
 },
 IsContentUrlPane: function () {
  return this.isContentUrl;
 },
 GetContentUrl: function () {
  return this.isContentUrl
   ? this.iframeObj.GetContentUrl()
   : "";
 },
 SetContentUrl: function (url, preventBrowserCaching) {
  if(!this.isContentUrl)
   return;
  this.iframeObj.SetContentUrl(url, preventBrowserCaching);
 },
 RefreshContentUrl: function () {
  if(!this.isContentUrl)
   return;
  this.iframeObj.RefreshContentUrl();
 },
 GetContentIFrame: function () {
  return this.isContentUrl
   ? this.helper.GetContentContainerElement()
   : null;
 },
 CreateContentUrlIFrame: function () {
  if(!this.isContentUrl)
   return;
  var contentContainer = this.helper.GetContentContainerElement();
  contentContainer.parentNode.removeChild(contentContainer);
  this.iframeObj = new ASPx.IFrameHelper({
   id: contentContainer.id,
   name: this.iframe.name,
   title: this.iframe.title,
   scrolling: this.iframe.scrolling,
   src: this.iframe.src,
   onCreate: function (containerElement, element) {
    element.className = "dxsplIF";
    this.helper.GetPaneElement().appendChild(containerElement);
    this.helper.DropContentContainerElementFromCache();
    this.ApplyElementSizeCore();
    if(this.autoHeight && this.isVertical)
     containerElement.style.height = "100%";
   }.aspxBind(this),
   onLoad: function () {
    this.splitter.RaiseEvent("PaneContentUrlLoaded", this);
   }.aspxBind(this)
  });
 },
 SetAllowResize: function (allowResize) {
  this.allowResize = allowResize;
  this.UpdateSeparatorStyle();
  if(!this.IsLastPane())
   this.nextPane.UpdateSeparatorStyle();
 },
 RaiseResizedEvent: function () {
  this.splitter.RaiseEvent("PaneResized", this);
 },
 GetElement: function () {
  return this.helper.GetPaneElement();
 },
 SetSize: function (size) {
  if(!this.splitter.IsPrepared())
   return;
  if(this.SetSizeCore(size)) {
   this.parent.ForEach("UpdateChildrenSize");
   this.splitter.UpdateAutoSizePanes();
   this.parent.ForEach("AdjustControls");
   this.splitter.UpdateCookie();
  }
 },
 GetSize: function () {
  return this.size + this.sizeType;
 },
 SetSizeCore: function (size) {
  if(!ASPx.IsExists(size))
   return false;
  if(this.IsAutoSize(!this.isVertical))
   return false;
  if(typeof (size) == "string") {
   var parsedSize = parseInt(size);
   if(isNaN(parsedSize))
    return false;
   this.size = parsedSize;
   this.sizeType = ASPx.IsPercentageSize(size) ? "%" : "px";
  }
  else if(typeof (size) == "number") {
   this.size = size;
   this.sizeType = "px";
  }
  else
   return false;
  this.isSizePx = this.sizeType == "px";
  return true;
 },
 GetScrollTop: function () {
  return this.scrollTop;
 },
 SetScrollTop: function (value) {
  this.helper.GetContentContainerElement().scrollTop = value;
 },
 GetScrollLeft: function () {
  return this.scrollLeft;
 },
 SetScrollLeft: function (value) {
  this.helper.GetContentContainerElement().scrollLeft = value;
 }
});
ASPxClientSplitter.Instances = {
 items: {},
 Add: function (instance) {
  this.items[instance.name] = instance;
  if(instance.hasAutoSizePane)
   ASPxClientSplitter.AutoSizePanesUpdater.Start();
 },
 Get: function (name) {
  var instance = this.items[name];
  if(instance) {
   if(instance.GetMainElement())
    return instance;
   delete this.items[name];
  }
  return null;
 },
 Each: function (cb) {
  var hasInstances = false;
  for(var name in this.items) {
   var instance = this.Get(name);
   if(instance) {
    hasInstances = true;
    cb.call(instance);
   }
  }
  return hasInstances;
 }
};
ASPxClientSplitter.AutoSizePanesUpdater = {
 timeoutId: -1,
 Start: function () {
  var updater = ASPxClientSplitter.AutoSizePanesUpdater;
  if(updater.timeoutId > -1)
   return;
  updater.timeoutId = window.setTimeout(updater.OnTimeout, 300);
 },
 Stop: function () {
  var updater = ASPxClientSplitter.AutoSizePanesUpdater;
  updater.timeoutId = ASPx.Timer.ClearTimer(updater.timeoutId);
 },
 OnTimeout: function () {
  var updater = ASPxClientSplitter.AutoSizePanesUpdater;
  updater.Stop();
  if(ASPxClientSplitter.Instances.Each(function () {
   this.UpdateAutoSizePanes();
   if(!this.isInLiveResizing && this.hasAutoSizePane && this.IsDocumentWidthChanged())
    this.UpdateControlSizes();
  }))
   updater.Start();
 }
};
ASPxClientSplitter.timerInterval = 0;
ASPxClientSplitter.GetRegEx = function (idPostfix) {
 if(!this.regExs)
  this.regExs = {};
 if(!this.regExs[idPostfix])
  this.regExs[idPostfix] = "_\\d+(" + ASPx.ItemIndexSeparator + "\\d+)*_" + idPostfix + "$";
 return this.regExs[idPostfix];
};
ASPxClientSplitter.SaveCurrentPos = function (evt) {
 evt = ASPx.Evt.GetEvent(evt);
 ASPxClientSplitter.CurrentXPos = ASPx.Evt.GetEventX(evt);
 ASPxClientSplitter.CurrentYPos = ASPx.Evt.GetEventY(evt);
};
ASPxClientSplitter.FindParentCell = function (element) {
 if(element.tagName != "TD")
  element = ASPx.GetParentByTagName(element, "TD");
 return element;
};
ASPxClientSplitter.FindSplitterInfo = function (evt, regex, suffixLength) {
 var element = ASPxClientSplitter.FindParentCell(ASPx.Evt.GetEventSource(evt));
 if(element) {
  var matchResult = element.id.match(regex);
  if(matchResult) {
   var name = element.id.substring(0, matchResult.index);
   var splitter = ASPxClientSplitter.Instances.Get(name);
   if(splitter != null) {
    var panePath = element.id.substring(matchResult.index + 1, element.id.length - suffixLength);
    return { "splitter": splitter, "panePath": panePath };
   }
  }
 }
 return null;
};
ASPxClientSplitter.OnMouseClick = function (evt) {
 var info = ASPxClientSplitter.FindSplitterInfo(evt, ASPxClientSplitter.GetRegEx("S_CF"), 5);
 if(info) {
  if(info.splitter.enabled)
   info.splitter.OnCollapseButtonClick(info.panePath, true);
 }
 else {
  info = ASPxClientSplitter.FindSplitterInfo(evt, ASPxClientSplitter.GetRegEx("S_CB"), 5);
  if(info && info.splitter.enabled)
   info.splitter.OnCollapseButtonClick(info.panePath, false);
 }
};
ASPxClientSplitter.OnMouseDown = function (evt) {
 var info = ASPxClientSplitter.FindSplitterInfo(evt, ASPxClientSplitter.GetRegEx("S"), 2);
 if(!info)
  info = ASPxClientSplitter.FindSplitterInfo(evt, ASPxClientSplitter.GetRegEx("S_CS"), 5);
 if(info && info.splitter) {
  ASPxClientSplitter.current = info.splitter;
  ASPxClientSplitter.SaveCurrentPos(evt);
  ASPx.Selection.SetElementSelectionEnabled(ASPxClientSplitter.current.GetMainElement(), false);
  ASPxClientSplitter.isInMove = info.splitter.OnSeparatorMouseDown(info.panePath);
  ASPx.Evt.PreventEvent(evt);
 }
};
ASPxClientSplitter.OnMouseUp = function () {
 if(ASPxClientSplitter.isInMove) {
  ASPxClientSplitter.isInMove = false;
  ASPx.Selection.SetElementSelectionEnabled(ASPxClientSplitter.current.GetMainElement(), true);
  ASPxClientSplitter.current.OnSeparatorMouseUp();
 }
};
ASPxClientSplitter.mouseMoveTimeoutId = -1;
ASPxClientSplitter.SuspendedMouseMove = function () {
 if(ASPxClientSplitter.isInMove)
  ASPxClientSplitter.current.OnMouseMove();
 ASPxClientSplitter.mouseMoveTimeoutId = ASPx.Timer.ClearTimer(ASPxClientSplitter.mouseMoveTimeoutId);
};
ASPxClientSplitter.OnMouseMove = function (evt) {
 if(ASPx.Browser.WebKitTouchUI && ASPx.TouchUIHelper.isGesture)
  return;
 if(!ASPxClientSplitter.isInMove)
  return;
 if(ASPx.Browser.IE && !ASPx.Evt.IsLeftButtonPressed(evt)) {
  ASPxClientSplitter.OnMouseUp(evt);
  return;
 }
 ASPxClientSplitter.SaveCurrentPos(evt);
 if(ASPxClientSplitter.mouseMoveTimeoutId == -1)
  ASPxClientSplitter.mouseMoveTimeoutId = window.setTimeout(ASPxClientSplitter.SuspendedMouseMove, ASPxClientSplitter.timerInterval);
 if(ASPx.Browser.WebKitTouchUI)
  evt.preventDefault();
};
ASPx.Evt.AttachEventToDocument("click", ASPxClientSplitter.OnMouseClick);
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseDownEventName, ASPxClientSplitter.OnMouseDown);
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseUpEventName, ASPxClientSplitter.OnMouseUp);
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseMoveEventName, ASPxClientSplitter.OnMouseMove);
var ASPxClientSplitterPaneEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function (pane) {
  this.constructor.prototype.constructor.call(this, pane);
  this.pane = pane;
 }
});
var ASPxClientSplitterPaneCancelEventArgs = ASPx.CreateClass(ASPxClientSplitterPaneEventArgs, {
 constructor: function (pane) {
  this.constructor.prototype.constructor.call(this, pane);
  this.cancel = false;
 }
});
window.ASPxClientSplitter = ASPxClientSplitter;
window.ASPxClientSplitterPane = ASPxClientSplitterPane;
window.ASPxClientSplitterPaneEventArgs = ASPxClientSplitterPaneEventArgs;
window.ASPxClientSplitterPaneCancelEventArgs = ASPxClientSplitterPaneCancelEventArgs;
})();
(function(window) {
 var ASPxClientReportToolbar;
 ASPxClientReportToolbar = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.reportViewer = null;
   this.ignoreItems = {};
   this.enabledItems = [];
   this.delayUpdate = false;
  },
  InlineInitialize: function() {
   this.constructor.prototype.InlineInitialize.call(this);
   this.menu = ASPxClientReportToolbar.findValidControl(this.name + '_Menu');
  },
  Initialize: function() {
   this.constructor.prototype.Initialize.call(this);
   if(this.menu) {
    for(var i = 0; i < this.menu.GetItemCount() ; i++) {
     var item = this.menu.GetItem(i);
     if(!item.GetEnabled()) {
      this.ignoreItems[item.name] = item;
     }
    }
    this.disableMenuItems();
   }
   this.reportViewer = ASPx.GetControlCollection().Get(this.reportViewerID);
   if(this.reportViewer) {
    var self = this;
    this.reportViewer.PageLoad.AddHandler(function(s, a) { self.pageLoadEventHanler(s, a); });
    this.reportViewer.BeginCallback.AddHandler(function() { self.beginCallbackEventHanler(); });
    this.reportViewer.EndCallback.AddHandler(function() { self.endCallbackEventHanler(); });
   }
  },
  AfterInitialize: function() {
   this.constructor.prototype.AfterInitialize.call(this);
   if(this.delayUpdate) {
    this.updateView();
    this.delayUpdate = false;
   }
  },
  GetMainElement: function() {
   return this.menu
    ? this.menu.GetMainElement()
    : ASPxClientControl.prototype.GetMainElement.call(this);
  },
  isValid: function() {
   return this.menu && ASPx.IsExistsElement(this.menu.GetMainElement());
  },
  disableMenuItems: function() {
   if(!this.enabledItems)
    this.enabledItems = [];
   else if(this.enabledItems.length > 0)
    return;
   for(var i = 0; i < this.menu.GetItemCount() ; i++) {
    var item = this.menu.GetItem(i);
    if(item.GetEnabled()) {
     this.enabledItems[this.enabledItems.length] = item;
     item.SetEnabled(false);
    }
   }
  },
  beginCallbackEventHanler: function() {
   this.disableMenuItems();
  },
  endCallbackEventHanler: function() {
   this.updateElements();
  },
  pageLoadEventHanler: function(s, a) {
   this.pageIndex = a.PageIndex;
   this.pageCount = a.PageCount;
   if(this.isInitialized)
    this.updateView();
   else
    this.delayUpdate = true;
  },
  handleButton: function(btnId) {
   if(!ASPx.IsExists(this.reportViewer))
    return;
   if(btnId === "Search") {
    this.reportViewer.Search();
    return;
   }
   if(btnId === "PrintReport") {
    this.reportViewer.Print();
    return;
   }
   if(btnId === "PrintPage") {
    this.reportViewer.Print(this.pageIndex);
    return;
   }
   if(btnId === "SaveToWindow") {
    this.reportViewer.SaveToWindow(this.getSaveFormat());
    return;
   }
   if(btnId === "SaveToDisk") {
    this.reportViewer.SaveToDisk(this.getSaveFormat());
    return;
   }
   if(this.pageIndex < 0 || this.pageCount <= 0)
    return;
   var index = this.pageIndex;
   if(btnId === "FirstPage") {
    index = 0;
   } else if(btnId === "PreviousPage") {
    index = this.pageIndex - 1;
   } else if(btnId === "NextPage") {
    index = this.pageIndex + 1;
   } else if(btnId === "LastPage") {
    index = this.pageCount - 1;
   } else if(btnId === "PageNumber") {
    index = this.getControlIntValue("PageNumber") - 1;
   }
   this.reportViewer.GotoPage(index);
  },
  getSaveFormat: function() {
   var saveFormat = this.getControlValue("SaveFormat");
   return saveFormat || this.reportViewer.DefaultSaveFormat;
  },
  updateView: function() {
   this.updatePageIndexes();
   this.setElemSize("PageCount", this.pageCount.toString().length);
   this.setControlValue("PageCount", this.pageCount);
   this.updateElements();
  },
  updateElements: function() {
   for(var i = 0; i < this.enabledItems.length; i++)
    this.enabledItems[i].SetEnabled(true);
   var pagesExist = this.pageCount > 0;
   var val = this.pageIndex > 0 && pagesExist;
   this.setElemEnabled("FirstPage", val);
   this.setElemEnabled("PreviousPage", val);
   val = pagesExist && this.pageIndex < this.pageCount - 1;
   this.setElemEnabled("NextPage", val);
   this.setElemEnabled("LastPage", val);
   this.setElemEnabled("Search", this.reportViewer.IsSearchAllowed());
   val = pagesExist || !this.reportViewer.pageByPage && !this.reportViewer.isContentEmpty();
   this.setElemEnabled("SaveFormat", val);
   this.setElemEnabled("SaveToDisk", val);
   this.setElemEnabled("SaveToWindow", val);
   this.setElemEnabled("PrintReport", val);
   this.setElemEnabled("PrintPage", val);
   this.setElemEnabled("PageNumber", pagesExist);
   this.setElemEnabled("PageCount", pagesExist);
  },
  updatePageIndexes: function() {
   var cbx = this.getTemplateControl("PageNumber");
   if(!cbx)
    return;
   if(cbx.GetItemCount() === this.pageCount) {
    this.updatePageIndexes_selectPageIndex(cbx);
    return;
   }
   cbx.BeginUpdate();
   cbx.ClearItems();
   this.runLoopInPortionsAsync(
    { to: this.pageCount },
    function(i) {
     var text = (i + 1).toString();
     cbx.AddItem(text, text);
     if(i === this.pageIndex) {
      this.updatePageIndexes_selectPageIndex(cbx);
     }
    }.aspxBind(this),
    function() { cbx.EndUpdate(); });
  },
  runLoopInPortionsAsync: function runLoopInPortionsAsync(args, actionCallback, completeCallback) {
   var from = args.from || 0;
   var step = args.step || 100;
   if(from > args.to) {
    throw new Error("Argument 'args.from' can not be greater than 'args.to'.");
   }
   if(step <= 0) {
    throw new Error("Argument 'args.step' can not be less than or equal to zero.");
   }
   var nextBound = from + step;
   if(nextBound > args.to) {
    nextBound = args.to;
   }
   var current;
   for(current = from; current < nextBound; current++) {
    actionCallback(current);
   }
   if(current < args.to) {
    var newArgs = { from: current, to: args.to, step: args.step, timeout: args.timeout };
    var timeout = args.timeout || 50;
    setTimeout(function() { runLoopInPortionsAsync(newArgs, actionCallback, completeCallback); }, timeout);
   } else {
    completeCallback();
   }
  },
  updatePageIndexes_selectPageIndex: function(cbx) {
   cbx.SetSelectedIndex(this.pageIndex);
   if(ASPx.Browser.WebKitFamily)
    cbx.GetInputElement().value = (this.pageIndex + 1).toString();
  },
  setElemSize: function(name, size) {
   var control = this.getTemplateControl(name);
   var element = control && control.GetInputElement();
   if(element) {
    element.style.width = size + "em";
   }
  },
  setControlValue: function(name, val) {
   var control = this.getTemplateControl(name);
   if(control)
    control.SetValue(val);
  },
  getControlValue: function(name) {
   var control = this.getTemplateControl(name);
   return control && control.GetValue();
  },
  getTemplateControl: function(name) {
   var item = this.menu.GetItemByName(name);
   return this.getTemplateControlCore(item);
  },
  getControlIntValue: function(name) {
   var val = this.getControlValue(name);
   return val ? parseInt(val, 10) : -1;
  },
  setElemEnabled: function(name, val) {
   if(this.ignoreItems[name])
    return;
   var item = this.menu.GetItemByName(name);
   if(item && item.GetEnabled() != val)
    item.SetEnabled(val);
  },
  getTemplateControlCore: function(menuItem) {
   if(!menuItem) {
    return null;
   }
   var editor = ASPx.GetControlCollection().Get(this.menu.GetItemTemplateContainerID(menuItem.indexPath) + '_' + menuItem.name);
   return editor;
  },
  getItemByEditor: function(editor) {
   var count = this.menu.GetItemCount();
   for(var i = 0; i < count; i++) {
    var item = this.menu.GetItem(i);
    var currentEditor = this.getTemplateControlCore(item);
    if(currentEditor === editor) {
     return item;
    }
   }
   return null;
  }
 });
 ASPxClientReportToolbar.findValidControl = function(name) {
  var control = ASPx.GetControlCollection().Get(name);
  return control && ASPx.IsExistsElement(control.GetMainElement())
   ? control
   : null;
 };
 ASPxClientReportToolbar.Cast = ASPxClientControl.Cast;
 ASPxClientReportToolbar.prototype.GetItemTemplateControl = function(name) {
  return this.getTemplateControl(name);
 };
 window.ASPxClientReportToolbar = ASPxClientReportToolbar;
})(window);
(function () {
var PopupUtils = {
 NotSetAlignIndicator: "NotSet",
 InnerAlignIndicator: "Sides",
 OutsideLeftAlignIndicator: "OutsideLeft",
 LeftSidesAlignIndicator: "LeftSides",
 RightSidesAlignIndicator: "RightSides",
 OutsideRightAlignIndicator: "OutsideRight",
 CenterAlignIndicator: "Center",
 AboveAlignIndicator: "Above",
 TopSidesAlignIndicator: "TopSides",
 MiddleAlignIndicator: "Middle",
 BottomSidesAlignIndicator: "BottomSides",
 BelowAlignIndicator: "Below",
 IsAlignNotSet: function (align) {
  return align == PopupUtils.NotSetAlignIndicator;
 },
 IsInnerAlign: function (align) {
  return align.indexOf(PopupUtils.InnerAlignIndicator) != -1;
 },
 IsRightSidesAlign: function(align) {
  return align == PopupUtils.RightSidesAlignIndicator;
 },
 IsOutsideRightAlign: function(align) {
  return align == PopupUtils.OutsideRightAlignIndicator;
 },
 IsCenterAlign: function(align) {
  return align == PopupUtils.CenterAlignIndicator;
 },
 FindPopupElementById: function (id) {
  if(id == "")
   return null; 
  var popupElement = ASPx.GetElementById(id);
  if(!ASPx.IsExistsElement(popupElement)) {
   var idParts = id.split("_");
   var uniqueId = idParts.join("$");
   popupElement = ASPx.GetElementById(uniqueId);
  }
  return popupElement;
 },
 FindEventSourceParentByTestFunc: function (evt, testFunc) {
  return ASPx.GetParent(ASPx.Evt.GetEventSource(evt), testFunc);
 },
 PreventContextMenu: function (evt) {
  if(evt.stopPropagation)
   evt.stopPropagation();
  if(evt.preventDefault)
   evt.preventDefault();
  if(ASPx.Browser.WebKitFamily)
   evt.returnValue = false;
 },
 GetDocumentClientWidthForPopup: function () {
  return ASPx.Browser.WebKitTouchUI ? ASPx.GetDocumentWidth() : ASPx.GetDocumentClientWidth(); 
 },
 GetDocumentClientHeightForPopup: function() {
  return ASPx.Browser.WebKitTouchUI ? ASPx.GetDocumentHeight() : ASPx.GetDocumentClientHeight(); 
 },
 AdjustPositionToClientScreen: function (element, pos, rtl, isX) {
  var min = isX ? ASPx.GetDocumentScrollLeft() : ASPx.GetDocumentScrollTop(),
   viewPortWidth = ASPx.Browser.WebKitTouchUI ? window.innerWidth : ASPx.GetDocumentClientWidth(),
   max = min + (isX ? viewPortWidth : ASPx.GetDocumentClientHeight());
  max -= (isX ? element.offsetWidth : element.offsetHeight);
  if(rtl) {
   if(pos < min) pos = min;
   if(pos > max) pos = max;
  } else {
   if(pos > max) pos = max;
   if(pos < min) pos = min;
  }
  return pos;
 },
 GetPopupAbsoluteX: function (element, popupElement, hAlign, hOffset, x, left, rtl, isPopupFullCorrectionOn) {
  var width = element.offsetWidth;
  var bodyWidth = ASPx.GetDocumentClientWidth();
  var elementX = ASPx.GetAbsoluteX(popupElement);
  var scrollX = ASPx.GetDocumentScrollLeft();
  if(hAlign == "WindowCenter") {
   var showAtPos = x != ASPx.InvalidPosition && !popupElement;
   if(showAtPos)
    hAlign = "";
   else
    return new ASPx.PopupPosition(Math.ceil((ASPx.Browser.WebKitTouchUI ? window.innerWidth : bodyWidth) / 2 - width / 2) + scrollX + hOffset, false);
  }
  if(popupElement) {
   var leftX = elementX - width;
   var rightX = elementX + popupElement.offsetWidth;
   var innerLeftX = elementX;
   var innerRightX = elementX + popupElement.offsetWidth - width;
   var isMoreFreeSpaceLeft = bodyWidth - (rightX + width) < leftX - 2 * scrollX;
  }
  else
   hAlign = "";
  var isInverted = false;
  if(hAlign == PopupUtils.OutsideLeftAlignIndicator) {
   isInverted = isPopupFullCorrectionOn && (!(leftX - scrollX > 0 || isMoreFreeSpaceLeft));
   if(isInverted)
    x = rightX - hOffset;
   else
    x = leftX + hOffset;
  }
  else if(hAlign == PopupUtils.LeftSidesAlignIndicator) {
   x = innerLeftX + hOffset;
   if(isPopupFullCorrectionOn)
    x = PopupUtils.AdjustPositionToClientScreen(element, x, rtl, true);
  }
  else if(hAlign == PopupUtils.CenterAlignIndicator) {
   x = elementX + Math.round((popupElement.offsetWidth - width) / 2) + hOffset;
  }
  else if(hAlign == PopupUtils.RightSidesAlignIndicator) {
   x = innerRightX + hOffset;
   if(isPopupFullCorrectionOn)
    x = PopupUtils.AdjustPositionToClientScreen(element, x, rtl, true);
  }
  else if(hAlign == PopupUtils.OutsideRightAlignIndicator) {
   isInverted = isPopupFullCorrectionOn && (!(rightX + width < bodyWidth + scrollX || !isMoreFreeSpaceLeft));
   if(isInverted)
    x = leftX - hOffset;
   else
    x = rightX + hOffset;
  }
  else {
   if(rtl) {
    if(!ASPx.IsValidPosition(x)) {
     if(popupElement)
      x = innerRightX;
     else if(hOffset)
      x = 0;
     else
      x = left;
    }
    else
     x -= width;
    isInverted = isPopupFullCorrectionOn && (x < scrollX && x - scrollX < bodyWidth / 2);
    if(isInverted)
     x = x + width + hOffset;
    else
     x = x - hOffset;
   } else {
    if(!ASPx.IsValidPosition(x)) {
     if(popupElement)
      x = elementX;
     else if(hOffset)
      x = 0;
     else
      x = left;
    }
    isInverted = isPopupFullCorrectionOn && (x - scrollX + width > bodyWidth && x - scrollX > bodyWidth / 2);
    if(isInverted)
     x = x - width - hOffset;
    else
     x = x + hOffset;
   }
  }
  return new ASPx.PopupPosition(x, isInverted);
 },
 GetPopupAbsoluteY: function (element, popupElement, vAlign, vOffset, y, top, isPopupFullCorrectionOn) {
  var height = element.offsetHeight;
  var bodyHeight = ASPx.GetDocumentClientHeight();
  var elementY = ASPx.GetAbsoluteY(popupElement);
  var scrollY = ASPx.GetDocumentScrollTop();
  if(vAlign == "WindowCenter") {
   var showAtPos = y != ASPx.InvalidPosition && !popupElement;
   if(showAtPos)
    hAlign = "";
   else
    return new ASPx.PopupPosition(Math.ceil((ASPx.Browser.WebKitTouchUI ? window.innerHeight : bodyHeight) / 2 - height / 2) + scrollY + vOffset, false);
  }
  if(popupElement) {
   var bottomY = elementY + popupElement.offsetHeight;
   var topY = elementY - height;
   var innerBottomY = elementY + popupElement.offsetHeight - height;
   var innerTopY = elementY;
   var isMoreFreeSpaceAbove = bodyHeight - (bottomY + height) < topY - 2 * scrollY;
  }
  else
   vAlign = "";
  var isInverted = false;
  if(vAlign == PopupUtils.AboveAlignIndicator) {
   isInverted = isPopupFullCorrectionOn && (!(topY - scrollY > 0 || isMoreFreeSpaceAbove));
   if(isInverted)
    y = bottomY - vOffset;
   else
    y = topY + vOffset;
  }
  else if(vAlign == PopupUtils.TopSidesAlignIndicator) {
   y = innerTopY + vOffset;
   if(isPopupFullCorrectionOn)
    y = PopupUtils.AdjustPositionToClientScreen(element, y, false, false);
  }
  else if(vAlign == PopupUtils.MiddleAlignIndicator) {
   y = elementY + Math.round((popupElement.offsetHeight - height) / 2) + vOffset;
  }
  else if(vAlign == PopupUtils.BottomSidesAlignIndicator) {
   y = innerBottomY + vOffset;
   if(isPopupFullCorrectionOn)
    y = PopupUtils.AdjustPositionToClientScreen(element, y, false, false);
  }
  else if(vAlign == PopupUtils.BelowAlignIndicator) {
   isInverted = isPopupFullCorrectionOn && (!(bottomY + height < bodyHeight + scrollY || !isMoreFreeSpaceAbove));
   if(isInverted)
    y = topY - vOffset;
   else
    y = bottomY + vOffset;
  }
  else {
   if(!ASPx.IsValidPosition(y)) {
    if(popupElement)
     y = ASPx.GetAbsoluteY(popupElement);
    else if(vOffset)
     y = 0;
    else
     y = top;
   }
   isInverted = isPopupFullCorrectionOn && (y - ASPx.GetDocumentScrollTop() + height > bodyHeight && y - ASPx.GetDocumentScrollTop() > bodyHeight / 2);
   if(isInverted)
    y = y - height - vOffset;
   else
    y = y + vOffset;
  }
  return new ASPx.PopupPosition(y, isInverted);
 },
 RemoveFocus: function (parent) {
  var div = document.createElement('div');
  div.tabIndex = "-1";
  PopupUtils.ConcealDivElement(div);
  parent.appendChild(div);
  if(ASPx.IsFocusable(div))
   div.focus();
  ASPx.RemoveElement(div);
 },
 ConcealDivElement: function (div) {
  div.style.position = "absolute";
  div.style.left = 0;
  div.style.top = 0;
  if(ASPx.Browser.WebKitFamily) {
   div.style.opacity = 0;
   div.style.width = 1;
   div.style.height = 1;
  } else {
   div.style.border = 0;
   div.style.width = 0;
   div.style.height = 0;
  }
 },
 InitAnimationDiv: function (element, x, y, onAnimStopCallString, skipSizeInit) {
  PopupUtils.InitAnimationDivCore(element);
  element.popuping = true;
  element.onAnimStopCallString = onAnimStopCallString;
  if(!skipSizeInit)
   ASPx.SetStyles(element, { width: element.offsetWidth, height: element.offsetHeight });
  ASPx.SetStyles(element, { left: x, top: y });
 },
 InitAnimationDivCore: function (element) {
  ASPx.SetStyles(element, {
   overflow: "hidden",
   position: "absolute"
  });
 },
 StartSlideAnimation: function (animationDivElement, element, iframeElement, duration, preventChangingWidth, preventChangingHeight) {
  if(iframeElement) {
   var endLeft = ASPx.PxToInt(iframeElement.style.left);
   var endTop = ASPx.PxToInt(iframeElement.style.top);
   var startLeft = ASPx.PxToInt(element.style.left) < 0 ? endLeft : animationDivElement.offsetLeft + animationDivElement.offsetWidth;
   var startTop = ASPx.PxToInt(element.style.top) < 0 ? endTop : animationDivElement.offsetTop + animationDivElement.offsetHeight;
   var properties = {
    left: { from: startLeft, to: endLeft, unit: "px" },
    top: { from: startTop, to: endTop, unit: "px" }
   };
   if(!preventChangingWidth)
    properties["width"] = { to: element.offsetWidth, unit: "px" };
   if(!preventChangingHeight)
    properties["height"] = { to: element.offsetHeight, unit: "px" };
   ASPx.AnimationHelper.createMultipleAnimationTransition(iframeElement, {
    duration: duration
   }).Start(properties);
  }
  ASPx.AnimationHelper.createMultipleAnimationTransition(element, {
   duration: duration,
   onComplete: function () { PopupUtils.AnimationFinished(animationDivElement, element); }
  }).Start({
   left: { to: 0, unit: "px" },
   top: { to: 0, unit: "px" }
  });
 },
 AnimationFinished: function (animationDivElement, element) {
  if(PopupUtils.StopAnimation(animationDivElement, element) && ASPx.IsExists(animationDivElement.onAnimStopCallString) &&
   animationDivElement.onAnimStopCallString !== "") {
   window.setTimeout(animationDivElement.onAnimStopCallString, 0);
  }
 },
 StopAnimation: function (animationDivElement, element) {
  if(animationDivElement.popuping) {
   ASPx.AnimationHelper.cancelAnimation(element);
   animationDivElement.popuping = false;
   animationDivElement.style.overflow = "visible";
   return true;
  }
  return false;
 },
 GetAnimationHorizontalDirection: function (popupPosition, horizontalAlign, verticalAlign, rtl) {
  if(PopupUtils.IsInnerAlign(horizontalAlign)
   && !PopupUtils.IsInnerAlign(verticalAlign)
   && !PopupUtils.IsAlignNotSet(verticalAlign))
   return 0;
  var toTheLeft = (horizontalAlign == PopupUtils.OutsideLeftAlignIndicator || horizontalAlign == PopupUtils.RightSidesAlignIndicator || (horizontalAlign == PopupUtils.NotSetAlignIndicator && rtl)) ^ popupPosition.isInverted;
  return toTheLeft ? 1 : -1;
 },
 GetAnimationVerticalDirection: function (popupPosition, horizontalAlign, verticalAlign) {
  if(PopupUtils.IsInnerAlign(verticalAlign)
   && !PopupUtils.IsInnerAlign(horizontalAlign)
   && !PopupUtils.IsAlignNotSet(horizontalAlign))
   return 0;
  var toTheTop = (verticalAlign == PopupUtils.AboveAlignIndicator || verticalAlign == PopupUtils.BottomSidesAlignIndicator) ^ popupPosition.isInverted;
  return toTheTop ? 1 : -1;
 },
 IsVerticalScrollExists: function () {
  var scrollIsNotHidden = ASPx.GetCurrentStyle(document.body).overflowY !== "hidden" && ASPx.GetCurrentStyle(document.documentElement).overflowY !== "hidden";
  return (scrollIsNotHidden && ASPx.GetDocumentHeight() > ASPx.GetDocumentClientHeight());
 },
 CoordinatesInDocumentRect: function (x, y) {
  var docScrollLeft = ASPx.GetDocumentScrollLeft();
  var docScrollTop = ASPx.GetDocumentScrollTop();
  return (x > docScrollLeft && y > docScrollTop &&
   x < ASPx.GetDocumentClientWidth() + docScrollLeft &&
   y < ASPx.GetDocumentClientHeight() + docScrollTop);
 },
 GetElementZIndexArray: function (element) {
  var currentElement = element;
  var zIndexesArray = [0];
  while(currentElement && currentElement.tagName != "BODY") {
   if(currentElement.style) {
    if(typeof (currentElement.style.zIndex) != "undefined" && currentElement.style.zIndex != "")
     zIndexesArray.unshift(currentElement.style.zIndex);
   }
   currentElement = currentElement.parentNode;
  }
  return zIndexesArray;
 },
 IsHigher: function (higherZIndexArrat, zIndexArray) {
  if(zIndexArray == null) return true;
  var count = (higherZIndexArrat.length >= zIndexArray.length) ? higherZIndexArrat.length : zIndexArray.length;
  for(var i = 0; i < count; i++)
   if(typeof (higherZIndexArrat[i]) != "undefined" && typeof (zIndexArray[i]) != "undefined") {
    var higherZIndexArrayCurrentElement = parseInt(higherZIndexArrat[i].toString());
    var zIndexArrayCurrentElement = parseInt(zIndexArray[i].toString());
    if(higherZIndexArrayCurrentElement != zIndexArrayCurrentElement)
     return higherZIndexArrayCurrentElement > zIndexArrayCurrentElement;
   } else return typeof (zIndexArray[i]) == "undefined";
  return true;
 },
 TestIsPopupElement: function (element) {
  return !!element.DXPopupElementControl;
 }
}
PopupUtils.OverControl = {
 GetPopupElementByEvt: function (evt) {
  return PopupUtils.FindEventSourceParentByTestFunc(evt, PopupUtils.TestIsPopupElement);
 },
 OnMouseEvent: function (evt, mouseOver) {
  var popupElement = PopupUtils.OverControl.GetPopupElementByEvt(evt);
  if(mouseOver)
   popupElement.DXPopupElementControl.OnPopupElementMouseOver(evt, popupElement);
  else
   popupElement.DXPopupElementControl.OnPopupElementMouseOut(evt, popupElement);
 },
 OnMouseOut: function (evt) {
  PopupUtils.OverControl.OnMouseEvent(evt, false);
 },
 OnMouseOver: function (evt) {
  PopupUtils.OverControl.OnMouseEvent(evt, true);
 }
}
PopupUtils.BodyScrollHelper = (function () {
 var windowScrollLock = {};
 function lockWindowScroll(windowId) {
  windowScrollLock[windowId] = true;
 }
 function unlockWindowScroll(windowId) {
  windowScrollLock[windowId] = false;
 }
 function isAnyWindowScrollLocked() {
  for(var key in windowScrollLock) 
   if(windowScrollLock[key])
    return true;
  return false;
 }
 function fixScrollsBug() {
  var scrollTop = document.body.scrollTop;
  var scrollLeft = document.body.scrollLeft;
  document.body.scrollTop++;
  document.body.scrollTop--;
  document.body.scrollLeft++;
  document.body.scrollLeft--;
  document.body.scrollLeft = scrollLeft;
  document.body.scrollTop = scrollTop;
 }
 return {
  HideBodyScroll: function(windowId) {
   if(ASPx.Browser.WebKitTouchUI)
    return;
   if(isAnyWindowScrollLocked()) { 
    lockWindowScroll(windowId);
    return;
   }
   lockWindowScroll(windowId);
   var verticalScrollMustBeReplacedByMargin = PopupUtils.IsVerticalScrollExists();
   if(ASPx.Browser.IE) {
    ASPx.Attr.ChangeAttribute(document.body, "scroll", "no");
    ASPx.Attr.ChangeStyleAttribute(document.documentElement, "overflow", "hidden");
   } else if(ASPx.Browser.Firefox && ASPx.Browser.Version < 3) { 
    var scrollTop = document.documentElement.scrollTop;
    ASPx.Attr.ChangeStyleAttribute(document.body, "overflow", "hidden");
    document.documentElement.scrollTop = scrollTop;
   } else {
    ASPx.Attr.ChangeStyleAttribute(document.documentElement, "overflow", "hidden");
    var documentHeight = ASPx.GetDocumentHeight();
    var documentWidth = ASPx.GetDocumentWidth();
    if(window.pageYOffset > 0 && ASPx.PxToInt(window.getComputedStyle(document.body, null)) != documentHeight)
     ASPx.Attr.ChangeStyleAttribute(document.body, "height", documentHeight + "px");
    if(window.pageXOffset > 0 && ASPx.PxToInt(window.getComputedStyle(document.body, null)) != documentWidth)
     ASPx.Attr.ChangeStyleAttribute(document.body, "width", documentWidth + "px");
    if(ASPx.Browser.Chrome) {
     fixScrollsBug();
    }
   }
   if(verticalScrollMustBeReplacedByMargin) {
    var currentBodyStyle = ASPx.GetCurrentStyle(document.body),
     marginWidth = ASPx.GetVerticalScrollBarWidth() + ASPx.PxToInt(currentBodyStyle.marginRight);
    ASPx.Attr.ChangeStyleAttribute(document.body, "margin-right", marginWidth + "px");
   }
  },
  RestoreBodyScroll: function (windowId) {
   if(ASPx.Browser.WebKitTouchUI)
    return;
   unlockWindowScroll(windowId);
   if(isAnyWindowScrollLocked())
    return;
   if(ASPx.Browser.IE) {
    ASPx.Attr.RestoreAttribute(document.body, "scroll");
    ASPx.Attr.RestoreStyleAttribute(document.documentElement, "overflow");
   } else {
    ASPx.Attr.RestoreStyleAttribute(document.documentElement, "overflow");
   }
   ASPx.Attr.RestoreStyleAttribute(document.body, "margin-right");
   ASPx.Attr.RestoreStyleAttribute(document.body, "height");
   ASPx.Attr.RestoreStyleAttribute(document.body, "width");
   if(ASPx.Browser.WebKitFamily) { 
    fixScrollsBug();
   }
  }
 }
})();
ASPx.PopupPosition = function(position, isInverted) {
 this.position = position;
 this.isInverted = isInverted;
}
ASPx.PopupSize = function(width, height) {
 this.width = width;
 this.height = height;
}
ASPx.PopupUtils = PopupUtils;
})();
(function(){
 ScrollingManager = ASPx.CreateClass(null, {
  constructor: function(owner, scrollableArea, orientation, onBeforeScrolling, onAfterScrolling, forseEmulation) {
   this.owner = owner;
   this.scrollableArea = scrollableArea;
   this.orientation = orientation;
   this.animationDelay = 1;
   this.animationStep = 2;
   this.animationOffset = 5;
   this.animationAcceleration = 0;
   this.scrollSessionInterval = 10;
   this.stopScrolling = true;
   this.busy = false;
   this.currentAcceleration = 0;
   this.startPos;
   this.onBeforeScrolling = onBeforeScrolling;
   this.onAfterScrolling = onAfterScrolling;
   this.emulationMode = forseEmulation === true || !ASPx.Browser.TouchUI; 
   this.Initialize();
  },
  Initialize: function(){
   this.setParentNodeOverflow();
   if(this.emulationMode){
    this.wrapper = new ScrollingManager.scrollWrapper(this.scrollableArea);
   } else {
    this.wrapper = new ScrollingManager.scrollWrapperTouchUI(this.scrollableArea, function(direction){
     if(this.onAfterScrolling)
      this.onAfterScrolling(this, direction);
    }.aspxBind(this)); 
   }
  },
  setParentNodeOverflow: function() {
   if(ASPx.Browser.MSTouchUI){
    this.scrollableArea.parentNode.style.overflow = "auto";
    this.scrollableArea.parentNode.style["-ms-overflow-style"] = "-ms-autohiding-scrollbar";
   } 
  },
  GetScrolledAreaPosition: function() {
   return this.wrapper.GetScrollLeft() * this.orientation[0]
    + this.wrapper.GetScrollTop() * this.orientation[1];
  },
  SetScrolledAreaPosition: function(pos) {
   this.wrapper.SetScrollLeft(pos * this.orientation[0]);
   this.wrapper.SetScrollTop(pos * this.orientation[1]);
  },
  PrepareForScrollAnimation: function() {
   if(!this.scrollableArea)
    return;  
   this.currentAcceleration = 0;
   this.startPos = this.GetScrolledAreaPosition();
   this.busy = false;
  },
  GetAnimationStep: function(dir) {
   var step = dir * (this.animationStep + this.currentAcceleration);
   var newPos = this.GetScrolledAreaPosition() + step;
   var requiredPos = this.startPos + dir * this.animationOffset;
   if((dir == 1 && newPos >= requiredPos) || (dir == -1 && newPos <= requiredPos)) {
    step = requiredPos - this.GetScrolledAreaPosition();
   } 
   return step;
  },
  DoScrollSessionAnimation: function(direction) {
   if(!this.scrollableArea)
    return;
   this.SetScrolledAreaPosition(this.GetScrolledAreaPosition() + this.GetAnimationStep(direction));
   var self = this;
   if(!this.ShouldStopScrollSessionAnimation()) {
    this.busy = true;
    this.currentAcceleration += this.animationAcceleration;
    window.setTimeout(function() { self.DoScrollSessionAnimation(direction); }, this.animationDelay);
   } else {
    if(this.onAfterScrolling)
     this.onAfterScrolling(this, -direction);   
    this.busy = false;
    this.currentAcceleration = 0;
    window.setTimeout(function() { self.DoScroll(direction); }, this.scrollSessionInterval);
   }
  },
  ShouldStopScrollSessionAnimation: function() {
   return (Math.abs(this.GetScrolledAreaPosition() - this.startPos) >= Math.abs(this.animationOffset));
  },
  DoScroll: function(direction) {
   if(!this.scrollableArea)
    return; 
   if(!this.busy && !this.stopScrolling) {
    if(this.onBeforeScrolling)
     this.onBeforeScrolling(this, -direction);
    if(this.stopScrolling) return;
    this.PrepareForScrollAnimation();
    this.DoScrollSessionAnimation(direction);
   } 
  },
  StartScrolling: function(direction, delay, step) {
   this.stopScrolling = false;
   this.animationDelay = delay;
   this.animationStep = step;
   this.DoScroll(-direction);
  },
  StopScrolling: function() {
   this.stopScrolling = true;
  },
  IsStopped: function() {
   return this.stopScrolling;
  }
 });
 ScrollingManager.scrollWrapper = function(scrollableArea){
  this.scrollableArea = scrollableArea;
  this.Initialize();
 };
 ScrollingManager.scrollWrapper.prototype = {
  Initialize: function(){
   this.scrollableArea.style.position = "relative";
   this.scrollableArea.parentNode.style.position = "relative";
  },
  GetScrollLeft: function(){ return ASPx.PxToFloat(this.scrollableArea.style.left); },
  GetScrollTop:  function(){ return ASPx.PxToFloat(this.scrollableArea.style.top); },
  SetScrollLeft: function(value){ this.scrollableArea.style.left = value + "px"; },
  SetScrollTop:  function(value){ this.scrollableArea.style.top  = value + "px"; }
 };
 ScrollingManager.scrollWrapperTouchUI = function(scrollableArea, onScroll){
  this.scrollableArea = scrollableArea;
  this.scrollTimerId = -1;
  this.onScroll = onScroll;
  this.Initialize(onScroll);
 };
 ScrollingManager.scrollWrapperTouchUI.prototype = {
  Initialize: function(){
   var div = this.scrollableArea.parentNode;
   var timeout = ASPx.Browser.MSTouchUI ? 500 : 1000;
   var nativeScrollSupported = ASPx.TouchUIHelper.nativeScrollingSupported();
   this.onScrollCore = function(){
     ASPx.Timer.ClearTimer(this.scrollTimerId);
     if(this.onScrollLocked) return;
     this.scrollTimerId = window.setTimeout(this.onScrollByTimer, timeout);
    }.aspxBind(this);
   this.onScrollByTimer = function(){
     if(this.onScrollLocked) return;
     var direction = this.lastScrollTop < div.scrollTop ? 1 : -1;
     this.lastScrollTop = div.scrollTop;
     this.onScrollLocked = true;
     this.onScroll(direction);
     this.onScrollLocked = false;
    }.aspxBind(this);
   this.lastScrollTop = div.scrollTop;
   var onscroll = nativeScrollSupported ? this.onScrollCore : this.onScrollByTimer;
   ASPx.Evt.AttachEventToElement(div, "scroll", onscroll);
   if(ASPx.Browser.WebKitTouchUI)
    this.scrollExtender = ASPx.TouchUIHelper.MakeScrollable(div, {showHorizontalScrollbar: false});
  },
  GetScrollLeft: function(){ return -this.scrollableArea.parentNode.scrollLeft; },
  GetScrollTop:  function(){ return -this.scrollableArea.parentNode.scrollTop; },
  SetScrollLeft: function(value){ 
   this.onScrollLocked = true;
   this.scrollableArea.parentNode.scrollLeft = -value; 
   this.onScrollLocked = false;
  },
  SetScrollTop:  function(value){ 
   this.onScrollLocked = true;
   this.scrollableArea.parentNode.scrollTop  = -value; 
   this.onScrollLocked = false;
  }
 };
 ASPx.ScrollingManager = ScrollingManager;
})();
(function() {
var Constants = {
 MIIdSuffix: "_DXI",
 MMIdSuffix: "_DXM",
 SBIdSuffix: "_DXSB",
 SBUIdEnd: "_U",
 SBDIdEnd: "_D",
 SampleCssClassNameForImageElement: "SAMPLE_CSS_CLASS"
}
var MenuItemInfo = ASPx.CreateClass(null, {
 constructor: function(menu, indexPath) {
  var itemElement = menu.GetItemElement(indexPath);
  this.clientHeight = itemElement.clientHeight;
  this.clientWidth = itemElement.clientWidth;
  this.clientTop = ASPx.GetClientTop(itemElement);
  this.clientLeft = ASPx.GetClientLeft(itemElement);
  this.offsetHeight = itemElement.offsetHeight;
  this.offsetWidth = itemElement.offsetWidth;
  this.offsetTop = 0;
  this.offsetLeft = 0;
 }
});
var MenuCssClasses = {};
MenuCssClasses.Prefix = "dxm-";
MenuCssClasses.Menu = "dxmLite";
MenuCssClasses.BorderCorrector = "dxmBrdCor";
MenuCssClasses.Disabled = MenuCssClasses.Prefix + "disabled";
MenuCssClasses.MainMenu = MenuCssClasses.Prefix + "main";
MenuCssClasses.PopupMenu = MenuCssClasses.Prefix + "popup";
MenuCssClasses.HorizontalMenu = MenuCssClasses.Prefix + "horizontal";
MenuCssClasses.VerticalMenu = MenuCssClasses.Prefix + "vertical";
MenuCssClasses.NoWrapMenu = MenuCssClasses.Prefix + "noWrap";
MenuCssClasses.AutoWidthMenu = MenuCssClasses.Prefix + "autoWidth";
MenuCssClasses.DX = "dx";
MenuCssClasses.Separator = MenuCssClasses.Prefix + "separator";
MenuCssClasses.Spacing = MenuCssClasses.Prefix + "spacing";
MenuCssClasses.Gutter = MenuCssClasses.Prefix + "gutter";
MenuCssClasses.WithoutImages = MenuCssClasses.Prefix + "noImages";
MenuCssClasses.Item = MenuCssClasses.Prefix + "item";
MenuCssClasses.ItemHovered = MenuCssClasses.Prefix + "hovered";
MenuCssClasses.ItemSelected = MenuCssClasses.Prefix + "selected";
MenuCssClasses.ItemChecked = MenuCssClasses.Prefix + "checked";
MenuCssClasses.ItemWithoutImage = MenuCssClasses.Prefix + "noImage";
MenuCssClasses.ItemWithSubMenu = MenuCssClasses.Prefix + "subMenu";
MenuCssClasses.ItemDropDownMode = MenuCssClasses.Prefix + "dropDownMode";
MenuCssClasses.ItemWithoutSubMenu = MenuCssClasses.Prefix + "noSubMenu"; 
MenuCssClasses.AdaptiveMenuItem = MenuCssClasses.Prefix + "ami";
MenuCssClasses.AdaptiveMenuItemSpacing = MenuCssClasses.Prefix + "amis";
MenuCssClasses.AdaptiveMenu = MenuCssClasses.Prefix + "am";
MenuCssClasses.AdaptiveMenuHiddenElement = MenuCssClasses.Prefix + "amhe";
MenuCssClasses.ContentContainer = MenuCssClasses.Prefix + "content";
MenuCssClasses.Image = MenuCssClasses.Prefix + "image";
MenuCssClasses.PopOutContainer = MenuCssClasses.Prefix + "popOut";
MenuCssClasses.PopOutImage = MenuCssClasses.Prefix + "pImage";
MenuCssClasses.ImageLeft = MenuCssClasses.Prefix + "image-l";
MenuCssClasses.ImageRight = MenuCssClasses.Prefix + "image-r";
MenuCssClasses.ImageTop = MenuCssClasses.Prefix + "image-t";
MenuCssClasses.ImageBottom = MenuCssClasses.Prefix + "image-b";
MenuCssClasses.ScrollArea = MenuCssClasses.Prefix + "scrollArea";
MenuCssClasses.ScrollUpButton = MenuCssClasses.Prefix + "scrollUpBtn";
MenuCssClasses.ScrollDownButton = MenuCssClasses.Prefix + "scrollDownBtn";
MenuCssClasses.ItemClearElement = MenuCssClasses.DX + "-clear";
MenuCssClasses.ItemTextElement = MenuCssClasses.DX + "-vam";
var MenuRenderHelper = {};
MenuRenderHelper.InlineInitializeElements = function(menu) {
 if(!menu.isPopupMenu)
  this.InlineInitializeMainMenuElements(menu, menu.GetMainElement());
 var commonContainer = menu.GetMainElement().parentNode;
 var subMenuElements = ASPx.GetChildNodesByTagName(commonContainer, "DIV");
 for(var i = 0; i < subMenuElements.length; i++) {
  if(!menu.isPopupMenu && subMenuElements[i] == menu.GetMainElement())
   continue;
  this.InlineInitializeSubMenuElements(menu, subMenuElements[i]);
 }
};
MenuRenderHelper.InlineInitializeScrollElements = function(menu, indexPath, menuElement) {
 var scrollArea = ASPx.GetNodeByClassName(menuElement, MenuCssClasses.ScrollArea);
 if(scrollArea) scrollArea.id = menu.GetScrollAreaId(indexPath);
 var scrollUpButton = ASPx.GetNodeByClassName(menuElement, MenuCssClasses.ScrollUpButton);
 if(scrollUpButton) scrollUpButton.id = menu.GetScrollUpButtonId(indexPath);
 var scrollDownButton = ASPx.GetNodeByClassName(menuElement, MenuCssClasses.ScrollDownButton);
 if(scrollDownButton) scrollDownButton.id = menu.GetScrollDownButtonId(indexPath);
};
MenuRenderHelper.InlineInitializeMainMenuElements = function(menu, menuElement) {
 if(menu.NeedCreateItemsOnClientSide() && menu.needDropCache) {
  ASPx.CacheHelper.DropCache(menuElement);
  menu.needDropCache = false;
 }
 var contentElement = this.GetContentElement(menuElement);
 if(contentElement.className.indexOf("dxm-ti") > 1)
  menu.itemLinkMode = "TextAndImage";
 else if(contentElement.className.indexOf("dxm-t") > -1)
  menu.itemLinkMode = "TextOnly";
 var itemElements = this.GetItemElements(menuElement);
 for(var i = 0; i < itemElements.length; i++)
  this.InlineInitializeItemElement(menu, itemElements[i], "", i);
 this.InlineInitializeScrollElements(menu, "", menuElement);
};
MenuRenderHelper.InlineInitializeSubMenuElements = function(menu, parentElement) {
 parentElement.style.position = "absolute";
 var indexPath = menu.GetMenuIndexPathById(parentElement.id);
 var borderCorrectorElement = ASPx.GetNodeByClassName(parentElement, MenuCssClasses.BorderCorrector);
 if(borderCorrectorElement != null) {
  borderCorrectorElement.id = menu.GetMenuBorderCorrectorElementId(indexPath);
  borderCorrectorElement.style.position = "absolute";
  parentElement.removeChild(borderCorrectorElement);
  parentElement.parentNode.appendChild(borderCorrectorElement);
 }
 this.InlineInitializeSubMenuMenuElement(menu, parentElement);
};
MenuRenderHelper.InlineInitializeSubMenuMenuElement = function(menu, parentElement) {
 var menuElement = ASPx.GetNodeByClassName(parentElement, MenuCssClasses.PopupMenu);
 var indexPath = menu.GetMenuIndexPathById(parentElement.id);
 menuElement.id = menu.GetMenuMainElementId(indexPath);
 if(menu.NeedCreateItemsOnClientSide() && menu.needDropCache) {
  ASPx.CacheHelper.DropCache(menuElement);
  menu.needDropCache = false;
 }
 var contentElement = this.GetContentElement(menuElement);
 if(contentElement != null) {
  var itemElements = this.GetItemElements(menuElement);
  var parentIndexPath = parentElement == menu.GetMainElement() ? "" : indexPath;
  for(var i = 0; i < itemElements.length; i++) {
   var itemElementId = itemElements[i].id;
   if(itemElementId && aspxGetMenuCollection().GetMenu(itemElementId) != menu)
    continue;
   this.InlineInitializeItemElement(menu, itemElements[i], parentIndexPath, i);
  }
 }
 this.InlineInitializeScrollElements(menu, indexPath, menuElement);
};
MenuRenderHelper.HasSubMenuTemplate = function(menuElement) {
 var contentElement = this.GetContentElement(menuElement);
 return contentElement && (contentElement.tagName != "UL" || !ASPx.GetNodesByPartialClassName(contentElement, MenuCssClasses.ContentContainer).length);
};
MenuRenderHelper.InlineInitializeItemElement = function(menu, itemElement, parentIndexPath, visibleIndex) {
 function getItemIndex(visibleIndex) {
  var itemData = parentItemData[Math.max(visibleIndex, 0)];
  return itemData.constructor == Array
   ? itemData[0]
   : itemData;
 }
 var parentItemData = menu.renderData[parentIndexPath],
  prepareItemOnClick = parentItemData[visibleIndex].constructor == Array,
  indexPathPrefix = parentIndexPath + (parentIndexPath != "" ? ASPx.ItemIndexSeparator : ""),
  indexPath = indexPathPrefix + getItemIndex(visibleIndex),
  prevIndexPath = indexPathPrefix + getItemIndex(visibleIndex - 1);
 itemElement.id = menu.GetItemElementId(indexPath);
 ASPx.AssignAccessabilityEventsToChildrenLinks(itemElement);
 var separatorElement = itemElement.previousSibling;
 if(separatorElement && separatorElement.className) {
  if(ASPx.ElementContainsCssClass(separatorElement, MenuCssClasses.Spacing))
   separatorElement.id = menu.GetItemIndentElementId(indexPath);
  else if(ASPx.ElementContainsCssClass(separatorElement, MenuCssClasses.Separator))
   separatorElement.id = menu.GetItemSeparatorElementId(indexPath);
 }
 var contentElement = this.GetItemContentElement(itemElement);
 if(contentElement != null) {
  contentElement.id = menu.GetItemContentElementId(indexPath);
  var imageElement = ASPx.GetNodeByClassName(contentElement, MenuCssClasses.Image);
  if(imageElement == null) {
   var hyperLinkElement = ASPx.GetNodeByClassName(contentElement, MenuCssClasses.DX);
   if(hyperLinkElement != null)
    imageElement = ASPx.GetNodeByClassName(hyperLinkElement, MenuCssClasses.Image);
  }
  if(imageElement != null)
   imageElement.id = menu.GetItemImageId(indexPath);
 }
 else
  prepareItemOnClick = false;
 var popOutElement = this.GetItemPopOutElement(itemElement);
 if(popOutElement != null) {
  popOutElement.id = menu.GetItemPopOutElementId(indexPath);
  var popOutImageElement = ASPx.GetNodeByClassName(popOutElement, MenuCssClasses.PopOutImage);
  if(popOutImageElement != null)
   popOutImageElement.id = menu.GetItemPopOutImageId(indexPath);
 }
 if(prepareItemOnClick)
  this.InlineInitializeItemOnClick(menu, itemElement, indexPath);
};
MenuRenderHelper.InlineInitializeItemOnClick = function(menu, itemElement, indexPath) {
 var name = menu.name;
 var onclick = this.GetItemOnClick(menu, name, itemElement, indexPath);
 var assignElementOnClick = function(element, method) {
  switch(menu.itemLinkMode){
   case "ContentBounds":
    ASPx.Evt.AttachEventToElement(element, "click", method);
    break;
   case "TextOnly":
    var textElement = ASPx.GetNodeByTagName(element, "A");
    if(!textElement)
     textElement = ASPx.GetNodeByTagName(element, "SPAN");
    if(textElement)
     ASPx.Evt.AttachEventToElement(textElement, "click", method);
    break;
   case "TextAndImage":
    var linkElement = ASPx.GetNodeByTagName(element, "A");
    if(linkElement)
     ASPx.Evt.AttachEventToElement(linkElement, "click", method);
    else{
     var textElement = ASPx.GetNodeByTagName(element, "SPAN");
     if(textElement)
      ASPx.Evt.AttachEventToElement(textElement, "click", method);
     var imageElement = ASPx.GetNodeByTagName(element, "IMG");
     if(imageElement)
      ASPx.Evt.AttachEventToElement(imageElement, "click", method);
    }
    break;
  }
 };
 if(menu.IsDropDownItem(indexPath)) {
  var contentElement = menu.GetItemContentElement(indexPath);
  var dropDownElement = menu.GetItemPopOutElement(indexPath);
  var dropDownOnclick = this.GetItemDropdownOnClick(name, itemElement, indexPath);
  assignElementOnClick(contentElement, onclick);
  assignElementOnClick(dropDownElement, dropDownOnclick);
 }
 else
  assignElementOnClick(itemElement, onclick);
};
MenuRenderHelper.GetItemOnClick = function(menu, name, itemElement, indexPath) { 
 var sendPostBackHandler = function() {
  menu.SendPostBack("CLICK:" + indexPath);
 };
 var itemClickHandler = function(e) {
  ASPx.MIClick(e, name, indexPath);
 };
 var handler = menu.autoPostBack && !menu.IsClientSideEventsAssigned() && !ASPx.GetNodeByTagName(itemElement, "A")
  ? sendPostBackHandler
  : itemClickHandler;
 return function(e) {
  if(!itemElement.clientDisabled)
   handler(e);
 };
};
MenuRenderHelper.GetItemDropdownOnClick = function(name, itemElement, indexPath) {
 return function(e) {
  if(!itemElement.clientDisabled)
   ASPx.MIDDClick(e, name, indexPath);
 };
};
MenuRenderHelper.ChangeItemEnabledAttributes = function(itemElement, enabled) {
 if(itemElement) {
  itemElement.clientDisabled = !enabled;
  ASPx.Attr.ChangeStyleAttributesMethod(enabled)(itemElement, "cursor");
  var hyperLink = ASPx.GetNodeByTagName(itemElement, "A");
  if(hyperLink)
   ASPx.Attr.ChangeAttributesMethod(enabled)(hyperLink, "href");
 }
};
MenuRenderHelper.GetContentElement = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "contentElement", 
  function() {
   var contentElement = ASPx.GetNodeByTagName(menuElement, "DIV", 0);
   if(contentElement && contentElement.className == MenuCssClasses.DX && contentElement.parentNode == menuElement) 
    return contentElement;
   contentElement = ASPx.GetNodeByTagName(menuElement, "UL", 0);
   if(contentElement)
    return contentElement;
   return ASPx.GetNodeByTagName(menuElement, "TABLE", 0); 
  }, menuElement);
};
MenuRenderHelper.GetItemElements = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElements(this, "itemElements", 
  function() {
   var contentElement = this.GetContentElement(menuElement);
   return contentElement ? ASPx.GetNodesByClassName(contentElement, MenuCssClasses.Item) : null;
  }, menuElement);
};
MenuRenderHelper.GetSpacingElements = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElements(this, "spacingElements", 
  function() {
   var contentElement = this.GetContentElement(menuElement);
   return contentElement ? ASPx.GetNodesByClassName(contentElement, MenuCssClasses.Spacing) : null;
  }, menuElement);
};
MenuRenderHelper.GetSeparatorElements = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElements(this, "separatorElements", 
  function() {
   var contentElement = this.GetContentElement(menuElement);
   return contentElement ? ASPx.GetNodesByClassName(contentElement, MenuCssClasses.Separator) : null;
  }, menuElement);
};
MenuRenderHelper.GetItemContentElement = function(itemElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "contentElement", 
  function() {
   return ASPx.GetNodeByClassName(itemElement, MenuCssClasses.ContentContainer);
  }, itemElement);
};
MenuRenderHelper.GetItemPopOutElement = function(itemElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "popOutElement", 
  function() {
   return ASPx.GetNodeByClassName(itemElement, MenuCssClasses.PopOutContainer);
  }, itemElement);
};
MenuRenderHelper.GetAdaptiveMenuItemElement = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "adaptiveMenuItemElement", 
  function() {
   var contentElement = this.GetContentElement(menuElement);
   return contentElement ? ASPx.GetNodeByClassName(contentElement, MenuCssClasses.AdaptiveMenuItem) : null;
  }, menuElement);
};
MenuRenderHelper.GetAdaptiveMenuItemSpacingElement = function(menuElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "adaptiveMenuItemSpacingElement", 
  function() {
   var contentElement = this.GetContentElement(menuElement);
   return contentElement ? ASPx.GetNodeByClassName(contentElement, MenuCssClasses.AdaptiveMenuItemSpacing) : null;
  }, menuElement);
};
MenuRenderHelper.GetAdaptiveMenuElement = function(menu, menuElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "adaptiveMenuElement", 
  function() {
   var adaptiveItemElement = this.GetAdaptiveMenuItemElement(menuElement);
   if(adaptiveItemElement){
    var adaptiveItemIndexPath = menu.GetIndexPathById(adaptiveItemElement.id);
    var adaptiveMenuParentElement = menu.GetMenuElement(adaptiveItemIndexPath);
    if(adaptiveMenuParentElement) 
     return menu.GetMenuMainElement(adaptiveMenuParentElement);
   }
   return null;
  }, menuElement);
};
MenuRenderHelper.GetAdaptiveMenuContentElement = function(menu, menuElement) {
 return ASPx.CacheHelper.GetCachedElement(this, "adaptiveMenuContentElement", 
  function() {
   var adaptiveMenuElement = this.GetAdaptiveMenuElement(menu, menuElement);
   return adaptiveMenuElement ? this.GetContentElement(adaptiveMenuElement) : null;
  }, menuElement);
};
MenuRenderHelper.CalculateMenuControl = function(menu, menuElement, recalculate) {
 if(menuElement.offsetWidth === 0) return;
 this.PrecalculateMenuPopOuts(menuElement);
 var isVertical = menu.IsVertical("");
 var isAutoWidth = ASPx.ElementContainsCssClass(menuElement, MenuCssClasses.AutoWidthMenu);
 var isNoWrap = ASPx.ElementContainsCssClass(menuElement, MenuCssClasses.NoWrapMenu);
 var contentElement = this.GetContentElement(menuElement);
 if(menu.enableAdaptivity) 
  this.CalculateAdaptiveMainMenu(menu, menuElement, contentElement, isVertical, isAutoWidth, isNoWrap, recalculate);
 else
  this.CalculateMainMenu(menu, menuElement, contentElement, isVertical, isAutoWidth, isNoWrap, recalculate);
};
MenuRenderHelper.CalculateMainMenu = function(menu, menuElement, contentElement, isVertical, isAutoWidth, isNoWrap, recalculate) {
 var itemElements = this.GetItemElements(menuElement);
 this.PrecalculateMenuItems(menuElement, itemElements, recalculate);
 this.CalculateMenuItemsAutoWidth(menuElement, itemElements, isVertical, isAutoWidth);
 this.CalculateMinSize(menuElement, contentElement, itemElements, isVertical, isAutoWidth, isNoWrap, recalculate);
 this.CalculateMenuItems(menuElement, contentElement, itemElements, isVertical, recalculate);
 this.CalculateSeparatorsAndSpacers(menuElement, itemElements, contentElement, isVertical);
};
MenuRenderHelper.PrecalculateMenuPopOuts = function(menuElement) {
 if(menuElement.popOutsPreCalculated) return;
 var elements = this.GetItemElements(menuElement);
 for(var i = 0; i < elements.length; i++) {
  var popOutElement = this.GetItemPopOutElement(elements[i]);
  if(popOutElement) popOutElement.style.display = "block";
 }
 menuElement.popOutsPreCalculated = true;
};
MenuRenderHelper.PrecalculateMenuItems = function(menuElement, itemElements, recalculate) {
 if(!recalculate) return;
 for(var i = 0; i < itemElements.length; i++) {
  var itemContentElement = this.GetItemContentElement(itemElements[i]);
  if(!itemContentElement || itemContentElement.offsetWidth === 0) continue;
  ASPx.SetElementFloat(itemContentElement, "");
  ASPx.Attr.RestoreStyleAttribute(itemContentElement, "padding-left");
  ASPx.Attr.RestoreStyleAttribute(itemContentElement, "padding-right");
    this.ReCalculateMenuItemContent(itemElements[i], itemContentElement);
 }
};
MenuRenderHelper.ReCalculateMenuItemContent = function(itemElement, itemContentElement) {
 for(var j = 0; j < itemElement.childNodes.length; j++) {
  var child = itemElement.childNodes[j];
  if(!child.offsetWidth) continue;
  if(child !== itemContentElement) {
   if(ASPx.Browser.IE && ASPx.Browser.Version == 8)
    ASPx.Attr.RestoreStyleAttribute(child, "margin");
   else{
    ASPx.Attr.RestoreStyleAttribute(child, "margin-top");
    ASPx.Attr.RestoreStyleAttribute(child, "margin-bottom");
   }
  }
 }
};
MenuRenderHelper.CalculateMenuItemsAutoWidth = function(menuElement, itemElements, isVertical, isAutoWidth) {
 if(!isAutoWidth) return;
 for(var i = 0; i < itemElements.length; i++) 
  ASPx.Attr.RestoreStyleAttribute(itemElements[i], "width");
 if(!isVertical) {
  var autoWidthItemCount = 0;
  for(var i = 0; i < itemElements.length; i++) {
   if(ASPx.GetElementDisplay(itemElements[i]) && !ASPx.ElementHasCssClass(itemElements[i], MenuCssClasses.AdaptiveMenuItem))
    autoWidthItemCount++;
  }
  for(var i = 0; i < itemElements.length; i++) {
   if(autoWidthItemCount > 0 && !ASPx.ElementHasCssClass(itemElements[i], MenuCssClasses.AdaptiveMenuItem) && (itemElements[i].style.width === "" || itemElements[i].autoWidth)) { 
    ASPx.Attr.ChangeStyleAttribute(itemElements[i], "width", (100 / autoWidthItemCount) + "%");
    itemElements[i].autoWidth = true;
   }
  }
 }
};
MenuRenderHelper.CalculateMenuItems = function(menuElement, contentElement, itemElements, isVertical, recalculate) {
 if(contentElement.itemsCalculated && recalculate)
  contentElement.itemsCalculated = false;
 if(menuElement.offsetWidth === 0) return;
 if(contentElement.style.margin === "0px auto")
  ASPx.SetStyles(contentElement, { width: contentElement.offsetWidth, float: "none" }); 
 var menuWidth = ASPx.GetCurrentStyle(menuElement).width;
 var menuRequireItemCorrection = isVertical && menuWidth;
 for(var i = 0; i < itemElements.length; i++) {
  if(!itemElements[i].style.width && !menuRequireItemCorrection) continue;
  if(ASPx.IsPercentageSize(itemElements[i].style.width) && contentElement.style.width === "")
   contentElement.style.width = "100%"; 
  var itemContentElement = this.GetItemContentElement(itemElements[i]);
  if(!itemContentElement || itemContentElement.offsetWidth === 0) continue;
  if(!contentElement.itemsCalculated) {
   ASPx.Attr.RestoreStyleAttribute(itemContentElement, "padding-left");
   ASPx.Attr.RestoreStyleAttribute(itemContentElement, "padding-right");
   ASPx.SetElementFloat(itemContentElement, "none");
   var itemContentCurrentStyle = ASPx.GetCurrentStyle(itemContentElement);
   if(!isVertical || (itemContentCurrentStyle.textAlign != "center" && menuWidth)) {
    var originalPaddingLeft = parseInt(itemContentCurrentStyle.paddingLeft);
    var originalPaddingRight = parseInt(itemContentCurrentStyle.paddingRight);
    var leftChildrenWidth = 0, rightChildrenWidth = 0;
    for(var j = 0; j < itemElements[i].childNodes.length; j++) {
     var child = itemElements[i].childNodes[j];
     if(!child.offsetWidth) continue;
     if(child !== itemContentElement) {
      if(ASPx.GetElementFloat(child) === "right")
       rightChildrenWidth += child.offsetWidth + ASPx.GetLeftRightMargins(child);
      else if(ASPx.GetElementFloat(child) === "left")
       leftChildrenWidth += child.offsetWidth + ASPx.GetLeftRightMargins(child);
     }
    }
    if(leftChildrenWidth > 0 || rightChildrenWidth > 0){
     ASPx.Attr.ChangeStyleAttribute(itemContentElement, "padding-left", (leftChildrenWidth + originalPaddingLeft) + "px");
     ASPx.Attr.ChangeStyleAttribute(itemContentElement, "padding-right", (rightChildrenWidth + originalPaddingRight) + "px");
    }
   }
  }
  ASPx.AdjustWrappedTextInContainer(itemContentElement);
  this.CalculateMenuItemContent(itemElements[i], itemContentElement);
 }
 contentElement.itemsCalculated = true;
};
MenuRenderHelper.CalculateMenuItemContent = function(itemElement, itemContentElement) {
 var itemContentFound = false;
 for(var j = 0; j < itemElement.childNodes.length; j++) {
  var child = itemElement.childNodes[j];
  if(!child.offsetWidth) continue;
  var contentHeight = itemContentElement.offsetHeight;
  if(child !== itemContentElement) {
   if(itemContentFound){
    if(ASPx.Browser.IE && ASPx.Browser.Version == 8)
     ASPx.Attr.ChangeStyleAttribute(child, "margin", "-" + contentHeight + "px 0 0");
    else
     ASPx.Attr.ChangeStyleAttribute(child, "margin-top", "-" + contentHeight + "px");
   }
   else{
    if(ASPx.Browser.IE && ASPx.Browser.Version == 8)
     ASPx.Attr.ChangeStyleAttribute(child, "margin", "0 0 -" + contentHeight + "px");
    else
     ASPx.Attr.ChangeStyleAttribute(child, "margin-bottom", "-" + contentHeight + "px");
   }
  }
  else
   itemContentFound = true;
 }
};
MenuRenderHelper.CalculateSubMenu = function(menu, parentElement, recalculate) {
 var menuElement = menu.GetMenuMainElement(parentElement);
 var contentElement = this.GetContentElement(menuElement);
 if(!parentElement.isSubMenuCalculated || recalculate) {
  menuElement.style.width = "";
  menuElement.style.display = "table";
  menuElement.style.borderSpacing = "0px";
  parentElement.isSubMenuCalculated = true;
  if(contentElement.tagName === "UL") {
   if(contentElement.offsetWidth > 0) {
    if(ASPx.Browser.IE && ASPx.ElementHasCssClass(menuElement, MenuCssClasses.AdaptiveMenu))
     menuElement.style.width = "0px";
    menuElement.style.width = contentElement.offsetWidth + "px";
    menuElement.style.display = "";
    if(ASPx.IsPercentageSize(contentElement.style.width))
     contentElement.style.width = menuElement.style.width;
   }
   else
    parentElement.isSubMenuCalculated = false;
  }
 }
 this.CalculateSubMenuItems(menuElement, contentElement, recalculate);
};
MenuRenderHelper.CalculateSubMenuItems = function(menuElement, contentElement, recalculate) {
 var itemElements = this.GetItemElements(menuElement);
 this.PrecalculateMenuItems(menuElement, itemElements, recalculate);
 this.CalculateMenuItems(menuElement, contentElement, itemElements, true, recalculate);
};
MenuRenderHelper.CalculateMinSize = function(menuElement, contentElement, itemElements, isVertical, isAutoWidth, isNoWrap, recalculate) {
 if(menuElement.isMinSizeCalculated && !recalculate) return;
 if(isVertical) {
  menuElement.style.minWidth = "";
  ASPx.Attr.ChangeStyleAttribute(contentElement, "width", "1px");
  for(var i = 0; i < itemElements.length; i++) {
   var itemContentElement = this.GetItemContentElement(itemElements[i]);
   if(!itemContentElement || itemElements[i].offsetWidth === 0) continue;
   this.CalculateItemMinSize(itemElements[i]);
  }
  ASPx.Attr.RestoreStyleAttribute(contentElement, "width");
 }
 else {
  ASPx.RemoveClassNameFromElement(menuElement, MenuCssClasses.NoWrapMenu);
  ASPx.RemoveClassNameFromElement(menuElement, MenuCssClasses.AutoWidthMenu);
  ASPx.Attr.ChangeStyleAttribute(menuElement, "width", "1px");
  for(var i = 0; i < itemElements.length; i++) {
   var itemContentElement = this.GetItemContentElement(itemElements[i]);
   if(!itemContentElement || itemElements[i].offsetWidth === 0) continue;
   var textContainer = ASPx.GetNodeByTagName(itemContentElement, "SPAN", 0);
   if(textContainer && ASPx.GetCurrentStyle(textContainer).whiteSpace !== "nowrap")
    ASPx.AdjustWrappedTextInContainer(itemContentElement);
   this.CalculateItemMinSize(itemElements[i]);
  }
  if(isAutoWidth)
   ASPx.AddClassNameToElement(menuElement, MenuCssClasses.AutoWidthMenu);
  if(isNoWrap)
   ASPx.AddClassNameToElement(menuElement, MenuCssClasses.NoWrapMenu);
  if(isAutoWidth || isNoWrap)
   menuElement.style.minWidth = (contentElement.offsetWidth + ASPx.GetLeftRightBordersAndPaddingsSummaryValue(menuElement)) + "px";
  ASPx.Attr.RestoreStyleAttribute(menuElement, "width");
 }
 menuElement.isMinSizeCalculated = true;
};
MenuRenderHelper.CalculateItemMinSize = function(itemElement, recalculate) {
 if(itemElement.isMinSizeCalculated && !recalculate) return;
 var sizeCorrection = ASPx.Browser.HardwareAcceleration ? 1 : 0;
 itemElement.style.minWidth = "";
 var childrenWidth = 0;
 for(var j = 0; j < itemElement.childNodes.length; j++) {
  var child = itemElement.childNodes[j];
  if(!child.offsetWidth) continue;
  var float = ASPx.GetElementFloat(child);
  if(float === "none") {
   childrenWidth = child.offsetWidth;
   break;
  }
  else
   childrenWidth += child.offsetWidth;
 }
 itemElement.style.minWidth = (childrenWidth + sizeCorrection) + "px";
 itemElement.isMinSizeCalculated = true;
};
MenuRenderHelper.CalculateSeparatorsAndSpacers = function(menuElement, itemElements, contentElement, isVertical, isAutoWidth, isNoWrap) {
 var spacerElements = this.GetSpacingElements(menuElement);
 var spacerAndSeparatorElements = spacerElements.concat(this.GetSeparatorElements(menuElement));
 for(var i = 0; i < spacerAndSeparatorElements.length; i++)
  ASPx.Attr.RestoreStyleAttribute(spacerAndSeparatorElements[i], "height");
 if(!isVertical && itemElements) {
  var menuHeight = 0;
  if(!isAutoWidth && !isNoWrap) {
   for(var i=0; i < itemElements.length; i++) {
    var newHeight = itemElements[i].offsetHeight;
    if(newHeight > menuHeight)
     menuHeight = newHeight;
   }
  }
  for(var i = 0; i < spacerAndSeparatorElements.length; i++){
   var separatorHeight = menuHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(spacerAndSeparatorElements[i]) - ASPx.GetTopBottomMargins(spacerAndSeparatorElements[i]);
   ASPx.Attr.ChangeStyleAttribute(spacerAndSeparatorElements[i], "height", separatorHeight + "px");
  }
  for(var i = 0; i < spacerElements.length; i++){
   if(!ASPx.ElementContainsCssClass(spacerElements[i], MenuCssClasses.AdaptiveMenuItemSpacing))
    spacerElements[i].style.minWidth = spacerElements[i].style.width; 
  }
 }
};
MenuRenderHelper.CalculateAdaptiveMainMenu = function(menu, menuElement, contentElement, isVertical, isAutoWidth, isNoWrap, recalculate) {
 var adaptiveItemElement = this.GetAdaptiveMenuItemElement(menuElement);
 if(!adaptiveItemElement) return;
 var adaptiveItemSpacing = this.GetAdaptiveMenuItemSpacingElement(menuElement);
 if(adaptiveItemSpacing) adaptiveItemSpacing.style.width = "";
 var adaptiveMenuElement = this.GetAdaptiveMenuElement(menu, menuElement);
 if(!adaptiveMenuElement) return;
 var adaptiveMenuContentElement = this.GetAdaptiveMenuContentElement(menu, menuElement);
 if(!contentElement.adaptiveInfo)
  this.InitAdaptiveInfo(contentElement);
 var wasAdaptivity = contentElement.adaptiveInfo.hasAdaptivity;
 if(wasAdaptivity)
  this.RestoreAdaptiveItems(adaptiveItemSpacing || adaptiveItemElement, contentElement, isVertical);
 if(!isVertical) {
  ASPx.SetElementDisplay(adaptiveItemElement, true);
  if(adaptiveItemSpacing) ASPx.SetElementDisplay(adaptiveItemSpacing, true);
  ASPx.RemoveClassNameFromElement(menuElement, MenuCssClasses.NoWrapMenu);
  menuElement.style.minWidth = "";
  var menuWidth = menuElement.offsetWidth - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(menuElement) - adaptiveItemElement.offsetWidth;
  if(adaptiveItemSpacing) menuWidth -= adaptiveItemSpacing.offsetWidth;
  var hasAdaptivity = this.HideAdaptiveItems(menu, menuWidth, contentElement, adaptiveMenuContentElement);
  contentElement.adaptiveInfo.hasAdaptivity = hasAdaptivity;
  ASPx.SetElementDisplay(adaptiveItemElement, hasAdaptivity);
  if(adaptiveItemSpacing) ASPx.SetElementDisplay(adaptiveItemSpacing, hasAdaptivity);
  contentElement.style.width = hasAdaptivity ? "100%" : "";
  if(hasAdaptivity){
   ASPx.CacheHelper.DropCache(adaptiveMenuElement);
   this.CalculateSubMenu(menu, adaptiveMenuElement, true);
   this.CalculateSeparatorsAndSpacers(adaptiveMenuElement, null, adaptiveMenuContentElement, true);
  }
  if(isNoWrap) {
   ASPx.AddClassNameToElement(menuElement, MenuCssClasses.NoWrapMenu);
   if(adaptiveItemSpacing) adaptiveItemSpacing.style.width = hasAdaptivity ? "100%" : "";
  }
 }
 else {
  ASPx.SetElementDisplay(adaptiveItemElement, false);
  if(adaptiveItemSpacing) ASPx.SetElementDisplay(adaptiveItemSpacing, false);
 }
 if(wasAdaptivity || contentElement.adaptiveInfo.hasAdaptivity)
  ASPx.CacheHelper.DropCache(menuElement);
 this.CalculateMainMenu(menu, menuElement, contentElement, isVertical, isAutoWidth, isNoWrap, wasAdaptivity || contentElement.adaptiveInfo.hasAdaptivity || recalculate);
};
MenuRenderHelper.InitAdaptiveInfo = function(contentElement) {
 if(contentElement.adaptiveInfo) return;
 contentElement.adaptiveInfo = { };
 contentElement.adaptiveInfo.elements = MenuRenderHelper.CreateAdaptiveElementsArray(contentElement);
 contentElement.adaptiveInfo.hasAdaptivity = false;
};
MenuRenderHelper.RestoreAdaptiveItems = function(previousSibling, contentElement, isVertical) {
 for(var i = 0; i < contentElement.adaptiveInfo.elements.length; i++) {
  var element = contentElement.adaptiveInfo.elements[i];
  if(ASPx.Browser.IE)
   ASPx.RemoveElement(element)
  contentElement.insertBefore(element, previousSibling);
  ASPx.Attr.RestoreStyleAttribute(element, "width");
  if(!isVertical)
   this.SetItemItemPopOutImageHorizontal(element);
  if(ASPx.ElementContainsCssClass(element, MenuCssClasses.Separator) || ASPx.ElementContainsCssClass(element, MenuCssClasses.Spacing))
   ASPx.RemoveClassNameFromElement(element, MenuCssClasses.AdaptiveMenuHiddenElement);
 }
};
MenuRenderHelper.CreateAdaptiveElementsArray = function(contentElement) {
 var result = [];
 var elements = ASPx.GetChildElementNodes(contentElement);
 for(var i = 0; i < elements.length; i++) {
  if(!ASPx.ElementHasCssClass(elements[i], MenuCssClasses.AdaptiveMenuItem) && !ASPx.ElementHasCssClass(elements[i], MenuCssClasses.AdaptiveMenuItemSpacing)) 
   result.push(elements[i]);
 }
 return result;
};
MenuRenderHelper.SetItemItemPopOutImageHorizontal = function(element) {
 var popOutElements = ASPx.GetNodesByPartialClassName(element, "dxWeb_mVerticalPopOut");
 for(var i = 0; i < popOutElements.length; i++)
  popOutElements[i].className = popOutElements[i].className.replace("Vertical", "Horizontal");
};
MenuRenderHelper.CheckAdaptiveItemsWidth = function(contentElement, width) {
 var itemsWidth = 0;
 var sizeCorrection = ASPx.Browser.HardwareAcceleration ? 1 : 0;
 var elements = ASPx.GetChildElementNodes(contentElement);
 for(var i = 0; i < elements.length; i++) {
  if(!ASPx.ElementHasCssClass(elements[i], MenuCssClasses.AdaptiveMenuItem) && 
   !ASPx.ElementHasCssClass(elements[i], MenuCssClasses.AdaptiveMenuItemSpacing) && elements[i].offsetWidth > 0) {
   if(elements[i].style.minWidth !== "")
    itemsWidth += parseInt(elements[i].style.minWidth) + ASPx.GetHorizontalBordersWidth(elements[i]);
   else
    itemsWidth += elements[i].offsetWidth;
  }
  if(itemsWidth > width)
   return false;
 }
 return true;
};
MenuRenderHelper.HideAdaptiveItems = function(menu, menuWidth, contentElement, adaptiveMenuContentElement) {
 if(MenuRenderHelper.CheckAdaptiveItemsWidth(contentElement, menuWidth))
  return false;
 var elementsToHide = [];
 var addToHide = function(index, itemElement, separatorElement, indentElement) {
  if(!itemElement) return;
  if(separatorElement && ASPx.ElementHasCssClass(separatorElement, MenuCssClasses.AdaptiveMenuItemSpacing))
   separatorElement = null;
  if(indentElement && ASPx.ElementHasCssClass(indentElement, MenuCssClasses.AdaptiveMenuItemSpacing))
   indentElement = null;
  elementsToHide[index] = { itemElement: itemElement, separatorElement: separatorElement, indentElement: indentElement };
  ASPx.Attr.ChangeStyleAttribute(itemElement, "display", "none");
  if(separatorElement)
   ASPx.Attr.ChangeStyleAttribute(separatorElement, "display", "none");
  if(indentElement)
   ASPx.Attr.ChangeStyleAttribute(indentElement, "display", "none");
 };
 for(var i = 0; i < menu.adaptiveItemsOrder.length; i++){
  var indexPath = menu.adaptiveItemsOrder[i];
  var index = parseInt(indexPath, 10);
  addToHide(index, menu.GetItemElement(indexPath), menu.GetItemSeparatorElement(indexPath), menu.GetItemIndentElement(indexPath));
  if(MenuRenderHelper.CheckAdaptiveItemsWidth(contentElement, menuWidth))
   break;
 }
 var hasImages = false;
 for(var i = 0; i < elementsToHide.length; i++) {
  if(!elementsToHide[i]) continue;
  ASPx.Attr.RestoreStyleAttribute(elementsToHide[i].itemElement, "display");
  if(elementsToHide[i].separatorElement)
   ASPx.Attr.RestoreStyleAttribute(elementsToHide[i].separatorElement, "display");
  if(elementsToHide[i].indentElement)
   ASPx.Attr.RestoreStyleAttribute(elementsToHide[i].indentElement, "display");
  if(elementsToHide[i].indentElement)
   adaptiveMenuContentElement.appendChild(elementsToHide[i].indentElement);
  if(elementsToHide[i].separatorElement)
   adaptiveMenuContentElement.appendChild(elementsToHide[i].separatorElement);
  adaptiveMenuContentElement.appendChild(elementsToHide[i].itemElement);
  ASPx.Attr.ChangeStyleAttribute(elementsToHide[i].itemElement, "width", "auto");
  if(ASPx.GetNodeByClassName(elementsToHide[i].itemElement, "dxm-image"))
   hasImages = true;
  this.SetItemPopOutImageVertical(elementsToHide[i].itemElement);
 }
 for(var i = 0; i < elementsToHide.length; i++) {
  if(!elementsToHide[i]) continue;
  if(elementsToHide[i].separatorElement) 
   ASPx.AddClassNameToElement(elementsToHide[i].separatorElement, MenuCssClasses.AdaptiveMenuHiddenElement);
  if(elementsToHide[i].indentElement) 
   ASPx.AddClassNameToElement(elementsToHide[i].indentElement, MenuCssClasses.AdaptiveMenuHiddenElement);
  break;
 }
 var elements = ASPx.GetChildElementNodes(contentElement);
 for(var i = 0; i < elements.length; i++) {
  if(ASPx.ElementContainsCssClass(elements[i], MenuCssClasses.Separator) || ASPx.ElementContainsCssClass(elements[i], MenuCssClasses.Spacing))
   ASPx.AddClassNameToElement(elements[i], MenuCssClasses.AdaptiveMenuHiddenElement);
  else
   break;
 }
 if(hasImages)
  ASPx.RemoveClassNameFromElement(adaptiveMenuContentElement, MenuCssClasses.WithoutImages);
 else
  ASPx.AddClassNameToElement(adaptiveMenuContentElement, MenuCssClasses.WithoutImages);
 return elementsToHide.length > 0;
};
MenuRenderHelper.SetItemPopOutImageVertical = function(element) {
 var popOutElements = ASPx.GetNodesByPartialClassName(element, "dxWeb_mHorizontalPopOut");
 for(var i = 0; i < popOutElements.length; i++)
  popOutElements[i].className = popOutElements[i].className.replace("Horizontal", "Vertical");
};
MenuRenderHelper.ChangeItemsPopOutImages = function(menuElement, isVertical) {
 var itemElements = this.GetItemElements(menuElement);
 for(var i = 0; i < itemElements.length; i++){
  if(isVertical)
   this.SetItemPopOutImageVertical(itemElements[i]);
  else
   this.SetItemItemPopOutImageHorizontal(itemElements[i]);
 }
};
MenuRenderHelper.ChangeOrientaion = function(isVertical, menu, menuElement) {
 var oldCssSelector = isVertical ? MenuCssClasses.HorizontalMenu : MenuCssClasses.VerticalMenu;
 var newCssSelector = isVertical ? MenuCssClasses.VerticalMenu : MenuCssClasses.HorizontalMenu;
 menuElement.className = menuElement.className.replace(oldCssSelector, newCssSelector);
 this.ChangeItemsPopOutImages(menuElement, isVertical);
 this.CalculateMenuControl(menu, menuElement, true);
 this.ChangeItemsPopOutImages(menuElement, isVertical);
};
var MenuScrollingManager = ASPx.CreateClass(ASPx.ScrollingManager, {
 constructor: function(menuScrollHelper) {
  this.constructor.prototype.constructor.call(this, menuScrollHelper, menuScrollHelper.scrollingAreaElement, [0, 1],
   function(manager, direction) {
    manager.owner.OnBeforeScrolling(direction);
   },
   function(manager, direction) {
    manager.owner.OnAfterScrolling(direction);
   }
  );
 },
 setParentNodeOverflow: function() { 
  if(ASPx.Browser.MSTouchUI) {
   this.scrollableArea.parentNode.style.overflow = "auto";
   this.scrollableArea.parentNode.style["-ms-overflow-style"] = "none";
  }  
 }
});
var MenuScrollHelper = ASPx.CreateClass(null, {
 constructor: function(menu, indexPath) {
  this.menu = menu;
  this.indexPath = indexPath;
  this.scrollingAreaElement = null;
  this.manager = null;
  this.initialized = false;
  this.visibleItems = [];
  this.itemsHeight = 0;
  this.scrollHeight = 0;
  this.scrollUpButtonHeight = 0;
  this.scrollDownButtonHeight = 0;
  this.scrollAreaHeight = null;
  this.scrollUpButtonVisible = false;
  this.scrollDownButtonVisible = false;
 },
 Initialize: function() {
  if(this.initialized) return;
  this.scrollingAreaElement = this.menu.GetScrollContentItemsContainer(this.indexPath);
  this.manager = new MenuScrollingManager(this);
  this.ShowScrollButtons();
  var scrollUpButton = this.menu.GetScrollUpButtonElement(this.indexPath);
  if(scrollUpButton) {
   this.scrollUpButtonHeight = this.GetScrollButtonHeight(scrollUpButton)
   ASPx.Selection.SetElementSelectionEnabled(scrollUpButton, false);
  }
  var scrollDownButton = this.menu.GetScrollDownButtonElement(this.indexPath);
  if(scrollDownButton) {
   this.scrollDownButtonHeight = this.GetScrollButtonHeight(scrollDownButton);
   ASPx.Selection.SetElementSelectionEnabled(scrollDownButton, false);
  }
  if(ASPx.Browser.WebKitTouchUI) {
   var preventDefault = function(event) { event.preventDefault(); };
   ASPx.Evt.AttachEventToElement(scrollUpButton, "touchstart", preventDefault);
   ASPx.Evt.AttachEventToElement(scrollDownButton, "touchstart", preventDefault);
  }
  this.HideScrollButtons();
  this.initialized = true;
 },
 GetScrollButtonHeight: function(button) {
  var style = ASPx.GetCurrentStyle(button);
  return button.offsetHeight + ASPx.PxToInt(style.marginTop) + ASPx.PxToInt(style.marginBottom);
 },
 FillVisibleItemsList: function() {
  var index = 0;
  this.visibleItems = [];
  while(true) {
   var childIndexPath = (this.indexPath != "" ? this.indexPath + ASPx.ItemIndexSeparator : "") + index;
   var itemElement = this.menu.GetItemElement(childIndexPath);
   if(itemElement == null)
    break;
   if(ASPx.GetElementDisplay(itemElement))
    this.visibleItems.push(itemElement);
   index++;
  }
 },
 CanCalculate: function() {
  return this.scrollingAreaElement && ASPx.IsElementDisplayed(this.scrollingAreaElement);
 },
 Calculate: function(scrollHeight) {
  if(!this.CanCalculate()) return;
  this.FillVisibleItemsList();
  this.itemsHeight = 0;
  this.scrollHeight = scrollHeight;
  var itemsContainer = this.menu.GetScrollContentItemsContainer(this.indexPath);
  if(itemsContainer) this.itemsHeight = itemsContainer.offsetHeight;
  this.SetPosition(0);
  this.CalculateScrollingElements(-1);
 },
 GetPosition: function() {
  return -this.manager.GetScrolledAreaPosition();
 },
 SetPosition: function(pos) {
  this.manager.SetScrolledAreaPosition(-pos);
 },
 CalculateScrollingElements: function(direction) {
  if(this.itemsHeight <= this.scrollHeight) {
   this.scrollUpButtonVisible = false;
   this.scrollDownButtonVisible = false;
   this.scrollAreaHeight = null;
   this.SetPosition(0);
  }
  else {
   var scrollTop = this.GetPosition();
   this.scrollAreaHeight = this.scrollHeight;
   if(direction > 0) {
    var showScrollUpButton = !this.scrollUpButtonVisible;
    this.scrollUpButtonVisible = true;
    this.scrollAreaHeight -= this.scrollUpButtonHeight;
    this.scrollDownButtonVisible = this.itemsHeight - this.scrollAreaHeight - scrollTop > this.scrollDownButtonHeight;
    if(this.scrollDownButtonVisible) {
     this.scrollAreaHeight -= this.scrollDownButtonHeight;
     if(showScrollUpButton)
      this.SetPosition(this.GetPosition() + this.scrollUpButtonHeight);
    }
    else {
     this.SetPosition(this.itemsHeight - this.scrollAreaHeight);
    }
   }
   else {
    this.scrollDownButtonVisible = true;
    this.scrollAreaHeight -= this.scrollDownButtonHeight;
    this.scrollUpButtonVisible = scrollTop > this.scrollUpButtonHeight;
    if(this.scrollUpButtonVisible)
     this.scrollAreaHeight -= this.scrollUpButtonHeight;
    else
     this.SetPosition(0);
   }
   if(this.scrollAreaHeight < 1) this.scrollAreaHeight = 1;
  }
  this.UpdateScrollingElements();
 },
 UpdateScrollingElements: function() {
  this.UpdateScrollAreaHeight();
  this.UpdateScrollButtonsVisibility();
 },
 UpdateScrollAreaHeight: function() {
  var scrollAreaElement = this.menu.GetScrollAreaElement(this.indexPath);
  if(scrollAreaElement)
   scrollAreaElement.style.height = (this.scrollAreaHeight) ? (this.scrollAreaHeight + "px") : "";
 },
 UpdateScrollButtonsVisibility: function() {
  var scrollUpButton = this.menu.GetScrollUpButtonElement(this.indexPath);
  if(scrollUpButton) ASPx.SetElementDisplay(scrollUpButton, this.scrollUpButtonVisible);
  var scrollDownButton = this.menu.GetScrollDownButtonElement(this.indexPath);
  if(scrollDownButton) ASPx.SetElementDisplay(scrollDownButton, this.scrollDownButtonVisible);
 },
 ChangeScrollButtonsVisibility: function(visible) {
  this.scrollUpButtonVisible = visible;
  this.scrollDownButtonVisible = visible;
  this.UpdateScrollButtonsVisibility();
 },
 ShowScrollButtons: function() {
  this.ChangeScrollButtonsVisibility(true);
 },
 HideScrollButtons: function() {
  this.ChangeScrollButtonsVisibility(false);
 },
 ResetScrolling: function() {
  if(!this.initialized)
   return;
  this.HideScrollButtons();
  this.SetPosition(0);
  this.scrollAreaHeight = null;
  this.UpdateScrollAreaHeight();
 },
 GetScrollAreaHeight: function() {
  var scrollAreaElement = this.menu.GetScrollAreaElement(this.indexPath);
  if(scrollAreaElement)
   return scrollAreaElement.offsetHeight;
  return 0;
 },
 OnAfterScrolling: function(direction) {
  this.CalculateScrollingElements(direction);
 },
 OnBeforeScrolling: function(direction) {
  var scrollButton = (direction > 0) ? this.menu.GetScrollDownButtonElement(this.indexPath) :
   this.menu.GetScrollUpButtonElement(this.indexPath);
  if(!scrollButton || !ASPx.GetElementDisplay(scrollButton))
   this.manager.StopScrolling();
 },
 StartScrolling: function(direction, delay, step) {
  this.manager.StartScrolling(direction, delay, step);
 },
 StopScrolling: function() {
  this.manager.StopScrolling();
 }
});
MenuScrollHelper.GetMenuByScrollButtonId = function(id) {
 var menuName = aspxGetMenuCollection().GetMenuNameBySuffixes(id, [Constants.SBIdSuffix]);
 return aspxGetMenuCollection().Get(menuName);
}
var ASPxClientMenuBase = ASPx.CreateClass(ASPxClientControl, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.createIFrames = false;
  this.renderData = null;
  this.rootMenuSample = null;
  this.sampleEmptyItemElement = null;
  this.sampleContentElement = null;
  this.sampleTextElementForItem = null;
  this.sampleImageElementForItem = null;
  this.sampleClearElement = null;
  this.samplePopOutElement = null;
  this.sampleSubMenuElement = null;
  this.sampleSpacingElement = null;
  this.sampleSeparatorElement = null;
  this.needDropCache = false;
  this.allowSelectItem = false;
  this.allowCheckItems = false;
  this.allowMultipleCallbacks = false;
  this.appearAfter = 300;
  this.slideAnimationDuration = 60;
  this.disappearAfter = 500;
  this.enableAnimation = true;
  this.enableAdaptivity = false;
  this.adaptiveItemsOrder = [];
  this.enableSubMenuFullWidth = false;
  this.checkedItems = [];
  this.isVertical = true;
  this.itemCheckedGroups = [];
  this.itemLinkMode = "ContentBounds";
  this.lockHoverEvents = false;
  this.popupToLeft = false;
  this.popupCount = 0;
  this.rootItem = null;
  this.showSubMenus = false;
  this.savedCallbackHoverItem = null;
  this.savedCallbackHoverElement = null;
  this.selectedItemIndexPath = "";
  this.checkedState = null;
  this.scrollInfo = [];
  this.scrollHelpers = {};
  this.scrollVertOffset = 1;
  this.rootSubMenuFIXOffset = 0;
  this.rootSubMenuFIYOffset = 0;
  this.rootSubMenuLIXOffset = 0;
  this.rootSubMenuLIYOffset = 0;
  this.rootSubMenuXOffset = 0;
  this.rootSubMenuYOffset = 0;
  this.subMenuFIXOffset = 0;
  this.subMenuFIYOffset = 0;
  this.subMenuLIXOffset = 0;
  this.subMenuLIYOffset = 0;
  this.subMenuXOffset = 0;
  this.subMenuYOffset = 0;
  this.maxHorizontalOverlap = -3;
  this.sizingConfig.allowSetHeight = false;
  this.ItemClick = new ASPxClientEvent();
  this.ItemMouseOver = new ASPxClientEvent();
  this.ItemMouseOut = new ASPxClientEvent();
  this.PopUp = new ASPxClientEvent();
  this.CloseUp = new ASPxClientEvent();
  aspxGetMenuCollection().Add(this);
 },
 InlineInitialize: function() {
  ASPxClientControl.prototype.InlineInitialize.call(this);
  if(!this.NeedCreateItemsOnClientSide())
   MenuRenderHelper.InlineInitializeElements(this);
  this.InitializeInternal(true);
  if(this.IsCallbacksEnabled()) {
   this.showSubMenus = this.GetLoadingPanelElement() != null;
   this.CreateCallback("DXMENUCONTENT");
  }
  else
   this.showSubMenus = true;
  this.popupToLeft = this.rtl;
 },
 InitializeInternal: function(inline) {
  if(!this.NeedCreateItemsOnClientSide()) {
   this.InitializeCheckedItems();
   this.InitializeSelectedItem();
  }
  this.InitializeEnabledAndVisible(!inline || !this.IsCallbacksEnabled());
  if(!this.IsCallbacksEnabled())
   this.InitializeScrollableMenus();
 },
 InitializeSampleMenuElement: function() {
  var wrapper = document.createElement("DIV");
  wrapper.innerHTML = this.sampleMenuHTML;
  return wrapper.childNodes[0];
 },
 InitializeMenuSamplesInternal: function(menuElement) {
  this.sampleSpacingElement = ASPx.GetNodeByClassName(menuElement, MenuCssClasses.Spacing, 0)
  this.sampleSeparatorElement = ASPx.GetNodeByClassName(menuElement, MenuCssClasses.Separator, 0);
 },
 InitializeEnabledAndVisible: function(recursive) {
  if(this.rootItem == null) return;
  for(var i = 0; i < this.rootItem.items.length; i++)
   this.rootItem.items[i].InitializeEnabledAndVisible(recursive);
 },
 InitializeScrollableMenus: function() {
  var info = eval(this.scrollInfo);
  this.scrollHelpers = {};
  for(var i = 0; i < info.length; i++)
   this.scrollHelpers[info[i]] = new MenuScrollHelper(this, info[i]);
 },
 InitializeItemSamples: function(itemsContainer) {
  this.sampleImageElementForItem =  ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.Image, 0);
  this.sampleTextElementForItem = ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.ItemTextElement, 0);
  this.sampleContentElement = ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.ContentContainer, 0);
  this.sampleContentElement.innerHTML = "";
  this.sampleClearElement  =  ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.ItemClearElement, 0);
  this.samplePopOutElement = ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.PopOutContainer, 0);
  this.sampleEmptyItemElement = ASPx.GetNodeByClassName(itemsContainer, MenuCssClasses.Item, 0);
  this.sampleEmptyItemElement.innerHTML = "";
 },
 InitializeSubMenuSample: function(subMenuElement) {
  ASPx.RemoveElement(ASPx.GetNodeByTagName(subMenuElement, "LI", 0));
  this.sampleSubMenuElement = subMenuElement;
 },
 NeedCreateItemsOnClientSide: function() {
  return false;
 },
 IsClientSideEventsAssigned: function() {
  return !this.ItemClick.IsEmpty()
   || !this.ItemMouseOver.IsEmpty()
   || !this.ItemMouseOut.IsEmpty()
   || !this.PopUp.IsEmpty()
   || !this.CloseUp.IsEmpty()
   || !this.Init.IsEmpty();
 },
 IsCallbacksEnabled: function() {
  return ASPx.IsFunction(this.callBack);
 },
 ShouldHideExistingLoadingElements: function() {
  return false;
 },
 GetMenuElementId: function(indexPath) {
  return this.name + Constants.MMIdSuffix + indexPath + "_";
 },
 GetMenuMainElementId: function(indexPath) {
  return this.name + "_DXME" + indexPath + "_";
 },
 GetMenuBorderCorrectorElementId: function(indexPath) {
  return this.name + "_DXMBC" + indexPath + "_";
 },
 GetMenuIFrameElementId: function(indexPath) {
  return this.name + "_DXMIF" + this.GetMenuLevel(indexPath);
 },
 GetScrollAreaId: function(indexPath) {
  return this.name + "_DXSA" + indexPath;
 },
 GetMenuTemplateContainerID: function(indexPath) {
  return this.name + "_MTCNT" + indexPath;
 },
 GetItemTemplateContainerID: function(indexPath) {
  return this.name + "_ITCNT" + indexPath;
 },
 GetScrollUpButtonId: function(indexPath) {
  return this.name + Constants.SBIdSuffix + indexPath + Constants.SBUIdEnd;
 },
 GetScrollDownButtonId: function(indexPath) {
  return this.name + Constants.SBIdSuffix + indexPath + Constants.SBDIdEnd;
 },
 GetItemElementId: function(indexPath) {
  return this.name + Constants.MIIdSuffix + indexPath + "_";
 },
 GetItemContentElementId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "T";
 },
 GetItemPopOutElementId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "P";
 },
 GetItemImageId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "Img";
 },
 GetItemPopOutImageId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "PImg";
 },
 GetItemIndentElementId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "II";
 },
 GetItemSeparatorElementId: function(indexPath) {
  return this.GetItemElementId(indexPath) + "IS";
 },
 GetMenuElement: function (indexPath) { 
  if(indexPath == "")
   return this.GetMainElement();
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetMenuElementId(indexPath));
 },
 GetMenuIFrameElement: function(indexPath) {
  var elementId = this.GetMenuIFrameElementId(indexPath);
  var element = ASPx.GetElementById(elementId);
  if(!element && this.createIFrames)
   return this.CreateIFrameElement(elementId);
  return element;
 },
 CreateIFrameElement: function(elementId) {
  var element = document.createElement("IFRAME");
  ASPx.Attr.SetAttribute(element, "id", elementId);
  ASPx.Attr.SetAttribute(element, "src", "javascript:false");
  ASPx.Attr.SetAttribute(element, "scrolling", "no");
  ASPx.Attr.SetAttribute(element, "frameborder", "0");
  if(ASPx.IsExists(ASPx.AccessibilitySR.AccessibilityIFrameTitle))
   ASPx.Attr.SetAttribute(element, "title", ASPx.AccessibilitySR.AccessibilityIFrameTitle);
  element.style.position = "absolute";
  element.style.display = "none";
  element.style.zIndex = "19997";
  element.style.filter = "progid:DXImageTransform.Microsoft.Alpha(Style=0, Opacity=0)";
  ASPx.InsertElementAfter(element, this.GetMainElement());
  return element;
 },
 GetMenuBorderCorrectorElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetMenuBorderCorrectorElementId(indexPath));
 },
 GetMenuMainElement: function(element) {
  var indexPath = this.GetIndexPathById(element.id, true);
  return ASPx.CacheHelper.GetCachedElement(this, "menuMainElement" + indexPath, 
   function() { 
    var shadowTable = ASPx.GetElementById(this.GetMenuMainElementId(indexPath));
    return shadowTable != null ? shadowTable : element;
   });
 },
 GetScrollAreaElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetScrollAreaId(indexPath));
 },
 GetScrollContentItemsContainer: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElement(this, "scrollContentItemsContainer" + indexPath, 
   function() { 
    return ASPx.GetNodeByTagName(this.GetScrollAreaElement(indexPath), "UL", 0);
   });
 },
 GetScrollUpButtonElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetScrollUpButtonId(indexPath));
 },
 GetScrollDownButtonElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetScrollDownButtonId(indexPath));
 },
 GetItemElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetItemElementId(indexPath));
 },
 GetItemTemplateElement: function(indexPath) { 
  return this.GetItemTextTemplateContainer(indexPath);
 },
 GetItemTemplateContainer: function(indexPath) {
  return this.GetItemElement(indexPath);
 },
 GetItemTextTemplateContainer: function(indexPath) {
  return this.GetItemContentElement(indexPath);
 },
 GetItemContentElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetItemContentElementId(indexPath));
 },
 GetItemPopOutElement: function(indexPath) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.GetItemPopOutElementId(indexPath));
 },
 GetPopOutElements: function() {
  return ASPx.GetNodesByClassName(this.GetMainElement().parentNode, "dxm-popOut");
 },
 GetPopOutImages: function() {
  return ASPx.GetNodesByClassName(this.GetMainElement().parentNode, "dxm-pImage");
 },
 GetSubMenuXPosition: function(indexPath, isVertical) {
  var itemElement = this.GetItemElement(indexPath);
  var pos = ASPx.GetAbsoluteX(itemElement) + (isVertical ? itemElement.clientWidth + itemElement.clientLeft : 0);
  if(ASPx.Browser.WebKitFamily && !this.IsParentElementPositionStatic(indexPath))
   pos -= document.body.offsetLeft;
  return pos;
 },
 GetSubMenuYPosition: function(indexPath, isVertical) {
  var position = 0;
  var element = this.GetItemElement(indexPath);
  if(element != null) {
   if(isVertical) {
    position = ASPx.GetAbsoluteY(element); 
   }
   else {
    if(ASPx.Browser.NetscapeFamily || ASPx.Browser.Opera && ASPx.Browser.Version >= 9 || ASPx.Browser.Safari && ASPx.Browser.Version >= 3 || ASPx.Browser.Chrome || ASPx.Browser.AndroidDefaultBrowser)
     position = ASPx.GetAbsoluteY(element) + element.offsetHeight - ASPx.GetClientTop(element);
    else if(ASPx.Browser.WebKitFamily)
     position = ASPx.GetAbsoluteY(element) + element.offsetHeight + element.offsetTop - ASPx.GetClientTop(element);
    else
     position = ASPx.GetAbsoluteY(element) + element.clientHeight + ASPx.GetClientTop(element);
   }
  }
  if(ASPx.Browser.WebKitFamily && !this.IsParentElementPositionStatic(indexPath))
   position -= document.body.offsetTop;
  return position;
 },
 GetClientSubMenuXPosition: function(element, x, indexPath, isVertical) {
  var itemInfo = new MenuItemInfo(this, indexPath);
  var itemWidth = itemInfo.clientWidth;
  var itemOffsetWidth = itemInfo.offsetWidth;
  var subMenuWidth = this.GetMenuMainElement(element).offsetWidth;
  var docClientWidth = ASPx.GetDocumentClientWidth();
  if(isVertical) {
   var left = x - ASPx.GetDocumentScrollLeft();
   var right = left + subMenuWidth;
   var toLeftX = x - subMenuWidth - itemWidth;
   var toLeftLeft = left - subMenuWidth - itemWidth;
   var toLeftRight = right - subMenuWidth - itemWidth;
   if(this.IsCorrectionDisableMethodRequired(indexPath)) {
    return this.GetCorrectionDisabledResult(x, toLeftX);
   }
   if(this.popupToLeft) {
    if(toLeftLeft > this.maxHorizontalOverlap) {
     return toLeftX;
    }
    if(docClientWidth - right > this.maxHorizontalOverlap || !this.rtl) {
     this.popupToLeft = false;
     return x;
    }
    if(isVertical)
     return ASPx.InvalidPosition;
    return toLeftX;
   }
   else {
    if(docClientWidth - right > this.maxHorizontalOverlap) {
     return x;
    }
    if(toLeftLeft > this.maxHorizontalOverlap || this.rtl) {
     this.popupToLeft = true;
     return toLeftX;
    }
    if(isVertical)
     return ASPx.InvalidPosition;
    return x;
   }
  }
  else {
   var left = x - ASPx.GetDocumentScrollLeft();
   var right = left + subMenuWidth;
   var toLeftX = x - subMenuWidth + itemOffsetWidth;
   var toLeftLeft = left - subMenuWidth + itemOffsetWidth;
   var toLeftRight = right - subMenuWidth + itemOffsetWidth;
   if(this.popupToLeft) {
    if(toLeftLeft < 0 && toLeftLeft < docClientWidth - right) {
     this.popupToLeft = false;
     return x;
    }
    else
     return toLeftX;
   }
   else {
    if(docClientWidth - right < 0 && docClientWidth - right < toLeftLeft) {
     this.popupToLeft = true;
     return toLeftX;
    }
    else
     return x;
   }
  }
 },
 GetClientSubMenuYPosition: function(element, y, indexPath, isVertical) {
  var itemInfo = new MenuItemInfo(this, indexPath);
  var itemHeight = itemInfo.offsetHeight;
  var itemOffsetHeight = itemInfo.offsetHeight;
  var subMenuHeight = this.GetMenuMainElement(element).offsetHeight;
  var menuItemTop = y - ASPx.GetDocumentScrollTop();
  var subMenuBottom = menuItemTop + subMenuHeight;
  var docClientHeight = ASPx.GetDocumentClientHeight();
  var clientSubMenuYPos = y;
  if(isVertical) {
   var notEnoughSpaceToShowDown = subMenuBottom > docClientHeight;
   var menuItemBottom = menuItemTop + itemHeight;
   if(menuItemBottom > docClientHeight) {
    menuItemBottom = docClientHeight;
    itemHeight = menuItemBottom - menuItemTop;
   }
   var notEnoughSpaceToShowUp = menuItemBottom < subMenuHeight;
   var subMenuIsFitToDisplayFrames = docClientHeight >= subMenuHeight;
   if(!subMenuIsFitToDisplayFrames) clientSubMenuYPos = y - menuItemTop;
   else if(notEnoughSpaceToShowDown) {
    if(notEnoughSpaceToShowUp) {
     var docClientBottom = ASPx.GetDocumentScrollTop() + docClientHeight;
     clientSubMenuYPos = docClientBottom - subMenuHeight;
    } else
     clientSubMenuYPos = y + itemHeight - subMenuHeight;
   }
  }
  else {
   if(this.IsHorizontalSubmenuNeedInversion(subMenuBottom, docClientHeight, menuItemTop, subMenuHeight, itemHeight))
    clientSubMenuYPos = y - subMenuHeight - itemHeight;
  }
  return clientSubMenuYPos;
 },
 IsHorizontalSubmenuNeedInversion: function(subMenuBottom, docClientHeight, menuItemTop, subMenuHeight, itemHeight) {
  return subMenuBottom > docClientHeight && menuItemTop - subMenuHeight - itemHeight > docClientHeight - subMenuBottom;
 },
 IsCorrectionDisableMethodRequired: function(indexPath) {
  return false;
 },
 HasChildren: function(indexPath) {
  return (this.GetMenuElement(indexPath) != null);
 },
 IsVertical: function(indexPath) {
  return true;
 },
 IsRootItem: function(indexPath) {
  return this.GetMenuLevel(indexPath) <= 1;
 },
 IsParentElementPositionStatic: function(indexPath) {
  return this.IsRootItem(indexPath);
 },
 GetItemIndexPath: function(indexes) {
  return aspxGetMenuCollection().GetItemIndexPath(indexes);
 },
 GetItemIndexes: function(indexPath) {
  return aspxGetMenuCollection().GetItemIndexes(indexPath);
 },
 GetItemIndexPathById: function(id) {
  return aspxGetMenuCollection().GetIndexPathById(id, Constants.MIIdSuffix);
 },
 GetMenuIndexPathById: function(id) {
  return aspxGetMenuCollection().GetIndexPathById(id, Constants.MMIdSuffix);
 },
 GetScrollButtonIndexPathById: function(id) {
  return aspxGetMenuCollection().GetIndexPathById(id, Constants.SBIdSuffix);
 },
 GetIndexPathById: function(id, checkMenu) {
  var indexPath = this.GetItemIndexPathById(id);
  if(indexPath == "" && checkMenu)
   indexPath = this.GetMenuIndexPathById(id);
  return indexPath;
 },
 GetMenuLevelInternal: function(indexPath) {
  if(indexPath == "")
   return 0;
  else {
   var indexes = this.GetItemIndexes(indexPath);
   return indexes.length;
  }
 },
 GetMenuLevel: function(indexPath) {
  var level = this.GetMenuLevelInternal(indexPath);
  if(this.IsAdaptiveMenuItem(indexPath))
   level ++;
  return level;
 },
 IsAdaptiveMenuItem: function(indexPath){
  var level = this.GetMenuLevelInternal(indexPath);
  while(level > 1){
   indexPath = this.GetParentIndexPath(indexPath);
   level = this.GetMenuLevelInternal(indexPath);
  }
  var itemElement = this.GetItemElement(indexPath);
  if(itemElement && ASPx.GetParentByClassName(itemElement, MenuCssClasses.AdaptiveMenu))
   return true;
  return false;
 },
 IsAdaptiveItem: function(indexPath){
  var itemElement = this.GetItemElement(indexPath);
  if(itemElement && ASPx.ElementContainsCssClass(itemElement, MenuCssClasses.AdaptiveMenuItem))
   return true;
  return false;
 },
 GetParentIndexPath: function(indexPath) {
  var indexes = this.GetItemIndexes(indexPath);
  indexes.length--;
  return (indexes.length > 0) ? this.GetItemIndexPath(indexes) : "";
 },
 GetFirstChildIndexPath: function(indexPath) {
  var indexes = this.GetItemIndexes(indexPath);
  indexes[indexes.length] = 0;
  var newIndexPath = this.GetItemIndexPath(indexes);
  return this.GetFirstSiblingIndexPath(newIndexPath);
 },
 GetFirstSiblingIndexPath: function(indexPath) {
  var indexes = this.GetItemIndexes(indexPath);
  var i = 0;
  while(true) {
   indexes[indexes.length - 1] = i;
   var newIndexPath = this.GetItemIndexPath(indexes);
   if(!this.IsItemExist(newIndexPath))
    return null;
   if(this.IsItemVisible(newIndexPath) && this.IsItemEnabled(newIndexPath))
    return newIndexPath;
   i++;
  }
  return null;
 },
 GetLastSiblingIndexPath: function(indexPath) {
  var indexes = this.GetItemIndexes(indexPath);
  var parentItem = this.GetItemByIndexPath(this.GetParentIndexPath(indexPath));
  var i = parentItem ? parentItem.GetItemCount() - 1 : 0;
  while(true) {
   indexes[indexes.length - 1] = i;
   var newIndexPath = this.GetItemIndexPath(indexes);
   if(!this.IsItemExist(newIndexPath))
    return null;
   if(this.IsItemVisible(newIndexPath) && this.IsItemEnabled(newIndexPath))
    return newIndexPath;
   i--;
  }
  return null;
 },
 GetNextSiblingIndexPath: function(indexPath) {
  if(this.IsLastItem(indexPath)) return null;
  var indexes = this.GetItemIndexes(indexPath);
  var i = indexes[indexes.length - 1] + 1;
  while(true) {
   indexes[indexes.length - 1] = i;
   var newIndexPath = this.GetItemIndexPath(indexes);
   if(!this.IsItemExist(newIndexPath))
    return null;
   if(this.IsItemVisible(newIndexPath) && this.IsItemEnabled(newIndexPath))
    return newIndexPath;
   i++;
  }
  return null;
 },
 GetPrevSiblingIndexPath: function(indexPath) {
  if(this.IsFirstItem(indexPath)) return null;
  var indexes = this.GetItemIndexes(indexPath);
  var i = indexes[indexes.length - 1] - 1;
  while(true) {
   indexes[indexes.length - 1] = i;
   var newIndexPath = this.GetItemIndexPath(indexes);
   if(!this.IsItemExist(newIndexPath))
    return null;
   if(this.IsItemVisible(newIndexPath) && this.IsItemEnabled(newIndexPath))
    return newIndexPath;
   i--;
  }
  return null;
 },
 IsLastElement: function(element) {
  return element && (!element.nextSibling || !element.nextSibling.tagName);
 },
 IsLastItem: function(indexPath) {
  var itemElement = this.GetItemElement(indexPath);
  return this.IsLastElement(itemElement);
 },
 IsFirstElement: function(element) {
  return element && (!element.previousSibling || !element.previousSibling.tagName);
 },
 IsFirstItem: function(indexPath) {
  var itemElement = this.GetItemElement(indexPath);
  return this.IsFirstElement(itemElement);
 },
 IsItemExist: function(indexPath) {
  return !!this.GetItemByIndexPath(indexPath);
 },
 IsItemEnabled: function(indexPath) {
  var item = this.GetItemByIndexPath(indexPath);
  return item ? item.GetEnabled() : false;
 },
 IsItemVisible: function(indexPath) {
  var item = this.GetItemByIndexPath(indexPath);
  return item ? item.GetVisible() : false;
 },
 GetClientSubMenuPos: function(element, indexPath, pos, isVertical, isXPos) {
  if(!ASPx.IsValidPosition(pos)) {
   pos = isXPos ? this.GetSubMenuXPosition(indexPath, isVertical) : this.GetSubMenuYPosition(indexPath, isVertical);
  }
  var clientPos = isXPos ? this.GetClientSubMenuXPosition(element, pos, indexPath, isVertical) : this.GetClientSubMenuYPosition(element, pos, indexPath, isVertical);
  var isInverted = pos != clientPos;
  if(clientPos !== ASPx.InvalidPosition){
   var offset = isXPos ? this.GetSubMenuXOffset(indexPath) : this.GetSubMenuYOffset(indexPath);
   clientPos += isInverted ? -offset : offset;
   clientPos -= ASPx.GetPositionElementOffset(this.GetMenuElement(indexPath), isXPos);
  }
  return new ASPx.PopupPosition(clientPos, isInverted);
 },
 GetSubMenuXOffset: function(indexPath) {
  if(indexPath == "")
   return 0;
  else if(this.IsRootItem(indexPath)) {
   if(this.IsFirstItem(indexPath))
    return this.rootSubMenuFIXOffset;
   else if(this.IsLastItem(indexPath))
    return this.rootSubMenuLIXOffset;
   else
    return this.rootSubMenuXOffset;
  }
  else {
   if(this.IsFirstItem(indexPath))
    return this.subMenuFIXOffset;
   else if(this.IsLastItem(indexPath))
    return this.subMenuLIXOffset;
   else
    return this.subMenuXOffset;
  }
 },
 GetSubMenuYOffset: function(indexPath) {
  if(indexPath == "")
   return 0;
  else if(this.IsRootItem(indexPath)) {
   if(this.IsFirstItem(indexPath))
    return this.rootSubMenuFIYOffset;
   else if(this.IsLastItem(indexPath))
    return this.rootSubMenuLIYOffset;
   else
    return this.rootSubMenuYOffset;
  }
  else {
   if(this.IsFirstItem(indexPath))
    return this.subMenuFIYOffset;
   else if(this.IsLastItem(indexPath))
    return this.subMenuLIYOffset;
   else
    return this.subMenuYOffset;
  }
 },
 StartScrolling: function(buttonId, delay, step) {
  var indexPath = this.GetScrollButtonIndexPathById(buttonId);
  var level = this.GetMenuLevel(indexPath);
  aspxGetMenuCollection().DoHidePopupMenus(null, level, this.name, false, "");
  var direction = (buttonId.lastIndexOf(Constants.SBDIdEnd) == buttonId.length - Constants.SBDIdEnd.length) ? 1 : -1;
  var scrollHelper = this.scrollHelpers[indexPath];
  if(scrollHelper) scrollHelper.StartScrolling(direction, delay, step);
 },
 StopScrolling: function(buttonId) {
  var indexPath = this.GetScrollButtonIndexPathById(buttonId);
  var scrollHelper = this.scrollHelpers[indexPath];
  if(scrollHelper) scrollHelper.StopScrolling();
 },
 ClearAppearTimer: function() {
  aspxGetMenuCollection().ClearAppearTimer();
 },
 ClearDisappearTimer: function() {
  aspxGetMenuCollection().ClearDisappearTimer();
 },
 IsAppearTimerActive: function() {
  return aspxGetMenuCollection().IsAppearTimerActive();
 },
 IsDisappearTimerActive: function() {
  return aspxGetMenuCollection().IsDisappearTimerActive();
 },
 SetAppearTimer: function(indexPath, preventSubMenu) {
  aspxGetMenuCollection().SetAppearTimer(this.name, indexPath, this.appearAfter, preventSubMenu);
 },
 SetDisappearTimer: function() {
  aspxGetMenuCollection().SetDisappearTimer(this.name, this.disappearAfter);
 },
 IsDropDownItem: function(indexPath) {
  return ASPx.ElementContainsCssClass(this.GetItemElement(indexPath), MenuCssClasses.ItemDropDownMode);
 },
 DoItemClick: function(indexPath, hasItemLink, htmlEvent) {
  var processOnServer = this.RaiseItemClick(indexPath, htmlEvent);
  if(processOnServer && !hasItemLink)
   this.SendPostBack("CLICK:" + indexPath);
  else {
   this.ClearDisappearTimer();
   this.ClearAppearTimer();
   if(!this.HasChildren(indexPath) || this.IsDropDownItem(indexPath))
    aspxGetMenuCollection().DoHidePopupMenus(null, -1, this.name, false, "");
   else if(this.IsItemEnabled(indexPath) && !this.IsDropDownItem(indexPath))
    this.ShowSubMenu(indexPath);
  }
 },
 HasContent: function(mainCell) {
  for(var i = 0; i < mainCell.childNodes.length; i++)
   if(mainCell.childNodes[i].tagName)
    return true;
  return false;
 },
 DoShowPopupMenu: function(element, x, y, indexPath) {
  var parent = this.GetItemByIndexPath(indexPath);
  var menuElement = this.GetMenuMainElement(element);
  var popupMenuHasVisibleContent = menuElement && (MenuRenderHelper.HasSubMenuTemplate(menuElement) || 
   ASPx.ElementContainsCssClass(menuElement, MenuCssClasses.AdaptiveMenu)) || 
   parent && this.HasVisibleItems(parent);
  if(popupMenuHasVisibleContent === false)
   return;
  if(element && this.IsCallbacksEnabled())
   this.ShowLoadingPanelInMenu(element);
  if(ASPx.GetElementVisibility(element))
   ASPx.SetStyles(element, { left: ASPx.InvalidPosition, top: ASPx.InvalidPosition });
  ASPx.SetElementDisplay(element, true);
  if(parent) {
   for(var i = 0; i < parent.GetItemCount() ; i++) {
    var item = parent.GetItem(i);
    this.SetPopOutElementVisible(item.indexPath, this.HasVisibleItems(item));
   }
  }
  MenuRenderHelper.CalculateSubMenu(this, element, false);
  if(this.popupCount == 0) this.popupToLeft = this.rtl;
  var isVertical = this.IsVertical(indexPath);
  var horizontalPopupPosition = this.GetClientSubMenuPos(element, indexPath, x, isVertical, true);
  if(horizontalPopupPosition.position === ASPx.InvalidPosition) {
   isVertical = !isVertical;
   horizontalPopupPosition = this.GetClientSubMenuPos(element, indexPath, x, isVertical, true);
  }
  var verticalPopupPosition = this.GetClientSubMenuPos(element, indexPath, y, isVertical, false);
  var clientX = horizontalPopupPosition.position;
  var clientY = verticalPopupPosition.position;
  var toTheLeft = horizontalPopupPosition.isInverted;
  var toTheTop = verticalPopupPosition.isInverted;
  var scrollHelper = this.scrollHelpers[indexPath];
  if(scrollHelper) {
   var yClientCorrection = this.GetScrollSubMenuYCorrection(element, scrollHelper, clientY);
   if(yClientCorrection > 0) {
    clientY += yClientCorrection;
    verticalPopupPosition.position = clientY;
   }
  }
  var parentElement = this.GetItemContentElement(indexPath);
  var prevParentPos = ASPx.GetAbsoluteX(parentElement);
  ASPx.SetStyles(element, {
   left: clientX, top: clientY
  });
  if(ASPx.Browser.IE && ASPx.IsElementRightToLeft(document.body)) {
   ASPx.SetElementDisplay(element, false);
   ASPx.SetElementDisplay(element, true);
  }
  clientX += ASPx.GetAbsoluteX(parentElement) - prevParentPos;
  if(this.enableAnimation) {
   this.StartAnimation(element, indexPath, horizontalPopupPosition, verticalPopupPosition, isVertical);
  }
  else {
   ASPx.SetStyles(element, { left: clientX, top: clientY });
   ASPx.SetElementVisibility(element, true);
   if(this.enableSubMenuFullWidth)
    this.ApplySubMenuFullWidth(element);
   this.DoShowPopupMenuIFrame(element, clientX, clientY, ASPx.InvalidDimension, ASPx.InvalidDimension, indexPath);
   this.DoShowPopupMenuBorderCorrector(element, clientX, clientY, indexPath, toTheLeft, toTheTop);
  }
  aspxGetMenuCollection().RegisterVisiblePopupMenu(this.name, element.id);
  this.popupCount++;
  ASPx.GetControlCollection().AdjustControls(element);
  this.CorrectVerticalAlignment(ASPx.AdjustHeight, this.GetPopOutElements, "PopOut");
  this.CorrectVerticalAlignment(ASPx.AdjustVerticalMargins, this.GetPopOutImages, "PopOutImg");
  this.RaisePopUp(indexPath);
 },
 ShowLoadingPanelInMenu: function(element) {
  var lpParent = this.GetMenuMainElement(element);
  if(lpParent && !this.HasContent(lpParent))
   this.CreateLoadingPanelInsideContainer(lpParent);
 },
 GetScrollSubMenuYCorrection: function(element, scrollHelper, clientY) {
  var absoluteClientY = clientY + ASPx.GetPositionElementOffset(element);
  var excessTop = this.GetScrollExcessTop(absoluteClientY);
  var excessBottom = this.GetScrollExcessBottom(element, absoluteClientY);
  var correction = 0;
  if(excessTop > 0)
   correction += excessTop + this.scrollVertOffset;
  if(excessBottom > 0 && (absoluteClientY + correction == ASPx.GetDocumentScrollTop())) {
   excessBottom += this.scrollVertOffset;
   correction += this.scrollVertOffset;
  }
  this.PrepareScrolling(element, scrollHelper, excessTop, excessBottom);
  return correction;
 },
 GetScrollExcessTop: function(clientY) {
  return ASPx.GetDocumentScrollTop() - clientY;
 },
 GetScrollExcessBottom: function(element, clientY) {
  ASPx.SetElementDisplay(element, false);
  var docHeight = ASPx.GetDocumentClientHeight();
  ASPx.SetElementDisplay(element, true);
  return clientY + element.offsetHeight - ASPx.GetDocumentScrollTop() - docHeight;
 },
 PrepareScrolling: function(element, scrollHelper, excessTop, excessBottom) {
  scrollHelper.Initialize();
  var corrector = element.offsetHeight - scrollHelper.GetScrollAreaHeight() + this.scrollVertOffset;
  if(excessTop > 0)
   scrollHelper.Calculate(element.offsetHeight - excessTop - corrector);
  if(excessBottom > 0)
   scrollHelper.Calculate(element.offsetHeight - excessBottom - corrector);
 },
 ApplySubMenuFullWidth: function(element) {
  ASPx.SetStyles(element, { left: 0, right: 0, width: "auto" });
  var menuElement = this.GetMenuMainElement(element);
  ASPx.SetStyles(menuElement, { width: "100%", "box-sizing": "border-box" });
  var templateElement = ASPx.GetChildByClassName(menuElement, "dx");
  if(templateElement) ASPx.SetStyles(templateElement, { width: "100%" });
 },
 DoShowPopupMenuIFrame: function(element, x, y, width, height, indexPath) {
  if(!this.renderIFrameForPopupElements) return;
  var iFrame = element.overflowElement;
  if(!iFrame) {
   iFrame = this.GetMenuIFrameElement(indexPath);
   element.overflowElement = iFrame;
  }
  if(iFrame) {
   var menuElement = this.GetMenuMainElement(element);
   if(width < 0)
    width = menuElement.offsetWidth;
   if(height < 0)
    height = menuElement.offsetHeight;
   ASPx.SetStyles(iFrame, {
    width: width, height: height,
    left: x, top: y, display: ""
   });
  }
 },
 DoShowPopupMenuBorderCorrector: function(element, x, y, indexPath, toTheLeft, toTheTop) {
  var borderCorrectorElement = this.GetMenuBorderCorrectorElement(indexPath);
  if(borderCorrectorElement) {
   var params = this.GetPopupMenuBorderCorrectorPositionAndSize(element, x, y, indexPath, toTheLeft, toTheTop);
   var itemCell = this.GetItemContentElement(indexPath);
   var popOutImageCell = this.GetItemPopOutElement(indexPath);
   if(ASPx.Browser.IE && ASPx.Browser.MajorVersion == 9) { 
    var isVertical = this.IsVertical(indexPath);
    var itemBoundCoord = itemCell.getBoundingClientRect()[isVertical ? 'bottom' : 'right'];
    var itemBorderWidth = ASPx.PxToInt(ASPx.GetCurrentStyle(itemCell)[isVertical ? 'borderBottomWidth' : 'borderRightWidth']);
    if(popOutImageCell != null) {
     var popOutImageBoundCoord = popOutImageCell.getBoundingClientRect()[isVertical ? 'bottom' : 'right'];
     if(popOutImageBoundCoord > itemBoundCoord) {
      itemBoundCoord = popOutImageBoundCoord;
      itemBorderWidth = ASPx.PxToInt(ASPx.GetCurrentStyle(popOutImageCell)[isVertical ? 'borderBottomWidth' : 'borderRightWidth']);
     }
    }
    var menu = this.GetMainElement();
    itemBoundCoord -= Math.min(menu.getBoundingClientRect()[isVertical ? 'top' : 'left'], ASPx.GetPositionElementOffset(menu, !isVertical));
    if(isVertical) {
     var bottomsDifference = this.GetItemElement(indexPath).getBoundingClientRect().bottom -
      this.GetMenuElement(indexPath).getBoundingClientRect().bottom;
     itemBoundCoord -= bottomsDifference > 0 && bottomsDifference;
    }
    var borderCorrectorBoundCoord = isVertical ? params.top + params.height : params.left + params.width;
    if(itemBoundCoord - borderCorrectorBoundCoord != itemBorderWidth) {
     borderCorrectorBoundCoord = itemBoundCoord - itemBorderWidth;
     if(isVertical)
      params.height = borderCorrectorBoundCoord - params.top;
     else
      params.width = borderCorrectorBoundCoord - params.left;
    }
   }
   ASPx.SetStyles(borderCorrectorElement, {
    width: params.width, height: params.height,
    left: params.left, top: params.top,
    display: "", visibility: "visible"
   });
   element.borderCorrectorElement = borderCorrectorElement;
  }
 },
 GetPopupMenuBorderCorrectorPositionAndSize: function(element, x, y, indexPath, toTheLeft, toTheTop) {
  var result = {};
  var itemInfo = new MenuItemInfo(this, indexPath);
  var menuXOffset = ASPx.GetClientLeft(this.GetMenuMainElement(element));
  var menuYOffset = ASPx.GetClientTop(this.GetMenuMainElement(element));
  var menuElement = this.GetMenuMainElement(element);
  var menuClientWidth = menuElement.clientWidth;
  var menuClientHeight = menuElement.clientHeight;
  if(this.IsVertical(indexPath)) {
   var commonClientHeight = itemInfo.clientHeight < menuClientHeight
    ? itemInfo.clientHeight
    : menuClientHeight;
   result.width = menuXOffset;
   result.height = commonClientHeight + itemInfo.clientTop - menuYOffset;
   result.left = x;
   if(toTheLeft)
    result.left += menuClientWidth + menuXOffset;
   result.top = y + menuYOffset;
   if(toTheTop)
    result.top += menuClientHeight - result.height;
  }
  else {
   var itemWidth = itemInfo.clientWidth;
   if(this.IsDropDownItem(indexPath))
    itemWidth = this.GetItemContentElement(indexPath).clientWidth;
   var commonClientWidth = itemWidth < menuClientWidth
    ? itemWidth
    : menuClientWidth;
   result.width = commonClientWidth + itemInfo.clientLeft - menuXOffset;
   result.height = menuYOffset;
   result.left = x + menuXOffset;
   if(toTheLeft)
    result.left += menuClientWidth - result.width;
   result.top = y;
   if(toTheTop)
    result.top += menuClientHeight + menuYOffset;
  }
  return result;
 },
 DoHidePopupMenu: function(evt, element) {
  this.DoHidePopupMenuBorderCorrector(element);
  this.DoHidePopupMenuIFrame(element);
  var menuElement = this.GetMenuMainElement(element);
  ASPx.PopupUtils.StopAnimation(element, menuElement);
  ASPx.SetElementVisibility(element, false);
  ASPx.SetElementDisplay(element, false);
  this.CancelSubMenuItemHoverItem(element);
  aspxGetMenuCollection().UnregisterVisiblePopupMenu(this.name, element.id);
  this.popupCount--;
  var indexPath = this.GetIndexPathById(element.id, true);
  var scrollHelper = this.scrollHelpers[indexPath];
  if(scrollHelper) {
   element.style.height = "";
   scrollHelper.ResetScrolling();
  }
  this.RaiseCloseUp(indexPath);
 },
 DoHidePopupMenuIFrame: function(element) {
  if(!this.renderIFrameForPopupElements) return;
  var iFrame = element.overflowElement;
  if(iFrame)
   ASPx.SetElementDisplay(iFrame, false);
 },
 DoHidePopupMenuBorderCorrector: function(element) {
  var borderCorrectorElement = element.borderCorrectorElement;
  if(borderCorrectorElement) {
   ASPx.SetElementVisibility(borderCorrectorElement, false);
   ASPx.SetElementDisplay(borderCorrectorElement, false);
   element.borderCorrectorElement = null;
  }
 },
 SetHoverElement: function(element) {
  if(!this.IsStateControllerEnabled()) return;
  this.lockHoverEvents = true;
  ASPx.GetStateController().SetCurrentHoverElementBySrcElement(element);
  this.lockHoverEvents = false;
 },
 ApplySubMenuItemHoverItem: function(element, hoverItem, hoverElement) {
  if(!element.hoverItem && ASPx.GetElementDisplay(element)) {
   var newHoverItem = hoverItem.Clone();
   element.hoverItem = newHoverItem;
   element.hoverElement = hoverElement;
   newHoverItem.Apply(hoverElement);
  }
 },
 CancelSubMenuItemHoverItem: function(element) {
  if(element.hoverItem) {
   element.hoverItem.Cancel(element.hoverElement);
   element.hoverItem = null;
   element.hoverElement = null;
  }
 },
 ShowSubMenu: function(indexPath) {
  var element = this.GetMenuElement(indexPath);
  if(element != null) {
   var level = this.GetMenuLevel(indexPath);
   aspxGetMenuCollection().DoHidePopupMenus(null, level - 1, this.name, false, element.id);
   if(!ASPx.GetElementDisplay(element))
    this.DoShowPopupMenu(element, ASPx.InvalidPosition, ASPx.InvalidPosition, indexPath);
  }
  this.ClearAppearTimer();
 },
 SelectItem: function(indexPath) {
  if(!this.IsStateControllerEnabled()) return;
  var element = this.GetItemContentElement(indexPath);
  if(element != null)
   ASPx.GetStateController().SelectElementBySrcElement(element);
 },
 DeselectItem: function(indexPath) {
  if(!this.IsStateControllerEnabled()) return;
  var element = this.GetItemContentElement(indexPath);
  if(element != null) {
   var hoverItem = null;
   var hoverElement = null;
   var menuElement = this.GetMenuElement(indexPath);
   if(menuElement && menuElement.hoverItem) {
    hoverItem = menuElement.hoverItem;
    hoverElement = menuElement.hoverElement;
    this.CancelSubMenuItemHoverItem(menuElement);
   }
   ASPx.GetStateController().DeselectElementBySrcElement(element);
   if(menuElement != null && hoverItem != null)
    this.ApplySubMenuItemHoverItem(menuElement, hoverItem, hoverElement);
  }
 },
 InitializeSelectedItem: function() {
  if(!this.allowSelectItem) return;
  this.SelectItem(this.GetSelectedItemIndexPath());
 },
 GetSelectedItemIndexPath: function() {
  return this.selectedItemIndexPath;
 },
 SetSelectedItemInternal: function(indexPath, modifyHotTrackSelection) {
  if(modifyHotTrackSelection)
   this.SetHoverElement(null);
  this.DeselectItem(this.selectedItemIndexPath);
  this.selectedItemIndexPath = indexPath;
  var item = this.GetItemByIndexPath(indexPath);
  if(item == null || item.GetEnabled())
   this.SelectItem(this.selectedItemIndexPath);
  if(modifyHotTrackSelection) {
   var element = this.GetItemContentElement(indexPath);
   if(element != null)
    this.SetHoverElement(element);
  }
 },
 InitializeCheckedItems: function() {
  if(!this.allowCheckItems) return;
  var indexPathes = this.checkedState.split(";");
  for(var i = 0; i < indexPathes.length; i++) {
   if(indexPathes[i] != "") {
    this.checkedItems.push(indexPathes[i]);
    this.SelectItem(indexPathes[i]);
   }
  }
 },
 ChangeCheckedItem: function(indexPath) {
  this.SetHoverElement(null);
  var itemsGroup = this.GetItemsGroup(indexPath);
  if(itemsGroup != null) {
   if(itemsGroup.length > 1) {
    if(!this.IsCheckedItem(indexPath)) {
     for(var i = 0; i < itemsGroup.length; i++) {
      if(itemsGroup[i] == indexPath) continue;
      if(this.IsCheckedItem(itemsGroup[i])) {
       ASPx.Data.ArrayRemove(this.checkedItems, itemsGroup[i]);
       this.DeselectItem(itemsGroup[i]);
      }
     }
     this.SelectItem(indexPath);
     this.checkedItems.push(indexPath);
    }
   }
   else {
    if(this.IsCheckedItem(indexPath)) {
     ASPx.Data.ArrayRemove(this.checkedItems, indexPath);
     this.DeselectItem(indexPath);
    }
    else {
     this.SelectItem(indexPath);
     this.checkedItems.push(indexPath);
    }
   }
  }
  var element = this.GetItemContentElement(indexPath);
  if(element != null)
   this.SetHoverElement(element);
 },
 GetItemsGroup: function(indexPath) {
  for(var i = 0; i < this.itemCheckedGroups.length; i++) {
   if(ASPx.Data.ArrayIndexOf(this.itemCheckedGroups[i], indexPath) > -1)
    return this.itemCheckedGroups[i];
  }
  return null;
 },
 IsCheckedItem: function(indexPath) {
  return ASPx.Data.ArrayIndexOf(this.checkedItems, indexPath) > -1;
 },
 UpdateStateObject: function(){
  this.UpdateStateObjectWithObject({ selectedItemIndexPath: this.selectedItemIndexPath, checkedState: this.GetCheckedState() });
 },
 GetCheckedState: function() {
  var state = "";
  for(var i = 0; i < this.checkedItems.length; i++) {
   state += this.checkedItems[i];
   if(i < this.checkedItems.length - 1)
    state += ";";
  }
  return state;
 },
 GetAnimationVerticalDirection: function(indexPath, popupPosition, isVertical) {
  var verticalDirection = (this.IsRootItem(indexPath) && !isVertical) ? -1 : 0;
  if(popupPosition.isInverted) verticalDirection *= -1;
  return verticalDirection;
 },
 GetAnimationHorizontalDirection: function(indexPath, popupPosition, isVertical) {
  var horizontalDirection = (this.IsRootItem(indexPath) && !isVertical) ? 0 : -1;
  if(popupPosition.isInverted) horizontalDirection *= -1;
  return horizontalDirection;
 },
 StartAnimation: function(animationDivElement, indexPath, horizontalPopupPosition, verticalPopupPosition, isVertical) {
  var element = this.GetMenuMainElement(animationDivElement);
  var clientX = horizontalPopupPosition.position;
  var clientY = verticalPopupPosition.position;
  ASPx.PopupUtils.InitAnimationDiv(animationDivElement, clientX, clientY);
  var verticalDirection = this.GetAnimationVerticalDirection(indexPath, verticalPopupPosition, isVertical);
  var horizontalDirection = this.GetAnimationHorizontalDirection(indexPath, horizontalPopupPosition, isVertical);
  var yPos = verticalDirection * element.offsetHeight;
  var xPos = horizontalDirection * element.offsetWidth;
  ASPx.SetStyles(element, { left: xPos, top: yPos });
  ASPx.SetElementVisibility(animationDivElement, true);
  if(this.enableSubMenuFullWidth)
   this.ApplySubMenuFullWidth(animationDivElement);
  this.DoShowPopupMenuIFrame(animationDivElement, clientX, clientY, 0, 0, indexPath);
  this.DoShowPopupMenuBorderCorrector(animationDivElement, clientX, clientY, indexPath,
   horizontalPopupPosition.isInverted, verticalPopupPosition.isInverted);
  ASPx.PopupUtils.StartSlideAnimation(animationDivElement, element, this.GetMenuIFrameElement(indexPath), this.slideAnimationDuration, this.enableSubMenuFullWidth, false);
 },
 OnItemClick: function(indexPath, evt) {
  var sourceElement = ASPx.Evt.GetEventSource(evt);
  var clickedLinkElement = ASPx.GetParentByTagName(sourceElement, "A");
  var isLinkClicked = (clickedLinkElement != null && clickedLinkElement.href != ASPx.AccessibilityEmptyUrl);
  var element = this.GetItemContentElement(indexPath);
  var linkElement = (element != null) ? (element.tagName === "A" ? element : ASPx.GetNodeByTagName(element, "A", 0)) : null;
  if(linkElement != null && linkElement.href == ASPx.AccessibilityEmptyUrl)
   linkElement = null;
  if(this.allowSelectItem)
   this.SetSelectedItemInternal(indexPath, true);
  if(this.allowCheckItems)
   this.ChangeCheckedItem(indexPath);
  this.DoItemClick(indexPath, isLinkClicked || (linkElement != null), evt);
  if(!isLinkClicked && linkElement != null && !(ASPx.Browser.WebKitTouchUI && this.HasChildren(indexPath)))
   ASPx.Url.NavigateByLink(linkElement);
 },
 OnItemDropDownClick: function(indexPath, evt) {
  if(this.IsItemEnabled(indexPath))
   this.ShowSubMenu(indexPath);
 },
 AfterItemOverAllowed: function(hoverItem) {
  return hoverItem.name != "" && !this.lockHoverEvents;
 },
 OnAfterItemOver: function(hoverItem, hoverElement) {
  if(!this.AfterItemOverAllowed(hoverItem)) return;
  if(!this.showSubMenus) {
   this.savedCallbackHoverItem = hoverItem;
   this.savedCallbackHoverElement = hoverElement;
   return;
  }
  this.ClearDisappearTimer();
  this.ClearAppearTimer();
  var indexPath = this.GetMenuIndexPathById(hoverItem.name);
  if(indexPath == "") {
   indexPath = this.GetItemIndexPathById(hoverItem.name);
   var canShowSubMenu = true;
   if(this.IsDropDownItem(indexPath)) {
    var popOutImageElement = this.GetItemPopOutElement(indexPath);
    if(popOutImageElement != null && popOutImageElement != hoverElement) {
     hoverItem.needRefreshBetweenElements = true;
     canShowSubMenu = false;
    }
   }
   var preventSubMenu = !(canShowSubMenu && hoverItem.enabled && hoverItem.kind == ASPx.HoverItemKind);
   this.SetAppearTimer(indexPath, preventSubMenu);
   this.RaiseItemMouseOver(indexPath);
  }
 },
 OnBeforeItemOver: function(hoverItem, hoverElement) {
  if(ASPx.Browser.NetscapeFamily && ASPx.IsExists(hoverElement.offsetParent) &&
    hoverElement.offsetParent.style.borderCollapse == "collapse") {
   hoverElement.offsetParent.style.borderCollapse = "separate";
   hoverElement.offsetParent.style.borderCollapse = "collapse";
  }
  var indexPath = this.GetItemIndexPathById(hoverItem.name);
  var element = this.GetMenuElement(indexPath);
  if(element) this.CancelSubMenuItemHoverItem(element);
 },
 OnItemOverTimer: function(indexPath, preventSubMenu) {
  var element = this.GetMenuElement(indexPath);
  if(element == null || preventSubMenu) {
   var level = this.GetMenuLevel(indexPath);
   aspxGetMenuCollection().DoHidePopupMenus(null, level - 1, this.name, false, "");
  }
  if(this.IsAppearTimerActive() && !preventSubMenu) {
   this.ClearAppearTimer();
   if(this.GetItemContentElement(indexPath) != null || this.GetItemPopOutElement(indexPath) != null) {
    this.ShowSubMenu(indexPath);
   }
  }
 },
 OnBeforeItemDisabled: function(disabledItem, disabledElement) {
  this.ClearAppearTimer();
  var indexPath = this.GetItemIndexPathById(disabledElement.id);
  if(indexPath != "") {
   var element = this.GetMenuElement(indexPath);
   if(element != null) this.DoHidePopupMenu(null, element);
  }
 },
 OnAfterItemOut: function(hoverItem, hoverElement, newHoverElement) {
  if(!this.showSubMenus) {
   this.savedCallbackHoverItem = null;
   this.savedCallbackHoverElement = null;
  }
  if(hoverItem.name == "" || this.lockHoverEvents) return;
  if(hoverItem.IsChildElement(newHoverElement)) return;
  var indexPath = this.GetItemIndexPathById(hoverItem.name);
  var element = this.GetMenuElement(indexPath);
  this.ClearDisappearTimer();
  this.ClearAppearTimer();
  if(element == null || !ASPx.GetIsParent(element, newHoverElement))
   this.SetDisappearTimer();
  if(element != null)
   this.ApplySubMenuItemHoverItem(element, hoverItem, hoverElement);
  if(indexPath != "")
   this.RaiseItemMouseOut(indexPath);
 },
 OnItemOutTimer: function() {
  if(this.IsDisappearTimerActive()) {
   this.ClearDisappearTimer();
   if(aspxGetMenuCollection().CheckFocusedElement())
    this.SetDisappearTimer();
   else
    this.OnHideByItemOut();
  }
 },
 OnHideByItemOut: function() {
  aspxGetMenuCollection().DoHidePopupMenus(null, 0, this.name, true, "");
 },
 OnFocusedItemKeyDown: function(evt, focusedItem, focusedElement) {
  var handled = false;
  var indexPath = this.GetItemIndexPathById(focusedItem.name);
  switch (evt.keyCode) {
   case ASPx.Key.Tab: {
    handled = this.FocusNextTabItem(indexPath, evt.shiftKey);
    break;
   }
   case ASPx.Key.Down: {
    if(this.IsVertical(indexPath)) {
     this.FocusNextItem(indexPath);
    }
    else {
     this.ShowSubMenu(indexPath);
     this.FocusItemByIndexPath(this.GetFirstChildIndexPath(indexPath));
    }
    handled = true;
    break;
   }
   case ASPx.Key.Up: {
    if(this.IsVertical(indexPath)) {
     this.FocusPrevItem(indexPath);
    }
    else {
     this.ShowSubMenu(indexPath);
     this.FocusItemByIndexPath(this.GetFirstChildIndexPath(indexPath));
    }
    handled = true;
    break;
   }
   case ASPx.Key.Left: {
    if(this.IsVertical(indexPath)) {
     var parentIndexPath = this.GetParentIndexPath(indexPath);
     if(this.IsVertical(parentIndexPath)) {
      this.FocusItemByIndexPath(parentIndexPath);
     }
     else {
      this.FocusPrevItem(parentIndexPath);
     }
    }
    else {
     this.FocusPrevItem(indexPath);
    }
    handled = true;
    break;
   }
   case ASPx.Key.Right: {
    if(this.IsVertical(indexPath)) {
     if(this.HasChildren(indexPath)) {
      this.ShowSubMenu(indexPath);
      this.FocusItemByIndexPath(this.GetFirstChildIndexPath(indexPath));
     }
     else {
      while(!this.IsRootItem(indexPath))
       indexPath = this.GetParentIndexPath(indexPath);
      this.FocusNextItem(indexPath);
     }
    }
    else {
     this.FocusNextItem(indexPath);
    }
    handled = true;
    break;
   }
   case ASPx.Key.Esc: {
    var parentIndexPath = this.GetParentIndexPath(indexPath);
    if(parentIndexPath === "") {
     aspxGetMenuCollection().DoHidePopupMenus(null, -1, this.name, false, "");
     handled = true;
    }
    else {
     this.FocusItemByIndexPath(parentIndexPath);
     var element = this.GetMenuElement(parentIndexPath);
     if(element != null) {
      this.DoHidePopupMenu(null, element);
      handled = true;
     }
    }
   }
  }
  if(handled)
   ASPx.Evt.PreventEventAndBubble(evt);
 },
 FocusItemByIndexPath: function(indexPath) {
  var element = this.GetItemElement(indexPath);
  var link = ASPx.GetNodeByTagName(element, "A", 0);
  if(link != null) ASPx.SetFocus(link);
 },
 FocusNextTabItem: function(indexPath, shiftKey) {
  if(this.IsRootItem(indexPath)) return false;
  while(true) {
   if(this.IsRootItem(indexPath)) {
    if(!shiftKey) {
     if(this.GetNextSiblingIndexPath(indexPath) != null) {
      this.FocusNextItem(indexPath);
      return true;
     }
    }
    else {
     if(this.GetPrevSiblingIndexPath(indexPath) != null) {
      this.FocusPrevItem(indexPath);
      return true;
     }
    }
    break;
   }
   else {
    if(!shiftKey) {
     if(this.GetNextSiblingIndexPath(indexPath) == null)
      indexPath = this.GetParentIndexPath(indexPath);
     else {
      this.FocusNextItem(indexPath);
      return true;
     }
    }
    else {
     if(this.GetPrevSiblingIndexPath(indexPath) == null)
      indexPath = this.GetParentIndexPath(indexPath);
     else {
      this.FocusPrevItem(indexPath);
      return true;
     }
    }
   }
  }
  return false;
 },
 FocusNextItem: function(indexPath) {
  var newIndexPath = this.GetNextSiblingIndexPath(indexPath);
  if(newIndexPath == null)
   newIndexPath = this.GetFirstSiblingIndexPath(indexPath);
  if(indexPath != newIndexPath)
   this.FocusItemByIndexPath(newIndexPath);
 },
 FocusPrevItem: function(indexPath) {
  var newIndexPath = this.GetPrevSiblingIndexPath(indexPath);
  if(newIndexPath == null)
   newIndexPath = this.GetLastSiblingIndexPath(indexPath);
  if(indexPath != newIndexPath)
   this.FocusItemByIndexPath(newIndexPath);
 },
 TryFocusItem: function(itemIndex) {
  var item = this.GetItem(itemIndex);
  if(item.GetVisible() && item.GetEnabled()) {
   this.FocusItemByIndexPath(item.GetIndexPath());
   return true;
  }
  return false;
 },
 Focus: function() {
  if(this.rootItem != null) { 
   for(var i = 0; i < this.GetItemCount() ; i++) {
    if(this.TryFocusItem(i))
     return true;
   }
  }
  else
   this.FocusNextItem("-1");
 },
 FocusLastItem: function() {
  if(this.rootItem != null) { 
   for(var i = this.GetItemCount() - 1; i >= 0; i--) {
    if(this.TryFocusItem(i))
     return true;
   }
  }
  else
   this.FocusPrevItem(this.GetItemCount() - 1);
 },
 OnCallback: function(result) {
  ASPx.InitializeScripts(); 
  this.InitializeScrollableMenus();
  for(var indexPath in result) {
   var menuElement = this.GetMenuElement(indexPath);
   if(menuElement) {
    if(aspxGetMenuCollection().IsSubMenuVisible(menuElement.id)) {
     this.ShowPopupSubMenuAfterCallback(menuElement, result[indexPath]);
    } else {
     this.SetSubMenuInnerHtml(menuElement, result[indexPath]);
    }
   }
  }
  this.ClearVerticalAlignedElementsCache();
  this.CorrectVerticalAlignment(ASPx.AdjustHeight, this.GetPopOutElements, "PopOut");
  this.CorrectVerticalAlignment(ASPx.AdjustVerticalMargins, this.GetPopOutImages, "PopOutImg");
  this.InitializeInternal(false);
  if(!this.showSubMenus) {
   this.showSubMenus = true;
   if(this.savedCallbackHoverItem != null && this.savedCallbackHoverElement != null)
    this.OnAfterItemOver(this.savedCallbackHoverItem, this.savedCallbackHoverElement);
   this.savedCallbackHoverItem = null;
   this.savedCallbackHoverElement = null;
  }
 },
 SetSubMenuInnerHtml: function(menuElement, html) {
  ASPx.SetInnerHtml(this.GetMenuMainElement(menuElement), html);
  MenuRenderHelper.InlineInitializeSubMenuMenuElement(this, menuElement);
  MenuRenderHelper.CalculateSubMenu(this, menuElement, true);
 },
 ShowPopupSubMenuAfterCallback: function(element, callbackResult) {
  var indexPath = this.GetIndexPathById(element.id, true);
  var currentX = ASPx.PxToInt(element.style.left);
  var currentY = ASPx.PxToInt(element.style.top);
  var showedToTheTop = this.ShowedToTheTop(element, indexPath);
  var showedToTheLeft = this.ShowedToTheLeft(element, indexPath);
  ASPx.SetStyles(element, {
   left: ASPx.InvalidPosition, top: ASPx.InvalidPosition
  });
  this.SetSubMenuInnerHtml(element, callbackResult);
  var vertPos = this.GetClientSubMenuPos(element, indexPath, ASPx.InvalidPosition, this.IsVertical(indexPath), false);
  var clientY = vertPos.position;
  var toTheTop = vertPos.isInverted;
  if(!this.IsVertical(indexPath) && showedToTheTop != toTheTop) {
   clientY = currentY;
   toTheTop = showedToTheTop;
  }
  var scrollHelper = this.scrollHelpers[indexPath];
  if(scrollHelper) {
   var yClientCorrection = this.GetScrollSubMenuYCorrection(element, scrollHelper, clientY);
   if(yClientCorrection > 0)
    clientY += yClientCorrection;
  }
  ASPx.SetStyles(element, { left: currentX, top: clientY });
  if(this.enableSubMenuFullWidth)
   this.ApplySubMenuFullWidth(element);
  this.DoShowPopupMenuIFrame(element, currentX, clientY, ASPx.InvalidDimension, ASPx.InvalidDimension, indexPath);
  this.DoShowPopupMenuBorderCorrector(element, currentX, clientY, indexPath, showedToTheLeft, toTheTop);
  ASPx.GetControlCollection().AdjustControls(element);
 },
 ShowedToTheTop: function(element, indexPath) {
  var currentY = ASPx.PxToInt(element.style.top);
  var parentBottomY = this.GetSubMenuYPosition(indexPath, this.IsVertical(indexPath));
  return currentY < parentBottomY;
 },
 ShowedToTheLeft: function(element, indexPath) {
  var currentX = ASPx.PxToInt(element.style.left);
  var parentX = this.GetSubMenuXPosition(indexPath, this.IsVertical(indexPath));
  return currentX < parentX;
 },
 CreateItems: function(items) {
  if (items.length == 0)
   return;
  if(this.NeedCreateItemsOnClientSide())
   this.CreateClientItems(items);
  else
   this.CreateServerItems(items);
 },
 AddItem: function(item) {
  this.PreInitializeClientMenuItems();
  this.RenderItemIfRequired(this.rootItem.CreateItemInternal(item), false);
  this.InitializeClientItems();
 },
 CreateClientItems: function(items) {
  this.PreInitializeClientMenuItems();
  this.rootItem.CreateItems(items);
  this.RenderItems(this.rootItem.items);
  this.InitializeClientItems();
 },
 CreateServerItems: function(items) {
  this.CreateRootItemIfRequired();
  this.rootItem.CreateItems(items);
 },
 PreInitializeClientMenuItems: function() {
  if(!this.rootMenuSample)
   this.InitializeMenuSamples();
  this.CreateRootItemIfRequired();
  if(!this.renderData)
   this.CreateRenderData();
 },
 InitializeClientItems: function() {
  this.needDropCache = true;
  MenuRenderHelper.InlineInitializeElements(this);
  this.InitializeEnabledAndVisible(true);
 },
 CreateRootItemIfRequired: function() {
  if(!this.rootItem) {
   var itemType = this.GetClientItemType();
   this.rootItem = new itemType(this, null, 0, "");
  }
 },
 CreateRootMenuElement: function() {
  var wrapperElement = this.GetMainElement().parentNode;
  wrapperElement.innerHTML = "";
  wrapperElement.appendChild(this.rootMenuSample.cloneNode(true));
 }, 
 NeedAppendToRenderData: function(item) {
  return this.NeedCreateItemsOnClientSide() && item.visible || typeof(item.visible) == "undefined";
 },
 ClearItems: function() {
  this.PreInitializeClientMenuItems();
  this.CreateRootMenuElement();
  this.ClearRenderData();
  this.rootItem.items = [];
 },
 GetParentItem: function(rootItemIndexPath) {
  if(!rootItemIndexPath)
   return this.rootItem;
  return this.GetItemByIndexPath(rootItemIndexPath);
 },
 RenderItems: function(items) {
  for(var i=0; i < items.length; i++) {
   var item = items[i];
   this.RenderItemIfRequired(item, item.items.length > 0);
   this.RenderItems(item.items);
  }
 },
 RenderItemIfRequired: function(item, withSubitems) {
  var rootItemElement = item.parent.name ? this.GetItemElement(item.parent.indexPath) : null;
  var rootMenuElement = this.GetOrRenderRootItem(item);
  if(!this.GetItemElement(item.indexPath)) {
   if(!rootItemElement)
    this.RenderItemInternal(rootMenuElement, item, withSubitems);
   else {
    this.AddPopOutElementToItemElementIfNeeded(rootItemElement, item.parent.indexPath, true);
    this.RenderItemInternal(rootMenuElement, item, withSubitems);
   }
   var itemElementId = this.GetItemElementId(item.indexPath);
   ASPx.GetStateController().AddHoverItem(itemElementId, ["dxm-hovered"], [""], [""], null, null, false);
   ASPx.GetStateController().AddDisabledItem(itemElementId, ["dxm-disabled"], [""], [""], null, null, false);
  }
 },
 GetOrRenderRootItem: function(item) {
  if(item.parent.name) {
   var rootMenuElement = this.GetMenuElement(item.parent.indexPath);
   return rootMenuElement ? rootMenuElement : this.RenderSubMenuItem(item.parent.indexPath);
  } else
   return this.GetMenuElement("");
 },
 RenderItemInternal: function(rootItem, item, withSubitems) {
  var rootItem =  ASPx.GetNodeByTagName(rootItem, "UL", 0);
  var element = this.CreateItemElement(item, withSubitems);
  var li = ASPx.GetNodesByTagName(rootItem, "LI");
  if(li.length == 0) {
   rootItem.appendChild(element);
   return;
  }
  this.RenderSeparatorElementIfRequired(rootItem, item.index, item.beginGroup);
  this.RenderSpaceElementIfRequired(rootItem, item.index);
  if(!this.GetItemElement(item.indexPath))
   rootItem.appendChild(element);
 },
 NeedAddPopOutElement: function(rootMenuElement) {
  return ASPx.GetNodesByClassName(rootMenuElement, MenuCssClasses.PopOutContainer).length == 0
 },
 AddPopOutElementToItemElementIfNeeded: function(itemElement, indexPath, withSubitems) {
  if(this.NeedAddPopOutElement(itemElement) && withSubitems) {
   if(this.isPopupMenu || !this.IsRootItem(indexPath)) {
    itemElement.className = itemElement.className.replace(MenuCssClasses.ItemWithoutSubMenu, MenuCssClasses.ItemWithSubMenu);
    itemElement.insertBefore(this.samplePopOutElement.cloneNode(true), itemElement.childNodes[itemElement.childNodes.length - 1]);
   }
  }
 },
 RenderSeparatorElementIfRequired: function(rootItem, index, needAddSeparator) {
  if(needAddSeparator) {
   var item = this.CreateSeparatorElement(index);
   rootItem.appendChild(item);
  }
 },
 RenderSpaceElementIfRequired: function(rootItem, index) {
  if(rootItem.childNodes.length > 0) {
   var item = this.CreateSpacingElement(index);
   rootItem.appendChild(item);
  }
 },
 RenderSubMenuItem: function(indexPath) {
  var subMenuElement = this.CreateSubMenuElement(indexPath);
  this.GetMainElement().parentElement.appendChild(subMenuElement);
  return subMenuElement;
 },
 HasSeparatorOnCurrentPosition: function(itemElements, position) {
  return itemElements[position - 1 > 0 ? position - 1 : 0].className.indexOf(MenuCssClasses.Separator) > -1;
 },
 CreateItemElement: function(item, withSubitems) {
  var itemElement = this.sampleEmptyItemElement.cloneNode();
  var contentElement = this.sampleContentElement.cloneNode();
  this.AddImageToItemElementIfNeeded(item, itemElement, contentElement);
  this.AddTextElementToItemElement(contentElement, itemElement, item.text);
  this.AddPopOutElementToItemElementIfNeeded(itemElement, item.indexPath, withSubitems);
  itemElement.appendChild(this.sampleClearElement.cloneNode());
  itemElement.id = this.GetItemElementId(item.indexPath);
  return itemElement;
 },
 AddTextElementToItemElement: function(contentElement, itemElement, text) {
  var textElement = this.sampleTextElementForItem.cloneNode();
  ASPx.SetInnerHtml(textElement, text);
  contentElement.appendChild(textElement);
  itemElement.appendChild(contentElement);
 },
 AddImageToItemElementIfNeeded: function(item, itemElement, contentElement) {
  if(item.imageSrc || item.imageClassName) {
   var imageElement = this.sampleImageElementForItem.cloneNode();
   if(item.imageSrc)
    imageElement.src = item.imageSrc;
   if(item.imageClassName)
    imageElement.className += " " + item.imageClassName;
   ASPx.RemoveClassNameFromElement(imageElement, Constants.SampleCssClassNameForImageElement);
   ASPx.RemoveClassNameFromElement(itemElement, MenuCssClasses.ItemWithoutImage);
   ASPx.RemoveClassNameFromElement(ASPx.GetNodeByTagName(this.GetMenuElement(item.parent.indexPath), "UL", 0), MenuCssClasses.WithoutImages);
   contentElement.appendChild(imageElement);
  }
 },
 CreateSpacingElement: function(index) {
  var item = this.sampleSpacingElement.cloneNode();
  item.id = this.GetItemIndentElementId(index);
  return item;
 },
 CreateSeparatorElement: function(index) {
  var item = this.sampleSeparatorElement.cloneNode(true);
  item.id = this.GetItemSeparatorElementId(index);
  return item;
 },
 CreateSubMenuElement: function(indexPath) {
  var subMenu = this.sampleSubMenuElement.cloneNode(true);
  subMenu.id =  this.name + Constants.MMIdSuffix + indexPath + "_";
  return subMenu;
 },
 AppendToRenderData: function(rootItemIndexPath, index) {
  if(rootItemIndexPath) {
   if(!this.renderData[rootItemIndexPath])
    this.renderData[rootItemIndexPath] = [[index]];
   this.renderData[rootItemIndexPath][index] = [index];
  } else {
   this.renderData[""].push([[index]]);
  }
 },
 CreateRenderData: function() {
  this.renderData = {"" : []};
 },
 ClearRenderData: function() {
  this.renderData = null;
 },
 GetClientItemType: function() {
  return ASPxClientMenuItem;
 },
 GetItemByIndexPath: function(indexPath) {
  var item = this.rootItem;
  if(indexPath != "" && item != null) {
   var indexes = this.GetItemIndexes(indexPath);
   for(var i = 0; i < indexes.length; i++)
    item = item.GetItem(indexes[i]);
  }
  return item;
 },
 SetItemChecked: function(indexPath, checked) {
  var itemsGroup = this.GetItemsGroup(indexPath);
  if(itemsGroup != null) {
   if(!checked && this.IsCheckedItem(indexPath)) {
    ASPx.Data.ArrayRemove(this.checkedItems, indexPath);
    this.DeselectItem(indexPath);
   }
   else if(checked && !this.IsCheckedItem(indexPath)) {
    if(itemsGroup.length > 1) {
     for(var i = 0; i < itemsGroup.length; i++) {
      if(itemsGroup[i] == indexPath) continue;
      if(this.IsCheckedItem(itemsGroup[i])) {
       ASPx.Data.ArrayRemove(this.checkedItems, itemsGroup[i]);
       this.DeselectItem(itemsGroup[i]);
      }
     }
    }
    this.SelectItem(indexPath);
    this.checkedItems.push(indexPath);
   }
  }
 },
 ChangeItemEnabledAttributes: function(indexPath, enabled) {
  MenuRenderHelper.ChangeItemEnabledAttributes(this.GetItemElement(indexPath), enabled);
 },
 IsItemEnabled: function(indexPath) {
  var item = this.GetItemByIndexPath(indexPath);
  return (item != null) ? item.GetEnabled() : true;
 },
 SetItemEnabled: function(indexPath, enabled, initialization) {
  if(indexPath == "" || !this.GetItemByIndexPath(indexPath).enabled) return;
  if(!enabled) {
   if(this.GetSelectedItemIndexPath() == indexPath)
    this.DeselectItem(indexPath);
  }
  if(!initialization || !enabled)
   this.ChangeItemEnabledStateItems(indexPath, enabled);
  this.ChangeItemEnabledAttributes(indexPath, enabled);
  if(enabled) {
   if(this.GetSelectedItemIndexPath() == indexPath)
    this.SelectItem(indexPath);
  }
 },
 ChangeItemEnabledStateItems: function(indexPath, enabled) {
  if(!this.IsStateControllerEnabled()) return;
  var element = this.GetItemElement(indexPath);
  if(element)
   ASPx.GetStateController().SetElementEnabled(element, enabled);
 },
 GetItemImageUrl: function(indexPath) {
  var image = this.GetItemImage(indexPath);
  if(image)
   return image.src;
  return "";
 },
 SetItemImageUrl: function(indexPath, url) {
  var image = this.GetItemImage(indexPath);
  if(image)
   image.src = url;
 },
 GetItemImage: function(indexPath) {
  var element = this.GetItemContentElement(indexPath);
  if(element != null) {
   var img = ASPx.GetNodeByTagName(element, "IMG", 0);
   if(img != null)
    return img;
  }
 },
 GetItemNavigateUrl: function(indexPath) {
  var element = this.GetItemContentElement(indexPath);
  if(element != null && element.tagName === "A")
   return element.href || ASPx.Attr.GetAttribute(element, "savedhref");
  if(element != null) {
   var link = ASPx.GetNodeByTagName(element, "A", 0);
   if(link != null)
    return link.href || ASPx.Attr.GetAttribute(link, "savedhref");
  }
  return "";
 },
 SetItemNavigateUrl: function(indexPath, url) {
  var element = this.GetItemContentElement(indexPath);
  var setUrl = function(link) {
   if(link != null) {
    if(ASPx.Attr.IsExistsAttribute(link, "savedhref"))
     ASPx.Attr.SetAttribute(link, "savedhref", url);
    else if(ASPx.Attr.IsExistsAttribute(link, "href"))
     link.href = url;
   }
  };
  if(element != null) {
   if(element.tagName === "A")
    setUrl(element);
   else {
    setUrl(ASPx.GetNodeByTagName(element, "A", 0));
    setUrl(ASPx.GetNodeByTagName(element, "A", 1));
   }
  }
 },
 FindTextNode: function(indexPath) {
  var element = this.GetItemContentElement(indexPath);
  if(element) {
   var link = ASPx.GetNodeByTagName(element, "A", 0); 
   if(link)
    return ASPx.GetTextNode(link);
   var titleSpan = ASPx.GetNodeByTagName(element, "SPAN", 0); 
   if(titleSpan)
    return ASPx.GetTextNode(titleSpan);
   for(var i = 0; i < element.childNodes.length; i++) { 
    var child = element.childNodes[i];
    if(child.nodeValue && (ASPx.Str.Trim(child.nodeValue) != ""))
     return child;
   }
   return ASPx.GetTextNode(element);
  }
  return null;
 },
 GetItemText: function(indexPath) {
  var textNode = this.FindTextNode(indexPath);
  return textNode
   ? ASPx.Str.Trim(textNode.nodeValue) 
   : "";
 },
 SetItemText: function(indexPath, text) {
  var textNode = this.FindTextNode(indexPath);
  if(textNode) {
   textNode.nodeValue = text;
   var menuElement = this.GetMenuElement(this.GetParentIndexPath(indexPath));
   if(menuElement && !this.IsRootItem(indexPath))
    MenuRenderHelper.CalculateSubMenu(this, menuElement, true);
   if(this.IsRootItem(indexPath) && !this.isPopupMenu) {
    var itemElement = this.GetItemElement(indexPath);
    if(itemElement)
     MenuRenderHelper.CalculateItemMinSize(itemElement, true);
   }
  }
 },
 SetItemVisible: function(indexPath, visible, initialization) {
  if(indexPath == "" || !this.GetItemByIndexPath(indexPath).visible) return;
  if(visible && initialization) return;
  var element = this.GetItemElement(indexPath);
  if(element != null)
   ASPx.SetElementDisplay(element, visible);
  this.SetIndentsVisiblility(indexPath);
  this.SetSeparatorsVisiblility(indexPath);
  var parent = this.GetItemByIndexPath(indexPath).parent;
  var parentHasVisibleItems = this.HasVisibleItems(parent);
  if(this.IsRootItem(indexPath) && !this.isPopupMenu) {
   if(this.clientVisible)
    ASPx.SetElementDisplay(this.GetMainElement(), parentHasVisibleItems);
  }
  else
   this.SetPopOutElementVisible(parent.indexPath, parentHasVisibleItems);
  var parentIndexPath = this.GetParentIndexPath(indexPath); 
  if(!this.IsRootItem(parentIndexPath) || this.isPopupMenu) {
   var menuElement = this.GetMenuElement(parentIndexPath);
   if(menuElement) 
    MenuRenderHelper.CalculateSubMenu(this, menuElement, true);
  }
  if(this.IsRootItem(indexPath) && !this.isPopupMenu) 
   MenuRenderHelper.CalculateMenuControl(this, this.GetMainElement(), true);
 },
 SetIndentsVisiblility: function(indexPath) {
  var parent = this.GetItemByIndexPath(indexPath).parent;
  for(var i = 0; i < parent.GetItemCount() ; i++) {
   var item = parent.GetItem(i);
   var separatorVisible = this.HasPrevVisibleItems(parent, i) && item.GetVisible();
   var element = this.GetItemIndentElement(item.GetIndexPath());
   if(element != null) ASPx.SetElementDisplay(element, separatorVisible);
  }
 },
 SetSeparatorsVisiblility: function(indexPath) {
  var parent = this.GetItemByIndexPath(indexPath).parent;
  for(var i = 0; i < parent.GetItemCount() ; i++) {
   var item = parent.GetItem(i);
   var separatorVisible = this.HasPrevVisibleItems(parent, i) && (item.GetVisible() || this.HasNextVisibleItemInGroup(parent, i));
   var element = this.GetItemSeparatorElement(item.GetIndexPath());
   if(element != null) ASPx.SetElementDisplay(element, separatorVisible);
  }
 },
 SetPopOutElementVisible: function(indexPath, visible) {
  var popOutElement = this.GetItemPopOutElement(indexPath);
  if(popOutElement)
   ASPx.SetElementDisplay(popOutElement, visible);
 },
 HasNextVisibleItemInGroup: function(parent, index) {
  for(var i = index + 1; i < parent.GetItemCount() ; i++) {
   var item = parent.GetItem(i);
   if(this.IsItemBeginsGroup(item))
    return false;
   if(item.GetVisible() && !this.IsAdaptiveItem(item.indexPath))
    return true;
  }
  return false;
 },
 IsItemBeginsGroup: function(item) {
  var itemSeparator = this.GetItemSeparatorElement(item.GetIndexPath());
  return itemSeparator && ASPx.ElementContainsCssClass(itemSeparator, MenuCssClasses.Separator);
 },
 HasVisibleItems: function(parent) {
  for(var i = 0; i < parent.GetItemCount() ; i++) {
   if(parent.GetItem(i).GetVisible())
    return true;
  }
  return false;
 },
 HasNextVisibleItems: function(parent, index) {
  for(var i = index + 1; i < parent.GetItemCount() ; i++) {
   if(parent.GetItem(i).GetVisible())
    return true;
  }
  return false;
 },
 HasPrevVisibleItems: function(parent, index) {
  for(var i = index - 1; i >= 0; i--) {
   if(parent.GetItem(i).GetVisible())
    return true;
  }
  return false;
 },
 GetItemIndentElement: function(indexPath) {
  return ASPx.GetElementById(this.GetItemIndentElementId(indexPath));
 },
 GetItemSeparatorElement: function(indexPath) {
  return ASPx.GetElementById(this.GetItemSeparatorElementId(indexPath));
 },
 RaiseItemClick: function(indexPath, htmlEvent) {
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned("ItemClick");
  if(!this.ItemClick.IsEmpty()) {
   var item = this.GetItemByIndexPath(indexPath);
   var htmlElement = this.GetItemContentElement(indexPath);
   var args = new ASPxClientMenuItemClickEventArgs(processOnServer, item, htmlElement, htmlEvent);
   this.ItemClick.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 RaiseItemMouseOver: function(indexPath) {
  if(!this.ItemMouseOver.IsEmpty()) {
   var item = this.GetItemByIndexPath(indexPath);
   var htmlElement = this.GetItemContentElement(indexPath);
   var args = new ASPxClientMenuItemMouseEventArgs(item, htmlElement);
   this.ItemMouseOver.FireEvent(this, args);
  }
 },
 RaiseItemMouseOut: function(indexPath) {
  if(!this.ItemMouseOut.IsEmpty()) {
   var item = this.GetItemByIndexPath(indexPath);
   var htmlElement = this.GetItemContentElement(indexPath);
   var args = new ASPxClientMenuItemMouseEventArgs(item, htmlElement);
   this.ItemMouseOut.FireEvent(this, args);
  }
 },
 RaisePopUp: function(indexPath) {
  var item = this.GetItemByIndexPath(indexPath);
  if(!this.PopUp.IsEmpty()) {
   var args = new ASPxClientMenuItemEventArgs(item);
   this.PopUp.FireEvent(this, args);
  }
 },
 RaiseCloseUp: function(indexPath) {
  var item = this.GetItemByIndexPath(indexPath);
  if(!this.CloseUp.IsEmpty()) {
   var args = new ASPxClientMenuItemEventArgs(item);
   this.CloseUp.FireEvent(this, args);
  }
 },
 SetEnabled: function(enabled) {
  for(var i = this.GetItemCount() - 1; i >= 0; i--) {
   var item = this.GetItem(i);
   item.SetEnabled(enabled);
  }
 },
 SetVisible: function(visible) {
  ASPxClientControl.prototype.SetVisible.call(this, visible);
  if(visible && !this.HasVisibleItems(this))
   ASPx.SetElementDisplay(this.GetMainElement(), false);
 },
 GetItemCount: function() {
  return (this.rootItem != null) ? this.rootItem.GetItemCount() : 0;
 },
 GetItem: function(index) {
  return (this.rootItem != null) ? this.rootItem.GetItem(index) : null;
 },
 GetItemByName: function(name) {
  return (this.rootItem != null) ? this.rootItem.GetItemByName(name) : null;
 },
 GetSelectedItem: function() {
  var indexPath = this.GetSelectedItemIndexPath();
  if(indexPath != "")
   return this.GetItemByIndexPath(indexPath);
  return null;
 },
 SetSelectedItem: function(item) {
  var indexPath = (item != null) ? item.GetIndexPath() : "";
  this.SetSelectedItemInternal(indexPath, false);
 },
 GetRootItem: function() {
  return this.rootItem;
 }
});
ASPxClientMenuBase.GetMenuCollection = function() {
 return aspxGetMenuCollection();
}
var ASPxClientMenuCollection = ASPx.CreateClass(ASPxClientControlCollection, {
 constructor: function() {
  this.constructor.prototype.constructor.call(this);
  this.appearTimerID = -1;
  this.disappearTimerID = -1;
  this.currentShowingPopupMenuName = null;
  this.visibleSubMenusMenuName = "";
  this.visibleSubMenuIds = [];
  this.overXPos = -1;
  this.overYPos = -1;
 },
 GetCollectionType: function(){
  return "Menu";
 },
 Remove: function(element) {
  if(element.name === this.visibleSubMenusMenuName) {
   this.visibleSubMenusMenuName = "";
   this.visibleSubMenuIds = [ ];
  }
  ASPxClientControlCollection.prototype.Remove.call(this, element);
 },
 RegisterVisiblePopupMenu: function(name, id) {
  this.visibleSubMenuIds.push(id);
  this.visibleSubMenusMenuName = name;
 },
 UnregisterVisiblePopupMenu: function(name, id) {
  ASPx.Data.ArrayRemove(this.visibleSubMenuIds, id);
  if(this.visibleSubMenuIds.length == 0)
   this.visibleSubMenusMenuName = "";
 },
 IsSubMenuVisible: function(subMenuId) {
  for(var i = 0; i < this.visibleSubMenuIds.length; i++) {
   if(this.visibleSubMenuIds[i] == subMenuId)
    return true;
  }
  return false;
 },
 GetMenu: function(id) {
  return this.Get(this.GetMenuName(id));
 },
 GetMenuName: function(id) {
  return this.GetMenuNameBySuffixes(id, [Constants.MMIdSuffix, Constants.MIIdSuffix]);
 },
 GetMenuNameBySuffixes: function(id, idSuffixes) {
  for(var i = 0; i < idSuffixes.length; i++) {
   var pos = id.lastIndexOf(idSuffixes[i]);
   if(pos > -1)
    return id.substring(0, pos);
  }
  return id;
 },
 ClearCurrentShowingPopupMenuName: function() {
  this.SetCurrentShowingPopupMenuName(null);
 },
 SetCurrentShowingPopupMenuName: function(value) {
  this.currentShowingPopupMenuName = value;
 },
 NowPopupMenuIsShowing: function() {
  return this.currentShowingPopupMenuName != null;
 },
 GetMenuLevelById: function(id) {
  var indexPath = this.GetIndexPathById(id, Constants.MMIdSuffix);
  var menu = this.GetMenu(id);
  return menu.GetMenuLevel(indexPath);
 },
 GetIndexPathById: function(id, idSuffix) {
  var pos = id.lastIndexOf(idSuffix);
  if(pos > -1) {
   id = id.substring(pos + idSuffix.length);
   pos = id.lastIndexOf("_");
   if(pos > -1)
    return id.substring(0, pos);
  }
  return "";
 },
 GetItemIndexPath: function(indexes) {
  var indexPath = "";
  for(var i = 0; i < indexes.length; i++) {
   indexPath += indexes[i];
   if(i < indexes.length - 1)
    indexPath += ASPx.ItemIndexSeparator;
  }
  return indexPath;
 },
 GetItemIndexes: function(indexPath) {
  var indexes = indexPath.split(ASPx.ItemIndexSeparator);
  for(var i = 0; i < indexes.length; i++)
   indexes[i] = parseInt(indexes[i]);
  return indexes;
 },
 ClearAppearTimer: function() {
  this.appearTimerID = ASPx.Timer.ClearTimer(this.appearTimerID);
 },
 ClearDisappearTimer: function() {
  this.disappearTimerID = ASPx.Timer.ClearTimer(this.disappearTimerID);
 },
 IsAppearTimerActive: function() {
  return this.appearTimerID > -1;
 },
 IsDisappearTimerActive: function() {
  return this.disappearTimerID > -1;
 },
 SetAppearTimer: function(name, indexPath, timeout, preventSubMenu) {
  this.appearTimerID = window.setTimeout(function() {
   var menu = aspxGetMenuCollection().Get(name);
   if(menu != null) menu.OnItemOverTimer(indexPath, preventSubMenu);
  }, timeout);
 },
 SetDisappearTimer: function(name, timeout) {
  this.disappearTimerID = window.setTimeout(function() {
   var menu = aspxGetMenuCollection().Get(name);
   if(menu != null)
    menu.OnItemOutTimer();
  }, timeout);
 },
 GetMouseDownMenuLevel: function(evt) {
  var srcElement = ASPx.Evt.GetEventSource(evt);
  if(this.visibleSubMenusMenuName != "") {
   var element = ASPx.GetParentById(srcElement, this.visibleSubMenusMenuName);
   if(element != null) return 1;
  }
  for(var i = 0; i < this.visibleSubMenuIds.length; i++) {
   var element = ASPx.GetParentById(srcElement, this.visibleSubMenuIds[i]);
   if(element != null)
    return this.GetMenuLevelById(this.visibleSubMenuIds[i]) + 1;
  }
  return -1;
 },
 CheckFocusedElement: function() {
  try {
   var activeElement = document.activeElement;
   if(activeElement != null) {
    for(var i = 0; i < this.visibleSubMenuIds.length; i++) {
     var menuElement = ASPx.GetElementById(this.visibleSubMenuIds[i]);
     if(menuElement != null && ASPx.GetIsParent(menuElement, activeElement)) {
      var tagName = activeElement.tagName;
      if(tagName == "A" && ASPx.ElementHasCssClass(activeElement, MenuCssClasses.ContentContainer) && !this.GetMenu(this.visibleSubMenusMenuName).accessibilityCompliant)
       return false;
      if(!ASPx.Browser.IE || tagName == "INPUT" || tagName == "TEXTAREA" || tagName == "SELECT")
       return true;
     }
    }
   }
  } catch (e) {
  }
  return false;
 },
 DoHidePopupMenus: function(evt, level, name, leavePopups, exceptId) {
  for(var i = this.visibleSubMenuIds.length - 1; i >= 0 ; i--) {
   var menu = this.GetMenu(this.visibleSubMenuIds[i]);
   if(menu != null) {
    var menuLevel = this.GetMenuLevelById(this.visibleSubMenuIds[i]);
    if((!leavePopups || menuLevel > 0) && exceptId != this.visibleSubMenuIds[i]) {
     if(menuLevel > level || (menu.name != name && name != "")) {
      var element = ASPx.GetElementById(this.visibleSubMenuIds[i]);
      if(element != null)
       menu.DoHidePopupMenu(evt, element);
     }
    }
   }
  }
 },
 DoShowAtCurrentPos: function(name, indexPath) {
  var pc = this.Get(name);
  var element = pc.GetMainElement();
  if(pc != null && !ASPx.GetElementDisplay(element))
   pc.DoShowPopupMenu(element, this.overXPos, this.overYPos, indexPath);
 },
 SaveCurrentMouseOverPos: function(evt, popupElement) {
  if(!this.NowPopupMenuIsShowing()) return;
  var currentShowingPopupMenu = this.Get(this.currentShowingPopupMenuName);
  if(currentShowingPopupMenu.popupElement == popupElement)
   if(!currentShowingPopupMenu.IsMenuVisible()) {
    this.overXPos = ASPx.Evt.GetEventX(evt);
    this.overYPos = ASPx.Evt.GetEventY(evt);
   }
 },
 OnMouseDown: function(evt) {
  var menuLevel = this.GetMouseDownMenuLevel(evt);
  this.DoHidePopupMenus(evt, menuLevel, "", false, "");
 },
 HideAll: function() {
  this.DoHidePopupMenus(null, -1, "", false, "");
 },
 IsAnyMenuVisible: function() {
  return this.visibleSubMenuIds.length != 0;
 }
});
var menuCollection = null;
function aspxGetMenuCollection() {
 if(menuCollection == null)
  menuCollection = new ASPxClientMenuCollection();
 return menuCollection;
}
var ASPxClientMenuItem = ASPx.CreateClass(null, {
 constructor: function(menu, parent, index, name) {
  this.menu = menu;
  this.parent = parent;
  this.index = index;
  this.name = name;
  this.indexPath = "";
  this.text = "";
  this.imageSrc = "";
  this.imageClassName = "";
  this.beginGroup = false;
  if(parent) {
   this.indexPath = this.CreateItemIndexPath(parent);
  }
  this.enabled = true;
  this.clientEnabled = true;
  this.visible = true;
  this.clientVisible = true;
  this.items = [];
 },
 CreateItemIndexPath: function(parent) {
  return parent.indexPath ? parent.indexPath + ASPx.ItemIndexSeparator + this.index.toString() : this.index.toString();
 },
 CreateItems: function(itemsProperties) {
  var itemType = this.menu.GetClientItemType();
  for(var i = 0; i < itemsProperties.length; i++) {
   var itemProperties = itemsProperties[i];
   var item = this.CreateItemInternal(itemProperties, i);
   if(itemProperties.items)
    item.CreateItems(itemProperties.items);
  }
 },
 CreateItemInternal: function(itemProperties, index) {
  var itemName = itemProperties.name || "";
  var correctIndex = index ? index : this.items.length;
  var itemType = this.menu.GetClientItemType();
  var item = new itemType(this.menu, this, correctIndex, itemName);
  if(ASPx.IsExists(itemProperties.text))
   item.text = itemProperties.text;
  if(ASPx.IsExists(itemProperties.imageSrc))
   item.imageSrc = itemProperties.imageSrc;
  if(ASPx.IsExists(itemProperties.imageClassName))
   item.imageClassName = itemProperties.imageClassName;
  if(ASPx.IsExists(itemProperties.beginGroup))
   item.beginGroup = itemProperties.beginGroup;
  if(ASPx.IsExists(itemProperties.enabled))
   item.enabled = itemProperties.enabled;
  if(ASPx.IsExists(itemProperties.clientEnabled))
   item.clientEnabled = itemProperties.clientEnabled;
  if(ASPx.IsExists(itemProperties.visible))
   item.visible = itemProperties.visible;
  if(ASPx.IsExists(itemProperties.clientVisible))
   item.clientVisible = itemProperties.clientVisible;
  if(this.menu.NeedAppendToRenderData(item))
   this.menu.AppendToRenderData(this.indexPath, correctIndex);
  this.items.push(item);
  return item;
 },
 GetIndexPath: function() {
  return this.indexPath;
 },
 GetItemCount: function() {
  return this.items.length;
 },
 GetItem: function(index) {
  return (0 <= index && index < this.items.length) ? this.items[index] : null;
 },
 GetItemByName: function(name) {
  for(var i = 0; i < this.items.length; i++)
   if(this.items[i].name == name) return this.items[i];
  for(var i = 0; i < this.items.length; i++) {
   var item = this.items[i].GetItemByName(name);
   if(item != null) return item;
  }
  return null;
 },
 GetChecked: function() {
  var indexPath = this.GetIndexPath();
  return this.menu.IsCheckedItem(indexPath);
 },
 SetChecked: function(value) {
  var indexPath = this.GetIndexPath();
  this.menu.SetItemChecked(indexPath, value);
 },
 GetEnabled: function() {
  return this.enabled && this.clientEnabled;
 },
 SetEnabled: function(value) {
  if(this.clientEnabled != value) {
   this.clientEnabled = value;
   this.menu.SetItemEnabled(this.GetIndexPath(), value, false);
  }
 },
 GetImage: function() {
  return this.menu.GetItemImage(this.GetIndexPath());
 },
 GetImageUrl: function() {
  return this.menu.GetItemImageUrl(this.GetIndexPath());
 },
 SetImageUrl: function(value) {
  var indexPath = this.GetIndexPath();
  this.menu.SetItemImageUrl(indexPath, value);
 },
 GetNavigateUrl: function() {
  var indexPath = this.GetIndexPath();
  return this.menu.GetItemNavigateUrl(indexPath);
 },
 SetNavigateUrl: function(value) {
  var indexPath = this.GetIndexPath();
  this.menu.SetItemNavigateUrl(indexPath, value);
 },
 GetText: function() {
  var indexPath = this.GetIndexPath();
  return this.menu.GetItemText(indexPath);
 },
 SetText: function(value) {
  var indexPath = this.GetIndexPath();
  this.menu.SetItemText(indexPath, value);
 },
 GetVisible: function() {
  return this.visible && this.clientVisible;
 },
 SetVisible: function(value) {
  if(this.clientVisible != value) {
   this.clientVisible = value;
   this.menu.SetItemVisible(this.GetIndexPath(), value, false);
  }
 },
 InitializeEnabledAndVisible: function(recursive) {
  this.menu.SetItemEnabled(this.GetIndexPath(), this.clientEnabled, true);
  this.menu.SetItemVisible(this.GetIndexPath(), this.clientVisible, true);
  if(recursive) {
   for(var i = 0; i < this.items.length; i++)
    this.items[i].InitializeEnabledAndVisible(recursive);
  }
 }
});
var ASPxClientMenu = ASPx.CreateClass(ASPxClientMenuBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.isVertical = false;
  this.orientationChanged = false;
  this.firstSubMenuDirection = "Auto";
 },
 IsVertical: function(indexPath) {
  return this.isVertical || !this.IsRootItem(indexPath) || this.IsAdaptiveMenuItem(indexPath);
 },
 IsCorrectionDisableMethodRequired: function(indexPath) {
  return (indexPath.indexOf("i") == -1) && (this.firstSubMenuDirection == "RightOrBottom" || this.firstSubMenuDirection == "LeftOrTop");
 },
 SetAdaptiveMode: function(data) {
  this.enableAdaptivity = true;
  if(ASPx.Ident.IsArray(data))
   this.adaptiveItemsOrder = data;
  else {
   for(var i = data - 1; i >= 0; i--)
    this.adaptiveItemsOrder.push(i.toString());
  }
 }, 
 OnBrowserWindowResize: function (evt) {
  this.AdjustControl();
 },
 AdjustControlCore: function() {
  this.CorrectVerticalAlignment(ASPx.ClearHeight, this.GetPopOutElements, "PopOut", true);
  this.CorrectVerticalAlignment(ASPx.ClearVerticalMargins, this.GetPopOutImages, "PopOutImg", true);
  if(this.orientationChanged){
   MenuRenderHelper.ChangeOrientaion(this.isVertical, this, this.GetMainElement());
   this.orientationChanged = false;
  }
  else
   MenuRenderHelper.CalculateMenuControl(this, this.GetMainElement());
  this.CorrectVerticalAlignment(ASPx.AdjustHeight, this.GetPopOutElements, "PopOut", true);
  this.CorrectVerticalAlignment(ASPx.AdjustVerticalMargins, this.GetPopOutImages, "PopOutImg", true);
 },
 GetCorrectionDisabledResult: function(x, toLeftX) {
  switch (this.firstSubMenuDirection) {
   case "RightOrBottom": {
    this.popupToLeft = false;
    return x;
   }
   case "LeftOrTop": {
    this.popupToLeft = true;
    return toLeftX;
   }
  }
 },
 IsHorizontalSubmenuNeedInversion: function(subMenuBottom, docClientHeight, menuItemTop, subMenuHeight, itemHeight) {
  if(this.firstSubMenuDirection == "Auto")
   return ASPxClientMenuBase.prototype.IsHorizontalSubmenuNeedInversion.call(this, subMenuBottom, docClientHeight, menuItemTop, subMenuHeight, itemHeight);
  return this.firstSubMenuDirection == "LeftOrTop"
 },
 GetOrientation: function() {
  return this.isVertical ? "Vertical" : "Horizontal";
 },
 SetOrientation: function(orientation) {
  var isVertical = orientation === "Vertical";
  if(this.isVertical !== isVertical){
   this.isVertical = isVertical;
   this.orientationChanged = true;
   this.ResetControlAdjustment();
   this.AdjustControl();
  }
 }
});
var ASPxClientMenuExt = ASPx.CreateClass(ASPxClientMenu, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.INDEX_ROOTMENU_ITEM = 0;
  this.INDEX_MAINMENU_ELEMENT = 1;
  this.INDEX_SUBMENU_ELEMENT = 2;
 },
 InitializeMenuSamples: function() {
  var menu = this.InitializeSampleMenuElement();
  this.InitializeRootItemSample(menu);
  this.InitializeItemSamples(this.GetMainMenuElementSample(menu));
  this.InitializeMenuSamplesInternal(menu);
  this.InitializeSubMenuSample(this.GetSubMenuElementSample(menu));
 },
 GetMainMenuElementSample: function(menu) {
  return menu.childNodes[this.INDEX_MAINMENU_ELEMENT];
 },
 GetSubMenuElementSample: function(menu) {
  return menu.childNodes[this.INDEX_SUBMENU_ELEMENT];
 },
 InitializeRootItemSample: function(sample) {
  this.rootMenuSample = this.GetRootMenuItemSample(sample).cloneNode(true);
  ASPx.RemoveElement(ASPx.GetNodeByTagName(this.rootMenuSample, "LI", 0));
  sample.removeChild(this.GetRootMenuItemSample(sample));
 },
 GetRootMenuItemSample: function(menu) {
  return menu.childNodes[this.INDEX_ROOTMENU_ITEM];
 },
 NeedCreateItemsOnClientSide: function() {
  return true;
 }
});
ASPxClientMenu.Cast = ASPxClientControl.Cast;
var ASPxClientMenuItemEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function(item) {
  this.constructor.prototype.constructor.call(this);
  this.item = item;
 }
});
var ASPxClientMenuItemMouseEventArgs = ASPx.CreateClass(ASPxClientMenuItemEventArgs, {
 constructor: function(item, htmlElement) {
  this.constructor.prototype.constructor.call(this, item);
  this.htmlElement = htmlElement;
 }
});
var ASPxClientMenuItemClickEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
 constructor: function(processOnServer, item, htmlElement, htmlEvent) {
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.item = item;
  this.htmlElement = htmlElement;
  this.htmlEvent = htmlEvent;
 }
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseDownEventName, function(evt) {
 return aspxGetMenuCollection().OnMouseDown(evt);
});
function aspxAMIMOver(source, args) {
 var menu = aspxGetMenuCollection().GetMenu(args.item.name);
 if(menu != null) menu.OnAfterItemOver(args.item, args.element);
}
function aspxBMIMOver(source, args) {
 var menu = aspxGetMenuCollection().GetMenu(args.item.name);
 if(menu != null) menu.OnBeforeItemOver(args.item, args.element);
}
function aspxAMIMOut(source, args) {
 var menu = aspxGetMenuCollection().GetMenu(args.item.name);
 if(menu != null) menu.OnAfterItemOut(args.item, args.element, args.toElement);
}
function aspxMSBOver(source, args) {
 var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id)
 if(menu != null) menu.ClearDisappearTimer();
}
ASPx.AddAfterSetFocusedState(aspxAMIMOver);
ASPx.AddAfterClearFocusedState(aspxAMIMOut);
ASPx.AddAfterSetHoverState(aspxAMIMOver);
ASPx.AddAfterClearHoverState(aspxAMIMOut);
ASPx.AddBeforeSetFocusedState(aspxBMIMOver);
ASPx.AddBeforeSetHoverState(aspxBMIMOver);
ASPx.AddAfterSetHoverState(aspxMSBOver);
ASPx.AddAfterSetPressedState(aspxMSBOver);
ASPx.AddBeforeDisabled(function(source, args) {
 var menu = aspxGetMenuCollection().GetMenu(args.item.name);
 if(menu != null)
  menu.OnBeforeItemDisabled(args.item, args.element);
});
ASPx.AddFocusedItemKeyDown(function(source, args) {
 var menu = aspxGetMenuCollection().GetMenu(args.item.name);
 if(menu != null)
  menu.OnFocusedItemKeyDown(args.htmlEvent, args.item, args.element);
});
ASPx.AddAfterClearHoverState(function(source, args) {
 var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id)
 if(menu != null) menu.SetDisappearTimer();
});
ASPx.AddAfterSetPressedState(function(source, args) {
 var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id);
 if(menu) menu.StartScrolling(args.element.id, 1, 4);
});
ASPx.AddAfterClearPressedState(function(source, args) {
 var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id);
 if(menu) menu.StopScrolling(args.element.id);
});
if(!ASPx.Browser.TouchUI) {
 ASPx.AddAfterSetHoverState(function(source, args) {
  var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id);
  if(menu) menu.StartScrolling(args.element.id, 15, 1);
 });
 ASPx.AddAfterClearHoverState(function(source, args) {
  var menu = MenuScrollHelper.GetMenuByScrollButtonId(args.element.id);
  if(menu) menu.StopScrolling(args.element.id);
 });
}
ASPx.MIClick = function(evt, name, indexPath) {
 if(ASPx.TouchUIHelper.isMouseEventFromScrolling) return;
 var menu = aspxGetMenuCollection().Get(name);
 if(menu != null) menu.OnItemClick(indexPath, evt);
 if(!ASPx.Browser.NetscapeFamily)
  evt.cancelBubble = true;
}
ASPx.MIDDClick = function(evt, name, indexPath) {
 var menu = aspxGetMenuCollection().Get(name);
 if(menu != null) menu.OnItemDropDownClick(indexPath, evt);
 if(!ASPx.Browser.NetscapeFamily)
  evt.cancelBubble = true;
}
ASPx.GetMenuCollection = aspxGetMenuCollection;
window.ASPxClientMenuBase = ASPxClientMenuBase;
window.ASPxClientMenuCollection = ASPxClientMenuCollection;
window.ASPxClientMenuItem = ASPxClientMenuItem;
window.ASPxClientMenu = ASPxClientMenu;
window.ASPxClientMenuExt = ASPxClientMenuExt;
window.ASPxClientMenuItemEventArgs = ASPxClientMenuItemEventArgs;
window.ASPxClientMenuItemMouseEventArgs = ASPxClientMenuItemMouseEventArgs;
window.ASPxClientMenuItemClickEventArgs = ASPxClientMenuItemClickEventArgs;
})();
(function() {
var ASPxClientEditBase = ASPx.CreateClass(ASPxClientControl, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.EnabledChanged = new ASPxClientEvent();
  this.captionPosition = ASPx.Position.Left;
  this.showCaptionColon = true;
 },
 InlineInitialize: function(){
  ASPxClientControl.prototype.InlineInitialize.call(this);
  this.InitializeEnabled(); 
 },
 InitializeEnabled: function() {
  this.SetEnabledInternal(this.clientEnabled, true);
 },
 GetValue: function() {
  var element = this.GetMainElement();
  if(ASPx.IsExistsElement(element))
   return element.innerHTML;
  return "";
 },
 GetValueString: function(){
  var value = this.GetValue();
  return (value == null) ? null : value.toString();
 },
 SetValue: function(value) {
  if(value == null)
   value = "";
  var element = this.GetMainElement();
  if(ASPx.IsExistsElement(element))
   element.innerHTML = value;
 },
 GetEnabled: function(){
  return this.enabled && this.clientEnabled;
 },
 SetEnabled: function(enabled){
  if(this.clientEnabled != enabled) {
   var errorFrameRequiresUpdate = this.GetIsValid && !this.GetIsValid();
   if(errorFrameRequiresUpdate && !enabled)
    this.UpdateErrorFrameAndFocus(false , null , true );
   this.clientEnabled = enabled;
   this.SetEnabledInternal(enabled, false);
   if(errorFrameRequiresUpdate && enabled)
    this.UpdateErrorFrameAndFocus(false );
   this.RaiseEnabledChangedEvent();
  }
 },
 SetEnabledInternal: function(enabled, initialization){
  if(!this.enabled) return;
  if(!initialization || !enabled)
   this.ChangeEnabledStateItems(enabled);
  this.ChangeEnabledAttributes(enabled);
  if(ASPx.Browser.Chrome) {   
   var mainElement = this.GetMainElement();
   if(mainElement)
    mainElement.className = mainElement.className;
  } 
 },
 ChangeEnabledAttributes: function(enabled){
 },
 ChangeEnabledStateItems: function(enabled){
 },
 RaiseEnabledChangedEvent: function(){
  if(!this.EnabledChanged.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.EnabledChanged.FireEvent(this, args);
  }
 },
 GetDecodeValue: function (value) { 
  if(typeof (value) == "string" && value.length > 1)
   value = this.SimpleDecodeHtml(value);
  return value;
 },
 SimpleDecodeHtml: function (html) {
  return ASPx.Str.ApplyReplacement(html, [
   [/&lt;/g, '<'],
   [/&amp;/g, '&'],
   [/&quot;/g, '"'],
   [/&#39;/g, '\''],
   [/&#32;/g, ' ']
  ]);
 },
 GetCachedElementById: function(idSuffix) {
  return ASPx.CacheHelper.GetCachedElementById(this, this.name + idSuffix);
 },
 GetCaptionCell: function() {
  return this.GetCachedElementById(EditElementSuffix.CaptionCell);
 },
 GetExternalTable: function() {
  return this.GetCachedElementById(EditElementSuffix.ExternalTable);
 },
 getCaptionRelatedCellCount: function() {
  if(!this.captionRelatedCellCount)
   this.captionRelatedCellCount = ASPx.GetNodesByClassName(this.GetExternalTable(), CaptionRelatedCellClassName).length;
  return this.captionRelatedCellCount;
 },
 addCssClassToCaptionRelatedCells: function() {
  if(this.captionPosition == ASPx.Position.Left || this.captionPosition == ASPx.Position.Right) {
   var captionRelatedCellsIndex = this.captionPosition == ASPx.Position.Left ? 0 : this.GetCaptionCell().cellIndex;
   for(var i = 0; i < this.GetExternalTable().rows.length; i++)
    ASPx.AddClassNameToElement(this.GetExternalTable().rows[i].cells[captionRelatedCellsIndex], CaptionRelatedCellClassName);
  }
  if(this.captionPosition == ASPx.Position.Top || this.captionPosition == ASPx.Position.Bottom)
   for(var i = 0; i < this.GetCaptionCell().parentNode.cells.length; i++)
    ASPx.AddClassNameToElement(this.GetCaptionCell().parentNode.cells[i], CaptionRelatedCellClassName);
 },
 GetCaption: function() {
  if(ASPx.IsExists(this.GetCaptionCell()))
   return this.getCaptionInternal();
  return "";
 },
 SetCaption: function(caption) {
  if(!ASPx.IsExists(this.GetCaptionCell()))
   return;
  if(this.getCaptionRelatedCellCount() == 0)
   this.addCssClassToCaptionRelatedCells();
  if(caption !== "")
   ASPx.RemoveClassNameFromElement(this.GetExternalTable(), ASPxEditExternalTableClassNames.TableWithEmptyCaptionClassName);
  else
   ASPx.AddClassNameToElement(this.GetExternalTable(), ASPxEditExternalTableClassNames.TableWithEmptyCaptionClassName);
  this.setCaptionInternal(caption);
 },
 getCaptionTextNode: function() {
  var captionElement = ASPx.GetNodesByPartialClassName(this.GetCaptionCell(), CaptionElementPartialClassName)[0];
  return ASPx.GetTextNode(captionElement);
 },
 getCaptionInternal: function() {
  var captionText = this.getCaptionTextNode().nodeValue;
  if(captionText !== "" && captionText[captionText.length - 1] == ":")
   captionText = captionText.substring(0, captionText.length - 1);
  return captionText;
 },
 setCaptionInternal: function(caption) {
  caption = ASPx.Str.Trim(caption);
  var captionTextNode = this.getCaptionTextNode();
  if(this.showCaptionColon && caption[caption.length - 1] != ":" && caption !== "")
   caption += ":";
  captionTextNode.nodeValue = caption;
 }
});
var ValidationPattern = ASPx.CreateClass(null, {
 constructor: function(errorText) {
  this.errorText = errorText;
 }
});
var RequiredFieldValidationPattern = ASPx.CreateClass(ValidationPattern, {
 constructor: function(errorText) {
  this.constructor.prototype.constructor.call(this, errorText);
 },
 EvaluateIsValid: function(value) {
  return value != null && (value.constructor == Array || ASPx.Str.Trim(value.toString()) != "");
 }
});
var RegularExpressionValidationPattern = ASPx.CreateClass(ValidationPattern, {
 constructor: function(errorText, pattern) {
  this.constructor.prototype.constructor.call(this, errorText);
  this.pattern = pattern;
 },
 EvaluateIsValid: function(value) {
  if(value == null) 
   return true;
  var strValue = value.toString();
  if(ASPx.Str.Trim(strValue).length == 0)
   return true;
  var regEx = new RegExp(this.pattern);
  var matches = regEx.exec(strValue);
  return matches != null && strValue == matches[0];
 }
});
function _aspxIsEditorFocusable(inputElement) {
 return ASPx.IsFocusableCore(inputElement, function(container) {
  return container.getAttribute("errorFrame") == "errorFrame";
 });
}
var invalidEditorToBeFocused = null;
var ValidationType = {
 PersonalOnValueChanged: "ValueChanged",
 PersonalViaScript: "CalledViaScript",
 MassValidation: "MassValidation"
};
var ErrorFrameDisplay = {
 None: "None",
 Static: "Static",
 Dynamic: "Dynamic"
};
var EditElementSuffix = {
 ExternalTable: "_ET",
 ControlCell: "_CC",
 ErrorCell: "_EC",
 ErrorTextCell: "_ETC",
 ErrorImage: "_EI",
 CaptionCell: "_CapC"
};
var ASPxEditExternalTableClassNames = {
 ValidStaticTableClassName: "dxeValidStEditorTable",
 ValidDynamicTableClassName: "dxeValidDynEditorTable",
 TableWithSeparateBordersClassName: "tableWithSeparateBorders",
 TableWithEmptyCaptionClassName: "tableWithEmptyCaption"
};
var CaptionRelatedCellClassName = "dxeCaptionRelatedCell";
var CaptionElementPartialClassName = "dxeCaption";
var ASPxClientEdit = ASPx.CreateClass(ASPxClientEditBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.isASPxClientEdit = true;
  this.inputElement = null;
  this.convertEmptyStringToNull = true;
  this.readOnly = false;
  this.focused = false;
  this.focusEventsLocked = false;
  this.receiveGlobalMouseWheel = true;
  this.styleDecoration = null;
  this.heightCorrectionRequired = false;
  this.customValidationEnabled = false;
  this.display = ErrorFrameDisplay.Static;
  this.initialErrorText = "";
  this.causesValidation = false;
  this.validateOnLeave = true;
  this.validationGroup = "";
  this.sendPostBackWithValidation = null;
  this.validationPatterns = [];
  this.setFocusOnError = false;
  this.errorDisplayMode = "it";
  this.errorText = "";
  this.isValid = true;
  this.errorImageIsAssigned = false;
  this.notifyValidationSummariesToAcceptNewError = false;
  this.enterProcessed = false;
  this.keyDownHandlers = {};
  this.keyPressHandlers = {};
  this.keyUpHandlers = {};
  this.specialKeyboardHandlingUsed = false;
  this.onKeyDownHandler = null;
  this.onKeyPressHandler = null;
  this.onKeyUpHandler = null;
  this.onGotFocusHandler = null;
  this.onLostFocusHandler = null;
  this.GotFocus = new ASPxClientEvent();
  this.LostFocus = new ASPxClientEvent();
  this.Validation = new ASPxClientEvent();
  this.ValueChanged = new ASPxClientEvent();
  this.KeyDown = new ASPxClientEvent();
  this.KeyPress = new ASPxClientEvent();
  this.KeyUp = new ASPxClientEvent();
  this.eventHandlersInitialized = false;
 },
 Initialize: function() {
  this.initialErrorText = this.errorText;
  ASPxClientEditBase.prototype.Initialize.call(this);
  this.InitializeKeyHandlers();
  this.UpdateClientValidationState();
  this.UpdateValidationSummaries(null , true );
 },
 InlineInitialize: function() {
  ASPxClientEditBase.prototype.InlineInitialize.call(this);
  if(!this.eventHandlersInitialized)
   this.InitializeEvents();
  if(this.styleDecoration)
   this.styleDecoration.Update();
  var externalTable = this.GetExternalTable();
  if(externalTable && ASPx.IsPercentageSize(externalTable.style.width)) {
   this.width = "100%";
   this.GetMainElement().style.width = "100%";
  }
 }, 
 InitializeEvents: function() {
 },
 InitSpecialKeyboardHandling: function(){
  var name = this.name;
  this.onKeyDownHandler = function(evt) { ASPx.KBSIKeyDown(name,evt); };
  this.onKeyPressHandler = function(evt) { ASPx.KBSIKeyPress(name, evt); };
  this.onKeyUpHandler = function(evt) { ASPx.KBSIKeyUp(name, evt); };
  this.onGotFocusHandler = function(evt) { ASPx.ESGotFocus(name); };
  this.onLostFocusHandler = function(evt) { ASPx.ESLostFocus(name); };
  this.specialKeyboardHandlingUsed = true;
  this.InitializeDelayedSpecialFocus();
 },
 InitializeKeyHandlers: function() {
 },
 AddKeyDownHandler: function(key, handler) {
  this.keyDownHandlers[key] = handler;
 },
 AddKeyPressHandler: function(key, handler) {
  this.keyPressHandlers[key] = handler;
 },
 ChangeSpecialInputEnabledAttributes: function(element, method, doNotChangeAutoComplete){
  if(!doNotChangeAutoComplete) 
   element.autocomplete = "off";
  if(this.onKeyDownHandler != null)
   method(element, "keydown", this.onKeyDownHandler);
  if(this.onKeyPressHandler != null)
   method(element, "keypress", this.onKeyPressHandler);
  if(this.onKeyUpHandler != null)
   method(element, "keyup", this.onKeyUpHandler);
  if(this.onGotFocusHandler != null)
   method(element, "focus", this.onGotFocusHandler);
  if(this.onLostFocusHandler != null)
   method(element, "blur", this.onLostFocusHandler);
 },
 UpdateClientValidationState: function() {
  if(!this.customValidationEnabled)
   return;
  var mainElement = this.GetMainElement();
  if(mainElement) {
   var validationState = !this.GetIsValid() ? ("-" + this.GetErrorText()) : "";
   this.UpdateStateObjectWithObject({ validationState: validationState });
  }
 },
 UpdateValidationSummaries: function(validationType, initializing) {
  if(typeof(ASPxClientValidationSummary) != "undefined") {
   var summaryCollection = ASPx.GetClientValidationSummaryCollection();
   summaryCollection.OnEditorIsValidStateChanged(this, validationType, initializing && this.notifyValidationSummariesToAcceptNewError);
  }
 },
 FindInputElement: function(){
  return null;
 },
 GetInputElement: function(){
  if(!ASPx.IsExistsElement(this.inputElement))
   this.inputElement = this.FindInputElement();
  return this.inputElement;
 },
 GetFocusableInputElement: function() {
  return this.GetInputElement();
 },
 GetErrorImage: function() {
  return this.GetCachedElementById(EditElementSuffix.ErrorImage);
 },
 GetControlCell: function() {
  return this.GetCachedElementById(EditElementSuffix.ControlCell);
 },
 GetErrorCell: function() {
  return this.GetCachedElementById(EditElementSuffix.ErrorCell);
 },
 GetErrorTextCell: function() {
  return this.GetCachedElementById(this.errorImageIsAssigned ? EditElementSuffix.ErrorTextCell : EditElementSuffix.ErrorCell);
 },
 SetVisible: function (isVisible) {
  if(this.clientVisible == isVisible)
   return;
  var externalTable = this.GetExternalTable();
  if(externalTable) {
   ASPx.SetElementDisplay(externalTable, isVisible);
   if(this.customValidationEnabled) {
    var isValid = !isVisible ? true : void (0);
    this.UpdateErrorFrameAndFocus(false , true , isValid );
   }
  }
  ASPxClientControl.prototype.SetVisible.call(this, isVisible);
 },
 GetStateHiddenFieldName: function() {
  return this.uniqueID + "$State";
 },
 GetValueInputToValidate: function() {
  return this.GetInputElement();
 },
 IsVisible: function() {
  if(!this.clientVisible)
   return false;
  var element = this.GetMainElement();
  if(!element) 
   return false;
  while(element && element.tagName != "BODY") {
   if(element.getAttribute("errorFrame") != "errorFrame" && (!ASPx.GetElementVisibility(element) || !ASPx.GetElementDisplay(element)))
    return false;
   element = element.parentNode;
  }
  return true;
 },
 AdjustControlCore: function() {
  this.CollapseEditor();
  this.UnstretchInputElement();
  if(this.heightCorrectionRequired)
   this.CorrectEditorHeight();
 },
 CorrectEditorHeight: function() {
 },
 UnstretchInputElement: function() {
 },
 UseDelayedSpecialFocus: function() {
  return false;
 },
 GetDelayedSpecialFocusTriggers: function() {
  return [ this.GetMainElement() ];
 },
 InitializeDelayedSpecialFocus: function() {
  if(!this.UseDelayedSpecialFocus())
   return;
  this.specialFocusTimer = -1;    
  var handler = function(evt) { this.OnDelayedSpecialFocusMouseDown(evt); }.aspxBind(this);
  var triggers = this.GetDelayedSpecialFocusTriggers();
  for(var i = 0; i < triggers.length; i++)
   ASPx.Evt.AttachEventToElement(triggers[i], "mousedown", handler);
 },
 OnDelayedSpecialFocusMouseDown: function(evt) {
  window.setTimeout(function() { this.SetFocus(); }.aspxBind(this), 0);
 },
 IsFocusEventsLocked: function() {
  return this.focusEventsLocked;
 },
 LockFocusEvents: function() {
  if(!this.focused) return;
  this.focusEventsLocked = true;
 },
 UnlockFocusEvents: function() {
  this.focusEventsLocked = false;
 },
 ForceRefocusEditor: function(evt, isNativeFocus) {
  if(ASPx.Browser.VirtualKeyboardSupported) {
   var focusedEditor = ASPx.VirtualKeyboardUI.getFocusedEditor();
   if(ASPx.VirtualKeyboardUI.getInputNativeFocusLocked() && (!focusedEditor || focusedEditor === this))
     return;
   ASPx.VirtualKeyboardUI.setInputNativeFocusLocked(!isNativeFocus);
  }
  this.LockFocusEvents();
  this.BlurInputElement();
  window.setTimeout(function() { 
   if(ASPx.Browser.VirtualKeyboardSupported) {
    ASPx.VirtualKeyboardUI.setFocusEditorCore(this);
   } else {
    this.SetFocus();
   }
  }.aspxBind(this), 0);
 },
 BlurInputElement: function() {
  var inputElement = this.GetFocusableInputElement();
  if(inputElement && inputElement.blur)
   inputElement.blur();
 },
 IsEditorElement: function(element) {
  return this.GetMainElement() == element || ASPx.GetIsParent(this.GetMainElement(), element);
 },
 IsClearButtonElement: function(element) {
  return false;
 },
 IsElementBelongToInputElement: function(element) {
  return this.GetInputElement() == element;
 },
 OnFocusCore: function() {
  if(this.UseDelayedSpecialFocus())
   window.clearTimeout(this.specialFocusTimer);
  if(!this.IsFocusEventsLocked()){
   this.focused = true;
   ASPxClientEdit.SetFocusedEditor(this);
   if(this.styleDecoration)
    this.styleDecoration.Update();
   if(this.isInitialized)
    this.RaiseFocus();
  }
  else
   this.UnlockFocusEvents();
 },
 OnLostFocusCore: function() {
  if(!this.IsFocusEventsLocked()){
   this.focused = false;
   if(!this.UseDelayedSpecialFocus() || ASPxClientEdit.GetFocusedEditor() === this) 
    ASPxClientEdit.SetFocusedEditor(null);
   if(this.styleDecoration)
    this.styleDecoration.Update();
   this.RaiseLostFocus();
  }
 },
 OnFocus: function() {
  if(!this.specialKeyboardHandlingUsed)
   this.OnFocusCore();
 },
 OnLostFocus: function() {
  if(this.isInitialized && !this.specialKeyboardHandlingUsed)
   this.OnLostFocusCore();
 },
 OnSpecialFocus: function() {
  if(this.isInitialized)
   this.OnFocusCore();
 },
 OnSpecialLostFocus: function() {
  if(this.isInitialized)
   this.OnLostFocusCore();
 },
 OnMouseWheel: function(evt){
 },
 OnValidation: function(validationType) {
  if(this.customValidationEnabled && this.isInitialized && ASPx.IsExistsElement(this.GetMainElement()) &&
   (!this.IsErrorFrameDisplayed() || this.GetExternalTable())) {
   this.BeginErrorFrameUpdate();
   try {
    if(this.validateOnLeave || validationType != ValidationType.PersonalOnValueChanged) {
     this.SetIsValid(true, true );
     this.SetErrorText(this.initialErrorText, true );
     this.ValidateWithPatterns();
     this.RaiseValidation();
    }
    this.UpdateErrorFrameAndFocus(this.editorFocusingRequired(validationType));
   } finally {
    this.EndErrorFrameUpdate();
   }
   this.UpdateValidationSummaries(validationType);
  }
 },
 editorFocusingRequired: function(validationType) {
  return !this.GetIsValid() && ((validationType == ValidationType.PersonalOnValueChanged && this.validateOnLeave) ||
         (validationType == ValidationType.PersonalViaScript && this.setFocusOnError));
 },
 OnValueChanged: function() {
  var processOnServer = this.RaiseValidationInternal();
  processOnServer = this.RaiseValueChangedEvent() && processOnServer;
  if(processOnServer)
   this.SendPostBackInternal("");
 },
 ParseValue: function() {
 },
 RaisePersonalStandardValidation: function() {
  if(ASPx.IsFunction(window.ValidatorOnChange)) {
   var inputElement = this.GetValueInputToValidate();
   if(inputElement && inputElement.Validators)
    window.ValidatorOnChange({ srcElement: inputElement });
  }
 },
 RaiseValidationInternal: function() {
  if(this.isPostBackAllowed() && this.causesValidation && this.validateOnLeave)
   return ASPxClientEdit.ValidateGroup(this.validationGroup);
  else {
   this.OnValidation(ValidationType.PersonalOnValueChanged);
   return this.GetIsValid();
  }
 },
 RaiseValueChangedEvent: function(){
  return this.RaiseValueChanged();
 },
 SendPostBackInternal: function(postBackArg) {
  if(ASPx.IsFunction(this.sendPostBackWithValidation))
   this.sendPostBackWithValidation(postBackArg);
  else
   this.SendPostBack(postBackArg);
 },
 SetElementToBeFocused: function() {
  if(this.IsVisible())
   invalidEditorToBeFocused = this;
 },
 GetFocusSelectAction: function() {
  return null;
 },
 SetFocus: function() {
  var inputElement = this.GetFocusableInputElement();
  if(!inputElement) return; 
  var isIE9 = ASPx.Browser.IE && ASPx.Browser.Version >= 9;
  if((ASPx.GetActiveElement() != inputElement || isIE9) && _aspxIsEditorFocusable(inputElement))
   ASPx.SetFocus(inputElement, this.GetFocusSelectAction());
 },
 SetFocusOnError: function() {
  if(invalidEditorToBeFocused == this) {
   this.SetFocus();
   invalidEditorToBeFocused = null;
  }
 },
 BeginErrorFrameUpdate: function() {
  if(!this.errorFrameUpdateLocked)
   this.errorFrameUpdateLocked = true;
 },
 EndErrorFrameUpdate: function() {
  this.errorFrameUpdateLocked = false;
  var args = this.updateErrorFrameAndFocusLastCallArgs;
  if(args) {
   this.UpdateErrorFrameAndFocus(args[0], args[1]);
   delete this.updateErrorFrameAndFocusLastCallArgs;
  }
 },
 UpdateErrorFrameAndFocus: function(setFocusOnError, ignoreVisibilityCheck, isValid) {
  if(!this.GetEnabled() || !ignoreVisibilityCheck && !this.GetVisible())
   return;
  if(this.errorFrameUpdateLocked) {
   this.updateErrorFrameAndFocusLastCallArgs = [ setFocusOnError, ignoreVisibilityCheck ];
   return;
  }
  if(this.styleDecoration)
   this.styleDecoration.Update();
  if(typeof(isValid) == "undefined")
   isValid = this.GetIsValid();
  var externalTable = this.GetExternalTable();
  var isStaticDisplay = this.display == ErrorFrameDisplay.Static;
  if(isValid && this.IsErrorFrameDisplayed()) {
   if(isStaticDisplay) {
    this.HideErrorCell(true);
    ASPx.AddClassNameToElement(externalTable, ASPxEditExternalTableClassNames.ValidStaticTableClassName);
   } else {
    this.HideErrorCell();
    this.SaveControlCellStyles();
    this.ClearControlCellStyles();
    ASPx.AddClassNameToElement(externalTable, ASPxEditExternalTableClassNames.ValidDynamicTableClassName);
   }
  } else {
   var editorLocatedWithinVisibleContainer = this.IsVisible();
   if(this.IsErrorFrameDisplayed()) {
    this.UpdateErrorCellContent();
    if(isStaticDisplay) {
     this.ShowErrorCell(true);
     ASPx.RemoveClassNameFromElement(externalTable, ASPxEditExternalTableClassNames.ValidStaticTableClassName);
    } else {
     this.EnsureControlCellStylesLoaded();
     this.RestoreControlCellStyles();
     this.ShowErrorCell();
     ASPx.RemoveClassNameFromElement(externalTable, ASPxEditExternalTableClassNames.ValidDynamicTableClassName);
    }
   }
   if(editorLocatedWithinVisibleContainer) {
    if(setFocusOnError && this.setFocusOnError && invalidEditorToBeFocused == null) {
     this.SetElementToBeFocused();
     this.SetFocusOnError();
    }
   }
  }
 },
 ShowErrorCell: function (useVisibilityAttribute) {
  var errorCell = this.GetErrorCell();
  if(errorCell) {
   if(useVisibilityAttribute)
    ASPx.SetElementVisibility(errorCell, true);
   else
    ASPx.SetElementDisplay(errorCell, true);
  }
 },
 HideErrorCell: function(useVisibilityAttribute) {
  var errorCell = this.GetErrorCell();
  if(errorCell) {
   if(useVisibilityAttribute)
    ASPx.SetElementVisibility(errorCell, false);
   else
    ASPx.SetElementDisplay(errorCell, false);
  }
 },
 SaveControlCellStyles: function() {
  this.EnsureControlCellStylesLoaded();
 },
 EnsureControlCellStylesLoaded: function() {
  if(typeof(this.controlCellStyles) == "undefined") {
   var controlCell = this.GetControlCell();
   this.controlCellStyles = {
    cssClass: controlCell.className,
    style: this.ExtractElementStyleStringIgnoringVisibilityProps(controlCell)
   };
  }
 },
 ClearControlCellStyles: function() {
  this.ClearElementStyle(this.GetControlCell());
 },
 RestoreControlCellStyles: function() {
  var controlCell = this.GetControlCell();
  var externalTable = this.GetExternalTable();
  if(ASPx.Browser.WebKitFamily)
   this.MakeBorderSeparateForTable(externalTable);
  controlCell.className = this.controlCellStyles.cssClass;
  controlCell.style.cssText = this.controlCellStyles.style;
  if(ASPx.Browser.WebKitFamily)
   this.UndoBorderSeparateForTable(externalTable);
 },
 MakeBorderSeparateForTable: function(table) {
  ASPx.AddClassNameToElement(table, ASPxEditExternalTableClassNames.TableWithSeparateBordersClassName);
 },
 UndoBorderSeparateForTable: function(table) {
  setTimeout(function () {
   ASPx.RemoveClassNameFromElement(table, ASPxEditExternalTableClassNames.TableWithSeparateBordersClassName);
  }, 0);
 },
 ExtractElementStyleStringIgnoringVisibilityProps: function(element) {
  var savedVisibility = element.style.visibility;
  var savedDisplay = element.style.display;
  element.style.visibility = "";
  element.style.display = "";
  var styleStr = element.style.cssText;
  element.style.visibility = savedVisibility;
  element.style.display = savedDisplay;
  return styleStr;
 },
 ClearElementStyle: function(element) {
  if(!element)
   return;
  element.className = "";
  var excludedAttrNames = [
   "width", "display", "visibility",
   "position", "left", "top", "z-index",
   "margin", "margin-top", "margin-right", "margin-bottom", "margin-left",
   "float", "clear"
  ];
  var savedAttrValues = { };
  for(var i = 0; i < excludedAttrNames.length; i++) {
   var attrName = excludedAttrNames[i];
   var attrValue = element.style[attrName];
   if(attrValue)
    savedAttrValues[attrName] = attrValue;
  }
  element.style.cssText = "";
  for(var styleAttrName in savedAttrValues)
   element.style[styleAttrName] = savedAttrValues[styleAttrName];
 },
 Clear: function() {
  this.SetValue(null);
  this.SetIsValid(true);
  return true;
 },
 UpdateErrorCellContent: function() {
  if(this.errorDisplayMode.indexOf("t") > -1)
   this.UpdateErrorText();
  if(this.errorDisplayMode == "i")
   this.UpdateErrorImage();
 },
 UpdateErrorImage: function() {
  var image = this.GetErrorImage();
  if(ASPx.IsExistsElement(image)) {
   image.alt = this.errorText;
   image.title = this.errorText;
  } else {
   this.UpdateErrorText();
  }
 },
 UpdateErrorText: function() {
  var errorTextCell = this.GetErrorTextCell();
  if(ASPx.IsExistsElement(errorTextCell))
   errorTextCell.innerHTML = this.HtmlEncode(this.errorText);
 },
 ValidateWithPatterns: function() {
  if(this.validationPatterns.length > 0) {
   var value = this.GetValue();
   for(var i = 0; i < this.validationPatterns.length; i++) {
    var validator = this.validationPatterns[i];
    if(!validator.EvaluateIsValid(value)) {
     this.SetIsValid(false, true );
     this.SetErrorText(validator.errorText, true );
     return;
    }
   }
  }
 },
 OnSpecialKeyDown: function(evt){
  this.RaiseKeyDown(evt);
  var handler = this.keyDownHandlers[evt.keyCode];
  if(handler) 
   return this[handler](evt);
  return false;
 },
 OnSpecialKeyPress: function(evt){
  this.RaiseKeyPress(evt);
  var handler = this.keyPressHandlers[evt.keyCode];
  if(handler) 
   return this[handler](evt);
  if(ASPx.Browser.NetscapeFamily || ASPx.Browser.Opera){
   if(evt.keyCode == ASPx.Key.Enter)
    return this.enterProcessed;
  }
  return false;
 },
 OnSpecialKeyUp: function(evt){
  this.RaiseKeyUp(evt);
  var handler = this.keyUpHandlers[evt.keyCode];
  if(handler) 
   return this[handler](evt);
  return false;
 },
 OnKeyDown: function(evt) {
  if(!this.specialKeyboardHandlingUsed)
   this.RaiseKeyDown(evt);
 },
 OnKeyPress: function(evt) {
  if(!this.specialKeyboardHandlingUsed)
   this.RaiseKeyPress(evt);
 },
 OnKeyUp: function(evt) {
  if(!this.specialKeyboardHandlingUsed)
   this.RaiseKeyUp(evt);
 },
 RaiseKeyDown: function(evt){
  if(!this.KeyDown.IsEmpty()){
   var args = new ASPxClientEditKeyEventArgs(evt);
   this.KeyDown.FireEvent(this, args);
  }
 },
 RaiseKeyPress: function(evt){
  if(!this.KeyPress.IsEmpty()){
   var args = new ASPxClientEditKeyEventArgs(evt);
   this.KeyPress.FireEvent(this, args);
  }
 },
 RaiseKeyUp: function(evt){
  if(!this.KeyUp.IsEmpty()){
   var args = new ASPxClientEditKeyEventArgs(evt);
   this.KeyUp.FireEvent(this, args);
  }
 },
 RaiseFocus: function(){
  if(!this.GotFocus.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.GotFocus.FireEvent(this, args);
  }
 },
 RaiseLostFocus: function(){
  if(!this.LostFocus.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.LostFocus.FireEvent(this, args);
  }
 },
 RaiseValidation: function() {
  if(this.customValidationEnabled && !this.Validation.IsEmpty()) {
   var currentValue = this.GetValue();
   var args = new ASPxClientEditValidationEventArgs(currentValue, this.errorText, this.GetIsValid());
   this.Validation.FireEvent(this, args);
   this.SetErrorText(args.errorText, true );
   this.SetIsValid(args.isValid, true );
   if(args.value != currentValue)
    this.SetValue(args.value);
  }
 },
 RaiseValueChanged: function(){
  var processOnServer = this.isPostBackAllowed();
  if(!this.ValueChanged.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.ValueChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;  
 },
 isPostBackAllowed: function() {
  return this.autoPostBack;
 },
 RequireStyleDecoration: function() {
  this.styleDecoration = new ASPx.EditorStyleDecoration(this);
  this.PopulateStyleDecorationPostfixes();
 }, 
 PopulateStyleDecorationPostfixes: function() {
  this.styleDecoration.AddPostfix("");
 },
 Focus: function(){
  this.SetFocus();
 },
 GetIsValid: function() {
  var hasRequiredInputElement = !this.RequireInputElementToValidate() || ASPx.IsExistsElement(this.GetInputElement());
  if(!hasRequiredInputElement || this.IsErrorFrameDisplayed() && !ASPx.IsExistsElement(this.GetExternalTable()))
   return true;
  return this.isValid;
 },
 RequireInputElementToValidate: function() {
  return true;
 },
 IsErrorFrameDisplayed: function() {
  return this.display !== ErrorFrameDisplay.None;
 },
 GetErrorText: function(){
  return this.errorText;
 },
 SetIsValid: function(isValid, validating){
  if(this.customValidationEnabled && this.isValid != isValid) {
   this.isValid = isValid;
   this.UpdateErrorFrameAndFocus(false );
   this.UpdateClientValidationState();
   if(!validating)
    this.UpdateValidationSummaries(ValidationType.PersonalViaScript);
  }
 },
 SetErrorText: function(errorText, validating){
  if(this.customValidationEnabled && this.errorText != errorText) {
   this.errorText = errorText;
   this.UpdateErrorFrameAndFocus(false );
   this.UpdateClientValidationState();
   if(!validating)
    this.UpdateValidationSummaries(ValidationType.PersonalViaScript);
  }
 },
 Validate: function(){
  this.ParseValue();
  this.OnValidation(ValidationType.PersonalViaScript);
 }
});
var focusedEditorName = "";
ASPxClientEdit.GetFocusedEditor = function() {
 var focusedEditor = ASPx.GetControlCollection().Get(focusedEditorName);
 if(focusedEditor && !focusedEditor.focused){
  ASPxClientEdit.SetFocusedEditor(null);
  focusedEditor = null;
 }
 return focusedEditor;
}
ASPxClientEdit.SetFocusedEditor = function(editor) {
 focusedEditorName = editor ? editor.name : "";
}
ASPxClientEdit.ClearEditorsInContainer = function(container, validationGroup, clearInvisibleEditors) {
 invalidEditorToBeFocused = null;
 ASPx.ProcessEditorsInContainer(container, ASPx.ClearProcessingProc, ASPx.ClearChoiceCondition, validationGroup, clearInvisibleEditors, true );
 ASPxClientEdit.ClearExternalControlsInContainer(container, validationGroup, clearInvisibleEditors);
}
ASPxClientEdit.ClearEditorsInContainerById = function(containerId, validationGroup, clearInvisibleEditors) {
 var container = document.getElementById(containerId);
 this.ClearEditorsInContainer(container, validationGroup, clearInvisibleEditors);
}
ASPxClientEdit.ClearGroup = function(validationGroup, clearInvisibleEditors) {
 return this.ClearEditorsInContainer(null, validationGroup, clearInvisibleEditors);
}
ASPxClientEdit.ValidateEditorsInContainer = function(container, validationGroup, validateInvisibleEditors) {
 var summaryCollection;
 if(typeof(ASPxClientValidationSummary) != "undefined") {
  summaryCollection = ASPx.GetClientValidationSummaryCollection();
  summaryCollection.AllowNewErrorsAccepting(validationGroup);
 }
 var validationResult = ASPx.ProcessEditorsInContainer(container, ASPx.ValidateProcessingProc, _aspxValidateChoiceCondition, validationGroup, validateInvisibleEditors,
  false );
 validationResult.isValid = ASPxClientEdit.ValidateExternalControlsInContainer(container, validationGroup, validateInvisibleEditors) && validationResult.isValid;
 if(typeof(validateInvisibleEditors) == "undefined")
  validateInvisibleEditors = false;
 if(typeof(validationGroup) == "undefined")
  validationGroup = null;    
 ASPx.GetControlCollection().RaiseValidationCompleted(container, validationGroup,
 validateInvisibleEditors, validationResult.isValid, validationResult.firstInvalid, validationResult.firstVisibleInvalid);
 if(summaryCollection)
  summaryCollection.ForbidNewErrorsAccepting(validationGroup);
 return validationResult.isValid;
}
ASPxClientEdit.ValidateEditorsInContainerById = function(containerId, validationGroup, validateInvisibleEditors) {
 var container = document.getElementById(containerId);
 return this.ValidateEditorsInContainer(container, validationGroup, validateInvisibleEditors);
}
ASPxClientEdit.ValidateGroup = function(validationGroup, validateInvisibleEditors) {
 return this.ValidateEditorsInContainer(null, validationGroup, validateInvisibleEditors);
}
ASPxClientEdit.AreEditorsValid = function(containerOrContainerId, validationGroup, checkInvisibleEditors) {
 var container = typeof(containerOrContainerId) == "string" ? document.getElementById(containerOrContainerId) : containerOrContainerId;
 var checkResult = ASPx.ProcessEditorsInContainer(container, ASPx.EditorsValidProcessingProc, _aspxEditorsValidChoiceCondition, validationGroup,
  checkInvisibleEditors, false );
 checkResult.isValid = ASPxClientEdit.AreExternalControlsValidInContainer(containerOrContainerId, validationGroup, checkInvisibleEditors) && checkResult.isValid;
 return checkResult.isValid;
}
ASPxClientEdit.AreExternalControlsValidInContainer = function(containerId, validationGroup, validateInvisibleEditors) {
 if(typeof(ASPxClientHtmlEditor) != "undefined")
  return ASPxClientHtmlEditor.AreEditorsValidInContainer(containerId, validationGroup, validateInvisibleEditors);
 return true;
}
ASPxClientEdit.ClearExternalControlsInContainer = function(containerId, validationGroup, validateInvisibleEditors) {
 if(typeof(ASPxClientHtmlEditor) != "undefined")
  return ASPxClientHtmlEditor.ClearEditorsInContainer(containerId, validationGroup, validateInvisibleEditors);
 return true;
}
ASPxClientEdit.ValidateExternalControlsInContainer = function(containerId, validationGroup, validateInvisibleEditors) {
 if(typeof(ASPxClientHtmlEditor) != "undefined")
  return ASPxClientHtmlEditor.ValidateEditorsInContainer(containerId, validationGroup, validateInvisibleEditors);
 return true;
}
var ASPxClientEditKeyEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function(htmlEvent) {
  this.constructor.prototype.constructor.call(this);
  this.htmlEvent = htmlEvent;
 }
});
var ASPxClientEditValidationEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function(value, errorText, isValid) {
  this.constructor.prototype.constructor.call(this);
  this.errorText = errorText;
  this.isValid = isValid;
  this.value = value;
 }
});
ASPx.ProcessEditorsInContainer = function(container, processingProc, choiceCondition, validationGroup, processInvisibleEditors, processDisabledEditors) {
 var allProcessedSuccessfull = true;
 var firstInvalid = null;
 var firstVisibleInvalid = null;
 var invalidEditorToBeFocused = null;
 ASPx.GetControlCollection().ForEachControl(function(control) {
  var needToProcessRatingControl = window.ASPxClientRatingControl && (control instanceof ASPxClientRatingControl) && processingProc === ASPx.ClearProcessingProc;
  if((ASPx.Ident.IsASPxClientEdit(control) || needToProcessRatingControl) && (processDisabledEditors || control.GetEnabled())) {
   var mainElement = control.GetMainElement();
   if(mainElement &&
    (container == null || ASPx.GetIsParent(container, mainElement)) &&
    (processInvisibleEditors || control.IsVisible()) &&
    choiceCondition(control, validationGroup)) {
    var isSuccess = processingProc(control);
    if(!isSuccess) {
     allProcessedSuccessfull = false;
     if(firstInvalid == null)
      firstInvalid = control;
     var isVisible = control.IsVisible();
     if(isVisible && firstVisibleInvalid == null)
      firstVisibleInvalid = control;
     if(control.setFocusOnError && invalidEditorToBeFocused == null && isVisible)
      invalidEditorToBeFocused = control;
    }
   }
  }
 }, this);
 if(invalidEditorToBeFocused != null)
  invalidEditorToBeFocused.SetFocus();
 return new ASPxValidationResult(allProcessedSuccessfull, firstInvalid, firstVisibleInvalid);
}
var ASPxValidationResult = ASPx.CreateClass(null, {
 constructor: function(isValid, firstInvalid, firstVisibleInvalid) {
  this.isValid = isValid;
  this.firstInvalid = firstInvalid;
  this.firstVisibleInvalid = firstVisibleInvalid;
 }
});
ASPx.ClearChoiceCondition = function(edit, validationGroup) {
 return !ASPx.IsExists(validationGroup) || (edit.validationGroup == validationGroup);
}
function _aspxValidateChoiceCondition(edit, validationGroup) {
 return ASPx.ClearChoiceCondition(edit, validationGroup) && edit.customValidationEnabled;
}
function _aspxEditorsValidChoiceCondition(edit, validationGroup) {
 return _aspxValidateChoiceCondition(edit, validationGroup);
}
function wrapLostFocusHandler(handler) {
 if(ASPx.Browser.Edge) {
  return function(name) {
   var edit = ASPx.GetControlCollection().Get(name);
   if(edit && !ASPx.IsElementVisible(edit.GetMainElement()))
    setTimeout(handler, 0, name);
   else
    handler(name);
  };
 }
 return handler;
};
ASPx.EGotFocus = function(name) {
 var edit = ASPx.GetControlCollection().Get(name); 
 if(!edit) return;
 if(!edit.isInitialized){
  var inputElement = edit.GetFocusableInputElement();
  if(inputElement && inputElement === document.activeElement)
   ASPx.Browser.Firefox ? window.setTimeout(function() { document.activeElement.blur(); }, 0) : document.activeElement.blur();
  return;
 }
  if(ASPx.Browser.VirtualKeyboardSupported) {
  ASPx.VirtualKeyboardUI.onCallingVirtualKeyboard(edit, false);
 } else {
  edit.OnFocus();
 }
}
ASPx.ELostFocusCore = function(name) {
 if(ASPx.Browser.VirtualKeyboardSupported) {
  var supressLostFocus = ASPx.VirtualKeyboardUI.isInputNativeBluring();
  if(supressLostFocus)
   return;
  ASPx.VirtualKeyboardUI.resetFocusedEditor();
 }
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null) 
  edit.OnLostFocus();
}
ASPx.ELostFocus = wrapLostFocusHandler(ASPx.ELostFocusCore);
ASPx.ESGotFocus = function(name) {
 var edit = ASPx.GetControlCollection().Get(name); 
 if(!edit) return;
   if(ASPx.Browser.VirtualKeyboardSupported) {
  ASPx.VirtualKeyboardUI.onCallingVirtualKeyboard(edit, true);
 } else {
  edit.OnSpecialFocus();
 }
}
ASPx.ESLostFocusCore = function(name) {
 if(ASPx.Browser.VirtualKeyboardSupported) {
  var supressLostFocus = ASPx.VirtualKeyboardUI.isInputNativeBluring();
  if(supressLostFocus)
   return;
  ASPx.VirtualKeyboardUI.resetFocusedEditor();
 }
 var edit = ASPx.GetControlCollection().Get(name);
 if(!edit) return;
 if(edit.UseDelayedSpecialFocus())
  edit.specialFocusTimer = window.setTimeout(function() { edit.OnSpecialLostFocus(); }, 30);
 else
  edit.OnSpecialLostFocus();
}
ASPx.ESLostFocus = wrapLostFocusHandler(ASPx.ESLostFocusCore);
ASPx.EValueChanged = function(name) {
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null)
  edit.OnValueChanged();
}
ASPx.VirtualKeyboardUI = (function() {
 var focusedEditor = null;
 var inputNativeFocusLocked = false;
 function elementBelongsToEditor(element) {
  if(!element) return false;
  var isBelongsToEditor = false;
  ASPx.GetControlCollection().ForEachControl(function(control) {
   if(ASPx.Ident.IsASPxClientEdit(control) && control.IsEditorElement(element)) {
    isBelongsToEditor = true;
    return true;
   }
  }, this);
  return isBelongsToEditor;
 }
 function elementBelongsToFocusedEditor(element) {
  return focusedEditor && focusedEditor.IsEditorElement(element);
 }
 return {
  onTouchStart: function (evt) {
   if (!ASPx.Browser.VirtualKeyboardSupported) return;
   inputNativeFocusLocked = false;
   if(ASPx.TouchUIHelper.pointerEnabled) {
    if(evt.pointerType != 'touch') 
     return;
    this.processFocusEditorControl(evt);
   } else
    ASPx.TouchUIHelper.handleFastTapIfRequired(evt,  function(){ this.processFocusEditorControl(evt); }.aspxBind(this), false);
  },
  processFocusEditorControl: function(evt) {
   var evtSource = ASPx.Evt.GetEventSource(evt);
   var timeEditHasAppliedFocus = focusedEditor && (ASPx.Ident.IsASPxClientTimeEdit && ASPx.Ident.IsASPxClientTimeEdit(focusedEditor));
   var focusedTimeEditBelongsToDateEdit = timeEditHasAppliedFocus && focusedEditor.OwnerDateEdit && focusedEditor.OwnerDateEdit.GetShowTimeSection();
   if(focusedTimeEditBelongsToDateEdit) {
    focusedEditor.OwnerDateEdit.ForceRefocusTimeSectionTimeEdit(evtSource);
    return;
   }
   var elementWithNativeFocus = ASPx.GetActiveElement();
   var someEditorInputIsFocused = elementBelongsToEditor(elementWithNativeFocus);
   var touchKeyboardIsVisible = someEditorInputIsFocused;
   var tapOutsideEditorAndInputs = !elementBelongsToEditor(evtSource) && !ASPx.Ident.IsFocusableElementRegardlessTabIndex(evtSource);
   var blurToHideTouchKeyboard = touchKeyboardIsVisible && tapOutsideEditorAndInputs;
   if(blurToHideTouchKeyboard) {
    elementWithNativeFocus.blur();
    return;
   }
   var tapOutsideFocusedEditor = focusedEditor && !elementBelongsToFocusedEditor(evtSource);
   if(tapOutsideFocusedEditor) {
    var focusedEditorWithBluredInput = !elementBelongsToFocusedEditor(elementWithNativeFocus);
    if(focusedEditorWithBluredInput) 
     this.lostAppliedFocusOfEditor();
   }
  },
  smartFocusEditor: function(edit) {
   if(!edit.focused) {
    this.setInputNativeFocusLocked(true);
    this.setFocusEditorCore(edit);
   } else {
    edit.ForceRefocusEditor();
   }
  },
  setFocusEditorCore: function(edit) {
   if(ASPx.Browser.MacOSMobilePlatform) {
    var timeoutDuration = ASPx.Browser.Chrome ? 250 : 30;
    window.setTimeout(function(){ edit.SetFocus(); }, timeoutDuration);
   } else {
    edit.SetFocus();
   }
  },
  onCallingVirtualKeyboard: function(edit, isSpecial) {
   this.setAppliedFocusOfEditor(edit, isSpecial);
   if(edit.specialKeyboardHandlingUsed == isSpecial && inputNativeFocusLocked)
    edit.BlurInputElement();
  },
  isInputNativeBluring: function() {
   return focusedEditor && inputNativeFocusLocked;
  },
  setInputNativeFocusLocked: function(locked) {
   inputNativeFocusLocked = locked;
  },
  getInputNativeFocusLocked: function() {
   return inputNativeFocusLocked;
  },
  setAppliedFocusOfEditor: function(edit, isSpecial) {
   if(focusedEditor === edit) {
    if(edit.specialKeyboardHandlingUsed == isSpecial) {
     focusedEditor.UnlockFocusEvents();
     if(focusedEditor.EnsureClearButtonVisibility)
      focusedEditor.EnsureClearButtonVisibility();
    }
    return;
   }
   if(edit.specialKeyboardHandlingUsed == isSpecial) {
    this.lostAppliedFocusOfEditor();
    focusedEditor = edit;
    ASPxClientEdit.SetFocusedEditor(edit);
   }
   if(isSpecial)
    edit.OnSpecialFocus();
   else
    edit.OnFocus();
  },
  lostAppliedFocusOfEditor: function() {
   if(!focusedEditor) return;
   var curEditorName = focusedEditor.name; 
   var skbdHandlingUsed = focusedEditor.specialKeyboardHandlingUsed;
   var focusedEditorInputElementExists = focusedEditor.GetInputElement();
   focusedEditor = null;
   if(!focusedEditorInputElementExists)
    return;
   ASPx.ELostFocusCore(curEditorName);
   if(skbdHandlingUsed)
    ASPx.ESLostFocusCore(curEditorName);
  },
  getFocusedEditor: function() {
   return focusedEditor;
  },
  resetFocusedEditor: function() {
   focusedEditor = null;
  },
  focusableInputElementIsActive: function(edit) {
   var inputElement = edit.GetFocusableInputElement();
   return !!inputElement ? ASPx.GetActiveElement() === inputElement : false;
  }
 }
})();
if(ASPx.Browser.VirtualKeyboardSupported) {
 var touchEventName = ASPx.TouchUIHelper.pointerEnabled ? ASPx.TouchUIHelper.pointerDownEventName : 'touchstart';
 ASPx.Evt.AttachEventToDocument(touchEventName, function(evt){ ASPx.VirtualKeyboardUI.onTouchStart(evt); });
}
ASPx.Evt.AttachEventToDocument("mousedown", function(evt) {
 var editor = ASPxClientEdit.GetFocusedEditor();
 if(!editor) 
  return;
 var evtSource = ASPx.Evt.GetEventSource(evt);
 if(editor.IsClearButtonElement(evtSource))
  return;
 if(editor.OwnerDateEdit && editor.OwnerDateEdit.GetShowTimeSection()) {
  editor.OwnerDateEdit.ForceRefocusTimeSectionTimeEdit(evtSource);
  return;
 }
 if(editor.IsEditorElement(evtSource) && !editor.IsElementBelongToInputElement(evtSource))
  editor.ForceRefocusEditor(evt);
});
ASPx.Evt.AttachEventToDocument(ASPx.Evt.GetMouseWheelEventName(), function(evt) {
 var editor = ASPxClientEdit.GetFocusedEditor();
 if(editor != null && ASPx.IsExistsElement(editor.GetMainElement()) && editor.focused && editor.receiveGlobalMouseWheel)
  editor.OnMouseWheel(evt);
});
ASPx.KBSIKeyDown = function(name, evt){
 var control = ASPx.GetControlCollection().Get(name);
 if(control != null){
  var isProcessed = control.OnSpecialKeyDown(evt);
  if(isProcessed)
   return ASPx.Evt.PreventEventAndBubble(evt);
 }
}
ASPx.KBSIKeyPress = function(name, evt){
 var control = ASPx.GetControlCollection().Get(name);
 if(control != null){
  var isProcessed = control.OnSpecialKeyPress(evt);
  if(isProcessed)
   return ASPx.Evt.PreventEventAndBubble(evt);
 }
}
ASPx.KBSIKeyUp = function(name, evt){
 var control = ASPx.GetControlCollection().Get(name);
 if(control != null){
  var isProcessed = control.OnSpecialKeyUp(evt);
  if(isProcessed)
   return ASPx.Evt.PreventEventAndBubble(evt);
 }
}
ASPx.ClearProcessingProc = function(edit) {
 return edit.Clear();
}
ASPx.ValidateProcessingProc = function(edit) {
 edit.OnValidation(ValidationType.MassValidation);
 return edit.GetIsValid();
}
ASPx.EditorsValidProcessingProc = function(edit) {
 return edit.GetIsValid();
}
var CheckEditElementHelper = ASPx.CreateClass(ASPx.CheckableElementHelper, {
 AttachToMainElement: function(internalCheckBox) {
  ASPx.CheckableElementHelper.prototype.AttachToMainElement.call(this, internalCheckBox);
  this.AttachToLabelElement(this.GetLabelElement(internalCheckBox.container), internalCheckBox);
 },
 AttachToLabelElement: function(labelElement, internalCheckBox) {
  var _this = this;
  if(labelElement) {
   ASPx.Evt.AttachEventToElement(labelElement, "click", 
    function (evt) { 
     _this.InvokeClick(internalCheckBox, evt);
    }
   );
   ASPx.Evt.AttachEventToElement(labelElement, "mousedown",
    function (evt) {
     internalCheckBox.Refocus();
    }
   );
  }
 },
 GetLabelElement: function(container) {
  var labelElement = ASPx.GetNodeByTagName(container, "LABEL", 0);
  if(!labelElement) {
   var labelCell = ASPx.GetNodeByClassName(container, "dxichTextCellSys", 0);
   labelElement = ASPx.GetNodeByTagName(labelCell, "SPAN", 0);
  }
  return labelElement;
 }
});
CheckEditElementHelper.Instance = new CheckEditElementHelper();
ASPx.ValidationType = ValidationType;
ASPx.ErrorFrameDisplay = ErrorFrameDisplay;
ASPx.EditElementSuffix = EditElementSuffix;
ASPx.ValidationPattern = ValidationPattern;
ASPx.RequiredFieldValidationPattern = RequiredFieldValidationPattern;
ASPx.RegularExpressionValidationPattern = RegularExpressionValidationPattern;
ASPx.CheckEditElementHelper = CheckEditElementHelper;
ASPx.IsEditorFocusable = _aspxIsEditorFocusable;
window.ASPxClientEditBase = ASPxClientEditBase;
window.ASPxClientEdit = ASPxClientEdit;
window.ASPxClientEditKeyEventArgs = ASPxClientEditKeyEventArgs;
window.ASPxClientEditValidationEventArgs = ASPxClientEditValidationEventArgs;
})();

(function() {
ASPx.TEInputSuffix = "_I";
ASPx.PasteCheckInterval = 50;
var passwordInputClonedSuffix = "_CLND";
var memoMinHeight = 34;
var BrowserHelper = {
 SAFARI_SYSTEM_CLASS_NAME: "dxeSafariSys",
 MOBILE_SAFARI_SYSTEM_CLASS_NAME: "dxeIPadSys",
 GetBrowserSpecificSystemClassName: function() {
  if(ASPx.Browser.Safari)
   return ASPx.Browser.MacOSMobilePlatform ? this.MOBILE_SAFARI_SYSTEM_CLASS_NAME : this.SAFARI_SYSTEM_CLASS_NAME;
  return "";
 }
};
var ASPxClientTextEdit = ASPx.CreateClass(ASPxClientEdit, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);      
  this.isASPxClientTextEdit = true;
  this.nullText = "";
  this.escCount = 0;
  this.raiseValueChangedOnEnter = true;
  this.autoResizeWithContainer = false;
  this.lastChangedValue = null;
  this.passwordNullTextIntervalID = -1;
  this.nullTextInputElement = null;
  this.helpText = "";
  this.helpTextObj = null;  
  this.helpTextStyle = [];
  this.externalTableStyle = [];
  this.helpTextPosition = ASPx.Position.Right;
  this.helpTextMargins = null;
  this.helpTextHAlign = ASPxClientTextEditHelpTextHAlign.Left;
  this.helpTextVAlign = ASPxClientTextEditHelpTextVAlign.Top;
  this.enableHelpTextPopupAnimation = true;
  this.helpTextDisplayMode = ASPxClientTextEditHelpTextDisplayMode.Inline;
  this.maskInfo = null;  
  this.maskValueBeforeUserInput = "";
  this.maskPasteTimerID = -1;
  this.maskPasteLock = false;    
  this.maskPasteCounter = 0;
  this.maskTextBeforePaste = "";    
  this.maskHintHtml = "";
  this.maskHintTimerID = -1;
  this.maskedEditorClickEventHandlers = [];
  this.errorCellPosition = ASPx.Position.Right;
  this.displayFormat = null;
  this.TextChanged = new ASPxClientEvent();
 },
 Initialize: function(){
  this.SaveChangedValue();
  ASPxClientEdit.prototype.Initialize.call(this);
  this.CorrectInputMaxLength();
  this.SubscribeToIeDropEvent();
  if(ASPx.Browser.WebKitFamily)  
   this.CorrectMainElementWhiteSpaceStyle();
  if(this.GetInputElement().type == "password")
   this.ToggleTextDecoration();
 },
 InlineInitialize: function(){
  ASPxClientEdit.prototype.InlineInitialize.call(this);
  if(this.maskInfo != null)
   this.InitMask();
  this.ApplyBrowserSpecificClassName();
  this.helpTextInitialize();
  if(ASPx.Browser.IE && ASPx.Browser.Version >= 10 && this.nullText != "")
   this.addIEXButtonEventHandler();
 },
 InitializeEvents: function() {
  ASPxClientEdit.prototype.InitializeEvents.call(this);
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "keydown", this.OnKeyDown.aspxBind(this));
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "keyup", this.OnKeyUp.aspxBind(this));
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "keypress", this.OnKeyPress.aspxBind(this));
 },
 AdjustControl: function() {
  ASPxClientEdit.prototype.AdjustControl.call(this);
  if(ASPx.Browser.IE && ASPx.Browser.Version > 8 && !this.isNative)
   this.correctInputElementHeight();
 },
 correctInputElementHeight: function() {
  var mainElement = this.GetMainElement();
  var inputElement = this.GetInputElement();
  if(mainElement) {
   var mainElementHeight = mainElement.style.height;
   var mainElementHeightSpecified = mainElementHeight && mainElementHeight.indexOf('px') !== -1; 
   if(mainElementHeightSpecified) {
    var inputElementHeight = this.getInputElementHeight();
    inputElement.style.height = inputElementHeight + "px";
    if(!ASPx.Ident.IsASPxClientMemo(this))
     inputElement.style.lineHeight = inputElementHeight + "px";
   }
  }
 },
 getInputElementHeight: function() {
  var mainElement = this.GetMainElement(),
   inputElement = this.GetInputElement();
  var inputElementHeight = ASPx.Browser.IE && ASPx.Browser.Version > 9 ? ASPx.PxToInt(getComputedStyle(mainElement).height)
   : mainElement.offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(mainElement);
  var inputElementContainer = inputElement.parentNode,
   inputContainerStyle = ASPx.GetCurrentStyle(inputElementContainer);
  inputElementHeight -= ASPx.GetTopBottomBordersAndPaddingsSummaryValue(inputElementContainer, inputContainerStyle) 
   + ASPx.GetTopBottomMargins(inputElementContainer, inputContainerStyle);
  var mainElementCellspacing = ASPx.GetCellSpacing(mainElement);
  if(mainElementCellspacing)
   inputElementHeight -= mainElementCellspacing * 2;
  var inputStyle = ASPx.GetCurrentStyle(inputElement);
  inputElementHeight -= ASPx.GetTopBottomBordersAndPaddingsSummaryValue(inputElement, inputStyle) 
   + ASPx.GetTopBottomMargins(inputElement, inputStyle);
  return inputElementHeight;
 },
 addIEXButtonEventHandler: function() {
  var inputElement = this.GetInputElement()
  if(ASPx.IsExists(inputElement)) {
   this.isDeleteOrBackspaceKeyClick = false;
   ASPx.Evt.AttachEventToElement(inputElement, "input", function (evt) {
    if(this.isDeleteOrBackspaceKeyClick) {
     this.isDeleteOrBackspaceKeyClick = false;
     return;
    }
    if(inputElement.value === '') {
     this.SyncRawValue();
    }
   }.aspxBind(this));
   ASPx.Evt.AttachEventToElement(inputElement, "keydown", function (evt) {
    this.isDeleteOrBackspaceKeyClick = (evt.keyCode == ASPx.Key.Delete || evt.keyCode == ASPx.Key.Backspace);
   }.aspxBind(this));
  }   
 },
 ensureOutOfRangeWarningManager: function (minValue, maxValue, defaultMinValue, defaultMaxValue, valueFormatter) {
  if (!this.outOfRangeWarningManager)
   this.outOfRangeWarningManager = new ASPxOutOfRangeWarningManager(this, minValue, maxValue, defaultMinValue, defaultMaxValue,
    this.hasRightPopupHelpText() ? ASPx.Position.Bottom : ASPx.Position.Right, valueFormatter);
 },
 helpTextInitialize: function () {
  if(this.helpText) {
   this.helpTextObj = new ASPxClientTextEditHelpText(this, this.helpTextStyle, this.helpText, this.helpTextPosition,
    this.helpTextHAlign, this.helpTextVAlign, this.helpTextMargins, this.enableHelpTextPopupAnimation, this.helpTextDisplayMode);
  }
 },
 hasRightPopupHelpText: function() {
  return this.helpText && this.helpTextDisplayMode === ASPxClientTextEditHelpTextDisplayMode.Popup
   && this.helpTextPosition === ASPx.Position.Right;
 },
 showHelpText: function () {
  if(this.helpTextObj)
   this.helpTextObj.show();
 },
 hideHelpText: function () {
  if(this.helpTextObj)
   this.helpTextObj.hide();
 },
 ApplyBrowserSpecificClassName: function() {
  var mainElement = this.GetMainElement();
  if(ASPx.IsExistsElement(mainElement)) {
   var className = BrowserHelper.GetBrowserSpecificSystemClassName();
   if(className)
    mainElement.className += " " + className;
  }
 },
  CorrectMainElementWhiteSpaceStyle: function() {
  var inputElement = this.GetInputElement();
  if(inputElement && inputElement.parentNode) {
   if(this.IsElementHasWhiteSpaceStyle(inputElement.parentNode))
    inputElement.parentNode.style.whiteSpace = "normal";
  }
 },
 IsElementHasWhiteSpaceStyle: function(element) {
  var currentStyle = ASPx.GetCurrentStyle(element);
  return currentStyle.whiteSpace == "nowrap" || currentStyle.whiteSpace == "pre";  
 },
 FindInputElement: function(){
  return this.isNative ? this.GetMainElement() : ASPx.GetElementById(this.name + ASPx.TEInputSuffix);
 },
 DecodeRawInputValue: function(value) {
  return value;
 },
 GetRawValue: function(value){
  return ASPx.IsExists(this.stateObject) ? this.stateObject.rawValue : null;
 },
 SetRawValue: function(value){
  if(ASPx.IsExists(value))
   value = value.toString();
  this.UpdateStateObjectWithObject({ rawValue: value });
 },
 SyncRawValue: function() {
  if(this.maskInfo != null)
   this.SetRawValue(this.maskInfo.GetValue());
  else
   this.SetRawValue(this.GetInputElement().value);
 },
 HasTextDecorators: function() {
  return this.nullText != "" || this.displayFormat != null;
 },
 CanApplyTextDecorators: function(){
  return !this.focused;
 },
 GetDecoratedText: function(value) {
  if(this.IsNull(value) && this.nullText != "") {
   if(this.CanApplyNullTextDecoration) {
    if(this.CanApplyNullTextDecoration())
     return this.nullText;
   } else {
    return this.nullText;
   }
  }
  if(this.displayFormat != null)
   return ASPx.Formatter.Format(this.displayFormat, value);
  if(this.maskInfo != null)
   return this.maskInfo.GetText();
  if(value == null)
   return "";
  return value;
 },
 ToggleTextDecoration: function() {
  if(this.HasTextDecorators()) {
   if(this.focused) {
    var input = this.GetInputElement();
    var oldValue = input.value;
    var sel = ASPx.Selection.GetExtInfo(input);
    this.ToggleTextDecorationCore();
    if(oldValue != input.value) {
     if(sel.startPos == 0 && sel.endPos == oldValue.length)
      sel.endPos = input.value.length;
     else
      sel.endPos = sel.startPos;
     ASPx.Selection.Set(input, sel.startPos, sel.endPos);
    }
   } else
    this.ToggleTextDecorationCore();
  }
 },
 ToggleTextDecorationCore: function() {
  if(this.maskInfo != null) {   
   this.ApplyMaskInfo(false);
  } else {
   var input = this.GetInputElement();
   var rawValue = this.GetRawValue();
   var value = this.CanApplyTextDecorators() ? this.GetDecoratedText(rawValue) : rawValue;
   if(input.value != value) {
    if(input.type == "password")
     this.TogglePasswordInputTextDecoration(value);
    else
     input.value = value;
   }
  }
 },
 GetPasswordNullTextInputElement: function() {
  if(!this.isPasswordNullTextInputElementExists())
   this.nullTextInputElement = this.createPasswordNullTextInputElement();
  return this.nullTextInputElement;
 },
 createPasswordNullTextInputElement: function() {
  var inputElement = this.GetInputElement(),
   nullTextInputElement = document.createElement("INPUT");
  nullTextInputElement.className = inputElement.className;
  nullTextInputElement.style.cssText = inputElement.style.cssText;
  nullTextInputElement.id = inputElement.id + passwordInputClonedSuffix;
  nullTextInputElement.type = "text";
  if(ASPx.IsExists(inputElement.tabIndex))
   nullTextInputElement.tabIndex = inputElement.tabIndex;
  var onFocusEventHandler = function() {
   var inputElement = this.GetInputElement(),
    nullTextInputElement = this.GetPasswordNullTextInputElement();
   if(inputElement) {
    this.LockFocusEvents();  
    ASPx.SetElementDisplay(inputElement, true);
    inputElement.focus();
    ASPx.SetElementDisplay(nullTextInputElement, false);
    this.ReplaceAssociatedIdInLabels(nullTextInputElement.id, inputElement.id);
   }
  }.aspxBind(this);
  ASPx.Evt.AttachEventToElement(nullTextInputElement, "focus", onFocusEventHandler);
  return nullTextInputElement;
 },
 isPasswordNullTextInputElementExists: function() {
  return ASPx.IsExistsElement(this.nullTextInputElement);
 },
 TogglePasswordNullTextTimeoutChecker: function() {
  if(this.passwordNullTextIntervalID < 0) {
   var timeoutChecker = function() {
    var inputElement = this.GetInputElement();
    if(ASPx.GetControlCollection().GetByName(this.name) !== this || inputElement == null) {
     window.clearTimeout(this.passwordNullTextIntervalID);
     this.passwordNullTextIntervalID = -1;
     return;
    } else {
     if(!this.focused) {
      var passwordNullTextInputElement = this.GetPasswordNullTextInputElement();
      if(passwordNullTextInputElement.value != this.nullText && inputElement.value == "") { 
       passwordNullTextInputElement.value = this.nullText;
       this.SetValue(null);
      }
      if(inputElement.value != "") {
       if(inputElement.style.display == "none") {
        this.SetValue(inputElement.value);
        this.UnhidePasswordInput();
       }
      } else {
       if(inputElement.style.display != "none") {
        this.SetValue(null);
        this.HidePasswordInput();
       }
      }
     }
    }
   }.aspxBind(this);
   timeoutChecker(); 
   this.passwordNullTextIntervalID = window.setInterval(timeoutChecker, 100);
  }
 },
 TogglePasswordInputTextDecoration: function(value) {
  var inputElement = this.GetInputElement();
  var nullTextInputElement = this.GetPasswordNullTextInputElement();
  nullTextInputElement.value = value;
  var parentNode = inputElement.parentNode;
  if(ASPx.Data.ArrayIndexOf(parentNode.childNodes, nullTextInputElement) < 0) {
   ASPx.Attr.ChangeStyleAttribute(nullTextInputElement, "display", "none");
   parentNode.appendChild(nullTextInputElement);
  }
  this.HidePasswordInput();
  this.TogglePasswordNullTextTimeoutChecker();
 },
 HidePasswordInput: function() {
  ASPx.Attr.ChangeStyleAttribute(this.GetInputElement(), "display", "none");
  ASPx.Attr.ChangeStyleAttribute(this.GetPasswordNullTextInputElement(), "display", "");
  this.ReplaceAssociatedIdInLabels(this.GetInputElement().id, this.GetPasswordNullTextInputElement().id);
 },
 UnhidePasswordInput: function() {
  ASPx.Attr.ChangeStyleAttribute(this.GetInputElement(), "display", "");
  ASPx.Attr.ChangeStyleAttribute(this.GetPasswordNullTextInputElement(), "display", "none");
  this.ReplaceAssociatedIdInLabels(this.GetPasswordNullTextInputElement().id, this.GetInputElement().id);
 },
 ReplaceAssociatedIdInLabels: function(oldId, newId) {
  var labels = document.getElementsByTagName("LABEL");
  for(var i = 0; i < labels.length; i++) {
   if(labels[i].attributes["for"] && labels[i].attributes["for"].value == oldId)
    labels[i].attributes["for"].value = newId;
  }
 },
 GetFormattedText: function() {
  var value = this.GetValue();
  if(this.IsNull(value) && this.nullText != "")
   return this.GetText();
  return this.GetDecoratedText(value);
 },
 IsNull: function(value) {
  return value == null || value === "";
 },
 PopulateStyleDecorationPostfixes: function() {
  ASPxClientEdit.prototype.PopulateStyleDecorationPostfixes.call(this);
  this.styleDecoration.AddPostfix(ASPx.TEInputSuffix);
 },
 GetValue: function() {
  var value = null;
  if(this.maskInfo != null)
   value = this.maskInfo.GetValue();
  else if(this.HasTextDecorators())
   value = this.GetRawValue();
  else
   value = this.GetInputElement().value;
  return (value == "" && this.convertEmptyStringToNull) ? null : value;
 },
 SetValue: function(value) {
  if(value == null || value === undefined) 
   value = "";
  if(this.maskInfo != null) {
   this.maskInfo.SetValue(value.toString());
   this.ApplyMaskInfo(false);
   this.SavePrevMaskValue();
  } 
  else if(this.HasTextDecorators()) {
   this.SetRawValue(value);
   this.GetInputElement().value = this.CanApplyTextDecorators() && this.GetInputElement().type != "password" ? this.GetDecoratedText(value) : value;
  }
  else
   this.GetInputElement().value = value;
  if(this.styleDecoration)
   this.styleDecoration.Update();   
  this.SaveChangedValue();   
 },
 SetVisible: function(visible) {
  ASPxClientEdit.prototype.SetVisible.call(this, visible);
  if(this.helpTextDisplayMode === ASPxClientTextEditHelpTextDisplayMode.Inline) {
   if(visible)
    this.showHelpText();
   else
    this.hideHelpText();
  }
 },
 UnstretchInputElement: function(){
  var inputElement = this.GetInputElement();
  var mainElement = this.GetMainElement();
  var mainElementCurStyle = ASPx.GetCurrentStyle(mainElement);
  if(ASPx.IsExistsElement(mainElement) && ASPx.IsExistsElement(inputElement) && ASPx.IsExists(mainElementCurStyle) && 
   inputElement.style.width == "100%" &&
   (mainElementCurStyle.width == "" || mainElementCurStyle.width == "auto"))
   inputElement.style.width = "";
 },
 RestoreActiveElement: function(activeElement) {
  if(activeElement && activeElement.setActive && activeElement.tagName != "IFRAME")
   activeElement.setActive();
 },
 RaiseValueChangedEvent: function() {
  var processOnServer = ASPxClientEdit.prototype.RaiseValueChangedEvent.call(this);
  processOnServer = this.RaiseTextChanged(processOnServer);
  return processOnServer;
 },
 InitMask: function() {
  var rawValue = this.GetRawValue();
  this.SetValue(rawValue.length ? this.DecodeRawInputValue(rawValue) : this.maskInfo.GetValue());
  this.validationPatterns.unshift(new MaskValidationPattern(this.maskInfo.errorText, this.maskInfo));
 },
 SetMaskPasteTimer: function() {
  this.ClearMaskPasteTimer();
  this.maskPasteTimerID = ASPx.Timer.SetControlBoundInterval(this.MaskPasteTimerProc, this, ASPx.PasteCheckInterval);
 },
 ClearMaskPasteTimer: function() {
  this.maskPasteTimerID = ASPx.Timer.ClearInterval(this.maskPasteTimerID);
 },
 SavePrevMaskValue: function() {
  this.maskValueBeforeUserInput = this.maskInfo.GetValue();
 },
 FillMaskInfo: function() {
  var input = this.GetInputElement();
  if(!input) return; 
  var sel = ASPx.Selection.GetInfo(input);
  this.maskInfo.SetCaret(sel.startPos, sel.endPos - sel.startPos);  
 },
 ApplyMaskInfo: function(applyCaret) {
  this.SyncRawValue();
  var input = this.GetInputElement();
  var text = this.GetMaskDisplayText();
  this.maskTextBeforePaste = text;
  if(input.value != text)
   input.value = text;
  if(applyCaret)
   ASPx.Selection.Set(input, this.maskInfo.caretPos, this.maskInfo.caretPos + this.maskInfo.selectionLength);
 },
 GetMaskDisplayText: function() {
  if(!this.focused && this.HasTextDecorators())
   return this.GetDecoratedText(this.maskInfo.GetValue());
  return this.maskInfo.GetText();
 },
 ShouldCancelMaskKeyProcessing: function(htmlEvent, keyDownInfo) {
  return ASPx.Evt.IsEventPrevented(htmlEvent);
 }, 
 HandleMaskKeyDown: function(evt) {
  var keyInfo = ASPx.MaskManager.CreateKeyInfoByEvent(evt);
  ASPx.MaskManager.keyCancelled = this.ShouldCancelMaskKeyProcessing(evt, keyInfo);
  if(ASPx.MaskManager.keyCancelled) {
   ASPx.Evt.PreventEvent(evt);
   return;
  }
  this.maskPasteLock = true;
  this.FillMaskInfo();  
  var canHandle = ASPx.MaskManager.CanHandleControlKey(keyInfo);   
  ASPx.MaskManager.savedKeyDownKeyInfo = keyInfo;
  if(canHandle) {   
   ASPx.MaskManager.OnKeyDown(this.maskInfo, keyInfo);
   this.ApplyMaskInfo(true);
   ASPx.Evt.PreventEvent(evt);
  }
  ASPx.MaskManager.keyDownHandled = canHandle;
  this.maskPasteLock = false;
  this.UpdateMaskHintHtml();
 },
 HandleMaskKeyPress: function(evt) {
  var keyInfo = ASPx.MaskManager.CreateKeyInfoByEvent(evt);
  ASPx.MaskManager.keyCancelled = ASPx.MaskManager.keyCancelled || this.ShouldCancelMaskKeyProcessing(evt, ASPx.MaskManager.savedKeyDownKeyInfo);
  if(ASPx.MaskManager.keyCancelled) {
   ASPx.Evt.PreventEvent(evt);
   return;
  }
  this.maskPasteLock = true;  
  var printable = ASPx.MaskManager.savedKeyDownKeyInfo != null && ASPx.MaskManager.IsPrintableKeyCode(ASPx.MaskManager.savedKeyDownKeyInfo);
  if(printable) {
   ASPx.MaskManager.OnKeyPress(this.maskInfo, keyInfo);
   this.ApplyMaskInfo(true);
  }
  if(printable || ASPx.MaskManager.keyDownHandled)   
   ASPx.Evt.PreventEvent(evt); 
  this.maskPasteLock = false;
  this.UpdateMaskHintHtml();
 },
 MaskPasteTimerProc: function() {
  if(this.maskPasteLock || !this.maskInfo) return;
  this.maskPasteCounter++;
  var inputElement = this.inputElement;
  if(!inputElement || this.maskPasteCounter > 40) {
   this.maskPasteCounter = 0;
   inputElement = this.GetInputElement();
   if(!ASPx.IsExistsElement(inputElement)) {
    this.ClearMaskPasteTimer();
    return;
   }
  }
  if(this.maskTextBeforePaste !== inputElement.value) {
   this.maskInfo.ProcessPaste(inputElement.value, ASPx.Selection.GetInfo(inputElement).endPos);
   this.ApplyMaskInfo(true);
  }
  if(!this.focused)
   this.ClearMaskPasteTimer();
 },
 BeginShowMaskHint: function() {  
  if(!this.readOnly && this.maskHintTimerID == -1)
   this.maskHintTimerID = window.setInterval(ASPx.MaskHintTimerProc, 500);
 },
 EndShowMaskHint: function() {
  window.clearInterval(this.maskHintTimerID);
  this.maskHintTimerID = -1;
 },
 MaskHintTimerProc: function() {  
  if(this.maskInfo) {
   this.FillMaskInfo();
   this.UpdateMaskHintHtml();
  } else {
   this.EndShowMaskHint();
  }
 },
 UpdateMaskHintHtml: function() {  
  var hint =  this.GetMaskHintElement();
  if(!ASPx.IsExistsElement(hint))
   return;
  var html = ASPx.MaskManager.GetHintHtml(this.maskInfo);
  if(html == this.maskHintHtml)
   return;
  if(html != "") {
   var mainElement = this.GetMainElement();
   if(ASPx.IsExistsElement(mainElement)) {
    hint.innerHTML = html;
    hint.style.position = "absolute";  
    hint.style.left = ASPx.PrepareClientPosForElement(ASPx.GetAbsoluteX(mainElement), mainElement, true) + "px";
    hint.style.top = (ASPx.PrepareClientPosForElement(ASPx.GetAbsoluteY(mainElement), mainElement, false) + mainElement.offsetHeight + 2) + "px";
    hint.style.display = "block";    
   }   
  } else {
   hint.style.display = "none";
  }
  this.maskHintHtml = html;
 },
 HideMaskHint: function() {
  var hint =  this.GetMaskHintElement();
  if(ASPx.IsExistsElement(hint))
   hint.style.display = "none";
  this.maskHintHtml = "";
 },
 GetMaskHintElement: function() {
  return ASPx.GetElementById(this.name + "_MaskHint");
 },
 OnFocus: function() {
  if(this.maskInfo != null && !ASPx.GetControlCollection().InCallback())
   this.SetMaskPasteTimer();
  ASPxClientEdit.prototype.OnFocus.call(this);
 },
 OnMouseWheel: function(evt){
  if(this.readOnly || this.maskInfo == null) return;
  this.FillMaskInfo();
  ASPx.MaskManager.OnMouseWheel(this.maskInfo, ASPx.Evt.GetWheelDelta(evt) < 0 ? -1 : 1);
  this.ApplyMaskInfo(true);
  ASPx.Evt.PreventEvent(evt);
  this.UpdateMaskHintHtml();
 }, 
 OnBrowserWindowResize: function(evt) {
  if(!this.autoResizeWithContainer)
   this.AdjustControl();
 },
 IsValueChanged: function() {
  return this.GetValue() != this.lastChangedValue; 
 },
 OnKeyDown: function(evt) {        
  if(this.NeedPreventBrowserUndoBehaviour(evt))
   return ASPx.Evt.PreventEvent(evt);
  if(ASPx.Browser.IE && ASPx.Evt.GetKeyCode(evt) == ASPx.Key.Esc) {   
   if(++this.escCount > 1) {
    ASPx.Evt.PreventEvent(evt);
    return;
   }
  } else 
   this.escCount = 0;
  ASPxClientEdit.prototype.OnKeyDown.call(this, evt);
  if(!this.IsRaiseStandardOnChange(evt)) {
   if(!this.readOnly && this.maskInfo != null)
    this.HandleMaskKeyDown(evt);
  }
 },
 IsCtrlZ: function(evt) {
  return evt.ctrlKey && !evt.altKey && !evt.shiftKey && (ASPx.Evt.GetKeyCode(evt) == 122 || ASPx.Evt.GetKeyCode(evt) == 90)
 },
 NeedPreventBrowserUndoBehaviour: function(evt) {
  var inputElement = this.GetInputElement();
  return this.IsCtrlZ(evt) && !!inputElement && !inputElement.value;
 },
 OnKeyPress: function(evt) {
  ASPxClientEdit.prototype.OnKeyPress.call(this, evt);
  if(!this.readOnly && this.maskInfo != null && !this.IsRaiseStandardOnChange(evt))
   this.HandleMaskKeyPress(evt);
  if(this.NeedOnKeyEventEnd(evt, true))
   this.OnKeyEventEnd(evt);
 },
 OnKeyUp: function(evt) {
  if(ASPx.Browser.Firefox && !this.focused && ASPx.Evt.GetKeyCode(evt) === ASPx.Key.Tab)
   return;
  if(this.NeedOnKeyEventEnd(evt, false)) {
   var proccessNextCommingPress = ASPx.Evt.GetKeyCode(evt) === ASPx.Key.Alt; 
   this.OnKeyEventEnd(evt, proccessNextCommingPress);
  }
  ASPxClientEdit.prototype.OnKeyUp.call(this, evt);
 },
 NeedOnKeyEventEnd: function(evt, isKeyPress) { 
  var handleKeyPress = this.maskInfo != null && evt.keyCode == ASPx.Key.Enter;
  return handleKeyPress == isKeyPress;
 },
 OnKeyEventEnd: function(evt, withDelay){
  if(!this.readOnly) {
   if(this.IsRaiseStandardOnChange(evt))
    this.RaiseStandardOnChange();
   this.SyncRawValueIfHasTextDecorators(withDelay);
  }
 },
 SyncRawValueIfHasTextDecorators: function(withDelay) {
  if(this.HasTextDecorators()) {
   if(withDelay) {
    window.setTimeout(function() {
     this.SyncRawValue();
    }.aspxBind(this), 0);
   } else 
    this.SyncRawValue();
  }
 },
 IsRaiseStandardOnChange: function(evt){
  return !this.specialKeyboardHandlingUsed && this.raiseValueChangedOnEnter && evt.keyCode == ASPx.Key.Enter;
 },
 GetFocusSelectAction: function() {
  if(this.maskInfo)
   return "start";
  return "all"; 
 },
 CorrectFocusWhenDisabled: function() {
  if(!this.GetEnabled()) {
   var inputElement = this.GetInputElement();
   if(inputElement)
    inputElement.blur();
   return true;
  }
  return false;
 },
 EnsureShowPopupHelpText: function() {
  if(this.helpTextDisplayMode === ASPxClientTextEditHelpTextDisplayMode.Popup)
   this.showHelpText();
 },
 EnsureHidePopupHelpText: function() {
  if(this.helpTextDisplayMode === ASPxClientTextEditHelpTextDisplayMode.Popup)
   this.hideHelpText();
 },
 OnFocusCore: function() {
  if(this.CorrectFocusWhenDisabled())
   return;
  var wasLocked = this.IsFocusEventsLocked();
  ASPxClientEdit.prototype.OnFocusCore.call(this);
  this.CorrectInputMaxLength(true);
  if(this.maskInfo != null) {
   this.SavePrevMaskValue();
   this.BeginShowMaskHint();
   this.AttachOnMouseClickIfNeeded();
  }
  if(!wasLocked)
   this.ToggleTextDecoration();
  if(this.isPasswordNullTextInputElementExists())
   setTimeout(function() { this.EnsureShowPopupHelpText(); }.aspxBind(this), 0);
  else
   this.EnsureShowPopupHelpText();
 },
 clearMaskedEditorClickEventHandlers: function () {
  for(var i = 0; i < this.maskedEditorClickEventHandlers.length; i++)
   ASPx.Evt.DetachEventFromElement(this.GetInputElement(), "click", this.maskedEditorClickEventHandlers[i]);
  this.maskedEditorClickEventHandlers = [];
 },
 addMaskedEditorClickEventHandler: function () {
  this.maskedEditorClickEventHandlers.push(this.MouseClickOnMaskedEditorFunc);
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "click", this.MouseClickOnMaskedEditorFunc);
 },
 AttachOnMouseClickIfNeeded: function () {
  this.clearMaskedEditorClickEventHandlers();
  if(this.GetValue() == "" || this.GetValue() == null) {
   this.MouseClickOnMaskedEditorFunc = function (e) {
    this.clearMaskedEditorClickEventHandlers();
    var selectionInfo = ASPx.Selection.GetExtInfo(this.GetInputElement());
    if(selectionInfo.startPos == selectionInfo.endPos)
     this.SetCaretPosition(this.GetInitialCaretPositionInEmptyMaskedInput());
   }.aspxBind(this);
   this.addMaskedEditorClickEventHandler();
  }
 },
 GetInitialCaretPositionInEmptyMaskedInput: function() {
  var maskParts = this.maskInfo.parts;
  return ASPx.MaskManager.IsLiteralPart(maskParts[0]) ? maskParts[0].GetSize() : 0;
 },
 OnLostFocusCore: function() {
  var wasLocked = this.IsFocusEventsLocked();
  ASPxClientEdit.prototype.OnLostFocusCore.call(this);
  this.CorrectInputMaxLength();
  if(this.maskInfo != null) {
   this.EndShowMaskHint();
   this.HideMaskHint();   
   if(this.maskInfo.ApplyFixes(null))
    this.ApplyMaskInfo(false);
   this.RaiseStandardOnChange();
  }
  if(!wasLocked)
   this.ToggleTextDecoration();
  this.escCount = 0;
  this.EnsureHidePopupHelpText();
 },
 InputMaxLengthCorrectionRequired: function () {
  return ASPx.Browser.IE && ASPx.Browser.Version >= 10 && (!this.isNative || this.nullText != "");
 },
 CorrectInputMaxLength: function (onFocus) {
  if(this.InputMaxLengthCorrectionRequired()) {
   var input = this.GetInputElement();
   if(!ASPx.IsExists(this.inputMaxLength))
    this.inputMaxLength = input.maxLength;
   input.maxLength = onFocus ? this.inputMaxLength : -1;
  }
 },
 SubscribeToIeDropEvent: function() {
  if(this.InputMaxLengthCorrectionRequired()) {
   var input = this.GetInputElement();
   ASPx.Evt.AttachEventToElement(input, "drop", function(e) { this.CorrectInputMaxLength(true); }.aspxBind(this));
  }
 },
 SetFocus: function() {
  if(this.isPasswordNullTextInputElementExists()) {
   this.GetPasswordNullTextInputElement().focus();
  } else {
     ASPxClientEdit.prototype.SetFocus.call(this);
  }
 },
 OnValueChanged: function() {
  if(this.maskInfo != null) {
   if(this.maskInfo.GetValue() == this.maskValueBeforeUserInput && !this.IsValueChangeForced())
    return;
   this.SavePrevMaskValue();
  }
  if(this.HasTextDecorators())
   this.SyncRawValue();
  if(!this.IsValueChanged() && !this.IsValueChangeForced())
   return;
  this.SaveChangedValue(); 
  ASPxClientEdit.prototype.OnValueChanged.call(this);
 },
 IsValueChangeForced: function() {
  return false;
 },
 OnTextChanged: function() {
 },
 SaveChangedValue: function() {
  this.lastChangedValue = this.GetValue();
 },
 RaiseStandardOnChange: function(){
  var element = this.GetInputElement();
  if(element && element.onchange) {
   element.onchange({ target: this.GetInputElement() });
  }
  else if(this.ValueChanged) {
   this.ValueChanged.FireEvent(this);
  }
 },
 RaiseTextChanged: function(processOnServer){
  if(!this.TextChanged.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.TextChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;  
 },
 GetText: function(){
  if(this.maskInfo != null) {
   return this.maskInfo.GetText();
  } else {
   var value = this.GetValue();
   return value != null ? value : "";
  }
 },
 SetText: function (value){
  if(this.maskInfo != null) {
   this.maskInfo.SetText(value);
   this.ApplyMaskInfo(false);
   this.SavePrevMaskValue();
  } else {
   this.SetValue(value);
  }
 },
 SelectAll: function() {
  this.SetSelection(0, -1, false);
 },
 SetCaretPosition: function(pos) {
  var inputElement = this.GetInputElement();
  ASPx.Selection.SetCaretPosition(inputElement, pos);
 },
 SetSelection: function(startPos, endPos, scrollToSelection) { 
  var inputElement = this.GetInputElement();
  ASPx.Selection.Set(inputElement, startPos, endPos, scrollToSelection);
 },
 ChangeEnabledAttributes: function(enabled){
  var inputElement = this.GetInputElement();
  if(inputElement){
   this.ChangeInputEnabledAttributes(inputElement, ASPx.Attr.ChangeAttributesMethod(enabled), enabled);
   if(this.specialKeyboardHandlingUsed)
    this.ChangeSpecialInputEnabledAttributes(inputElement, ASPx.Attr.ChangeEventsMethod(enabled));
   this.ChangeInputEnabled(inputElement, enabled, this.readOnly);
  }
 },
 ChangeEnabledStateItems: function(enabled){
  if(!this.isNative) {
   var sc = ASPx.GetStateController();
   sc.SetElementEnabled(this.GetMainElement(), enabled);
   sc.SetElementEnabled(this.GetInputElement(), enabled);
  }
 },
 ChangeInputEnabled: function(element, enabled, readOnly) {
  if(this.UseReadOnlyForDisabled())
   element.readOnly = !enabled || readOnly;
  else
   element.disabled = !enabled;
 },
 ChangeInputEnabledAttributes: function(element, method, enabled) {
  var ieTabIndexFix = enabled && ASPx.Browser.IE && element.setAttribute && ASPx.Attr.IsExistsAttribute(element, "savedtabIndex");
  method(element, "tabIndex");
  if(!enabled) element.tabIndex = -1;
  if(ieTabIndexFix) { 
   window.setTimeout(function() {
    if(element && element.parentNode)
     element.parentNode.replaceChild(element, element); 
   }, 0);
  }
  method(element, "onclick");
  if(!this.NeedFocusCorrectionWhenDisabled())
   method(element, "onfocus");
  method(element, "onblur");
  method(element, "onkeydown");
  method(element, "onkeypress");
  method(element, "onkeyup");
 },
 UseReadOnlyForDisabled: function() {
  return (ASPx.Browser.IE && ASPx.Browser.Version < 10) && !this.isNative;
 },
 NeedFocusCorrectionWhenDisabled: function(){
  return (ASPx.Browser.IE && ASPx.Browser.Version < 10) && !this.isNative;
 },
 OnPostFinalization: function(args) {
  if(this.GetEnabled() || !this.UseReadOnlyForDisabled() || args.isDXCallback)
   return;
  var inputElement = this.GetInputElement();
  if(inputElement) {
   var inputDisabled = inputElement.disabled;
   inputElement.disabled = true;
   window.setTimeout(function() {
    inputElement.disabled = inputDisabled;
   }.aspxBind(this), 0);
  }
 }
});
MaskValidationPattern = ASPx.CreateClass(ASPx.ValidationPattern, {
 constructor: function(errorText, maskInfo) {
  this.constructor.prototype.constructor.call(this, errorText);
  this.maskInfo = maskInfo;
 },
 EvaluateIsValid: function(value) {
  return this.maskInfo.IsValid();
 }
});
ASPx.Ident.IsASPxClientTextEdit = function(obj) {
 return !!obj.isASPxClientTextEdit;
};
var ASPxClientTextBoxBase = ASPx.CreateClass(ASPxClientTextEdit, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.sizingConfig.allowSetHeight = false;
  this.sizingConfig.adjustControl = true;
 }
});
var ASPxClientTextBox = ASPx.CreateClass(ASPxClientTextBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.isASPxClientTextBox = true;
 }
});
ASPxClientTextBox.Cast = ASPxClientControl.Cast;
ASPx.Ident.IsASPxClientTextBox = function(obj) {
 return !!obj.isASPxClientTextBox;
};
var ASPxClientMemo = ASPx.CreateClass(ASPxClientTextEdit, { 
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);        
  this.isASPxClientMemo = true;
  this.raiseValueChangedOnEnter = false;
  this.maxLength = 0;
  this.pasteTimerID = -1;
  this.pasteTimerActivatorCount = 0;
 },
 Initialize: function() {
  ASPxClientTextEdit.prototype.Initialize.call(this);
  this.SaveChangedValue();
  this.maxLengthRestricted = this.maxLength > 0;
 },
 CutString: function() {
  var text = this.GetText();
  if(text.length > this.maxLength) {
   text = text.substring(0, this.maxLength);
   this.SetText(text);
  }
 },
 EventKeyCodeChangesTheInput: function(evt){
  if(ASPx.IsPasteShortcut(evt))
   return true;
  else if(evt.ctrlKey)
   return false;
  var keyCode = ASPx.Evt.GetKeyCode(evt);
  var isSystemKey = ASPx.Key.Windows <= keyCode && keyCode <= ASPx.Key.ContextMenu;
  var isFKey = ASPx.Key.F1 <= keyCode && keyCode <= 127; 
  return ASPx.Key.Delete < keyCode && !isSystemKey && !isFKey || keyCode == ASPx.Key.Enter || keyCode == ASPx.Key.Space;
 },
 OnTextChangingCheck: function() {
  if(this.maxLengthRestricted)  
   this.CutString(); 
 },
 StartTextChangingTimer: function() {
  if(this.maxLengthRestricted) {
   if(this.pasteTimerActivatorCount == 0) 
    this.SetTextChangingTimer();
   this.pasteTimerActivatorCount ++;
  }
 },
 EndTextChangingTimer: function() {
  if(this.maxLengthRestricted) {
   this.pasteTimerActivatorCount --;
   if(this.pasteTimerActivatorCount == 0) 
    this.ClearTextChangingTimer();
  }
 },
 CollapseEditor: function() {
  if(!this.IsAdjustmentRequired()) return;
  var mainElement = this.GetMainElement();
  var inputElement = this.GetInputElement();
  if(!ASPx.IsExistsElement(mainElement) || !ASPx.IsExistsElement(inputElement))
   return;
  ASPxClientTextEdit.prototype.CollapseEditor.call(this);
  var mainElementCurStyle = ASPx.GetCurrentStyle(mainElement);
  if(this.heightCorrectionRequired && mainElement && inputElement) {
   if(mainElement.style.height == "100%" || mainElementCurStyle.height == "100%") {
    mainElement.style.height = "0";
    mainElement.wasCollapsed = true;
   }
   inputElement.style.height = "0";
  }
 },
 CorrectEditorHeight: function() {
  var mainElement = this.GetMainElement();
  if(mainElement.wasCollapsed) {
   mainElement.wasCollapsed = null;
   ASPx.SetOffsetHeight(mainElement, ASPx.GetClearClientHeight(ASPx.FindOffsetParent(mainElement)));
  }
  if(!this.isNative) {
   var inputElement = this.GetInputElement();
   var inputClearClientHeight = ASPx.GetClearClientHeight(ASPx.FindOffsetParent(inputElement));
   if(ASPx.Browser.IE) {
    inputClearClientHeight -= 2;
    var calculatedMainElementStyle = ASPx.GetCurrentStyle(mainElement);
    inputClearClientHeight += ASPx.PxToInt(calculatedMainElementStyle.borderTopWidth) + ASPx.PxToInt(calculatedMainElementStyle.borderBottomWidth);
   }
   if(inputClearClientHeight < memoMinHeight)
    inputClearClientHeight = memoMinHeight;
   ASPx.SetOffsetHeight(inputElement, inputClearClientHeight);
   mainElement.style.height = "100%";
   var inputParentOffsetHeight = ASPx.GetClearClientHeight(ASPx.FindOffsetParent(inputElement));
   if(inputParentOffsetHeight != inputClearClientHeight) {
    ASPx.SetOffsetHeight(inputElement, inputParentOffsetHeight);
   }
  }
 },
 SetWidth: function(width) {
  this.constructor.prototype.SetWidth.call(this, width);
  if(ASPx.Browser.IE)
   this.AdjustControl();
 },
 SetHeight: function(height) {
  var textarea = this.GetInputElement();
  textarea.style.height = "1px";
  this.constructor.prototype.SetHeight.call(this, height);
  textarea.style.height = ASPx.GetClearClientHeight(this.GetMainElement()) - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(textarea) + "px";
 },
 ClearErrorFrameElementsStyles: function() {
  var textarea = this.GetInputElement();
  if(!textarea)
   return;
  var scrollBarPosition = textarea.scrollTop;
  ASPxClientTextEdit.prototype.ClearErrorFrameElementsStyles.call(this);
  if(ASPx.Browser.Firefox)
   textarea.scrollTop = scrollBarPosition;
 },
 OnMouseOver: function() {
  this.StartTextChangingTimer();
 },  
 OnMouseOut: function() {
  this.EndTextChangingTimer();
 },   
 OnFocus: function() {  
  this.StartTextChangingTimer();
  ASPxClientEdit.prototype.OnFocus.call(this);
 },
 OnLostFocus: function() {
  this.EndTextChangingTimer();
  ASPxClientEdit.prototype.OnLostFocus.call(this);
 },
 OnKeyDown: function(evt) { 
  if(this.NeedPreventBrowserUndoBehaviour(evt))
   return ASPx.Evt.PreventEvent(evt);
  if(this.maxLengthRestricted){
   var selection = ASPx.Selection.GetInfo(this.GetInputElement()); 
   var noCharToReplace = selection.startPos == selection.endPos;
   if(this.GetText().length >= this.maxLength && noCharToReplace && this.EventKeyCodeChangesTheInput(evt)) {
    return ASPx.Evt.PreventEvent(evt);
   }
  }
  ASPxClientEdit.prototype.OnKeyDown.call(this, evt);
 },
 SetTextChangingTimer: function() {
  this.pasteTimerID = ASPx.Timer.SetControlBoundInterval(this.OnTextChangingCheck, this, ASPx.PasteCheckInterval);
 },
 ClearTextChangingTimer: function() {
  this.pasteTimerID = ASPx.Timer.ClearInterval(this.pasteTimerID);
 }
});
ASPxClientMemo.Cast = ASPxClientControl.Cast;
ASPx.Ident.IsASPxClientMemo = function(obj) {
 return !!obj.isASPxClientMemo;
};
var CLEAR_BUTTON_INDEX = -100;
var HIDE_CONTENT_CSS_CLASS_NAME = "dxHideContent";
var setContentVisibility = function(clearButtonElement, value) {
 var action = value ? ASPx.RemoveClassNameFromElement : ASPx.AddClassNameToElement;
 action(clearButtonElement, HIDE_CONTENT_CSS_CLASS_NAME);
};
var CLEAR_BUTTON_DISPLAY_MODE = {
 AUTO: 'Auto',
 ALWAYS: 'Always',
 NEVER: 'Never',
 ON_HOVER: 'OnHover'
};
var ASPxClientButtonEditBase = ASPx.CreateClass(ASPxClientTextBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);        
  this.allowUserInput = true;
  this.isValueChanging = false;
  this.allowMouseWheel = true;
  this.isMouseOver = false;
  this.buttonCount = 0;
  this.emptyValueMaskDisplayText = "";
  this.clearButtonDisplayMode = CLEAR_BUTTON_DISPLAY_MODE.AUTO;
  this.forceShowClearButtonAlways = false;
  this.ButtonClick = new ASPxClientEvent();
 },
 Initialize: function() {
  ASPxClientTextBoxBase.prototype.Initialize.call(this);
  this.EnsureEmptyValueMaskDisplayText();
  if(this.HasClearButton())
   this.InitializeClearButton();
 },
 InlineInitialize: function() {
  ASPxClientTextBoxBase.prototype.InlineInitialize.call(this);
  if(this.clearButtonDisplayMode === CLEAR_BUTTON_DISPLAY_MODE.AUTO) {
   this.clearButtonDisplayMode = this.IsClearButtonVisibleAuto() || this.forceShowClearButtonAlways ?
    CLEAR_BUTTON_DISPLAY_MODE.ALWAYS : CLEAR_BUTTON_DISPLAY_MODE.NEVER;
  }
  this.EnsureClearButtonVisibility();
 },
 InitializeClearButton: function() {
  if(this.clearButtonDisplayMode === CLEAR_BUTTON_DISPLAY_MODE.ON_HOVER) {
   var mainElement = this.GetMainElement();
   ASPx.Evt.AttachMouseEnterToElement(mainElement, this.OnMouseOver.aspxBind(this), this.OnMouseOut.aspxBind(this));
  }
 },
 IsClearButtonVisibleAuto: function() {
  return ASPx.Browser.MobileUI;
 },
 EnsureEmptyValueMaskDisplayText: function() {
  if(this.maskInfo && this.HasClearButton()) {
   var savedText = this.maskInfo.GetText();
   this.maskInfo.SetText("");
   this.emptyValueMaskDisplayText = this.maskInfo.GetText();
   this.maskInfo.SetText(savedText);
  }
 },
 GetButton: function(number) {
  return this.GetChildElement("B" + number);
 },
 SetButtonVisible: function(number, value) {
  var button = this.GetButton(number);
  if(!button)
   return;
  var isAlwaysShownClearButton = number === CLEAR_BUTTON_INDEX && this.clearButtonDisplayMode === CLEAR_BUTTON_DISPLAY_MODE.ALWAYS;
  var visibilityModifier = isAlwaysShownClearButton ? setContentVisibility : ASPx.SetElementDisplay;
  visibilityModifier(button, value);
 },
 GetButtonVisible: function(number) {
  var button = this.GetButton(number);
  if(number === CLEAR_BUTTON_INDEX && this.clearButtonDisplayMode === CLEAR_BUTTON_DISPLAY_MODE.ALWAYS)
   return button && !ASPx.ElementHasCssClass(button, HIDE_CONTENT_CSS_CLASS_NAME);
  return button && ASPx.IsElementVisible(button);
 },
 ProcessInternalButtonClick: function(buttonIndex) {
  return false;
 },
 OnButtonClick: function(number) {
  var processOnServer = this.RaiseButtonClick(number);
  if(!this.ProcessInternalButtonClick(number) && processOnServer)
   this.SendPostBack('BC:' + number);
 },
 GetLastSuccesfullValue: function() {
  return this.lastChangedValue;
 },
 OnClear: function() {
  this.ClearEditorValueAndForceOnChange();
  this.ForceRefocusEditor(null, true);
  window.setTimeout(this.EnsureClearButtonVisibility.aspxBind(this), 0);
 },
 ClearEditorValueAndForceOnChange: function() {
  if(this.readOnly || !this.GetButtonVisible(CLEAR_BUTTON_INDEX))
   return;
  var raiseOnChange = this.ClearEditorValueByClearButton();
  if(raiseOnChange)
   this.ForceStandardOnChange();
 },
 ClearEditorValueByClearButton: function() {
  var prevValue = this.GetLastSuccesfullValue();
  this.ClearEditorValueByClearButtonCore();
  return prevValue !== this.GetValue();
 },
 ClearEditorValueByClearButtonCore: function() {
  this.Clear();
  this.GetInputElement().value = '';
 },
 ForceStandardOnChange: function() {
  this.forceValueChanged = true;
  this.RaiseStandardOnChange();
  this.forceValueChanged = false;
 },
 IsValueChangeForced: function() {
  return this.forceValueChanged || ASPxClientTextBoxBase.prototype.IsValueChangeForced.call(this);
 },
 IsValueChanging: function() { return this.isValueChanging; },
 StartValueChanging: function() { this.isValueChanging = true; },
 EndValueChanging: function() { this.isValueChanging = false; },
 IsClearButtonElement: function(element) {
  return ASPx.GetIsParent(this.GetClearButton(), element);
 },
 OnFocusCore: function() {
  ASPxClientTextBoxBase.prototype.OnFocusCore.call(this);
  this.EnsureClearButtonVisibility();
 },
 OnLostFocusCore: function() {
  ASPxClientTextBoxBase.prototype.OnLostFocusCore.call(this);
  this.EnsureClearButtonVisibility();
 },
 GetClearButton: function() {
  return this.GetButton(CLEAR_BUTTON_INDEX);
 },
 HasClearButton: function() {
  return !!this.GetClearButton();
 },
 RequireShowClearButton: function() {
  if(!this.clientEnabled || !this.HasClearButton() || this.clearButtonDisplayMode === CLEAR_BUTTON_DISPLAY_MODE.NEVER)
   return false;
  var isFocused = this.IsFocused();
  if(!isFocused && !this.isMouseOver && this.clearButtonDisplayMode !== CLEAR_BUTTON_DISPLAY_MODE.ALWAYS)
   return false;
  if(isFocused)
   return this.RequireShowClearButtonCore();
  return !this.IsNullState();
 },
 IsFocused: function() {
  return this === ASPxClientEdit.GetFocusedEditor();
 },
 IsNullState: function() {
  return this.IsNull(this.GetValue());
 },
 RequireShowClearButtonCore: function() {
  var inputText = this.GetInputElement().value;
  return inputText !== this.GetEmptyValueDisplayText();
 },
 GetEmptyValueDisplayText: function() { 
  return this.maskInfo ? this.emptyValueMaskDisplayText : "";
 },
 EnsureClearButtonVisibility: function() {
  this.SetButtonVisible(CLEAR_BUTTON_INDEX, this.RequireShowClearButton());
 },
 OnMouseOver: function() {
  this.isMouseOver = true;
  this.EnsureClearButtonVisibility();
 },
 OnMouseOut: function() {
  this.isMouseOver = false;
  this.EnsureClearButtonVisibility();
 },
 OnKeyPress: function(evt) {
  if(this.allowUserInput)
   ASPxClientTextBoxBase.prototype.OnKeyPress.call(this, evt);
 },
 OnKeyEventEnd: function(evt, withDelay) {
  ASPxClientTextBoxBase.prototype.OnKeyEventEnd.call(this, evt, withDelay);
  this.EnsureClearButtonVisibility();
 },
 RaiseButtonClick: function(number){
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned("ButtonClick");
  if(!this.ButtonClick.IsEmpty()){
   var args = new ASPxClientButtonEditClickEventArgs(processOnServer, number);
   this.ButtonClick.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 ChangeEnabledAttributes: function(enabled){
  ASPxClientTextEdit.prototype.ChangeEnabledAttributes.call(this, enabled);
  for(var i = 0; i < this.buttonCount; i++){
   var element = this.GetButton(i);
   if(element) 
    this.ChangeButtonEnabledAttributes(element, ASPx.Attr.ChangeAttributesMethod(enabled));
  }
 },
 ChangeEnabledStateItems: function(enabled){
  ASPxClientTextEdit.prototype.ChangeEnabledStateItems.call(this, enabled);
  for(var i = 0; i < this.buttonCount; i++){
   var element = this.GetButton(i);
   if(element) 
    ASPx.GetStateController().SetElementEnabled(element, enabled);
  }
 },
 ChangeButtonEnabledAttributes: function(element, method){
  method(element, "onclick");
  method(element, "ondblclick");
  method(element, "on" + ASPx.TouchUIHelper.touchMouseDownEventName);
  method(element, "on" + ASPx.TouchUIHelper.touchMouseUpEventName);
 },
 ChangeInputEnabled: function(element, enabled, readOnly) {
  ASPxClientTextEdit.prototype.ChangeInputEnabled.call(this, element, enabled, readOnly || !this.allowUserInput);
 },
 SetValue: function(value) {
  ASPxClientTextEdit.prototype.SetValue.call(this, value);
  if(!this.IsFocused())
   this.EnsureClearButtonVisibility();
 }
});
var ASPxClientButtonEdit = ASPx.CreateClass(ASPxClientButtonEditBase, {
});
ASPxClientButtonEdit.Cast = ASPxClientControl.Cast;
var ASPxClientButtonEditClickEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
 constructor: function(processOnServer, buttonIndex){
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.buttonIndex = buttonIndex;
 }
});
var ASPxClientTextEditHelpTextHAlign = {
 Left: "Left",
 Right: "Right",
 Center: "Center"
};
var ASPxClientTextEditHelpTextVAlign = {
 Top: "Top",
 Bottom: "Bottom",
 Middle: "Middle"
};
var ASPxClientTextEditHelpTextDisplayMode = {
 Inline: "Inline",
 Popup: "Popup"
};
var ASPxClientTextEditHelpTextConsts = {
 VERTICAL_ORIENTATION_CLASS_NAME: "dxeVHelpTextSys",
 HORIZONTAL_ORIENTATION_CLASS_NAME: "dxeHHelpTextSys"
};
var ASPxClientTextEditHelpText = ASPx.CreateClass(null, {
 constructor: function (editor, helpTextStyle, helpText, position, hAlign, vAlign, margins, animationEnabled, helpTextDisplayMode) {
  this.hAlign = hAlign;
  this.vAlign = vAlign;
  this.animationEnabled = animationEnabled;
  this.displayMode = helpTextDisplayMode;
  this.editor = editor;
  this.editorMainElement = editor.GetMainElement();
  this.margins = margins ? { Top: margins[0], Right: margins[1], Bottom: margins[2], Left: margins[3] } : null;
  this.defaultMargins = { Top: 10, Right: 10, Bottom: 10, Left: 10 };
  this.position = position;
  this.helpTextElement = this.createHelpTextElement();
  this.setHelpTextZIndex(true);
  this.prepareHelpTextElement(helpTextStyle, helpText);
 },
 getRows: function (table) {
  return ASPx.GetChildNodesByTagName(table, "TR");
 },
 getCells: function (row) {
  return ASPx.GetChildNodesByTagName(row, "TD");
 },
 getCellByIndex: function(row, cellIndex) {
  return this.getCells(row)[cellIndex];
 },
 getCellIndex: function(row, cell) {
  var cells = this.getCells(row);
  for(var i = 0; i < cells.length; i++) {
   if(cells[i] === cell)
    return i;
  }
 },
 isHorizontal: function(position) {
  return position === ASPx.Position.Left || position === ASPx.Position.Right;
 },
 isVertical: function (position) {
  return position === ASPx.Position.Top || position === ASPx.Position.Bottom;
 },
 createEmptyCell: function(assignClassName) {
  var cell = document.createElement("TD");
  if(assignClassName)
   cell.className = "dxeFakeEmptyCell";
  return cell;
 },
 addHelpTextCellToExternalTableWithTwoCells: function (captionCell, errorCell, helpTextCell, errorTableBody, tableRows) {
  var captionPosition = this.editor.captionPosition;
  var errorCellPosition = this.editor.errorCellPosition;
  var helpTextRow = this.isVertical(this.position) ? document.createElement("TR") : null;
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Left && this.isHorizontal(errorCellPosition))
   captionCell.parentNode.insertBefore(helpTextCell, captionCell.nextSibling);
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Right && this.isHorizontal(errorCellPosition))
   captionCell.parentNode.insertBefore(helpTextCell, captionCell);
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Right && this.isHorizontal(errorCellPosition))
   tableRows[0].appendChild(helpTextCell);
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Left && this.isHorizontal(errorCellPosition))
   tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
  if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Bottom && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.appendChild(helpTextRow);
  }
  if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Top && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
  }
  if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Top && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.insertBefore(helpTextRow, captionCell.parentNode.nextSibling);
  }
  if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Bottom && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.insertBefore(helpTextRow, captionCell.parentNode);
  }
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Top && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   helpTextRow.appendChild(this.createEmptyCell());
   errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
  }
  if(this.position === ASPx.Position.Bottom) {
   if(captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Top || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Right) {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell());
    errorTableBody.appendChild(helpTextRow);
   }
  }
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Top && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(this.createEmptyCell());
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
  }
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Bottom && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(this.createEmptyCell());
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.appendChild(helpTextRow);
  }
  if(this.position === ASPx.Position.Right) {
   if(captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Left || captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Top
    || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Right) {
    tableRows[1].appendChild(helpTextCell);
    tableRows[0].appendChild(this.createEmptyCell());
   }
   if(captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Bottom || captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Left) {
    tableRows[0].appendChild(helpTextCell);
    tableRows[1].appendChild(this.createEmptyCell());
   }
  }
  if(this.position === ASPx.Position.Left) {
   if(captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Top || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Right
    || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Left) {
    tableRows[1].insertBefore(helpTextCell, tableRows[1].childNodes[0]);
    tableRows[0].insertBefore(this.createEmptyCell(), tableRows[0].childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Top || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Bottom) {
    tableRows[1].insertBefore(helpTextCell, tableRows[1].childNodes[0]);
    tableRows[0].insertBefore(this.createEmptyCell(errorCellPosition === ASPx.Position.Top), tableRows[0].childNodes[0]);
    tableRows[2].insertBefore(this.createEmptyCell(errorCellPosition !== ASPx.Position.Top), tableRows[2].childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Top) {
    tableRows[2].insertBefore(helpTextCell, tableRows[2].childNodes[0]);
    tableRows[0].insertBefore(this.createEmptyCell(false), tableRows[0].childNodes[0]);
    tableRows[1].insertBefore(this.createEmptyCell(true), tableRows[1].childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Bottom) {
    tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
    tableRows[1].insertBefore(this.createEmptyCell(true), tableRows[1].childNodes[0]);
    tableRows[2].insertBefore(this.createEmptyCell(false), tableRows[2].childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Left || captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Bottom
    || captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Right) {
    tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
    tableRows[1].insertBefore(this.createEmptyCell(), tableRows[1].childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Left && this.isVertical(errorCellPosition)) {
    captionCell.parentNode.insertBefore(helpTextCell, captionCell.nextSibling);
    var emptyCellParentRow = errorCellPosition === ASPx.Position.Top ? tableRows[0] : tableRows[1];
    var helpTextCellIndex = this.getCellIndex(helpTextCell.parentNode, helpTextCell);
    emptyCellParentRow.insertBefore(this.createEmptyCell(), this.getCellByIndex(emptyCellParentRow, helpTextCellIndex));
   }
  }
  if(this.position === ASPx.Position.Right) {
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Top || captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Bottom) {
    tableRows[1].appendChild(helpTextCell);
    tableRows[0].appendChild(this.createEmptyCell(errorCellPosition === ASPx.Position.Top));
    tableRows[2].appendChild(this.createEmptyCell(errorCellPosition !== ASPx.Position.Top));
   }
   if(captionPosition === ASPx.Position.Top && errorCellPosition === ASPx.Position.Top) {
    tableRows[2].appendChild(helpTextCell);
    tableRows[0].appendChild(this.createEmptyCell(false));
    tableRows[1].appendChild(this.createEmptyCell(true));
   }
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Bottom) {
    tableRows[0].appendChild(helpTextCell);
    tableRows[1].appendChild(this.createEmptyCell(true));
    tableRows[2].appendChild(this.createEmptyCell(false));
   }
   if(captionPosition === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Right) {
    tableRows[0].appendChild(helpTextCell);
    tableRows[1].appendChild(this.createEmptyCell());
   }
   if(captionPosition === ASPx.Position.Right && this.isVertical(errorCellPosition)) {
    captionCell.parentNode.insertBefore(helpTextCell, captionCell);
    var emptyCellParentRow = errorCellPosition === ASPx.Position.Top ? tableRows[0] : tableRows[1];
    var helpTextCellIndex = this.getCellIndex(helpTextCell.parentNode, helpTextCell);
    emptyCellParentRow.insertBefore(this.createEmptyCell(), this.getCellByIndex(emptyCellParentRow, helpTextCellIndex));
   }
  }
  if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Top && this.isHorizontal(errorCellPosition)) {
   if(errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(helpTextCell);
   }
   else {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell());
   }
   errorTableBody.insertBefore(helpTextRow, captionCell.parentNode.nextSibling);
  }
  if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Top && this.isHorizontal(errorCellPosition)) {
   if(errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(helpTextCell);
   }
   else {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell());
   }
   errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
  }
  if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Bottom && this.isHorizontal(errorCellPosition)) {
   if(errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(helpTextCell);
   }
   else {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell());
   }
   errorTableBody.insertBefore(helpTextRow, captionCell.parentNode);
  }
  if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Left) {
   helpTextRow.appendChild(this.createEmptyCell(true));
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.appendChild(helpTextRow);
  }
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Bottom && errorCellPosition === ASPx.Position.Bottom) {
   helpTextRow.appendChild(helpTextCell);
   helpTextRow.appendChild(this.createEmptyCell());
   errorTableBody.appendChild(helpTextRow);
  }
  if(this.position === ASPx.Position.Bottom) {
   if(captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Right || captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(errorCellPosition !== ASPx.Position.Right));
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell(errorCellPosition === ASPx.Position.Right));
    errorTableBody.appendChild(helpTextRow);
   }
   if(captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(false));
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(helpTextCell);
    errorTableBody.appendChild(helpTextRow);
   }
   if(captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Right) {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(this.createEmptyCell(false));
    errorTableBody.appendChild(helpTextRow);
   }   
  }
  if(this.position === ASPx.Position.Top) {
   if(captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Right || captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(errorCellPosition !== ASPx.Position.Right));
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell(errorCellPosition === ASPx.Position.Right));
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Left && errorCellPosition === ASPx.Position.Left) {
    helpTextRow.appendChild(this.createEmptyCell(false));
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(helpTextCell);
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   }
   if(captionPosition === ASPx.Position.Right && errorCellPosition === ASPx.Position.Right) {
    helpTextRow.appendChild(helpTextCell);
    helpTextRow.appendChild(this.createEmptyCell(true));
    helpTextRow.appendChild(this.createEmptyCell(false));
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   }
  }
 },
 addHelpTextCellToExternalTableWithErrorCell: function (errorCell, helpTextCell, errorTableBody, tableRows) {
  var errorCellPosition = this.editor.errorCellPosition;
  var helpTextRow = document.createElement("TR");
  if(this.position === ASPx.Position.Left && this.isHorizontal(errorCellPosition))
   tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
  if(this.position === ASPx.Position.Right && this.isHorizontal(errorCellPosition))
   tableRows[0].appendChild(helpTextCell);
  if(this.position === ASPx.Position.Top && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
  }
  if(this.position === ASPx.Position.Bottom && this.isVertical(errorCellPosition)) {
   helpTextRow.appendChild(helpTextCell);
   errorTableBody.appendChild(helpTextRow);
  }
  if(errorCellPosition === ASPx.Position.Left && this.isVertical(this.position)) {
   helpTextRow.appendChild(this.createEmptyCell(true));
   helpTextRow.appendChild(helpTextCell);
   if(this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   else
    errorTableBody.appendChild(helpTextRow);
  }
  if(errorCellPosition === ASPx.Position.Right && this.isVertical(this.position)) {
   helpTextRow.appendChild(helpTextCell);
   helpTextRow.appendChild(this.createEmptyCell(true));
   if(this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   else
    errorTableBody.appendChild(helpTextRow);
  }
  if(this.position === ASPx.Position.Left && this.isVertical(errorCellPosition)) {
   var helpTextParentRowIndex = errorCellPosition === ASPx.Position.Top ? 1 : 0;
   var emptyCellRowIndex = helpTextParentRowIndex === 0 ? 1 : 0;
   tableRows[helpTextParentRowIndex].insertBefore(helpTextCell, tableRows[helpTextParentRowIndex].childNodes[0]);
   tableRows[emptyCellRowIndex].insertBefore(this.createEmptyCell(true), tableRows[emptyCellRowIndex].childNodes[0]);
  }
  if(this.position === ASPx.Position.Right && this.isVertical(errorCellPosition)) {
   var helpTextParentRowIndex = errorCellPosition === ASPx.Position.Top ? 1 : 0;
   var emptyCellRowIndex = helpTextParentRowIndex === 0 ? 1 : 0;
   tableRows[helpTextParentRowIndex].appendChild(helpTextCell);
   tableRows[emptyCellRowIndex].appendChild(this.createEmptyCell(true));
  }
 },
 addHelpTextCellToExternalTableWithCaption: function (captionCell, helpTextCell, errorTableBody, tableRows) {
  var captionPosition = this.editor.captionPosition;
  var helpTextRow = document.createElement("TR");
  if(captionPosition === ASPx.Position.Left && this.isVertical(this.position)) {
   helpTextRow.appendChild(this.createEmptyCell());
   helpTextRow.appendChild(helpTextCell);
   if(this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   else
    errorTableBody.appendChild(helpTextRow);
  }
  if(this.position === ASPx.Position.Left && this.isVertical(captionPosition)) {
   var helpTextParentRowIndex = captionPosition === ASPx.Position.Top ? 1 : 0;
   var emptyCellParentRowIndex = helpTextParentRowIndex === 0 ? 1 : 0;
   tableRows[helpTextParentRowIndex].insertBefore(helpTextCell, tableRows[helpTextParentRowIndex].childNodes[0]);
   tableRows[emptyCellParentRowIndex].insertBefore(this.createEmptyCell(), tableRows[emptyCellParentRowIndex].childNodes[0]);
  }
  if(this.position === ASPx.Position.Right && this.isVertical(captionPosition)) {
   var helpTextParentRowIndex = captionPosition === ASPx.Position.Top ? 1 : 0;
   var emptyCellParentRowIndex = helpTextParentRowIndex === 0 ? 1 : 0;
   tableRows[helpTextParentRowIndex].appendChild(helpTextCell);
   tableRows[emptyCellParentRowIndex].appendChild(this.createEmptyCell());
  }
  if(captionPosition === ASPx.Position.Right && this.isVertical(this.position)) {
   helpTextRow.appendChild(helpTextCell);
   helpTextRow.appendChild(this.createEmptyCell());
   if(this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   else
    errorTableBody.appendChild(helpTextRow);
  }
  if(this.isVertical(captionPosition) && this.isVertical(this.position)) {
   helpTextRow.appendChild(helpTextCell);
   if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, captionCell.parentNode.nextSibling);
   if(captionPosition === ASPx.Position.Top && this.position === ASPx.Position.Bottom)
    errorTableBody.appendChild(helpTextRow);
   if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   if(captionPosition === ASPx.Position.Bottom && this.position === ASPx.Position.Bottom)
    errorTableBody.insertBefore(helpTextRow, captionCell.parentNode);
  }
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Left)
   captionCell.parentNode.insertBefore(helpTextCell, captionCell.nextSibling);
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Right)
   captionCell.parentNode.insertBefore(helpTextCell, captionCell);
  if(captionPosition === ASPx.Position.Left && this.position === ASPx.Position.Right)
   tableRows[0].appendChild(helpTextCell);
  if(captionPosition === ASPx.Position.Right && this.position === ASPx.Position.Left)
   tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
 },
 addHelpTextCellToExternalTableWithEditorOnly: function (helpTextCell, errorTableBody, tableRows) {
  if(this.isHorizontal(this.position)) {
   if(this.position === ASPx.Position.Left)
    tableRows[0].insertBefore(helpTextCell, tableRows[0].childNodes[0]);
   else
    tableRows[0].appendChild(helpTextCell);
  }
  else {
   var helpTextRow = document.createElement("TR");
   helpTextRow.appendChild(helpTextCell);
   if(this.position === ASPx.Position.Top)
    errorTableBody.insertBefore(helpTextRow, errorTableBody.childNodes[0]);
   else
    errorTableBody.appendChild(helpTextRow);
  }
 },
 addHelpTextCellToExternalTable: function (errorTable, helpTextCell) {
  var errorTableBody = ASPx.GetNodeByTagName(errorTable, "TBODY", 0);
  var tableRows = this.getRows(errorTableBody);
  var captionCell = this.editor.GetCaptionCell();
  var errorCell = this.editor.GetErrorCell();
  if(captionCell) {
   if(errorCell)
    this.addHelpTextCellToExternalTableWithTwoCells(captionCell, errorCell, helpTextCell, errorTableBody, tableRows);
   else
    this.addHelpTextCellToExternalTableWithCaption(captionCell, helpTextCell, errorTableBody, tableRows);
  }
  else if(errorCell)
   this.addHelpTextCellToExternalTableWithErrorCell(errorCell, helpTextCell, errorTableBody, tableRows);
  else
   this.addHelpTextCellToExternalTableWithEditorOnly(helpTextCell, errorTableBody, tableRows);
 },
 createExternalTable: function () {
  var externalTable = document.createElement("TABLE");
  externalTable.id = this.editor.name + ASPx.EditElementSuffix.ExternalTable;
  externalTable.cellPadding = 0;
  externalTable.cellSpacing = 0;
  this.applyExternalTableStyle(externalTable);
  var editorWidth = this.editorMainElement.style.width;
  if(ASPx.IsPercentageSize(editorWidth)) {
   externalTable.style.width = editorWidth;
   this.editorMainElement.style.width = "100%";
   this.editor.width = "100%";
  }
  var externalTableBody = document.createElement("TBODY");
  var externalTableRow = document.createElement("TR");
  var externalTableCell = document.createElement("TD");
  externalTable.appendChild(externalTableBody);
  externalTableBody.appendChild(externalTableRow);
  externalTableRow.appendChild(externalTableCell);
  this.editorMainElement.parentNode.appendChild(externalTable);
  ASPx.ChangeElementContainer(this.editorMainElement, externalTableCell, true);
  return externalTable;
 },
 applyExternalTableStyle: function (externalTable) {
  var externalTableStyle = this.editor.externalTableStyle;
  if(externalTableStyle.length > 0) {
   this.applyStyleToElement(externalTable, externalTableStyle);
  }
 },
 applyStyleToElement: function(element, style) {
  element.className = style[0];
  if(style[1]) {
   var styleSheet = ASPx.GetCurrentStyleSheet();
   element.className += " " + ASPx.CreateImportantStyleRule(styleSheet, style[1]);
  }
 },
 createInlineHelpTextElement: function () {
  var helpTextElement = document.createElement("TD");
  var externalTable = this.editor.GetExternalTable();
  if(!externalTable)
   externalTable = this.createExternalTable();
  this.addHelpTextCellToExternalTable(externalTable, helpTextElement);
  return helpTextElement;
 },
 createPopupHelpTextElement: function () {
  var helpTextElement = document.createElement("DIV");
  document.body.appendChild(helpTextElement);
  ASPx.AnimationHelper.setOpacity(helpTextElement, 0);
  return helpTextElement;
 },
 createHelpTextElement: function () {
  return this.displayMode === ASPxClientTextEditHelpTextDisplayMode.Popup ?
   this.createPopupHelpTextElement() : this.createInlineHelpTextElement();
 },
 prepareHelpTextElement: function (helpTextStyle, helpText) {
  this.applyStyleToElement(this.helpTextElement, helpTextStyle);
  ASPx.SetInnerHtml(this.helpTextElement, "<LABEL>" + helpText + "</LABEL>");
  if(this.displayMode === ASPxClientTextEditHelpTextDisplayMode.Popup)
   this.updatePopupHelpTextPosition();
  else {
   var isVerticalOrientation = this.position === ASPx.Position.Top || this.position === ASPx.Position.Bottom;
   var orientationClassName = isVerticalOrientation ? ASPxClientTextEditHelpTextConsts.VERTICAL_ORIENTATION_CLASS_NAME :
    ASPxClientTextEditHelpTextConsts.HORIZONTAL_ORIENTATION_CLASS_NAME;
   this.helpTextElement.className += " " + orientationClassName;
   this.setInlineHelpTextElementAlign();
   ASPx.SetElementDisplay(this.helpTextElement, this.editor.clientVisible);
  }
 },
 setInlineHelpTextElementAlign: function() {
  var hAlignValue = "", vAlignValue = "";
  switch(this.hAlign) {
   case ASPxClientTextEditHelpTextHAlign.Left: hAlignValue = "left"; break;
   case ASPxClientTextEditHelpTextHAlign.Right: hAlignValue = "right"; break;
   case ASPxClientTextEditHelpTextHAlign.Center: hAlignValue = "center"; break;
  }
  switch(this.vAlign) {
   case ASPxClientTextEditHelpTextVAlign.Top: vAlignValue = "top"; break;
   case ASPxClientTextEditHelpTextVAlign.Bottom: vAlignValue = "bottom"; break;
   case ASPxClientTextEditHelpTextVAlign.Middle: vAlignValue = "middle"; break;
  }
  this.helpTextElement.style.textAlign = hAlignValue;
  this.helpTextElement.style.verticalAlign = vAlignValue;
 },
 getHelpTextMargins: function() {
  if(this.margins)
   return this.margins;
  var result = this.defaultMargins;
  if(this.position === ASPx.Position.Top || this.position === ASPx.Position.Bottom)
   result.Left = result.Right = 0;
  else
   result.Top = result.Bottom = 0;
  return result;
 },
 updatePopupHelpTextPosition: function (editorMainElement) {
  var editorWidth = this.editorMainElement.offsetWidth;
  var editorHeight = this.editorMainElement.offsetHeight;
  var helpTextWidth = this.helpTextElement.offsetWidth;
  var helpTextHeight = this.helpTextElement.offsetHeight;
  var editorX = ASPx.GetAbsoluteX(this.editorMainElement);
  var editorY = ASPx.GetAbsoluteY(this.editorMainElement);
  var helpTextX = 0, helpTextY = 0;
  var margins = this.getHelpTextMargins();
  if(this.position === ASPx.Position.Top || this.position === ASPx.Position.Bottom) {
   if(this.position === ASPx.Position.Top)
    helpTextY = editorY - margins.Bottom - helpTextHeight;
   else if(this.position === ASPx.Position.Bottom)
    helpTextY = editorY + editorHeight + margins.Top;
   if(this.hAlign === ASPxClientTextEditHelpTextHAlign.Left)
    helpTextX = editorX + margins.Left;
   else if(this.hAlign === ASPxClientTextEditHelpTextHAlign.Right)
    helpTextX = editorX + editorWidth - helpTextWidth - margins.Right;
   else if(this.hAlign === ASPxClientTextEditHelpTextHAlign.Center) {
    var editorCenterX = editorX + editorWidth / 2;
    var helpTextWidthWithMargins = helpTextWidth + margins.Left + margins.Right;
    helpTextX = editorCenterX - helpTextWidthWithMargins / 2 + margins.Left;
   }
  } else {
   if(this.position === ASPx.Position.Left)
    helpTextX = editorX - margins.Right - helpTextWidth;
   else if(this.position === ASPx.Position.Right)
    helpTextX = editorX + editorWidth + margins.Left;
   if(this.vAlign === ASPxClientTextEditHelpTextVAlign.Top)
    helpTextY = editorY + margins.Top;
   else if(this.vAlign === ASPxClientTextEditHelpTextVAlign.Bottom)
    helpTextY = editorY + editorHeight - helpTextHeight - margins.Bottom;
   else if(this.vAlign === ASPxClientTextEditHelpTextVAlign.Middle) {
    var editorCenterY = editorY + editorHeight / 2;
    var helpTextHeightWithMargins = helpTextHeight + margins.Top + margins.Bottom;
    helpTextY = editorCenterY - helpTextHeightWithMargins / 2 + margins.Top;
   }
  }
  helpTextX = helpTextX < 0 ? 0 : helpTextX;
  helpTextY = helpTextY < 0 ? 0 : helpTextY;
  ASPx.SetAbsoluteX(this.helpTextElement, helpTextX);
  ASPx.SetAbsoluteY(this.helpTextElement, helpTextY);
 },
 setHelpTextZIndex: function (hide) { 
  var newZIndex = 41998 * (hide ? -1 : 1);
  if(this.helpTextElement.style.zIndex != newZIndex)
   this.helpTextElement.style.zIndex = newZIndex;
 },
 hide: function () {
  if(this.displayMode === ASPxClientTextEditHelpTextDisplayMode.Inline) {
   ASPx.SetElementDisplay(this.helpTextElement, false);
  }
  else {
   this.animationEnabled ? ASPx.AnimationHelper.fadeOut(this.helpTextElement) :
    ASPx.AnimationHelper.setOpacity(this.helpTextElement, 0);
   this.setHelpTextZIndex(true);
  }
 },
 show: function () {
  if(this.displayMode === ASPxClientTextEditHelpTextDisplayMode.Inline) {
   ASPx.SetElementDisplay(this.helpTextElement, true);
  }
  else {
   this.updatePopupHelpTextPosition();
   this.animationEnabled ? ASPx.AnimationHelper.fadeIn(this.helpTextElement) :
    ASPx.AnimationHelper.setOpacity(this.helpTextElement, 1);
   this.setHelpTextZIndex(false);
  }
 }
});
var ASPxOutOfRangeWarningManager = ASPx.CreateClass(null, {
 constructor: function (editor, minValue, maxValue, defaultMinValue, defaultMaxValue, outOfRangeWarningElementPosition, valueFormatter) {
  this.editor = editor;
  this.outOfRangeWarningElementPosition = outOfRangeWarningElementPosition;
  this.minValue = minValue;
  this.maxValue = maxValue;
  this.defaultMinValue = defaultMinValue;
  this.defaultMaxValue = defaultMaxValue;
  this.minMaxValueFormatter = valueFormatter;
  this.animationDuration = 150;
  this.CreateOutOfRangeWarningElement();
 },
 SetMinValue: function (minValue) {
  this.minValue = minValue;
  this.UpdateOutOfRangeWarningElementText();
 },
 SetMaxValue: function (maxValue) {
  this.maxValue = maxValue;
  this.UpdateOutOfRangeWarningElementText();
 },
 CreateOutOfRangeWarningElement: function () {
  this.outOfRangeWarningElement = document.createElement("DIV");
  this.outOfRangeWarningElement.id = this.editor.name + "OutOfRWarn";
  ASPx.InsertElementAfter(this.outOfRangeWarningElement, this.editor.GetMainElement());
  ASPx.AnimationHelper.setOpacity(this.outOfRangeWarningElement, 0);
  this.outOfRangeWarningElement.className = this.editor.outOfRangeWarningClassName;
  this.UpdateOutOfRangeWarningElementText();
 },
 IsValueInRange: function (value) {
  return (!this.IsMinValueExists() || value >= this.minValue)
   && (!this.IsMaxValueExists() || value <= this.maxValue);
 },
 IsMinValueExists: function() {
  return ASPx.IsExists(this.minValue) && !isNaN(this.minValue) && this.minValue !== this.defaultMinValue;
 },
 IsMaxValueExists: function () {
  return ASPx.IsExists(this.maxValue) && !isNaN(this.maxValue) && this.maxValue !== this.defaultMaxValue;
 },
 GetFormattedTextByValue: function(value) {
  if (this.minMaxValueFormatter)
   return this.minMaxValueFormatter.Format(value);
  return value;
 },
 GetWarningText: function() {
  var textTemplate = arguments[0];
  var valueTexts = [];
  for (var i = 1; i < arguments.length; i++) {
   var valueText = this.GetFormattedTextByValue(arguments[i]);
   valueTexts.push(valueText);
  }
  return ASPx.Formatter.Format(textTemplate, valueTexts);
 },
 UpdateOutOfRangeWarningElementText: function () {
  var text = "";
  if (this.IsMinValueExists() && this.IsMaxValueExists())
   text = this.GetWarningText(this.editor.outOfRangeWarningMessages[0], this.minValue, this.maxValue);
  if (this.IsMinValueExists() && !this.IsMaxValueExists())
   text = this.GetWarningText(this.editor.outOfRangeWarningMessages[1], this.minValue);
  if (!this.IsMinValueExists() && this.IsMaxValueExists())
   text = this.GetWarningText(this.editor.outOfRangeWarningMessages[2], this.maxValue);
  ASPx.SetInnerHtml(this.outOfRangeWarningElement, "<LABEL>" + text + "</LABEL>");
 },
 UpdateOutOfRangeWarningElementVisibility: function (currentValue) {
  var isValidValue = currentValue == null || this.IsValueInRange(currentValue);
  if (!isValidValue && !this.outOfRangeWarningElementShown)
   this.ShowOutOfRangeWarningElement();
  if (isValidValue && this.outOfRangeWarningElementShown)
   this.HideOutOfRangeWarningElement();
 },
 GetOutOfRangeWarningElementCoordinates: function() {
  var editorMainElement = this.editor.GetMainElement();
  var editorWidth = editorMainElement.offsetWidth;
  var editorHeight = editorMainElement.offsetHeight;
  var editorX = ASPx.GetAbsoluteX(editorMainElement);
  var editorY = ASPx.GetAbsoluteY(editorMainElement);
  var outOfRangeWarningElementX = this.outOfRangeWarningElementPosition === ASPx.Position.Right ? editorX + editorWidth : editorX;
  var outOfRangeWarningElementY = this.outOfRangeWarningElementPosition === ASPx.Position.Right ? editorY : editorY + editorHeight;
  outOfRangeWarningElementX = outOfRangeWarningElementX < 0 ? 0 : outOfRangeWarningElementX;
  outOfRangeWarningElementY = outOfRangeWarningElementY < 0 ? 0 : outOfRangeWarningElementY;
  return {
   x: outOfRangeWarningElementX,
   y: outOfRangeWarningElementY
  };
 },
 ShowOutOfRangeWarningElement: function () {
  this.outOfRangeWarningElement.style.display = "inline";
  var outOfRangeWarningElementCoordinates = this.GetOutOfRangeWarningElementCoordinates();
  ASPx.SetAbsoluteX(this.outOfRangeWarningElement, outOfRangeWarningElementCoordinates.x);
  ASPx.SetAbsoluteY(this.outOfRangeWarningElement, outOfRangeWarningElementCoordinates.y);
  ASPx.AnimationHelper.fadeIn(this.outOfRangeWarningElement, null, this.animationDuration);
  this.outOfRangeWarningElementShown = true;
 },
 HideOutOfRangeWarningElement: function () {
  ASPx.AnimationHelper.fadeOut(this.outOfRangeWarningElement, function () {
   ASPx.SetElementDisplay(this.outOfRangeWarningElement, false);
  }.aspxBind(this), this.animationDuration);
  this.outOfRangeWarningElementShown = false;
 }
});
ASPx.MMMouseOut = function(name, evt) {
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null) edit.OnMouseOut(evt);
}
ASPx.MMMouseOver = function(name, evt) {
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null) edit.OnMouseOver(evt);
}
ASPx.MaskHintTimerProc = function() {
 var focusedEditor = ASPxClientEdit.GetFocusedEditor();
 if(focusedEditor != null && ASPx.IsFunction(focusedEditor.MaskHintTimerProc))
  focusedEditor.MaskHintTimerProc();
}
ASPx.ETextChanged = function(name) {
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null) edit.OnTextChanged(); 
}
ASPx.BEClick = function(name,number){
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit != null) edit.OnButtonClick(number);
}
ASPx.BEClear = function(name, evt) {
 var edit = ASPx.GetControlCollection().Get(name);
 if(edit && (evt.button === 0 || ASPx.Browser.TouchUI)) {
  var requireFocus = !ASPx.Browser.VirtualKeyboardSupported || ASPx.Browser.MSTouchUI;
  if(requireFocus)
   edit.GetInputElement().focus();
  (function performOnClean() {
   if(edit.IsFocused() || !requireFocus)
    edit.OnClear();
   else
    window.setTimeout(performOnClean, 100);
  })();
 }
}
ASPx.SetFocusToTextEditWithDelay = function(name) {
 window.setTimeout(function() {
  var edit = ASPx.GetControlCollection().Get(name);
  if(!edit)
   return;
  ASPx.Browser.IE ? edit.SetCaretPosition(0) : edit.SetFocus();
 }, 500);
}
window.ASPxClientTextEdit = ASPxClientTextEdit;
window.ASPxClientTextBoxBase = ASPxClientTextBoxBase;
window.ASPxClientTextBox = ASPxClientTextBox;
window.ASPxClientMemo = ASPxClientMemo;
window.ASPxClientButtonEditBase = ASPxClientButtonEditBase;
window.ASPxClientButtonEdit = ASPxClientButtonEdit;
window.ASPxClientButtonEditClickEventArgs = ASPxClientButtonEditClickEventArgs;
})();

(function() {
var DateFormatter = ASPx.CreateClass(null, {
 constructor: function() {
  this.date = new Date(2000, 0, 1);
  this.mask;
  this.specifiers = {};     
  this.spPositions = [];    
  this.knownSpecifiers = ["d", "M", "y", "H", "h", "m", "s", "f", "F", "g", "t"];
  this.savedYear = -1;
  this.isYearParsed = false;
  this.parsedMonth = -1;
  this.replacers = {
   "d": this.ReplaceDay,
   "M": this.ReplaceMonth,
   "y": this.ReplaceYear,
   "H": this.ReplaceHours23,
   "h": this.ReplaceHours12,
   "m": this.ReplaceMinutes,
   "s": this.ReplaceSeconds,
   "F": this.ReplaceMsTrimmed,
   "f": this.ReplaceMs,
   "g": this.ReplaceEra,
   "t": this.ReplaceAmPm
  };
  this.parsers = {
   "d": this.ParseDay,
   "M": this.ParseMonth,
   "y": this.ParseYear,
   "H": this.ParseHours,
   "h": this.ParseHours,
   "m": this.ParseMinutes,
   "s": this.ParseSeconds,
   "F": this.ParseMs,
   "f": this.ParseMs,
   "g": this.ParseEra,
   "t": this.ParseAmPm
  };
 },
 Format: function(date) {
  this.date = date;
  var sp;
  var pos;
  var replacerKey;
  var result = this.mask;
  for(var i = 0; i < this.spPositions.length; i++) {
   pos = this.spPositions[i];
   sp = this.specifiers[pos];
   replacerKey = sp.substr(0, 1);
   if(this.replacers[replacerKey]) {
    result = result.substr(0, pos) + this.replacers[replacerKey].call(this, sp.length) + result.substr(pos + sp.length);
   }
  }
  return result;
 }, 
 Parse: function(str) {
  var now = new Date();  
  this.savedYear = now.getFullYear();
  this.isYearParsed = false;
  this.parsedMonth = -1;
  this.date = new Date(2000, 0, now.getDate());    
  this.strToParse = str;
  this.catchNumbers(str);  
  var parserKey;
  var sp;
  var pos;
  var parseResult;
  var error = false;
  this.hasAmPm = false;
  for(var i = 0; i < this.spPositions.length; i++) {
   pos = this.spPositions[i];
   sp = this.specifiers[pos];
   parserKey = sp.substr(0, 1);
   if(this.parsers[parserKey]) {
    parseResult = this.parsers[parserKey].call(this, sp.length);
    if(!parseResult) {
     error = true;
     break;
    }
   }
  }
  if(error)
   return false;
  if(this.hasAmPm) {
   if(!this.fixHours())
    return false;
  }
  if(!this.isYearParsed)
   this.date.setYear(this.savedYear);
  if(this.parsedMonth < 0)
   this.parsedMonth = now.getMonth();   
  this.ApplyMonth();
  return this.date;  
 },
 ApplyMonth: function() {
  var trial;
  var day = this.date.getDate();
  while(true) {
   trial = new Date();
   trial.setTime(this.date.getTime());   
   trial.setMonth(this.parsedMonth);
   if(trial.getMonth() == this.parsedMonth)
    break;
   --day;
   this.date.setDate(day);
  }
  ASPx.DateUtils.FixTimezoneGap(this.date, trial);
  this.date = trial;
 },
 SetFormatString: function(mask) {
  if(mask.length == 2 && mask.charAt(0) == "%")
   mask = mask.charAt(1);
  this.specifiers = {}; 
  this.spPositions = [];
  this.mask = "";
  var subt = 0;
  var pos = 0;
  var startPos = 0;
  var ch;
  var prevCh = "";
  var skip = false;
  var backslash = false;
  var sp = "";    
  while(true) {
   ch = mask.charAt(pos);
   if(ch == "") {
    if(sp.length > 0)
     this.RegisterSpecifier(startPos, sp);
    break;
   }
   if(ch == "\\" && !backslash) {
    backslash = true;
    subt++;
   } else {
    if(!backslash && (ch == "'" || ch == '"')) {
     skip = !skip;
     subt++;
    } else {     
     if(!skip) {
      if(ch == "/")
       ch = ASPx.CultureInfo.ds;       
      else if(ch == ":")
       ch = ASPx.CultureInfo.ts;
      else if(this.IsKnownSpecifier(ch)) {
       if(prevCh.length == 0)
        prevCh = ch;
       if(ch == prevCh)
        sp += ch;
       else {
        if(sp.length > 0)
         this.RegisterSpecifier(startPos, sp);
        sp = ch;
        startPos = pos - subt;
       }
      }
     }     
     this.mask += ch;
    }      
    backslash = false;
   }            
   prevCh = ch;
   pos++;
  }
  this.spPositions.reverse();
 },
 RegisterSpecifier: function(pos, sp) {
  this.spPositions.push(pos);
  this.specifiers[pos] = sp; 
 },
 ReplaceDay: function(length) {
  if(length < 3) {
   var value = this.date.getDate().toString();
   return length == 2 ? this.padLeft(value, 2) : value;  
  } else if(length == 3) {
   return ASPx.CultureInfo.abbrDayNames[this.date.getDay()];
  } else {
   return ASPx.CultureInfo.dayNames[this.date.getDay()];
  }
 }, 
 ReplaceMonth: function(length) {
  var value = 1 + this.date.getMonth();
  switch(length) {
   case 1:
    return value.toString();
   case 2:
    return this.padLeft(value.toString(), 2);
   case 3:
    return ASPx.CultureInfo.abbrMonthNames[value - 1];
   default:
    for(var i in this.specifiers) {
     var spec = this.specifiers[i];
     if(spec == "d" || spec == "dd")
      return ASPx.CultureInfo.genMonthNames[value - 1];
  }
    return ASPx.CultureInfo.monthNames[value - 1];
  }
 },
 ReplaceYear: function(length) {
  var value = this.date.getFullYear();
  if(length <= 2)
   value = value % 100;
  return this.padLeft(value.toString(), length);
 },
 ReplaceHours23: function(length) {
  var value = this.date.getHours().toString();
  return length > 1 ? this.padLeft(value, 2) : value;
 },
 ReplaceHours12: function(length) {
  var value = this.date.getHours() % 12;
  if(value == 0)
   value = 12;
  value = value.toString();
  return length > 1 ? this.padLeft(value, 2) : value;
 },
 ReplaceMinutes: function(length) {
  var value = this.date.getMinutes().toString();
  return length > 1 ? this.padLeft(value, 2) : value;
 },
 ReplaceSeconds: function(length) {
  var value = this.date.getSeconds().toString();
  return length > 1 ? this.padLeft(value, 2) : value;
 },
 ReplaceMsTrimmed: function(length) {   
  return this.formatMs(length, true);
 },
 ReplaceMs: function(length) { 
  return this.formatMs(length, false);
 },
 ReplaceEra: function(length) {
  return "A.D.";
 },
 ReplaceAmPm: function(length) {
  var value = this.date.getHours() < 12 ? ASPx.CultureInfo.am : ASPx.CultureInfo.pm;
  return length < 2 ? value.charAt(0) : value;
 },
 catchNumbers: function(str) {
  this.parseNumbers = [];  
  var regex = /\d+/g;  
  var match;
  for(;;) {
   match = regex.exec(str);
   if(!match)
    break;
   this.parseNumbers.push(this.parseDecInt(match[0]));
  }  
  var spCount = 0;
  var now = new Date();
  for(var i in this.specifiers) {
   var sp = this.specifiers[i];
   if(sp.constructor != String || !this.IsNumericSpecifier(sp)) continue;
   spCount++;
   if(this.parseNumbers.length < spCount) {    
    var defaultValue = 0;
    if(sp.charAt(0) == "y") defaultValue = now.getFullYear(); 
    this.parseNumbers.push(defaultValue);
   }
  }
  var excess = this.parseNumbers.length - spCount;
  if(excess > 0)
   this.parseNumbers.splice(spCount, excess);  
  this.currentParseNumber = this.parseNumbers.length - 1;
 },
 popParseNumber: function() {
  return this.parseNumbers[this.currentParseNumber--];
 },
 findAbbrMonth: function() {
  return this.findMonthCore(ASPx.CultureInfo.abbrMonthNames);
 },
 findFullMonth: function() {
  return this.findMonthCore(ASPx.CultureInfo.genMonthNames);
 }, 
 findMonthCore: function(monthNames) {
  var inputLower = this.strToParse.toLowerCase();
  for(var i = 0; i < monthNames.length; i++) {
   var monthName = monthNames[i].toLowerCase();
   if(monthName.length > 0 &&  inputLower.indexOf(monthName) > -1) {
    var empty = "";
    for(var j = 0; j < monthName.length; j++) empty += " ";
    this.strToParse = this.strToParse.replace(new RegExp(monthName, "gi"), empty);
    return 1 + parseInt(i);
   }
  }
  return false;
 },
 ParseDay: function(length) {
  if(length < 3) {
   var value = this.popParseNumber();
   if(value < 1 || value > 31)
    return false;
   this.date.setDate(value);
  }
  return true;
 },
 ParseMonth: function(length) {
  var value;
  switch(length){
   case 1:
   case 2:
    value = this.popParseNumber();
    break; 
   case 3:
    value = this.findAbbrMonth();
    break;
   default:
    value = this.findFullMonth();
    break;
  }
  if(value < 1 || value > 12)
   return false;
  this.parsedMonth = value - 1;
  return true;
 }, 
 ParseYear: function(length) {  
  var value = this.popParseNumber();
  if(value > 9999)
   return false;
  if(value < 100)
   value = ASPx.DateUtils.ExpandTwoDigitYear(value);
  this.date.setFullYear(value);
  this.isYearParsed = true;
  return true;
 },
 ParseHours: function(length) {
  var value = this.popParseNumber();
  if(value > 23)
   return false;
  this.date.setHours(value);
  return true;
 },
 ParseMinutes: function(length) {
  var value = this.parseMinSecCore();
  if(value == -1)
   return false;
  this.date.setMinutes(value);
  return true;
 },
 ParseSeconds: function(length) {
  var value = this.parseMinSecCore();
  if(value == -1)
   return false;
  this.date.setSeconds(value);
  return true;
 },
 ParseMs: function(length) {
  if(length > 3)
   length = 3;
  var thr = 1;
  for(var i = 0; i < length; i++)
   thr *= 10;
  thr -= 1;
  var value = this.popParseNumber();
  while(value > thr)
   value /= 10;
  this.date.setMilliseconds(Math.round(value));
  return true;
 },
 ParseEra: function(length) {
  return true;
 },
 ParseAmPm: function(length) {
  this.hasAmPm = ASPx.CultureInfo.am.length > 0 && ASPx.CultureInfo.pm.length > 0;
  return true;
 },
 parseDecInt: function(str) {
  return parseInt(str, 10);
 },
 padLeft: function(str, length) {
  while(str.length < length)
   str = "0" + str;
  return str;
 },
 formatMs: function(length, trim) {
  var value = Math.floor(this.date.getMilliseconds() * Math.pow(10, length - 3));
  value = this.padLeft(value.toString(), length);    
  if(trim) {
   var pos = value.length - 1;
   var req = false;
   while(value.charAt(pos) == "0") {
    req = true;
    pos--;
   }
   if(req)
    value = value.substring(0, pos + 1);   
  }
  return value;
 },
 parseMinSecCore: function() {
  var value = this.popParseNumber();
  return value > 59 ? -1 : value;
 },
 fixHours: function() {
  var state = this.getAmPmState(this.strToParse);
  if(!state) return true;
  var h = this.date.getHours();
  switch(state) {
   case "P":
    if(h > 12) return false;
    if(h < 12)
     this.date.setHours(12 + h);
    break;
   case "A":
    if(h == 12)
     this.date.setHours(0);
  }
  return true;
 },
 getAmPmState: function(str, skipCorrection) {
  var am = ASPx.CultureInfo.am.charAt(0).toLowerCase();
  var pm = ASPx.CultureInfo.pm.charAt(0).toLowerCase();
  var amMatches = new RegExp(am, "gi").exec(str);
  var pmMatches = new RegExp(pm, "gi").exec(str);
  var amCount = amMatches ? amMatches.length : 0;
  var pmCount = pmMatches ? pmMatches.length : 0;
  var hasAm = amCount > 0;
  var hasPm = pmCount > 0;
  if(hasAm ^ hasPm && amCount < 2 && pmCount < 2)
   return hasAm ? "A" : "P";
  if(!skipCorrection) {
   str = str.replace(new RegExp(this.getDayMonthNameReplacePattern(), "gi"), "");
   return this.getAmPmState(str, true);
  }
  return null;
 },
 getDayMonthNameReplacePattern: function() {
  if(!this.dayMonthNameReplacePattern)
   return this.createDayMonthNameReplacePattern();
  return this.dayMonthNameReplacePattern;
 },
 createDayMonthNameReplacePattern: function() {
  var parts = [ ] ;
  parts.push("(?:");
  parts.push(this.createReplacePattern(ASPx.CultureInfo.monthNames));
  parts.push(this.createReplacePattern(ASPx.CultureInfo.genMonthNames));
  parts.push(this.createReplacePattern(ASPx.CultureInfo.abbrMonthNames));
  parts.push(this.createReplacePattern(ASPx.CultureInfo.abbrDayNames));
  parts.push(this.createReplacePattern(ASPx.CultureInfo.dayNames));
  parts.push(")");
  return parts.join("");
 },
 createReplacePattern: function(names) {
  return names && names.length > 0 ? "\\b" + names.join("\\b|\\b") + "\\b" : "";
 },
 IsNumericSpecifier: function(sp) {
  var ch = sp.charAt(0);
  if(ch == "g" || ch == "t" || ((ch == "M" || ch == "d") && sp.length > 2))
   return false;
  return true;
 },
 IsKnownSpecifier: function(sp) {
  if(sp.length > 1)
   sp = sp.charAt(0);
  for(var i = 0; i < this.knownSpecifiers.length; i++) {
   if(this.knownSpecifiers[i] == sp)
    return true;
  }
  return false;
 }
});
DateFormatter.Create = function(format) {
 var instance = new DateFormatter();
 instance.SetFormatString(format);
 return instance;
};
DateFormatter.ExpandPredefinedFormat = function(format) {
 switch(format) {
  case "d":
   return ASPx.CultureInfo.shortDate;
  case "D":
   return ASPx.CultureInfo.longDate;
  case "t":
   return ASPx.CultureInfo.shortTime;
  case "T":
   return ASPx.CultureInfo.longTime;
  case "g":
   return ASPx.CultureInfo.shortDate + " " + ASPx.CultureInfo.shortTime;   
  case "f":
   return ASPx.CultureInfo.longDate + " " + ASPx.CultureInfo.shortTime;
  case "G":
   return ASPx.CultureInfo.shortDate + " " + ASPx.CultureInfo.longTime;
  case "F":
  case "U":
   return ASPx.CultureInfo.longDate + " " + ASPx.CultureInfo.longTime;   
  case "M":
  case "m":
   return ASPx.CultureInfo.monthDay;
  case "Y":
  case "y":
   return ASPx.CultureInfo.yearMonth;   
  case "O":
  case "o":
   return "yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffff";
  case "R":
  case "r":
   return "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'";
  case "s":
   return "yyyy'-'MM'-'dd'T'HH':'mm':'ss";
  case "u":
    return "yyyy'-'MM'-'dd HH':'mm':'ss'Z'";
 }
 return format;
};
ASPx.DateFormatter = DateFormatter;
})();
(function() {
ASPx.Formatter = {
 Format: function() {
  if(arguments.length < 1) 
   return "";
  var format = arguments[0];
  if(format == null)
   return "";
  var args;
  if(arguments.length > 1 && arguments[1] != null && arguments[1].constructor == Array) {
   args = arguments[1];
  } else {
   args = [ ];
   for(var i = 1; i < arguments.length; i++)
    args.push(arguments[i]);
  }
  var bag = [ ];
  var pos = 0;
  var savedPos = 0;  
  while(pos < format.length) {
   var ch = format.charAt(pos);
   pos++;
   if(ch == '{') {
    bag.push(format.substr(savedPos, pos - savedPos - 1));    
    if(format.charAt(pos) == "{") {
     savedPos = pos;
     pos++;
     continue;
    }
    var spec = this.ParseSpec(format, pos);
    var pos = spec.pos;
    var arg = args[spec.index];
    var argString;
    if(arg == null) {
     argString = "";
    } else if(typeof arg == "number") {
     argString = ASPx.NumberFormatter.Format(spec.format, arg);
    } else if(arg.constructor == Date) {     
     if(spec.format != this.activeDateFormat) {
      this.activeDateFormat = spec.format;
      if(spec.format == "")
       spec.format = "G";      
      if(spec.format.length == 1)
       spec.format = ASPx.DateFormatter.ExpandPredefinedFormat(spec.format);
      this.GetDateFormatter().SetFormatString(spec.format);
     }
     if(this.activeDateFormat == "U")
      arg = ASPx.DateUtils.ToUtcTime(arg);
     argString = this.GetDateFormatter().Format(arg);
    } else {
     argString = String(arg);     
     if(spec.format != "" && argString.length > 0) {
      var num = Number(argString.replace(",", "."));
      if(!isNaN(num))
       argString = ASPx.NumberFormatter.Format(spec.format, num);
     }
    }
    var padLen = spec.width - argString.length;
    if(padLen > 0) {
     if(spec.left)
      bag.push(argString);
     for(var i = 0; i < padLen; i++)
      bag.push(" ");
     if(!spec.left)
      bag.push(argString);
    } else {
     bag.push(argString);
    }
    savedPos = pos;
   }
   else if(ch == "}" && pos < format.length && format.charAt(pos) == "}") {
    bag.push(format.substr(savedPos, pos - savedPos - 1));
    savedPos = pos;
    pos++;
   }
   else if (ch == "}") {
    return "";
   }
  }
  if(savedPos < format.length)
   bag.push(format.substr(savedPos));   
  return bag.join("");
 },
 ParseSpec: function(format, pos) {
  var result = {
   index: -1,   
   left: false,
   width: 0,
   format: "",
   pos: 0
  };
  var savedPos, ch;
  savedPos = pos;
  while(true) {   
   ch = format.charAt(pos);
   if(ch < "0" || ch > "9")
    break;
   pos++;
  }  
  if(pos > savedPos)
   result.index = Number(format.substr(savedPos, pos - savedPos));  
  if(format.charAt(pos) == ",") {
   pos++;
   while(true) {
    ch = format.charAt(pos);
    if(ch != " " && ch != "\t")
     break;
    pos++;
   }
   result.left = format.charAt(pos) == "-";
   if(result.left)
    pos++;   
   savedPos = pos;
   while(true) {
    ch = format.charAt(pos);
    if(ch < "0" || ch > "9")
     break;
    pos++;
   }
   if(pos > savedPos)
    result.width = Number(format.substr(savedPos, pos - savedPos));
  }
  if(format.charAt(pos) == ":") {
   pos++;
   savedPos = pos;
   while(format.charAt(pos) != "}")
    pos++;
   result.format = format.substr(savedPos, pos - savedPos);
  }
  pos++;
  result.pos = pos;
  return result;
 },
 activeDateFormat: null,
 GetDateFormatter: function() {
  if(!this.__dateFormatter)
   this.__dateFormatter = new ASPx.DateFormatter();
  return this.__dateFormatter;
 }
};
ASPx.NumberFormatter = {
 Format: function(format, value) {
  if(isNaN(value))
   return ASPx.CultureInfo.numNan;
  if(!isFinite(value)) {
   return value > 0 
    ? ASPx.CultureInfo.numPosInf 
    : ASPx.CultureInfo.numNegInf;
  }
  this.FillFormatInfo(format);
  if(this.spec == "X")
   return this.FormatHex(value);
  this.FillDigitInfo(value);  
  switch(this.spec) {
   case "C":
    return this.FormatCurrency();
   case "D":
    return this.FormatDecimal();
   case "E":
    return this.FormatExp();
   case "F":
    return this.FormatFixed();
   case "G":   
    return this.FormatGeneral();
   case "N":
    return this.FormatNumber();
   case "P":
    return this.FormatPercent();
   default:
    if(this.custom)
     return this.FormatCustom(format);
    return "?";
  }
 },
 positive: true,
 digits: null,
 pointPos: 0, 
 spec: "",
 prec: -1,  
 upper: true,
 custom: false,
 FormatCurrency: function() {  
  if(this.prec < 0)
   this.prec = ASPx.CultureInfo.currPrec;
  this.Round(this.prec);
  var bag = [ ];
  if(this.positive) {
   switch(ASPx.CultureInfo.currPosPattern) {
    case 0:
     bag.push(ASPx.CultureInfo.currency);
     break;
    case 2:
     bag.push(ASPx.CultureInfo.currency, " ");     
     break;     
   }
  } else {
   switch(ASPx.CultureInfo.currNegPattern) {
    case 0:
     bag.push("(", ASPx.CultureInfo.currency);
     break;
    case 1:
     bag.push("-", ASPx.CultureInfo.currency);
     break;
    case 2:
     bag.push(ASPx.CultureInfo.currency, "-");
     break;
    case 3:
     bag.push(ASPx.CultureInfo.currency);
     break;
    case 4:
     bag.push("(");
     break;
    case 5:
    case 8:
     bag.push("-");
     break;
    case 9:
     bag.push("-", ASPx.CultureInfo.currency, " ");
     break;
    case 11:
     bag.push(ASPx.CultureInfo.currency, " ");
     break;
    case 12:
     bag.push(ASPx.CultureInfo.currency, " -");
     break;
    case 14:
     bag.push("(", ASPx.CultureInfo.currency, " ");
     break;
    case 15:
     bag.push("(");
     break;
   }
  }
  this.AppendGroupedInteger(bag, ASPx.CultureInfo.currGroups, ASPx.CultureInfo.currGroupSeparator);
  if(this.prec > 0) {
   bag.push(ASPx.CultureInfo.currDecimalPoint);
   this.AppendDigits(bag, this.pointPos, this.pointPos + this.prec);
  }
  if(this.positive) {
   switch(ASPx.CultureInfo.currPosPattern) {
    case 1:
     bag.push(ASPx.CultureInfo.currency);
     break;
    case 3:
     bag.push(" ", ASPx.CultureInfo.currency);
     break;     
   }   
  } else {
   switch(ASPx.CultureInfo.currNegPattern) {
    case 0:
    case 14:
     bag.push(")");
     break;
    case 3:
     bag.push("-");
     break;
    case 4:
     bag.push(ASPx.CultureInfo.currency, ")");
     break;
    case 5:
     bag.push(ASPx.CultureInfo.currency);
     break;
    case 6:
     bag.push("-", ASPx.CultureInfo.currency);
     break;
    case 7:
     bag.push(ASPx.CultureInfo.currency, "-");
     break;
    case 8:
     bag.push(" ", ASPx.CultureInfo.currency);
     break;
    case 10:
     bag.push(" ", ASPx.CultureInfo.currency, "-");
     break;
    case 11:
     bag.push("-");
     break;
    case 13:
     bag.push("- ", ASPx.CultureInfo.currency);
     break;
    case 15:
     bag.push(" ", ASPx.CultureInfo.currency, ")");
     break;
   }
  }
  return bag.join("");
 }, 
 FormatDecimal: function() {
  if(this.prec < this.pointPos)
   this.prec = this.pointPos;
  if(this.prec < 1)
   return "0";
  var bag = [ ];
  if(!this.positive)
   bag.push("-");
  this.AppendDigits(bag, this.pointPos - this.prec, this.pointPos);
  return bag.join("");
 },
 FormatExp: function() {  
  if(this.prec < 0)
   this.prec = 6;
  this.Round(1 - this.pointPos + this.prec);
  return this.FormatExpCore(3);
 },
 FormatExpCore: function(minExpDigits) {
  var bag = [ ];
  if(!this.positive)
   bag.push("-");
  this.AppendDigits(bag, 0, 1);
  if(this.prec > 0) {
   bag.push(ASPx.CultureInfo.numDecimalPoint);
   this.AppendDigits(bag, 1, 1 + this.prec);
  }
  bag.push(this.upper ? "E" : "e");
  var order = this.pointPos - 1;  
  if(order >= 0) {
   bag.push("+");
  } else {
   bag.push("-");
   order = -order;
  }
  var orderStr = String(order);
  for(var i = orderStr.length; i < minExpDigits; i++)
   bag.push(0);
  bag.push(orderStr);
  return bag.join("");
 },
 FormatFixed: function() {
  if(this.prec < 0)
   this.prec = ASPx.CultureInfo.numPrec;
  this.Round(this.prec);
  var bag = [ ];
  if(!this.positive)
   bag.push("-");
  if(this.pointPos < 1)
   bag.push(0);
  else
   this.AppendDigits(bag, 0, this.pointPos);
  if(this.prec > 0) {
   bag.push(ASPx.CultureInfo.numDecimalPoint);
   this.AppendDigits(bag, this.pointPos, this.pointPos + this.prec);
  }
  return bag.join(""); 
 },
 FormatGeneral: function() {
  var hasFrac = this.pointPos < this.digits.length;
  var allowExp;
  if(this.prec < 0) {
   allowExp = hasFrac;
   this.prec = hasFrac ? 15 : 10;
  } else {   
   allowExp = true;
   if(this.prec < 1)
    this.prec = hasFrac ? 15 : 10;
   this.Round(this.prec - this.pointPos);
  }
  if(allowExp) {
   if(this.pointPos > this.prec || this.pointPos <= -4) {
    this.prec = this.digits.length - 1;
    return this.FormatExpCore(2);
   }
  }
  this.prec = Math.min(this.prec, Math.max(1, this.digits.length)) - this.pointPos;
  return this.FormatFixed();
 },
 FormatNumber: function() {
  if(this.prec < 0)
   this.prec = ASPx.CultureInfo.numPrec;
  this.Round(this.prec);
  var bag = [ ];
  if(!this.positive) {
   switch(ASPx.CultureInfo.numNegPattern) {
    case 0:
     bag.push("(");
     break;
    case 1:
     bag.push("-");
     break;
    case 2:
     bag.push("- ");
     break;
   }
  }
  this.AppendGroupedInteger(bag, ASPx.CultureInfo.numGroups, ASPx.CultureInfo.numGroupSeparator);
  if(this.prec > 0) {
   bag.push(ASPx.CultureInfo.numDecimalPoint);
   this.AppendDigits(bag, this.pointPos, this.pointPos + this.prec);
  }
  if(!this.positive) {
   switch(ASPx.CultureInfo.numNegPattern) {
    case 0:
     bag.push(")");
     break;
    case 3:
     bag.push("-");
     break;
    case 4:
     bag.push(" -");
     break;
   }
  }
  return bag.join("");
 },
 FormatPercent: function() {
  if(this.prec < 0)
   this.prec = ASPx.CultureInfo.numPrec;
  if(this.digits.length > 0)
   this.pointPos += 2;
  this.Round(this.prec);
  var bag = [ ];
  if(!this.positive)
   bag.push("-");
  if(ASPx.CultureInfo.percentPattern == 2)
   bag.push("%");    
  this.AppendGroupedInteger(bag, ASPx.CultureInfo.numGroups, ASPx.CultureInfo.numGroupSeparator);
  if(this.prec > 0) {
   bag.push(ASPx.CultureInfo.numDecimalPoint);
   this.AppendDigits(bag, this.pointPos, this.pointPos + this.prec);
  }  
  switch(ASPx.CultureInfo.percentPattern) {
   case 0:
    bag.push(" %");
    break;
   case 1:
    bag.push("%");
    break;
  }  
  return bag.join("");
 },
 FormatHex: function(value) {
  var result = value.toString(16);
  if(result.indexOf("(") > -1)
   return result;
  result = this.upper ? result.toUpperCase() : result.toLowerCase();
  if(this.prec <= result.length)
   return result;
  var bag = [ ];
  for(var i = result.length; i < this.prec; i++)
   bag.push(0);
  bag.push(result);
  return bag.join("");
 },
 FormatCustom: function(format) {
  var sectionList = this.GetCustomFormatSections(format);
  var section = this.SelectCustomFormatSection(sectionList);
  if(section == "")
   return this.positive ? "" : "-";
  var info = this.ParseCustomFormatSection(section);
  var lists = this.CreateCustomFormatLists(info);
  if(sectionList.length > 2 && section != sectionList[2]) {
   var zero = lists.i.concat(lists.f).join("").split(0).join("") == "";
   if(zero) {
    section = sectionList[2];
    info = this.ParseCustomFormatSection(section);
    lists = this.CreateCustomFormatLists(info);   
   }   
  }
  return this.FormatCustomCore(section, info, lists);
 },
 GetCustomFormatSections: function(format) {
  var sections = [ ];
  var escaping = false;
  var quote = "";
  var length = 0;
  var prevPos = 0;
  for(var i = 0; i < format.length; i++) {
   var ch = format.charAt(i);
   if(!escaping && quote == "" && ch == ";") {
    sections.push(format.substr(prevPos, length));
    length = 0;
    prevPos = i + 1;
    if(sections.length > 2)
     break;
   } else {
    if(escaping)
     escaping = false;
    else if(ch == quote)
     quote = quote == "" ? ch : "";
    else if(ch == "\\")
     escaping = true;
    else if(ch == "'" || ch == '"')
     quote = ch;
    ++length;
   }
  }
  if(length > 0)
   sections.push(format.substr(prevPos, length));
  if(sections.length < 1)
   sections.push(format);
  return sections;
 },
 SelectCustomFormatSection: function(sections) {
  if(!this.positive && sections.length > 1 && sections[1] != "") {
   this.positive = true;
   return sections[1];
  }
  if(this.digits.length < 1 && sections.length > 2 && sections[2] != "")
   return sections[2];
  return sections[0];
 },
 CreateCustomFormatInfo: function() {
  return {
   pointPos: -1,
   grouping: false,
   exp: false,
   expShowPlus: false,
   percent: false,
   scaling: 0,
   intDigits: 0,
   fracDigits: 0,
   expDigits: 0,
   intSharps: 0,
   fracSharps: 0, 
   expSharps: 0
  };
 },
 ParseCustomFormatSection: function(section) {  
  var quote = "";
  var area = "i"; 
  var canParseIntSharps = true;
  var result = this.CreateCustomFormatInfo();
  var groupSeparators = 0;  
  for(var i = 0; i < section.length; i++) {
   var ch = section.charAt(i);   
   if(ch == quote) {
    quote = "";    
    continue;
   }
   if(quote != "")
    continue;
   if(area == "e" && ch != "0" && ch != "#") {
    area = result.pointPos < 0 ? "i" : "f";
    i--;
    continue;
   }
   switch(ch) {
    case "\\":
     i++;
     continue;
    case "'":
    case '"':
     quote = ch;
     continue;
    case "#":
    case "0":
     if(ch == "#") {
      switch(area) {
       case "i":
        if(canParseIntSharps)
         result.intSharps++;
        break;
       case "f":
        result.fracSharps++;
        break;
       case "e":
        result.expSharps++;
        break;
      }
     } else {
      canParseIntSharps = false;
      switch(area) {
       case "f":
        result.fracSharps = 0;        
        break;
       case "e":
        result.expSharps = 0;
        break;
      }
     }
     switch(area) {
      case "i":
       result.intDigits++;
       if(groupSeparators > 0)
        result.grouping = true;
       groupSeparators = 0;
       break;
      case "f":
       result.fracDigits++;  
       break;
      case "e":
       result.expDigits++;
       break;
     }
     break;
    case "e":
    case "E":
     if(result.exp)
      break;
     result.exp = true;     
     area = "e"; 
     if(i < section.length - 1) {
      var next = section.charAt(1 + i);
      if(next == "+" || next == "-") {
       if(next == "+")
        result.expShowPlus = true;
       i++;
      }
      else if(next != "0" && next != "#") {
       result.exp = false;
       if(result.pointPos < 0)
        area = "i";       
      }
     }
     break;
    case ".":
     area = "f";
     if(result.pointPos < 0)
      result.pointPos = i;
     break;
    case "%":
     result.percent = true;     
     break;
    case ",":
     if(area == "i" && result.intDigits > 0)
      groupSeparators++;
     break;
    default:
     break;
   }
  }
  if(result.expDigits < 1)
   result.exp = false;
  else
   result.intSharps = 0;
  if(result.fracDigits < 1)
   result.pointPos = -1;
  result.scaling = 3 * groupSeparators;  
  return result;
 },
 CreateCustomFormatLists: function(info) {
  var intList = [ ];
  var fracList = [ ];
  var expList = [ ];
  if(this.digits.length > 0) {
   if(info.percent)
    this.pointPos += 2;
   this.pointPos -= info.scaling;
  }
  var expPositive = true;
  if(info.exp && (info.intDigits > 0 || info.fracDigits > 0)) {
   var diff = 0;
   if(this.digits.length > 0) {
    this.Round(info.intDigits + info.fracDigits - this.pointPos);
    diff -= this.pointPos - info.intDigits;
    this.pointPos = info.intDigits;
   }
   expPositive = diff <= 0;   
   expList = String(diff < 0 ? -diff : diff).split("");
  } else {
   this.Round(info.fracDigits);
  }
  if(this.digits.length < 1 || this.pointPos < 1)
   intList = [ 0 ];
  else
   this.AppendDigits(intList, 0, this.pointPos);
  this.AppendDigits(fracList, this.pointPos, this.digits.length);
  if(info.exp) {
   while(intList.length < info.intDigits)
    intList.unshift(0);
   while(expList.length < info.expDigits - info.expSharps)
    expList.unshift(0);
   if(expPositive && info.expShowPlus)
    expList.unshift("+");
   else if(!expPositive)
    expList.unshift("-");
  } else {
   while(intList.length < info.intDigits - info.intSharps)
    intList.unshift(0);    
   if(info.intSharps >= info.intDigits) {
    var zero = true;
    for(var i = 0; i < intList.length; i++) {
     if(intList[i] != 0) {
      zero = false;
      break;
     }
    }
    if(zero)
     intList = [ ];
   }
  }
  while(fracList.length < info.fracDigits - info.fracSharps)
   fracList.push(0);
  return {
   i: intList,
   f: fracList,
   e: expList
  };
 },
 FormatCustomCore: function(section, info, lists) {
  var intLen = 0; 
  var total = 0;
  var groupIndex = 0; 
  var counter = 0;
  var groupSize = 0;
  if(info.grouping && ASPx.CultureInfo.numGroups.length > 0) {
   intLen = lists.i.length;
   for(var i = 0; i < ASPx.CultureInfo.numGroups.length; i++) {
    if(total + ASPx.CultureInfo.numGroups[i] <= intLen) {
     total += ASPx.CultureInfo.numGroups[i];
     groupIndex = i;
    }
   }
   groupSize = ASPx.CultureInfo.numGroups[groupIndex];
   var fraction = intLen > total ? intLen - total : 0;
   if(groupSize == 0) {
    while(groupIndex >= 0 && ASPx.CultureInfo.numGroups[groupIndex] == 0)
     groupIndex--;
    groupSize = fraction > 0 ? fraction : ASPx.CultureInfo.numGroups[groupIndex];
   }
   if(fraction == 0) {
    counter = groupSize;
   } else {
    groupIndex += Math.floor(fraction / groupSize);
    counter = fraction % groupSize;
    if(counter == 0)
     counter = groupSize;
    else
     groupIndex++;
   }
  } else {
   info.grouping = false;
  }
  var bag = [ ];
  var area = "i";
  var intSharps = 0;
  var intListIndex = 0;
  var fracListIndex = 0;
  var savedCh = "";
  for(var i = 0; i < section.length; i++) {
   var ch = section.charAt(i);
   if(ch == savedCh) {
    savedCh = "";
    continue;
   }
   if(savedCh != "") {
    bag.push(ch);
    continue;
   }
   switch(ch) {
    case "\\":
     ++i;
     if(i < section.length)
      bag.push(section.charAt(i));
     continue;
    case "'":
    case '"':     
     savedCh = ch;
     continue;
    case "#":     
    case "0":
     if(area == "i") {
      intSharps++;
      if(ch == "0" || info.intDigits - intSharps < lists.i.length + intListIndex) {
       while(info.intDigits - intSharps + intListIndex < lists.i.length) {
        bag.push(lists.i[intListIndex]);
        intListIndex++;
        if(info.grouping && --intLen > 0 && --counter == 0) {
         bag.push(ASPx.CultureInfo.numGroupSeparator);
         if(--groupIndex < ASPx.CultureInfo.numGroups.length && groupIndex >= 0)
          groupSize = ASPx.CultureInfo.numGroups[groupIndex];
         counter = groupSize;
        }
       }
      }
     } else if(area == "f") {
      if(fracListIndex < lists.f.length) {
       bag.push(lists.f[fracListIndex]);
       fracListIndex++;
      }
     }
     break;
    case "e":
    case "E":
     if(lists.e == null || !info.exp) {
      bag.push(ch);
      break;
     }
     for(var q = i + 1; q < section.length; q++) {
      if(q == i + 1 && (section.charAt(q) == "+" || section.charAt(q) == "-"))
       continue;                   
      if(section.charAt(q) == "0" || section.charAt(q) == "#")
       continue;
      break;
     }
     i = q - 1;
     area = info.pointPos < 0 ? "i" : "f";
     bag.push(ch);
     bag = bag.concat(lists.e);
     lists.e = null;      
     break;
    case ".":
     if(info.pointPos == i && lists.f.length > 0)
      bag.push(ASPx.CultureInfo.numDecimalPoint);
     area = "f";
     break;
    case ",":
     break;
    default:
     bag.push(ch);
     break;
   }
  }
  if(!this.positive)
   bag.unshift("-");
  return bag.join("");
 },
 FillDigitInfo: function(value) {
  this.positive = true;
  if(value < 0) {
   value = -value;
   this.positive = false;   
  }
  this.digits = [ ];
  this.pointPos = 0;    
  if(value == 0 || !isFinite(value) || isNaN(value)) {
   this.pointPos = 1;
   return;
  }
  var list = String(value).split("e");
  var str = list[0];
  if(list.length > 1) {   
   this.pointPos = Number(list[1]);
  }
  var frac = false;
  var decimalCount = 0;
  for(var i = 0; i < str.length; i++) {
   var ch = str.charAt(i);
   if(ch == ".") {
    frac = true;
   } else {
    if(frac)
     decimalCount++;     
    if(ch != "0" || this.digits.length > 0)
     this.digits.push(Number(ch));
   }
  }
  this.pointPos += this.digits.length - decimalCount;
 },
 FillFormatInfo: function(format) {
  this.upper = true;
  this.custom = false;
  this.prec = -1;
  var spec;
  if(format == null || format.length < 1)
   spec = "G";
  else
   spec = format.charAt(0);
  if(spec >= "a" && spec <= "z") {
   spec = spec.toUpperCase();
   this.upper = false;
  }
  if(spec >= "A" && spec <= "Z") {   
   if(format != null && format.length > 1) {
    var prec = Number(format.substr(1));
    if(!isNaN(prec))
     this.prec = prec;
    else
     this.custom = true;
   }
  } else {
   this.custom = true;   
  }  
  this.spec = this.custom ? "0" : spec;
 },
 Round: function(shift) {
  var amount = this.digits.length - this.pointPos - shift;
  if(amount <= 0) 
   return;
  var cutPos = this.pointPos + shift;
  if(cutPos < 0) {
   this.digits = [ ];
   this.pointPos = 0;
   return;
  }
  var digit = this.digits[cutPos];
  if(digit > 4) { 
   for(var i = 0; i < amount; i++) {
    var index = cutPos - 1 - i;
    if(index < 0) {
     this.digits.unshift(0);
     this.pointPos++;
     cutPos++;
     index++;
    }
    digit = this.digits[index];    
    if(digit < 9) {
     this.digits[index] = 1 + digit;
     break;
    } else {
     this.digits[index] = 0;
     amount++;
    }
   }
  }
  for(var i = cutPos - 1; i >= 0; i--) {
   if(this.digits[i] > 0) break;
   cutPos--;
  }
  this.digits.splice(cutPos, this.digits.length - cutPos);
 },
 AppendGroupedInteger: function(list, groups, separator) { 
  if(this.pointPos < 1) {
   list.push(0);
   return;
  }
  var total = 0;
  var groupIndex = 0;
  for(var i = 0; i < groups.length; i++) {
   if(total + groups[i] <= this.pointPos) {
    total += groups[i];
    groupIndex = i;
   }
   else
    break;
  }
  if(groups.length > 0 && total > 0) {
   var counter;
   var groupSize = groups[groupIndex];
   var fraction = this.pointPos > total ? this.pointPos - total : 0;
   if(groupSize == 0) {
    while(groupIndex >= 0 && groups[groupIndex] == 0)
     groupIndex--;
    groupSize = fraction > 0 ? fraction : groups[groupIndex];
   }
   if(fraction == 0) {
    counter = groupSize;
   } else {
    groupIndex += Math.floor(fraction / groupSize);
    counter = fraction % groupSize;
    if(counter == 0)
     counter = groupSize;
    else
     groupIndex++;
   }
   var i = 0;
   while(true) {
    if(this.pointPos - i <= counter || counter == 0) {
     this.AppendDigits(list, i, this.pointPos);
     break;
    }
    this.AppendDigits(list, i, i + counter);
    list.push(separator);
    i += counter;    
    groupIndex--;     
    if(groupIndex < groups.length && groupIndex >= 0)
     groupSize = groups[groupIndex];
    counter = groupSize;
   }
  } else {
   this.AppendDigits(list, 0, this.pointPos);   
  }  
 },
 AppendDigits: function(list, start, end) {
  for(var i = start; i < end; i++) {
   if(i < 0 || i >= this.digits.length)
    list.push(0);
   else
    list.push(this.digits[i]);
  }
 }
};
})();
(function() {
var dropDownNameSuffix = "_DDD";
var itemImageCellClassName = "dxeIIC";
var ASPxClientDropDownEditBase = ASPx.CreateClass(ASPxClientButtonEditBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.DropDown = new ASPxClientEvent();
  this.CloseUp = new ASPxClientEvent();
  this.QueryCloseUp = new ASPxClientEvent();
  this.ddHeightCache = ASPx.InvalidDimension;
  this.ddWidthCache = ASPx.InvalidDimension;
  this.mainElementWidthCache = ASPx.InvalidDimension;
  this.dropDownButtonIndex = -1;
  this.droppedDown = false;
  this.ddButtonPushed = false;
  this.lastSuccessText = "";
  this.isToolbarItem = false;
  this.allowFocusDropDownWindow = false;
  this.pcIsShowingNow = false;
  this.needTimeoutForInputElementFocusEvent = false;
  aspxGetDropDownCollection().Add(this);
 },
 Initialize: function(){
  var pc = this.GetPopupControl();
  if(pc) {
   pc.allowCorrectYOffsetPosition = false;
   pc.dropDownEditName = this.name;
  }
  this.AssignClientAttributes();
  this.InitLastSuccessText();
  if(this.RefocusOnClickRequired()){ 
   ASPx.Evt.AttachEventToElement(this.GetMainElement(), "click", function(evt) {
    if(this.GetInputElement() && ASPx.Evt.GetEventSource(evt).id != this.GetInputElement().id) 
     this.ForceRefocusEditor(evt);
   }.aspxBind(this));
  }
  ASPxClientButtonEditBase.prototype.Initialize.call(this);
 },
 InitLastSuccessText: function(){
  var rawText = this.GetTextInternal();
  this.SetLastSuccessText(rawText);
 },
 AssignClientAttributes: function(){
  var element = this.GetDropDownButton();
  if(ASPx.IsExistsElement(element))
   ASPx.Evt.PreventElementDragAndSelect(element, true);
 },
 RefocusOnClickRequired: function(){
  return false;
 },
 GetDropDownButton: function(){
  return this.GetButton(this.dropDownButtonIndex);
 },
 GetPopupControl: function(){
  var pc = ASPx.GetControlCollection().Get(this.name + dropDownNameSuffix);
  if(pc && pc.GetWindowElement(-1))
   return pc;
  else
   return null;
 },
 GetDropDownInnerControlName: function(suffix){
  var pc = this.GetPopupControl();
  if(pc)
   return this.GetPopupControl().name + suffix;
  return "";
 },
 GetDropDownItemImageCell: function() {
  return ASPx.GetNodesByPartialClassName(this.GetMainElement(), itemImageCellClassName)[0];
 },
 GetIsControlWidthWasChanged: function(){
  return this.mainElementWidthCache == ASPx.InvalidDimension || this.mainElementWidthCache != this.GetMainElement().clientWidth;
 },
 GetDropDownHeight: function(){
  return 0;
 },
 GetDropDownWidth: function(){
  return 0;
 },
 GetDropDownIsWindowElement: function(id, pcPostfix) {
  var pos = id.lastIndexOf(pcPostfix);
  if(pos != -1) {
   var name = id.substring(0, pos);
   var pc = ASPx.GetPopupControlCollection().Get(name);
   if(pc && pc.dropDownEditName)
    return aspxGetDropDownCollection().Get(pc.dropDownEditName);
  }
  return null;
 },
 GetDropDownParents: function() {
  var parents = [ ];
  var mainElement = this.GetMainElement();
  var pcPostfix = ASPx.PCWIdSuffix + "-1";
  var element = mainElement.parentNode;
  while(element != null){
   if(element.tagName == "BODY")
    break;
   if(ASPx.Attr.IsExistsAttribute(element, "id")) { 
    var dropDown = this.GetDropDownIsWindowElement(ASPx.Attr.GetAttribute (element, "id"), pcPostfix);
    if(dropDown != null)
     parents.push(dropDown);
   }
   element = element.parentNode;
  }
  return parents.reverse();
 },
 BeforePopupControlResizing: function() {
 },
 AfterPopupControlResizing: function() {
 },
 ShowDropDownArea: function(isRaiseEvent, forceSize) {
  this.SetPCIsShowingNow(true);
  aspxGetDropDownCollection().RegisterDroppedDownControl(this, this.GetDropDownParents());
  if(!this.droppedDown) 
   this.SetLockListBoxClick();
  this.lockClosing = true; 
  var pc = this.GetPopupControl();
  var element = this.GetMainElement();
  var pcwElement = pc.GetWindowElement(-1);
  if(!ASPx.GetElementDisplay(pcwElement)) {
   pcwElement.style.visibility = "hidden";
  }
  ASPx.SetElementDisplay(pcwElement, true);
  if(ASPx.Browser.Chrome && pcwElement.clientHeight <= 0) 
   this.RestorePopupInsideNonStaticPositionedContainer();
  var height = forceSize ? forceSize.height : this.GetDropDownHeight();
  var width = forceSize ? forceSize.width : this.GetDropDownWidth();
  this.BeforePopupControlResizing();
  if(this.ddHeightCache != height || this.ddWidthCache != width || forceSize) {
   pc.SetSize(width, height);
   if(!forceSize) {
    this.ddHeightCache = height;
    this.ddWidthCache = width;
   }
  }
  this.AfterPopupControlResizing();
  if(ASPx.Browser.Chrome && pcwElement.clientHeight <= 0) 
   this.RestorePopupInsideNonStaticPositionedContainer();
  pc.popupVerticalOffset = - ASPx.GetClientTop(element);
  this.RaiseDropDownEventRequired = isRaiseEvent;
  var needRefreshHorzScroll = ASPx.Browser.Chrome && document.body.scrollWidth > document.body.clientWidth && pc.getParentPopupControl(-1); 
  if(needRefreshHorzScroll)
   ASPx.Attr.ChangeStyleAttribute(document.body, "overflow-x", "hidden");
  pc.ShowAtElement(element);
  if(needRefreshHorzScroll)
   ASPx.Attr.RestoreStyleAttribute(document.body, "overflow-x");
  this.droppedDown = true;
  this.lockClosing = false;
 },
 HideDropDownArea: function(isRaiseEvent){
  if(this.lockClosing || !this.droppedDown) return;
  if(!this.RaiseQueryCloseUp()) {
   return;
  }
  this.RemoveLockListBoxClick();
  this.DropDownButtonPop();
  var pc = this.GetPopupControl();
  if(pc){
   aspxGetDropDownCollection().UnregisterDroppedDownControl(this);
   pc.Hide();
   if(isRaiseEvent)
    this.RaiseCloseUp();
   this.droppedDown = false;
  }
 },
 RestorePopupInsideNonStaticPositionedContainer: function() {
  var pc = this.GetPopupControl();
  var pcwElement = pc.GetWindowElement(-1);
  var pcwParentElement = pcwElement.parentNode;
  var offsetParentElement = pcwElement.offsetParent;
  if(!offsetParentElement || offsetParentElement.tagName == "BODY") return;
  pcwParentElement.style.position = "relative";
  setTimeout(
   function() { 
    pcwParentElement.style.position = "";
    pc.ShowAtElement(this.GetMainElement());
   }.aspxBind(this)
  , 0);
 },
 SetLockListBoxClick: function() {
  this.lockListBoxClick = true;
 },
 RemoveLockListBoxClick: function() {
  delete this.lockListBoxClick;
 },
 ProcessInternalButtonClick: function(buttonIndex) {
  return this.dropDownButtonIndex == buttonIndex;
 },
 ToggleDropDown: function(){
  this.OnApplyChanges();
  if(this.droppedDown)
   this.HideDropDownArea(true);
  else
   this.ShowDropDownArea(true);  
 },
 GetTextInternal: function(){
  var text = ASPxClientButtonEditBase.prototype.GetValue.call(this);
  return text != null ? text : "";
 },
 SetTextInternal: function(text){
  if(!this.readOnly)
   this.SetTextBase(text);
 },
 SetTextBase: function(text) {
  ASPxClientButtonEditBase.prototype.SetValue.call(this, text);
 },
 SetValue: function(value) {
  ASPxClientButtonEditBase.prototype.SetValue.call(this, value);
  this.SetLastSuccessText(this.GetTextInternal());
 },
 SetLastSuccessText: function(text){
  var tmpText = text;
  if(text == null) tmpText = "";
  else if(typeof(text) != "string")
     tmpText = text.toString();
  this.lastSuccessText = tmpText;
 },
 SetVisible: function(visible) {
  ASPxClientButtonEditBase.prototype.SetVisible.call(this, visible);
  if(!visible)
   this.HideDropDown();
 },
 RollbackTextInputValue: function () {
  this.SetTextBase(this.lastSuccessText);
 },
 SetPCIsShowingNow: function(value){
  this.pcIsShowingNow = value;
 },
 GetLastSuccesfullValue: function() {
  return this.lastSuccessText !== '' ? this.lastSuccessText : null;
 },
 OnValueChanged: function() {
  this.SetLastSuccessText(this.GetTextInternal());
  ASPxClientEdit.prototype.OnValueChanged.call(this);
 },
 OnApplyChanges: function(){
 },
 OnCancelChanges: function(){
  var isCancelProcessed = (this.GetTextInternal() != this.lastSuccessText);
  this.SetTextInternal(this.lastSuccessText);
  return isCancelProcessed;
 },
 OnFocus: function () {
  if(this.CorrectFocusWhenDisabled())
   return;
  if(ASPx.Browser.IE && this.needTimeoutForInputElementFocusEvent) {
   setTimeout(function () {
    this.OnSetFocus(true);
    ASPxClientButtonEditBase.prototype.OnFocus.call(this);
    this.needTimeoutForInputElementFocusEvent = false;
   }.aspxBind(this), 0);
  } else {
   this.OnSetFocus(true);
   ASPxClientButtonEditBase.prototype.OnFocus.call(this);
  }
 },
 OnLostFocus: function(){
  this.OnSetFocus(false);
  ASPxClientButtonEditBase.prototype.OnLostFocus.call(this);
 },
 OnSetFocus: function(isFocused){
  aspxGetDropDownCollection().SetFocusedDropDownName(isFocused ? this.name : "");
 },
 IsEditorElement: function(element) {
  if(ASPxClientButtonEditBase.prototype.IsEditorElement.call(this, element))
   return true;
  if(this.allowFocusDropDownWindow)
   return false;
  var pc = this.GetPopupControl();
  if(pc != null) {
   var windowElement = pc.GetWindowElement(-1);
   return windowElement == element || ASPx.GetIsParent(windowElement, element);
  }
  return false;
 },
 OnPopupControlShown: function(){
  this.SetPCIsShowingNow(false);
  if(this.RaiseDropDownEventRequired){
   this.RaiseDropDownEventRequired = false;
   window.setTimeout(function() { this.RaiseDropDown(); }.aspxBind(this), 0);
  }
 },
 IsCanToDropDown: function(){
  return true;
 },
 OnDropDown: function(evt) { 
  if(!this.isInitialized) 
   return true;
  if(!this.IsCanToDropDown()) {
   this.ForceRefocusEditor(evt);
   return true;
  }
  if(ASPx.Browser.IE && ASPx.Browser.Version < 9 || ASPx.Browser.Opera){
   if(!this.droppedDown) {
    ASPx.Evt.EmulateOnMouseDown(this.GetMainElement(), evt);
    ASPx.GetStateController().ClearSavedCurrentPressedElement();
   }
  }
  this.OnDropDownCore(evt);
  return ASPx.Evt.CancelBubble(evt); 
 },
 OnDropDownCore: function(evt) {
  if(!this.droppedDown)
   this.DropDownButtonPush();
  this.ToggleDropDown();
  var inputElement = this.GetInputElement();
  var isNativeFocus = !!inputElement ? this.IsElementBelongToInputElement(ASPx.Evt.GetEventSource(evt)) : false;
  this.ForceRefocusEditor(evt, isNativeFocus);
 },
 DropDownButtonPush: function(){
  if(this.droppedDown || this.ddButtonPushed) return;
  this.ddButtonPushed = true;
  if(ASPx.Browser.IE && ASPx.Browser.Version < 9 || ASPx.Browser.Opera)
   this.DropDownButtonPushPop(true);
  else
   this.DropDownButtonPushMozilla();
 }, 
 DropDownButtonPop: function(force){
  if((!this.droppedDown || !this.ddButtonPushed) && !force) return;
  this.ddButtonPushed = false;
  if(ASPx.Browser.IE && ASPx.Browser.Version < 9 || ASPx.Browser.Opera)
   this.DropDownButtonPushPop(false);
  else
   this.DropDownButtonPopMozilla();
 },
 DropDownButtonPushPop: function(isPush){
  var buttonElement = this.GetDropDownButton();
  if(buttonElement){
   var controller = ASPx.GetStateController();
   var element = controller.GetPressedElement(buttonElement);
   if(element){
    if(isPush){
     controller.SetCurrentHoverElement(null);
     controller.DoSetPressedState(element);
    } else {
     controller.DoClearPressedState(element);
     controller.SetCurrentPressedElement(null);
     controller.SetCurrentHoverElement(element);
    }
   }
  }
 },
 DropDownButtonPushMozilla: function(){
  this.DisableStyleControllerForDDButton();
  var controller = ASPx.GetStateController();
  controller.savedCurrentPressedElement = null;
 },
 DropDownButtonPopMozilla: function(){
  this.EnableStyleControllerForDDButton();
  var controller = ASPx.GetStateController();
  var buttonElement = this.GetDropDownButton();
  if(buttonElement){
   var element = controller.GetPressedElement(buttonElement);
   if(element)
    controller.DoClearPressedState(element);
   controller.currentPressedElement = null;
   element = controller.GetHoverElement(buttonElement);
   if(element)
    controller.SetCurrentHoverElement(element);
  }
 },
 EnableStyleControllerForDDButton: function(){
  var element = this.GetDropDownButton();
  if(element){
   var controller = ASPx.GetStateController();
   this.ReplaceElementControlStyleItem(controller.hoverItems, ASPx.HoverItemKind, element, this.ddButtonHoverStyle);
   this.ReplaceElementControlStyleItem(controller.pressedItems, ASPx.PressedItemKind, element, this.ddButtonPressedStyle);
   this.ReplaceElementControlStyleItem(controller.selectedItems, ASPx.SelectedItemKind, element, this.ddButtonSelectedStyle);
  }
 },
 DisableStyleControllerForDDButton: function(){
  var element = this.GetDropDownButton();
  if(element){
   var controller = ASPx.GetStateController();
   this.ddButtonHoverStyle = this.ReplaceElementControlStyleItem(controller.hoverItems, ASPx.HoverItemKind, element, null);
   this.ddButtonPressedStyle = this.ReplaceElementControlStyleItem(controller.pressedItems, ASPx.PressedItemKind, element, null);
   this.ddButtonSelectedStyle = this.ReplaceElementControlStyleItem(controller.selectedItems, ASPx.SelectedItemKind, element, null);
  }
 },
 ReplaceElementControlStyleItem: function(items, kind, element, newStyleItem){
  var styleItem = items[element.id];
  items[element.id] = newStyleItem;
  element[kind] = newStyleItem;
  return styleItem;
 },
 CloseDropDownByDocumentOrWindowEvent: function(causedByWindowResizing){
  if(!causedByWindowResizing || !this.pcIsShowingNow)
   this.HideDropDownArea(true);
 },
 OnDocumentMouseUp: function() {
  this.DropDownButtonPop();
 },
 OnDDButtonMouseMove: function(evt){
 },
 ShouldCloseOnMCMouseDown: function () {
  return true;
 },
 OnMainCellMouseDown: function (evt) {
  if(this.ShouldCloseOnMCMouseDown())
   this.OnCloseUp(evt);
 },
 OnCloseUp: function (evt) {
  if(ASPx.Browser.IE) {
   this.needTimeoutForInputElementFocusEvent = true;
   setTimeout(function () { this.HideDropDownArea(true); }.aspxBind(this), 0);
  } else {
   this.HideDropDownArea(true);
  }
 },
 OnOpenAnotherDropDown: function(){
  this.HideDropDownArea(true);
 },
 OnTextChanged: function() {
  if(!this.ChangedByEnterKeyPress())
   this.OnTextChangedInternal();
 },
 OnTextChangedInternal: function() {
  this.ParseValue();
 },
 ChangedByEnterKeyPress: function() {
  if(ASPx.Browser.Firefox || ASPx.Browser.WebKitFamily) 
   if(this.enterKeyPressed) {
    this.enterKeyPressed = false;
    return true;
   } 
  return false;
 },
 ChangeEnabledAttributes: function(enabled){
  ASPxClientButtonEditBase.prototype.ChangeEnabledAttributes.call(this, enabled);
  var btnElement = this.GetDropDownButton();
  if(btnElement)
   this.ChangeButtonEnabledAttributes(btnElement, ASPx.Attr.ChangeAttributesMethod(enabled));
  var inputElement = this.GetInputElement();
  if(inputElement)
   this.ChangeInputCellEnabledAttributes(inputElement.parentNode, ASPx.Attr.ChangeAttributesMethod(enabled));
  var imageCell = this.GetDropDownItemImageCell();
  if(ASPx.IsExists(imageCell))
   this.ChangeImageCellEnabledAttributes(imageCell, ASPx.Attr.ChangeAttributesMethod(enabled));
 },
 ChangeEnabledStateItems: function(enabled){
  ASPxClientButtonEditBase.prototype.ChangeEnabledStateItems.call(this, enabled);
  var btnElement = this.GetDropDownButton();
  if(btnElement)
   ASPx.GetStateController().SetElementEnabled(btnElement, enabled);
 },
 ChangeInputCellEnabledAttributes: function(element, method){
  method(element, "onclick");
  method(element, "onkeyup");
  method(element, "on" + ASPx.TouchUIHelper.touchMouseDownEventName);
  method(element, "on" + ASPx.TouchUIHelper.touchMouseUpEventName);
 },
 ChangeImageCellEnabledAttributes: function(imageCell, method){
  method(imageCell, "onmousedown");
 },
 InitializeKeyHandlers: function() {
  this.AddKeyDownHandler(ASPx.Key.Enter, "OnEnter");
  this.AddKeyDownHandler(ASPx.Key.Esc, "OnEscape");
  this.AddKeyDownHandler(ASPx.Key.PageUp, "OnPageUp");
  this.AddKeyDownHandler(ASPx.Key.PageDown, "OnPageDown");
  this.AddKeyDownHandler(ASPx.Key.End, "OnEndKeyDown");
  this.AddKeyDownHandler(ASPx.Key.Home, "OnHomeKeyDown");
  this.AddKeyDownHandler(ASPx.Key.Left, "OnArrowLeft");
  this.AddKeyDownHandler(ASPx.Key.Right, "OnArrowRight");
  this.AddKeyDownHandler(ASPx.Key.Up, "OnArrowUp");
  this.AddKeyDownHandler(ASPx.Key.Down, "OnArrowDown");
  this.AddKeyDownHandler(ASPx.Key.Tab, "OnTab");
 },
 OnArrowUp: function(evt){
  if(evt.altKey) {
   this.ToggleDropDown();
   return true;
  }
  return false;
 },
 OnArrowDown: function(evt){
  if(evt.altKey) {
   this.ToggleDropDown();
   return true;
  }
  return false;
 },
 OnPageUp: function(evt){
  return false;
 }, 
 OnPageDown: function(evt){
  return false;
 },
 OnEndKeyDown: function(evt){
  return false;
 },
 OnHomeKeyDown: function(evt){
  return false;
 },
 OnArrowLeft: function(evt){
  return false;
 },
 OnArrowRight: function(evt){
  return false;
 },
 OnEscape: function(evt){
  return this.OnEscapeInternal();
 },
 OnEscapeInternal: function() {
  var isCancelProcessed = this.OnCancelChanges() || this.droppedDown;
  this.HideDropDownArea(true);
  return isCancelProcessed;
 },
 OnEnter: function(evt){
  return false;
 },
 OnTab: function(evt){
  return false;
 },
 RaiseCloseUp: function(){
  if(!this.CloseUp.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.CloseUp.FireEvent(this, args);
  }
 },
 RaiseDropDown: function(){
  if(!this.DropDown.IsEmpty() && this.isInitialized){
   var args = new ASPxClientEventArgs();
   this.DropDown.FireEvent(this, args);
  }
 },
 RaiseQueryCloseUp: function(){
  if(!this.QueryCloseUp.IsEmpty() && this.isInitialized) {
   var args = new ASPxClientCancelEventArgs();
   this.QueryCloseUp.FireEvent(this, args);
   return !args.cancel;
  }
  return true;
 },
 AdjustDropDownWindow: function(){
  var pc = this.GetPopupControl();
  if(pc) {
   if(ASPx.Browser.IE)
    ASPx.GetPopupControlCollection().LockWindowResizeByBodyScrollVisibilityChanging();
   pc.AdjustSize();
   pc.UpdatePositionAtElement(this.GetMainElement());
   if(ASPx.Browser.IE)
    ASPx.GetPopupControlCollection().UnlockWindowResizeByBodyScrollVisibilityChanging();
  }
 },
 ResetDropDownSizeCache: function(){
  this.ddHeightCache = ASPx.InvalidDimension;
  this.ddWidthCache = ASPx.InvalidDimension;
 },
 ShowDropDown: function(){
  if(!this.droppedDown)
   this.ShowDropDownArea(false);
 },
 HideDropDown: function(){
  if(this.droppedDown)
   this.HideDropDownArea(false);
 }
});
var ASPxClientDropDownEdit = ASPx.CreateClass(ASPxClientDropDownEditBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.dropDownWindowHeight = "";
  this.dropDownWindowWidth = "";
  this.allowFocusDropDownWindow = true;
  this.needAdjustControlsInDropDownWindow = true;
 },
 InlineInitialize: function(){
  this.InitSpecialKeyboardHandling();
  this.InitializeEvents();
  this.eventHandlersInitialized = true;
  ASPxClientDropDownEditBase.prototype.InlineInitialize.call(this);
 },
 RefocusOnClickRequired: function(){
  return ASPx.Browser.IE;
 },
 BeforePopupControlResizing: function() {
  var divContainer = this.GetDropDownDivContainer();
  if(divContainer && this.needAdjustControlsInDropDownWindow) {
   this.AdjustControlsInDropDownWindow();
   ASPx.SetElementDisplay(divContainer, false);
  }
 },
 AfterPopupControlResizing: function() {
  var divContainer = this.GetDropDownDivContainer();
  if(divContainer && this.needAdjustControlsInDropDownWindow) {
   ASPx.SetElementDisplay(divContainer, true);
   this.AdjustControlsInDropDownWindow();
   this.needAdjustControlsInDropDownWindow = false;
  }
 },
 AdjustControlsInDropDownWindow: function() {
  var pc = this.GetPopupControl();
  var pcwElement = pc.GetWindowElement(-1);
  ASPx.GetControlCollection().ProcessControlsInContainer(pcwElement, function(control) {
   control.AdjustControl(false);
  });
 },
 GetDropDownDivContainer: function() {
  return ASPx.GetElementById(this.name + dropDownNameSuffix + "_DDDC");
 },
 GetDropDownHeight: function(){
  if(this.dropDownWindowHeight != "")
   return this.dropDownWindowHeight;
  return ASPxClientDropDownEditBase.prototype.GetDropDownHeight.call(this);
 },
 GetDropDownWidth: function(){
  if(this.dropDownWindowWidth != "")
   return this.dropDownWindowWidth;
  return this.GetMainElement().offsetWidth;
 },
 CloseDropDownByDocumentOrWindowEvent: function(causedByWindowResizing){
  if(!ASPx.GetPopupControlCollection().WindowResizeByBodyScrollVisibilityChangingLocked())
   ASPxClientDropDownEditBase.prototype.CloseDropDownByDocumentOrWindowEvent.call(this, causedByWindowResizing);
 },
 OnBrowserWindowResize: function(evt){
  this.needAdjustControlsInDropDownWindow = true;
 },
 OnEnter: function(evt){
  return this.droppedDown;
 },
 OnEscape: function(evt){
  var isCancelProcessed = this.droppedDown;
  this.HideDropDownArea(true);
  return isCancelProcessed;
 },
 OnTextChanged: function() {
  this.OnValueChanged();
 },
 GetKeyValueInternal: function(){
  if(ASPx.IsExists(this.stateObject))
   return this.stateObject.keyValue;
  return null;
 },
 SetKeyValueInternal: function(keyValue){
  this.UpdateStateObjectWithObject({ keyValue: keyValue });
 },
 GetKeyValue: function(){
  return this.GetKeyValueInternal();
 },
 SetKeyValue: function(keyValue){
  this.SetKeyValueInternal(keyValue);
 }
});
ASPxClientDropDownEdit.Cast = ASPxClientControl.Cast;
var ASPxClientDropDownCollection = ASPx.CreateClass(ASPxClientControlCollection, {
 constructor: function() {
  this.constructor.prototype.constructor.call(this);
  this.droppedControlName = "";
  this.droppedParentNames = [ ];
  this.focusedControlName = "";
 },
 GetCollectionType: function(){
  return "DropDown";
 },
 SetFocusedDropDownName: function(name){
  this.focusedControlName = name;
 },
 ResetDroppedDownControl: function(){
  this.droppedControlName = "";
 },
 ResetDroppedDownParentCollection: function(startDroppedDownControlName) {
  var regArray = [ ];
  for(var i = 0; i < this.droppedParentNames.length; i++) {
   if(this.droppedParentNames[i] == startDroppedDownControlName)
    break;
   regArray.push(this.droppedParentNames[i]);
  }
  this.droppedParentNames = regArray;
  if(this.droppedParentNames.length > 0) {
   this.droppedControlName = this.droppedParentNames[this.droppedParentNames.length - 1];
   ASPx.Data.ArrayRemoveAt(this.droppedParentNames, this.droppedParentNames.length - 1);
  }
 },
 ResetFocusedControl: function(){
  this.focusedControlName = "";
 },
 GetFocusedDropDown: function(){
  var control = this.GetDropDownControlInternal(this.focusedControlName);
  if(control == null) this.ResetFocusedControl();
  return control;
 },
 GetDroppedDropDown: function(){
  var control = this.GetDropDownControlInternal(this.droppedControlName);
  if(control == null) this.ResetDroppedDownControl();
  return control;
 },
 GetDroppedDropDownParents: function(startDroppedDownControlName) {
  var dropDownArray = [ ];
  var isNeedGetControl = false;
  for(var i = 0; i < this.droppedParentNames.length; i++) {
   if(this.droppedParentNames[i] == startDroppedDownControlName) isNeedGetControl = true;
   if(isNeedGetControl)
    var control = this.GetDropDownControlInternal(this.droppedParentNames[i]);
    if(control != null)
     dropDownArray.push(control);
  }
  return dropDownArray;
 },
 FindFirstNameForClose: function(newDroppedDownParentArray) {
  var firstNameToClose = newDroppedDownParentArray.length > 0 ? "" : this.droppedParentNames[i];
  for(var i = 0; i < this.droppedParentNames.length; i++) {
   if(ASPx.Data.ArrayIndexOf(newDroppedDownParentArray, this.Get(this.droppedParentNames[i])) == -1) {
    firstNameToClose = this.droppedParentNames[i];
    break;
   }
  }
  return firstNameToClose;
 },
 GetDropDownControlInternal: function(name){
  var control = this.Get(name);
  var isControlExists = control && !control.IsDOMDisposed();
  if(!isControlExists)
   control = null;
  return control;
 },
 IsDroppedDropDownParentExist: function(name) {
  for(var i = 0; i < this.droppedParentNames.length; i++) {
   if(this.droppedParentNames[i] == name)
    return true;
  }
  return false;
 },
 OnDDButtonMouseMove: function(evt){
  var dropDownControl = this.GetDroppedDropDown();
  if(dropDownControl != null)
   dropDownControl.OnDDButtonMouseMove(evt);
 },
 OnDocumentMouseDown: function(evt){
  if(!ASPx.TouchUIHelper.handleFastTapIfRequired(evt, function(){ this.CloseDropDownByDocumentOrWindowEvent(evt, false); }.aspxBind(this), false))
   this.CloseDropDownByDocumentOrWindowEvent(evt, false);
 },
 OnDocumentMouseUp: function(evt){
  var dropDownControl = this.GetDroppedDropDown();
  if(dropDownControl != null)
   dropDownControl.OnDocumentMouseUp();
 },
 OnBrowserWindowResize: function(e){
  if(typeof(ASPx.GetPopupControlCollection) != "undefined" && !ASPx.GetPopupControlCollection().WindowResizeByBodyScrollVisibilityChangingLocked()){
   this.CloseDropDownByDocumentOrWindowEvent(e.htmlEvent, true);
   this.AdjustControls();
  }
 },
 CloseDropDownByDocumentOrWindowEvent: function(evt, causedByWindowResizing){
  var dropDownControl = this.GetDroppedDropDown();
  if(dropDownControl != null && (this.IsEventNotFromControlSelf(evt, dropDownControl) || causedByWindowResizing))
   dropDownControl.CloseDropDownByDocumentOrWindowEvent(causedByWindowResizing);
  var childrenDropDownsToClose = this.GetDroppedDropDownParents(this.droppedParentNames[0]);
  if(childrenDropDownsToClose.length != 0) {
   childrenDropDownsToClose = childrenDropDownsToClose.reverse();
   this.ResetDroppedDownParentCollection(this.droppedParentNames[0]);
   var rollbackDroppedDownNames = [ ];
   for(var c = 0; c < childrenDropDownsToClose.length; c++) {
    if(this.IsEventNotFromControlSelf(evt, childrenDropDownsToClose[c]))
     childrenDropDownsToClose[c].CloseDropDownByDocumentOrWindowEvent(causedByWindowResizing);
    else
     rollbackDroppedDownNames.push(childrenDropDownsToClose[c].name);
   }
   if(rollbackDroppedDownNames != 0) {
    rollbackDroppedDownNames = rollbackDroppedDownNames.reverse();
    this.droppedParentNames = rollbackDroppedDownNames;
   }
  }
 },
 AdjustControls: function(){
  this.ForEachControl(function(control) {
   control.AdjustControl(false);
  });
 },
 IsEventNotFromControlSelf: function(evt, control){
  var srcElement = ASPx.Evt.GetEventSource(evt);
  var mainElement = control.GetMainElement();
  var popupControl = control.GetPopupControl();
  if(!srcElement || !mainElement || !popupControl) return true;
  return (!ASPx.GetIsParent(mainElement, srcElement) &&
   !ASPx.GetIsParent(popupControl.GetWindowElement(-1), srcElement) &&
   !this.IsEventFromSharedPopupOfInnerEditor(popupControl, srcElement));
 },
 IsEventFromSharedPopupOfInnerEditor: function(popupControl, srcElement) {
  var eventFromPopupOfInnerEditor = false;
  ASPx.GetControlCollection().ProcessControlsInContainer(popupControl.GetWindowElement(-1),
   function(control){
    if(control.calendarOwnerName) {
     var sharedCalendarPopup = control.GetCalendarOwner().GetPopupControl().GetWindowElement(-1);
     if(ASPx.GetIsParent(sharedCalendarPopup, srcElement))
      eventFromPopupOfInnerEditor = true;
    }
  });
  return eventFromPopupOfInnerEditor;
 },
 RegisterDroppedDownControl: function(dropDownControl, droppedDownParentArray){
  var prevDropDownControl = this.GetDroppedDropDown();
  var areDroppedDownsCollectionParents = ASPx.Data.ArrayIndexOf(droppedDownParentArray, prevDropDownControl) != -1;
  if(prevDropDownControl != null && prevDropDownControl != dropDownControl && !areDroppedDownsCollectionParents)
   prevDropDownControl.OnOpenAnotherDropDown();
  if(this.droppedParentNames.length > 0) {
   var firstDropDownsNameToClose = this.FindFirstNameForClose(droppedDownParentArray);
   if(firstDropDownsNameToClose != "") {
    var childrenDropDownsToClose = this.GetDroppedDropDownParents(firstDropDownsNameToClose);
    this.ResetDroppedDownParentCollection(firstDropDownsNameToClose);
    this.CloseDroppedDownCollection(childrenDropDownsToClose.reverse());
   }
  }
  this.droppedControlName = dropDownControl.name;
  this.droppedParentNames = [ ];
  for(var i = 0; i < droppedDownParentArray.length; i++)
   this.droppedParentNames.push(droppedDownParentArray[i].name);
 },
 UnregisterDroppedDownControl: function(dropDownControl){
  if(this.droppedControlName == dropDownControl.name)
   this.ResetDroppedDownControl();
  if(this.IsDroppedDropDownParentExist(dropDownControl.name)) {
   var prevDropDownControl = this.GetDroppedDropDown();
   if(prevDropDownControl != null)
    prevDropDownControl.OnOpenAnotherDropDown();
   var childrenDropDownsToClose = this.GetDroppedDropDownParents(dropDownControl.name);
   this.ResetDroppedDownParentCollection(dropDownControl.name);
   ASPx.Data.ArrayRemoveAt(childrenDropDownsToClose, 0);
   this.CloseDroppedDownCollection(childrenDropDownsToClose.reverse());
  }
 },
 CloseDroppedDownCollection: function(dropDownParentArray) {
  for(var c = 0; c < dropDownParentArray.length; c++)
   dropDownParentArray[c].OnOpenAnotherDropDown();
 }
});
var dropDownCollection = null;
function aspxGetDropDownCollection() {
 if(dropDownCollection == null)
  dropDownCollection  = new ASPxClientDropDownCollection();
 return dropDownCollection;
}
ASPx.Ident.IsASPxClientDateEdit = function(obj) {
 return !!obj.isASPxClientDateEdit;
};
ASPx.DDDropDown = function(name, evt){
 if(ASPx.Evt.IsLeftButtonPressed(evt)){
  var dd = ASPx.GetControlCollection().Get(name);
  if(dd)
   return dd.OnDropDown(evt);
 }
}
ASPx.DDMC_MD = function(name, evt) {
 var dd = ASPx.GetControlCollection().Get(name);
 if(dd)
  dd.OnMainCellMouseDown(evt);
}
ASPx.DDBPCShown = function(name){
 var cb = ASPx.GetControlCollection().Get(name);
 if(cb != null) cb.OnPopupControlShown();
}
ASPx.CBLBSelectedIndexChanged = function(name, evt){
 var cb = ASPx.GetControlCollection().Get(name);
 if(cb != null) cb.OnLBSelectedIndexChanged();
}
ASPx.CBLBItemMouseUp = function(name, evt){
 var cb = ASPx.GetControlCollection().Get(name);
 if(cb != null) cb.OnListBoxItemMouseUp(evt);
}
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseDownEventName, function(evt) {
 return aspxGetDropDownCollection().OnDocumentMouseDown(evt);
});
ASPx.Evt.AttachEventToDocument("mouseup", function(evt) {
 return aspxGetDropDownCollection().OnDocumentMouseUp(evt);
});
window.ASPxClientDropDownEditBase = ASPxClientDropDownEditBase;
window.ASPxClientDropDownEdit = ASPxClientDropDownEdit;
ASPx.GetDropDownCollection = aspxGetDropDownCollection;
})();

(function() {
var loadFilteredItemsCallbackPrefix = "CBLF";
var correctFilterCallbackPrefix = "CBCF";
var currentSelectedItemCallbackPrefix = "CBSI";
var loadDropDownOnDemandCallbackPrefix = "CBLD";
var listBoxNameSuffix = "_L";
var comboBoxValueInputSuffix = "VI";
var accessibilityAssistID =  "AcAs";
var ASPxClientComboBoxBase = ASPx.CreateClass(ASPxClientDropDownEditBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.lbEventLockCount = 0;
  this.receiveGlobalMouseWheel = false;
  this.listBox = null;
  this.lastSuccessValue = "";
  this.islastSuccessValueInit = false;
  this.SelectedIndexChanged = new ASPxClientEvent();
 },
 Initialize: function(){
  this.InitializeListBoxOwnerName();
  ASPxClientDropDownEditBase.prototype.Initialize.call(this);
  this.InitLastSuccessValue();
 },
 InitializeListBoxOwnerName: function(){
  var lb = this.GetListBoxControl();
  if(lb)
   lb.ownerName = this.name;
 },
 InitLastSuccessValue: function(){
  this.SetLastSuccessValue(this.GetValue());
 },
 SetLastSuccessValue: function (value) {
  if(this.convertEmptyStringToNull && value === "")
   value = null;
  this.lastSuccessValue = value;
  this.islastSuccessValueInit = true;
 },
 GetDropDownInnerControlName: function(suffix){
  return "";
 },
 GetListBoxControl: function(){
  if(!ASPx.IsExists(this.listBox)){
   var name = this.GetDropDownInnerControlName(listBoxNameSuffix);
   this.listBox = ASPx.GetControlCollection().Get(name);
  }
  if(this.isNative || (this.listBox && !!this.listBox.GetMainElement()))
   return this.listBox;
  return null;
 },
 GetCallbackArguments: function(){
  return this.GetListBoxCallbackArguments();
 },
 GetListBoxCallbackArguments: function(){
  var lb = this.GetListBoxControl();
  return lb.GetCallbackArguments();
 },
 SendCallback: function() {
  this.CreateCallback(this.GetCallbackArguments());
 },
 SendSpecialCallback: function(args) {
  this.CreateCallback(args);
 },
 SetText: function (text){
  var lb = this.GetListBoxControl();
  var index = this.GetAdjustedSelectedIndexByText(lb, text);
  this.SelectIndex(index, false);
  this.SetTextBase(text);
  this.SetLastSuccessText(text);
  this.SetLastSuccessValue(index >= 0 ? lb.GetValue() : text);
 },
 GetValue: function(){
  var value = this.islastSuccessValueInit ? this.lastSuccessValue : this.GetValueInternal();
  if(this.convertEmptyStringToNull && value === "")
   value = null;
  return value;
 },
 GetValueInternal: function(){
  var text = this.GetTextInternal();
  var textChanges = text != this.lastSuccessText;
  if(textChanges){
   var lb = this.GetListBoxControl();
   if(lb){
    var index = this.GetAdjustedSelectedIndexByText(lb, text);
    this.SelectIndexSilent(lb, index); 
    if(index != -1)
     return lb.GetValue();
   }
  }
  return ASPxClientDropDownEditBase.prototype.GetValue.call(this);
 },
 GetLastSuccesfullValue: function() {
  return this.GetValue();
 },
 GetSetValueOptimizeHelper: function () {
  this.setValueOptimizeHelper = this.setValueOptimizeHelper || new setValueOptimizeHelper();
  return this.setValueOptimizeHelper;
 },
 SetValue: function (value) {
  this.GetSetValueOptimizeHelper().setValue(this, value);
  if(this.accessibilityCompliant)
   this.accessibilityHelper.SetLabelAttribute(null, null);
 },
 SetValueInternal: function(value) {
  var lb = this.GetListBoxControl();
  if (lb) {
   lb.SetValue(value);
   var item = lb.GetSelectedItem();
   var text = item ? item.text : value;
   this.OnSelectionChangedCore(text, item, false);
   this.UpdateValueInput();
  }
 },
 GetFormattedText: function() {
  return this.GetText();
 },
 GetAdjustedSelectedIndexByText: function(lb, text){
  var lbSelectedItem = lb.GetSelectedItem();
  if(lbSelectedItem != null && lbSelectedItem.text == text)
   return lbSelectedItem.index;
  return this.FindItemIndexByText(lb, text);
 },
 FindItemIndexByText: function(lb, text){
  if(lb)
   return lb.FindItemIndexByText(text);
 },
 CollectionChanged: function(){
 },
 HasChanges: function(){
  return false;
 },
 SelectIndex: function(index, initialize){
  var lb = this.GetListBoxControl();
  var isSelectionChanged = lb.SelectIndexSilentAndMakeVisible(index, initialize);
  var item = lb.GetSelectedItem();
  var text = item != null ? item.text : "";
  if(isSelectionChanged || this.HasChanges())
   this.OnSelectionChangedCore(text, item, false);
  this.UpdateValueInput();
  return isSelectionChanged;
 },
 OnSelectChanged: function(){
  if(this.lbEventLockCount > 0) return;
  var lb = this.GetListBoxControl();
  var item = lb.GetSelectedItem();
  var text = item != null ? item.text : "";
  this.OnSelectionChangedCore(text, item, false);
  this.OnChange();
 },
 OnSelectionChangedCore: function(text, item, canBeRolledBack){
  this.SetTextBase(text);
  this.ShowItemImage(item);
  if(!canBeRolledBack){
   this.SetLastSuccessText(text);
   this.SetLastSuccessValue(item != null ? item.value : text);
  }
  if(this.filterStrategy) {
   if(!canBeRolledBack)
    this.filterStrategy.OnSelectionChanged();
   if(ASPx.Browser.IE) { 
    var inputElement = this.GetInputElement();
    if(ASPx.GetActiveElement() == inputElement)
     ASPx.Selection.Set(inputElement, inputElement.value.length, inputElement.value.length);
   }
  }
 },
 ShowItemImageByIndex: function(index){
  var item = this.GetItem(index);
  this.ShowItemImage(item);
 },
 ShowItemImage: function(item){
  var imageUrl = item != null ? item.imageUrl : "";
  this.SetSelectedImage(imageUrl);
 },
 GetDropDownImageElement: function(){
  var itemImageCell = this.GetDropDownItemImageCell();
  if(itemImageCell != null)
   return ASPx.GetNodeByTagName(itemImageCell, "IMG", 0);
  return null;
 },
 SetSelectedImage: function(imageUrl) {
  var imgElement = this.GetDropDownImageElement();
  if(imgElement != null) {
   var imageExists = imageUrl != "";
   imageUrl = imageExists ? imageUrl : ASPx.EmptyImageUrl;
   imgElement.src = imageUrl;
   var itemImageCell = this.GetDropDownItemImageCell();
   if(ASPx.GetElementDisplay(itemImageCell) != imageExists)
    ASPx.SetElementDisplay(itemImageCell, imageExists);
   if(ASPx.Browser.IE) {
    this.AdjustControl();
   }
  }
 },
 OnCallback: function(result) {
 },
 OnChange: function(){
  this.UpdateValueInput();
  this.RaisePersonalStandardValidation();
  this.OnValueChanged();
 },
 UpdateValueInput: function() {
 },
 RaiseValueChangedEvent: function() {
  if(!this.isInitialized) return;
  var processOnServer = ASPxClientTextEdit.prototype.RaiseValueChangedEvent.call(this);
  processOnServer = this.RaiseSelectedIndexChanged(processOnServer);
  return processOnServer;
 },
 RaiseSelectedIndexChanged: function(processOnServer) {
  if(!this.SelectedIndexChanged.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.SelectedIndexChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 AddItem: function(text, value, imageUrl){
  var index = this.GetListBoxControl().AddItem(text, value, imageUrl);
  this.CollectionChanged();
  return index;
 },
 InsertItem: function(index, text, value, imageUrl){
  this.GetListBoxControl().InsertItem(index, text, value, imageUrl);
  this.CollectionChanged();
 },
 RemoveItem: function(index){
  this.GetListBoxControl().RemoveItem(index);
  this.CollectionChanged();
 },
 ClearItems: function(){
  this.GetListBoxControl().ClearItems();
  this.ClearItemsInternal();
 },
 BeginUpdate: function(){
   this.GetListBoxControl().BeginUpdate();
 },
 EndUpdate: function(){
  this.GetListBoxControl().EndUpdate();
  this.CollectionChanged();
 },
 MakeItemVisible: function(index){
 },
 GetItem: function(index){
  var lb = this.GetListBoxControl();
  if(lb)
   return this.GetListBoxControl().GetItem(index);
  else
   return null;
 },
 FindItemByText: function(text) {
  var lb = this.GetListBoxControl();
  if(lb)
   return lb.FindItemByText(text);
  return null;
 },
 FindItemByValue: function(value){
  return this.GetListBoxControl().FindItemByValue(value);
 },
 GetItemCount: function(){
  return this.GetListBoxControl().GetItemCount(); 
 },
 GetSelectedIndex: function(){
  var lb = this.GetListBoxControl();
  if(lb)
   return lb.GetSelectedIndex();
  else
   return -1;
 },
 SetSelectedIndex: function(index){
  this.SelectIndex(index, false);
 },
 GetSelectedItem: function(){
  var lb = this.GetListBoxControl();
  var index = lb.GetSelectedIndex();
  return lb.GetItem(index);
 },
 SetSelectedItem: function(item){
  var index = (item != null) ? item.index : -1;
  this.SelectIndex(index, false);
 },
 GetText: function(){
  return this.lastSuccessText;
 },
 PerformCallback: function(arg) {
 },
 ClearItemsInternal: function(){
  this.SetValue(null);
  this.CollectionChanged();
 }
});
var ASPxClientComboBox = ASPx.CreateClass(ASPxClientComboBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.allowMultipleCallbacks = false;
  this.allowNull = false;
  this.isCallbackMode = false;
  this.loadDropDownOnDemand = false;
  this.needToLoadDropDown = false;
  this.isPerformCallback = false;
  this.changeSelectAfterCallback = 0;
  this.incrementalFilteringMode = "Contains";
  this.filterStrategy = null;
  this.filterTimer = ASPx.Browser.WebKitTouchUI ? 300 : 100; 
  this.filterMinLength = 0;
  this.initTextCorrectionRequired = false;
  this.isDropDownListStyle = true;
  this.defaultDropDownHeight = "";
  this.dropDownHeight = "";
  this.dropDownWidth = "";
  this.dropDownRows = 7;
  this.enterKeyPressed = false;
  this.onLoadDropDownOnDemandCallbackFinalizedEventHandler = null;
  this.callBackCoreComplete = false; 
  this.adroidSamsungBugTimeout = 0; 
  this.isNeedToForceFirstShowLoadingPanel = true; 
  this.accessibilityHelper = null;
 },
 Initialize: function(){
  this.needToLoadDropDown = this.loadDropDownOnDemand;
  var lb = this.GetListBoxControl();
  this.InitializeListBoxOwnerName();
  this.InitScrollSpacerVisibility();
  this.FilterStrategyInitialize();
  var mainElement = this.GetMainElement();
  var input = this.GetInputElement();    
  var ddbutton = this.GetDropDownButton();
  if(this.isDropDownListStyle && (ASPx.Browser.IE || (ASPx.Browser.WindowsPlatform && ASPx.Browser.Safari))) {
   ASPx.Evt.AttachEventToElement(this.GetInputElement(), "blur", function() {
    var inputElementValue = this.GetInputElement().value;
    if(!this.focusEventsLocked && !inputElementValue && !!this.GetText())
     this.OnTextChanged();
   }.aspxBind(this)); 
   if(ASPx.Browser.IE) {
    ASPx.Evt.PreventElementDragAndSelect(mainElement, true, true);
    ASPx.Evt.PreventElementDragAndSelect(input, true, true);
    if(ddbutton)
     ASPx.Evt.PreventElementDragAndSelect(ddbutton, true);
   }
  }
  if(this.isToolbarItem){
   if(ASPx.Browser.IE && ASPx.Browser.Version == 9)
    input.onmousedown = function(evt) { ASPx.Evt.PreventEvent(evt); };
   else {
    mainElement.unselectable="on";
    input.unselectable="on";
    if(input.offsetParent)
     input.offsetParent.unselectable="on";
    if(ddbutton)
     ddbutton.unselectable="on";
    if(lb){
     var table = lb.GetListTable();
     for(var i = 0; i < table.rows.length; i ++){
      for(var j = 0; j < table.rows[i].cells.length; j ++)
       ASPx.Selection.SetElementAsUnselectable(table.rows[i].cells[j], true);
     }
    }
   }
  }
  this.RemoveRaisePSValidationFromListBox();
  this.RedirectStandardValidators();
  if(lb && lb.GetItemCount() > 0)
   this.EnsureListBoxSelectionSynchronized(lb);
  ASPxClientComboBoxBase.prototype.Initialize.call(this);
  if(this.accessibilityCompliant)
   this.accessibilityHelper = new AccessibilityHelperComboBox(this);
 },
 InitScrollSpacerVisibility: function() {
  var lb = this.GetListBoxControl();
  if(lb) {
   if(lb.GetItemCount() < lb.callbackPageSize) {
    lb.SetScrollSpacerVisibility(true, false);
    lb.SetScrollSpacerVisibility(false, false);
   }
  }
 },
 FilterStrategyInitialize: function() {
  if(this.incrementalFilteringMode == "Contains")
   this.filterStrategy = new ASPxContainsFilteringStrategy(this);
  else if(this.incrementalFilteringMode == "StartsWith")
   this.filterStrategy = new ASPxStartsWithFilteringStrategy(this);
  else if(this.incrementalFilteringMode == "None")
   this.filterStrategy = new ASPxComboBoxDisableFilteringStrategy(this);
  this.filterStrategy.Initialize();
 },
 InlineInitialize: function() {
  this.BeforeInlineInitialize();
  this.InitSpecialKeyboardHandling();
  ASPxClientComboBoxBase.prototype.InlineInitialize.call(this);
 },
 IsClearButtonVisibleAuto: function() {
  return this.allowNull && ASPxClientComboBoxBase.prototype.IsClearButtonVisibleAuto.call(this);
 },
 BeforeInlineInitialize: function() {
  this.lastSuccessValue = this.GetDecodeValue(this.lastSuccessValue);
  this.InsureInputValueCorrect();
 },
 InsureInputValueCorrect: function(){ 
  if(this.initTextCorrectionRequired){
   var lb = this.GetListBoxControl();
   if(lb){
    var initSelectedIndex = lb.GetSelectedIndexInternal();
    if(initSelectedIndex >= 0){
     var initSelectedText = lb.GetItem(initSelectedIndex).text;
     var input = this.GetInputElement();
     if(ASPx.IsExists(this.GetRawValue()) && this.GetRawValue() != initSelectedText){
      this.SetRawValue(initSelectedText);
      input.value = this.GetDecoratedText(initSelectedText);
     } 
     else if(input.value != initSelectedText)
      input.value = initSelectedText;
    }
   }
  }
 },
 ChangeEnabledAttributes: function(enabled){
  ASPxClientComboBoxBase.prototype.ChangeEnabledAttributes.call(this, enabled);
  var changeEventsMethod = ASPx.Attr.ChangeEventsMethod(enabled);
  var mainElement = this.GetMainElement();
  if(mainElement)
   changeEventsMethod(mainElement, ASPx.Evt.GetMouseWheelEventName(), aspxCBMouseWheel);
  var btnElement = this.GetDropDownButton();
  if(btnElement)
   changeEventsMethod(btnElement, "onmousemove", ASPx.CBDDButtonMMove);
 },
 GetDropDownInnerControlName: function(suffix){
  return ASPxClientDropDownEditBase.prototype.GetDropDownInnerControlName.call(this, suffix);
 },
 AdjustControlCore: function() {
  ASPxClientEdit.prototype.AdjustControlCore.call(this);
  this.ResetDropDownSizeCache();
 },
 RemoveRaisePSValidationFromListBox: function() {
  var listBox = this.GetListBoxControl();
  if(listBox)
   listBox.RaisePersonalStandardValidation = function() { };
 },
 RedirectStandardValidators: function() {
  var valueInput = this.GetValueInput();
  if(ASPx.IsExistsElement(valueInput) && valueInput.Validators) {
   for(var i = 0; i < valueInput.Validators.length; i++)
    valueInput.Validators[i].controltovalidate = valueInput.id;
  }
 },
 GetValueInputToValidate: function(){
  return this.GetValueInput();
 },
 GetValueInput: function(){
  return document.getElementById(this.name + "_" + comboBoxValueInputSuffix);
 },
 GetListBoxScrollDivElement: function(){
  return this.GetListBoxControl().GetScrollDivElement();
 },
 RollbackValueInputValue: function(){
  var inputElement = this.GetValueInput();
  if(inputElement){
   inputElement.value = this.lastSuccessValue;
  }
 },
 UpdateValueInput: function() {
  var inputElement = this.GetValueInput();
  if(inputElement){
   var value = this.GetValue();
   inputElement.value = value != null ? value : "";
  }
 },
 VisibleCollectionChanged: function() {
  this.CollectionChangedCore();
 },
 CollectionChanged: function(){
  this.CollectionChangedCore();
 },
 CollectionChangedCore: function(byTimer){
  this.GetSetValueOptimizeHelper().onItemCollectionChanged();
  if(this.GetListBoxControl().APILockCount == 0){
   this.UpdateDropDownPositionAndSize();
   if(ASPx.Browser.IE){ 
    var lb = this.GetListBoxControl();
    var selectedIndex = lb.GetSelectedIndex();
    if(selectedIndex > -1){
     var selectedItemTextCell = lb.GetItemFirstTextCell(selectedIndex);
     var controller = ASPx.GetStateController();
     controller.DeselectElementBySrcElement(selectedItemTextCell);
     controller.SelectElementBySrcElement(selectedItemTextCell);
    }
   }
  }
 },
 UpdateDropDownPositionAndSize: function(){
  this.InitDropDownSize();
  if(this.droppedDown){
   var pc = this.GetPopupControl();
   var element = this.GetMainElement();
   pc.UpdatePositionAtElement(element);
  }
  if(!this.clientVisible)
   this.ResetControlAdjustment();
 },
 GetDropDownHeight: function(){
  if(this.ddHeightCache != ASPx.InvalidDimension)
   return this.ddHeightCache;
  this.EnsureDropDownWidth(); 
  return this.InitListBoxHeight();
 },
 GetDropDownWidth: function(){
  return (this.ddWidthCache != ASPx.InvalidDimension && !this.GetIsControlWidthWasChanged()) ? this.ddWidthCache : this.InitListBoxWidth();
 },
 EnsureDropDownWidth: function() {
  this.GetDropDownWidth();
 },
 InitDropDownSize: function() {
  if(!this.enabled || this.GetItemCount() == 0) return; 
  var pc = this.GetPopupControl();
  if(pc && this.IsDisplayed()) {
   var pcwElement = pc.GetWindowElement(-1);
   if(ASPx.IsExistsElement(pcwElement)){
    var isPcwDisplayed = ASPx.GetElementDisplay(pcwElement);
    if(!isPcwDisplayed)
     pc.SetWindowDisplay(-1, true);
    var listBoxHeight = this.InitListBoxHeight();
    var listBoxWidth = this.InitListBoxWidth();
    if(listBoxHeight != this.ddHeightCache || listBoxWidth != this.ddWidthCache){
     this.ddHeightCache = listBoxHeight;
     this.ddWidthCache = listBoxWidth;
     pc.SetSize(this.ddWidthCache, this.ddHeightCache);
    }
    if(!isPcwDisplayed)
     pc.SetWindowDisplay(-1, false);
   }
  }
 },
 InitMainElementCache: function(){
  this.mainElementWidthCache = this.GetMainElement().clientWidth;
 },
 GetDefaultDropDownHeight: function(listHeight, count){
  if(this.defaultDropDownHeight == ""){
   this.defaultDropDownHeight = ((listHeight / count) * this.dropDownRows) + "px";
  }
  return this.defaultDropDownHeight;
 },
 InitListBoxHeight: function () {
  var lb = this.GetListBoxControl();
  lb.GetMainElement().style.height = "0px";
  var lbHeight = 0;
  if(this.dropDownHeight == "") {
   lbHeight = this.GetListBoxHeightByContent();
  } else {
   lbHeight = this.GetListBoxHeightByServerValue();
  }
  lb.InitializePageSize();
  return lbHeight;
 },
 GetListBoxHeightByContent: function () {  
  var lb = this.GetListBoxControl(),
   lbScrollDiv = lb.GetScrollDivElement(),
   itemCount = lb.GetVisibleItemCount(),
   hasVerticalScrollbar = itemCount > this.dropDownRows;
  if(!hasVerticalScrollbar)
   lbScrollDiv.style.height = lb.GetListTableHeight() + "px";
  var height = lb.GetListTableHeight();
  if(hasVerticalScrollbar)
   height = this.GetDefaultDropDownHeight(height, itemCount);
  else
   height = itemCount == 0 ? "0px" : height + "px";
  lbScrollDiv.style.height = height;
  height = lbScrollDiv.offsetHeight;
  height += ASPx.GetTopBottomBordersAndPaddingsSummaryValue(lb.GetMainElement());
  var lbHeaderDiv = lb.GetHeaderDivElement();
  if(ASPx.IsExists(lbHeaderDiv))
   height += lbHeaderDiv.offsetHeight;
  return height;
 },
 GetListBoxHeightByServerValue: function () {
  var lb = this.GetListBoxControl();
  var lbMainElement = lb.GetMainElement();
  var lbScrollDiv = lb.GetScrollDivElement()
  var height = this.dropDownHeight;
  lbMainElement.style.height = "0px";
  lbScrollDiv.style.height = "0px";
  lbMainElement.style.height = height;
  var trueLbOffsetHeight = lbMainElement.offsetHeight;
  var trueLbClientHeight = lbMainElement.clientHeight;
  lbScrollDiv.style.height = lbMainElement.clientHeight + "px";
  var lbHeightCorrection = lbMainElement.offsetHeight - trueLbOffsetHeight;
  lbScrollDiv.style.height = (trueLbClientHeight - lbHeightCorrection) + "px";
  height = lbMainElement.offsetHeight;
  return height;
 },
 InitListBoxWidth: function(){
  this.InitMainElementCache();
  var mainElement = this.GetMainElement();
  var lbScrollDiv = this.GetListBoxScrollDivElement();
  var lb = this.GetListBoxControl();
  var lbMainElement = lb.GetMainElement();
  var lbTable = lb.GetListTable();
  var scrollWidth = 0;
  lbMainElement.style.width = "";
  lbScrollDiv.style.paddingRight = "0px";
  lbScrollDiv.style.width = "100%";
  if(this.dropDownWidth != ""){
   lbMainElement.style.width = this.dropDownWidth;
   var width = lbMainElement.clientWidth;
   var scrollInfo = this.SetLbScrollDivAndCorrectionForScroll(lb, width, false);
   width = scrollInfo.scrollDivWidth;
   scrollWidth = scrollInfo.scrollWidth;
   if(!ASPx.Browser.IE) {
    var difference = lbTable.offsetWidth - lbScrollDiv.clientWidth;
    if(difference > 0){
     lbMainElement.style.width = (lbMainElement.offsetWidth + difference) + "px";
     lbScrollDiv.style.width = (lbMainElement.clientWidth)  + "px";
    }
   }
  } else {
   var width = lbTable.offsetWidth;
   var scrollInfo = this.SetLbScrollDivAndCorrectionForScroll(lb, width, true);
   width = scrollInfo.scrollDivWidth;
   scrollWidth = scrollInfo.scrollWidth;
   if(ASPx.Browser.Firefox && lbMainElement.offsetWidth < lbScrollDiv.offsetWidth)
    lbMainElement.style.width = "0%"; 
   var widthDifference = mainElement.offsetWidth - lbMainElement.offsetWidth;
   if(widthDifference > 0){
    lbScrollDiv.style.width = (width + widthDifference) + "px";
    var twoBorderSize = (lbMainElement.offsetWidth - lbMainElement.clientWidth);
    lbMainElement.style.width = (width + widthDifference + twoBorderSize) + "px"; 
   }
  }
  if(lb.IsMultiColumn())
   lb.CorrectMultiColumnHeaderWidth(scrollWidth);
  return lbScrollDiv.offsetWidth;
 },
 SetLbScrollDivAndCorrectionForScroll: function(lb, width, widthByContent){
  var lbScrollDiv = this.GetListBoxScrollDivElement();
  var scrollWidth = lb.GetVerticalScrollBarWidth();
  var browserCanHaveScroll = lb.GetVerticalOverflow(lbScrollDiv) == "auto";
  if(widthByContent && browserCanHaveScroll)
   width += scrollWidth;
  lbScrollDiv.style.width = width + "px";
  return {scrollDivWidth: width, scrollWidth: scrollWidth};
 },
 SelectIndexSilent: function(lb, index){
  this.lbEventLockCount ++;
  lb.SelectIndexSilentAndMakeVisible(index);
  this.ShowItemImageByIndex(index);
  this.lbEventLockCount --;
 },
 GetDecoratedText: function (text) {
  var lb = this.GetListBoxControl();
  var selectedItem = this.GetSelectedItem();
  if(this.displayFormat != null && lb.IsMultiColumn() && selectedItem != null){
   var textColumnCount = lb.GetItemTextCellCount();
   var texts = [textColumnCount];
   for(var i = 0; i < textColumnCount; i++){
    texts[i] = selectedItem.GetColumnTextByIndex(i)
   }
   return ASPx.Formatter.Format(this.displayFormat, texts);
  } else
   return ASPxClientComboBoxBase.prototype.GetDecoratedText.call(this, text);
 },
 CanApplyNullTextDecoration: function () {
  if(this.listBox || !this.loadDropDownOnDemand) {
   var value = this.isInitialized ? this.GetRawValue() : this.GetValue();
   var isValueNull = this.convertEmptyStringToNull && value === "" ? true : value === null;
   return (this.GetSelectedIndex() == -1 && isValueNull);
  } else
   return (this.GetValue() != null || this.GetText() != "");
 },
 ShowDropDownArea: function(isRaiseEvent){
  if(this.needToLoadDropDown) {
   this.EnsureDropDownLoaded();
   return;
  }
  var lb = this.GetListBoxControl();
  if(!lb || lb.GetItemCount() == 0) 
   return;
  if(!this.filterStrategy.IsShowDropDownAllowed()) {
   this.DropDownButtonPop(true); 
   return;
  }
  ASPxClientDropDownEditBase.prototype.ShowDropDownArea.call(this, isRaiseEvent);
  this.EnsureListBoxSelectionSynchronized(lb);
  this.EnsureSelectedItemVisibleOnShow(lb);
  lb.CallbackSpaceInit();
  if(this.accessibilityCompliant)
   this.accessibilityHelper.SetExpandedState(true);
 },
 ForceShowLoadingPanel: function() {
  if(this.GetItemCount() == 0 && !this.needToLoadDropDown) {
   var lb = this.GetListBoxControl();
   if(lb) {
    var sizes = { width: this.GetWidth(), height: 100 };
    ASPxClientDropDownEditBase.prototype.ShowDropDownArea.call(this, false, sizes);
    lb.SetHeight(sizes.height);
    lb.SetWidth(sizes.width);
   }
  }
 },
 FireFoxRequiresCacheScrollBar: function(){
  return ASPx.Browser.Firefox && ASPx.Browser.Version >= 3.6; 
 },
 BrowserRequiresCacheScrollBar: function(){
  return ASPx.Browser.WebKitFamily || ASPx.Browser.Opera || this.FireFoxRequiresCacheScrollBar(); 
 },
 HideDropDownArea: function(isRaiseEvent){
  if(this.filterStrategy)
   this.filterStrategy.OnBeforeHideDropDownArea();
  if(this.BrowserRequiresCacheScrollBar())
   this.CachedScrollTop();
  ASPxClientDropDownEditBase.prototype.HideDropDownArea.call(this, isRaiseEvent);
  if(this.accessibilityCompliant)
   this.accessibilityHelper.SetExpandedState(false);
 },
 EnsureSelectedItemTextSynchronized: function(){
  var lb = this.GetListBoxControl();
  if(this.IsNeedToRollbackLastSuccessItem()) {
   var item = this.FindItemByValue(this.GetValue());
   if(item)
    lb.SelectIndexSilent(item.index);
  }
  var selectedItem = this.GetSelectedItem();
  if(!selectedItem) return;
  var textUnsynchronized = this.GetText() !== selectedItem.text;
  var textDecorationUnsynchronized = this.HasTextDecorators() && this.CanApplyTextDecorators() && 
   this.GetDecoratedText(selectedItem.text) !== this.GetInputElement().value; 
  var ddImageElement =  this.GetDropDownImageElement();
  var imageUrl = selectedItem.imageUrl != "" ? selectedItem.imageUrl : ASPx.Url.GetAbsoluteUrl(ASPx.EmptyImageUrl);
  var imageUrlUnsynchronized = ddImageElement && ASPx.ImageUtils.GetImageSrc(ddImageElement) !== imageUrl;
  if(textUnsynchronized || textDecorationUnsynchronized || imageUrlUnsynchronized) {
   this.SetTextBase(selectedItem.text);
   this.ShowItemImage(selectedItem);
   this.UpdateValueInput();
  }
 },
 EnsureListBoxSelectionSynchronized: function(listBox){
  var rawText = this.GetTextInternal();
  var lbItem = listBox.GetSelectedItem();
  var lbText = lbItem != null ? lbItem.text : "";
  if(rawText != lbText && rawText != null && lbText != ""){
   var newSelectedIndex = this.GetAdjustedSelectedIndexByText(listBox, rawText);
   listBox.SelectIndexSilent(newSelectedIndex, false);
  }
 },
 EnsureSelectedItemVisibleOnShow: function(listBox){
  if(this.BrowserRequiresCacheScrollBar()) 
   listBox.RestoreScrollTopFromCache();
  listBox.EnsureSelectedItemVisible();
 },
 CachedScrollTop: function(){
  this.GetListBoxControl().CachedScrollTop();
  if(this.BrowserRequiresCacheScrollBar()){ 
   var scrollDiv = this.GetListBoxScrollDivElement();
   if(scrollDiv != null)
    scrollDiv.scrollTop = 0;
  }
 },
 IsFilterEnabled: function() {
  return this.incrementalFilteringMode != "None";
 },
 ChangeInputEnabled: function(element, enabled, readOnly){
  ASPxClientTextEdit.prototype.ChangeInputEnabled.call(this, element, enabled, readOnly || (this.isDropDownListStyle && !this.IsFilterEnabled()));
 },
 GetCallbackArguments: function(){
  var args = ASPxClientComboBoxBase.prototype.GetCallbackArguments.call(this);
  args += this.GetCallbackArgumentsInternal();
  return args;
 },
 GetCallbackArgumentsInternal: function(){
  var args = "";
  args = this.filterStrategy.GetCallbackArguments();
  return args;
 },
 ClearEditorValueByClearButtonCore: function() {
  this.enterKeyPressed = false;
  ASPxClientDropDownEditBase.prototype.ClearEditorValueByClearButtonCore.call(this);
  this.GetInputElement().value = '';
  if(this.IsFilterEnabled()) {
   if(this.InCallback())
    this.filterStrategy.OnFilteringKeyUp()
   else {
    this.filterStrategy.FilteringStop();
    if(this.isCallbackMode)
     this.filterStrategy.Filtering();
   }
  }
  else if(this.isDropDownListStyle) {
   this.HideDropDownArea();
  }
 },
 IsFilterRollbackRequiredAfterApply: function() {
  var filterRollbackRequired = !this.GetSelectedItem() && !this.focused && this.InCallback();
  return filterRollbackRequired;
 },
 IsNullState: function() {
  return this.GetSelectedIndex() === -1 && ASPxClientComboBoxBase.prototype.IsNullState.call(this);
 },
 ShowLoadingPanel: function() { 
  var lb = this.GetListBoxControl();
  var loadingParentElement = lb.GetScrollDivElement().parentNode;
  if(!this.loadingPanelElement) {
   var loadingPanel = this.CreateLoadingPanelWithAbsolutePosition(loadingParentElement, loadingParentElement);
   lb.PreventMouseWheelOnElement(loadingPanel); 
  }
 },
 ShowLoadingDiv: function () {
  var lb = this.GetListBoxControl();
  var loadingParentElement = lb.GetScrollDivElement().parentNode;
  if(!this.loadingDivElement) {
   var loadingDiv = this.CreateLoadingDiv(loadingParentElement);
   lb.PreventMouseWheelOnElement(loadingDiv);
  }
 },
 HideLoadingPanelOnCallback: function(){
  return false;
 },
 OnCallback: function(result) {
  if(ASPx.Browser.WebKitTouchUI) { 
   if(this.needToLoadDropDown)
    this.OnLoadDropDownOnDemandCallback(result);
   window.setTimeout(function() {
    this.OnCallbackCore(result);
    this.DoEndCallback();
   }.aspxBind(this), 300);
  } else
   this.OnCallbackCore(result);
 },
 OnCallbackCore: function(result) {
  if(this.needToLoadDropDown) {
   if(!ASPx.Browser.WebKitTouchUI)
    this.OnLoadDropDownOnDemandCallback(result);
  } else if(this.filterStrategy.IsCallbackResultNotDiscarded()) {
   this.OnCallbackBeforeListBox();
   this.OnListBoxCallback(result)
   this.OnCallbackInternal(result);
   this.OnCallbackFinally(true);
  }
  this.callBackCoreComplete = true;
 },
 OnListBoxCallback: function(result) {
  var selectedValue = this.GetValue();
  var selectedText = this.GetText();
  function shouldSelectSilent(value, text) {
   return value === selectedValue || text === selectedText;
  }
  this.GetListBoxControl().OnCallback(result, shouldSelectSilent);
  this.EnsureSelectedItemTextSynchronized();
 },
 OnLoadDropDownOnDemandCallbackFinalized: function() {
  this.DoReInitializeAfterLoadDropDownOnDemand();
  this.HideLoadingPanel();
  this.HideLoadingDiv();
  var isCallbackForShowDropDownArea = !this.onLoadDropDownOnDemandCallbackFinalizedEventHandler;
  if(isCallbackForShowDropDownArea) {
   if(this.filterStrategy.IsShowDropDownAllowed())
    this.ShowDropDown();
  } else
   this.onLoadDropDownOnDemandCallbackFinalizedEventHandler();
  this.FixButtonState();
 },
 OnCallbackFinalized: function() {
  if(this.needToLoadDropDown)
   this.OnLoadDropDownOnDemandCallbackFinalized();
 },
 OnLoadDropDownOnDemandCallback: function(result) {
  var node = this.GetMainElement();
  var tempDiv = node.ownerDocument.createElement('div');
  tempDiv.innerHTML = eval(result);
  var len = tempDiv.childNodes.length;
  for(ind = 0; ind < len; ind++) {
   ASPx.InsertElementAfter(tempDiv.childNodes.item(0), node);
  }
 },
 ProcessCallbackError: function(errorObj){
  this.callBackCoreComplete = true;
  ASPxClientDropDownEditBase.prototype.ProcessCallbackError.call(this, errorObj);
 },
 DoEndCallback: function(){ 
  if(!this.callBackCoreComplete && ASPx.Browser.WebKitTouchUI) return;
  this.filterStrategy.BeforeDoEndCallback();
  ASPxClientDropDownEditBase.prototype.DoEndCallback.call(this);
  this.filterStrategy.AfterDoEndCallback();
  this.callBackCoreComplete = false; 
 },
 RaiseEndCallback: function(){
  if(this.preventEndCallbackRising) {
   this.preventEndCallbackRising = false;
   ASPx.GetControlCollection().DecrementRequestCount(); 
  } else {
   ASPxClientDropDownEditBase.prototype.RaiseEndCallback.call(this);
  }
 },
 OnCallbackError: function(result, data){
  this.GetListBoxControl().OnCallbackError(result);
  this.OnCallbackFinally(false);
 },
 OnCallbackFinally: function(isSuccessful){
  this.filterStrategy.OnBeforeCallbackFinally();
  this.CollectionChanged();
  this.HideLoadingElements();
  if(this.isNeedToForceFirstShowLoadingPanel)
   this.isNeedToForceFirstShowLoadingPanel = false;
  this.isPerformCallback = false;
  this.changeSelectAfterCallback = 0;
  if(isSuccessful)
   this.filterStrategy.OnAfterCallbackFinally();
 },
 OnCallbackBeforeListBox: function(){
  var lb = this.GetListBoxControl();
  this.changeSelectAfterCallback = lb.changeSelectAfterCallback;
 },
 OnCallbackCorrectSelectedIndex: function(){
  var lb = this.GetListBoxControl();
  if(this.changeSelectAfterCallback != 0)
   this.SetTextInternal(lb.GetSelectedItem().text);
 },
 OnCallbackInternal: function(result){
  this.OnCallbackCorrectSelectedIndex();
  if(this.isPerformCallback) {
   var lb = this.GetListBoxControl();
   var resultIsEmpty = lb.GetItemCount() == 0;
   if(resultIsEmpty)
    this.HideDropDownArea(true);
  } 
  this.filterStrategy.OnCallbackInternal(result);
 },
 DoReInitializeAfterLoadDropDownOnDemand: function() {
  this.InitializeListBoxOwnerName();
  this.needToLoadDropDown = false;
 },
 EnsureDropDownLoaded: function(callbackFunction) {
  if(this.needToLoadDropDown) {
   this.onLoadDropDownOnDemandCallbackFinalizedEventHandler = callbackFunction ? function() {
    callbackFunction();
   } : null;
   var args = this.FormatLoadDropDownOnDemandCallbackArguments();
   this.SendLoadDropDownOnDemandCallback(args);
  }
 },
 IsDropDownButtonClick: function(evt) {
  return ASPx.GetIsParent(this.GetDropDownButton(), ASPx.Evt.GetEventSource(evt));
 },
 OnDropDown: function(evt) {
  var returnValue = ASPxClientDropDownEditBase.prototype.OnDropDown.call(this, evt);
  if(this.IsDropDownButtonClick(evt) && this.IsCanToDropDown()) {
   this.OnDropDownButtonClick(evt);
   return returnValue;
  }
  return true;
 },
 OnDropDownButtonClick: function(evt) {
  if(this.filterStrategy != null)
   this.filterStrategy.OnDropDownButtonClick();     
  this.ForceRefocusEditor(evt);
 },
 SendCallback: function(){
  if(!this.pcIsShowingNow)
   this.ShowLoadingElements();
  ASPxClientComboBoxBase.prototype.SendCallback.call(this);
 },
 IsAndroidKeyEventsLocked: function() {
  return ASPx.Browser.AndroidMobilePlatform && this.androidKeyEventsLocked;
 },
 LockAndroidKeyEvents: function() {
  this.androidKeyEventsLocked = true;
 },
 UnlockAndroidKeyEvents: function() {
  this.androidKeyEventsLocked = false;
 },
 CancelChangesOnUndo: function() {
  if(this.isCallbackMode) {
   this.SetTextInternal(this.lastSuccessText);
   this.filterStrategy.Filtering();
  }
  else {
   this.OnCancelChanges();
   this.filterStrategy.FilteringStopClient();
   this.GetListBoxControl().EnsureSelectedItemVisible();
  }
 },
 OnKeyDown: function(evt) {
  if(this.IsCtrlZ(evt)) {
   this.CancelChangesOnUndo();
   return ASPx.Evt.PreventEvent(evt);
  }
  var isClearKey = ASPx.Data.ArrayIndexOf([ASPx.Key.Delete, ASPx.Key.Backspace], evt.keyCode) >= 0;
  if(isClearKey && this.allowNull && (this.IsAllTextSelected() || this.isDropDownListStyle && !this.IsFilterEnabled()))
   this.ClearEditorValueAndForceOnChange();
  else if(this.IsAndroidKeyEventsLocked())
   return ASPx.Evt.PreventEventAndBubble(evt);
  else
   ASPxClientComboBoxBase.prototype.OnKeyDown.call(this, evt);
 },
 IsAllTextSelected: function() {
  var input = this.GetInputElement();
  var textLength = input.value.length;
  if(textLength === 0)
   return false;
  var selectionInfo = ASPx.Selection.GetExtInfo(input);
  var selectionLength = selectionInfo.endPos - selectionInfo.startPos;
  return selectionLength === textLength;
 },
 SelectNeighbour: function (step){
  if((this.isToolBarItem && !this.droppedDown) || this.readOnly) return;
  var lb = this.GetListBoxControl();
  var step = this.filterStrategy.GetStepForClientFiltrationEnabled(lb, step);
  this.SelectNeighbourInternal(lb, step);
 },
 SelectNeighbourInternal: function(lb, step){
  if(this.droppedDown)
   this.lbEventLockCount ++;
  lb.SelectNeighbour(step);
  if(this.droppedDown) {
   var selectedItem = lb.GetSelectedItem();
   if (selectedItem) {
    this.OnSelectionChangedCore(selectedItem.text, selectedItem, true);
   }
   this.lbEventLockCount --;
  }
  if(this.accessibilityCompliant)
   this.accessibilityHelper.SetLabelAttribute(null, null);
 },
 GetFocusSelectAction: function() {
  return (this.isToolbarItem || ASPx.Browser.IE && this.refocusWhenInputClicked) ? null : "all";
 },
 OnSpecialKeyDown: function(evt){
  if(this.filterStrategy)
   this.filterStrategy.OnSpecialKeyDown(evt);
  return ASPxClientEdit.prototype.OnSpecialKeyDown.call(this, evt);
 },
 OnArrowUp: function(evt){
  if(!this.isInitialized) return true;
  var isProcessed = ASPxClientDropDownEditBase.prototype.OnArrowUp.call(this, evt);
  if(!isProcessed && this.filterStrategy.IsFilterMeetRequirementForMinLength())
   this.SelectNeighbour(-1);
  return true;
 },
 OnTextChanged: function(){
  if(!this.IsFocusEventsLocked())
   ASPxClientComboBoxBase.prototype.OnTextChanged.call(this);
 },
 OnTextChangedInternal: function() {
  if(!this.forceValueChanged) {
   var preserveFilterInInput = this.InCallback() && this.filterStrategy.currentCallbackIsFiltration;
   if(preserveFilterInInput) return;
  }
  ASPxClientComboBoxBase.prototype.OnTextChangedInternal.call(this);
  this.filterStrategy.OnTextChanged();
 },
 OnArrowDown: function(evt){
  if(!this.isInitialized) return true;
  var isProcessed = ASPxClientDropDownEditBase.prototype.OnArrowDown.call(this, evt);
  if(!isProcessed && this.filterStrategy.IsFilterMeetRequirementForMinLength())
   this.SelectNeighbour(1);
  return true;
 },
 OnPageUp: function(){
  if(!this.isInitialized || !this.filterStrategy.IsFilterMeetRequirementForMinLength()) return true;
  return this.OnPageButtonDown(false);
 },
 OnPageDown: function(){
  if(!this.isInitialized || !this.filterStrategy.IsFilterMeetRequirementForMinLength()) return true;
  return this.OnPageButtonDown(true);
 },
 OnPageButtonDown: function(isDown){
  if(!this.isInitialized) return true;
  var lb = this.GetListBoxControl();
  if(lb){
   var direction = isDown ? 1 : -1;
   this.SelectNeighbour(lb.scrollPageSize * direction);
  }
  return true;
 },
 OnHomeKeyDown: function(evt){
  if(!this.isInitialized) return true;
  return this.OnHomeEndKeyDown(evt, true);
 },
 OnEndKeyDown: function(evt){
  if(!this.isInitialized) return true;
  return this.OnHomeEndKeyDown(evt, false);
 },
 OnHomeEndKeyDown: function(evt, isHome){
  if(!this.isInitialized) return true;
  var input = this.GetValueInput();
  if((input && input.readOnly) || evt.ctrlKey){
   var lb = this.GetListBoxControl();
   var count = lb.GetItemCount();
   this.SelectNeighbour(isHome ? -count : count);
   return true;
  }
  return false;
 },
 OnEscape: function() {
  this.filterStrategy.OnEscape();
  return ASPxClientComboBoxBase.prototype.OnEscape.call(this);
 },
 OnEnter: function(){
  if(!this.isInitialized) return true;
  if(this.IsNeedToRollbackLastSuccessItem()) return this.OnEscape();
  if(this.isDropDownListStyle) this.enterKeyPressed = true;
  if(this.filterStrategy.IsCloseByEnterLocked()) return;
  this.enterProcessed = this.droppedDown; 
  if(!this.isEnterLocked) { 
   this.OnApplyChangesAndCloseWithEvents();
   this.filterStrategy.OnAfterEnter();
  }
  return this.enterProcessed;
 },
 OnTab: function(evt){
  if(!this.isInitialized) 
   return true;
  this.filterStrategy.OnTab();
 },
 IsNeedToRollbackLastSuccessItem: function() {
  var lb = this.GetListBoxControl();
  return (this.filterStrategy.needEmptyFilterBeforeFiltering || this.filterStrategy.isTotallyMismatchedFilter) && lb.GetSelectedIndex() < 0;
 },
 OnApplyChanges: function(){
  if(!this.focused || (this.isDropDownListStyle && !this.IsFilterEnabled())) return;
  this.OnApplyChangesInternal();
 },
 OnApplyChangesAndCloseWithEvents: function() {
  this.OnApplyChangesInternal();
  this.HideDropDownArea(true);
 },
 OnApplyChangesInternal: function(){
  var inCallback = this.InCallback();
  var lb = this.GetListBoxControl();
  var isChanged = this.HasChanges();
  var isRollback = false;
  if(isChanged || this.filterStrategy.isTotallyMismatchedFilter) {
   this.filterStrategy.isTotallyMismatchedFilter = false;
   this.filterStrategy.needEmptyFilterBeforeFiltering = false;
   var text = this.GetCurrentText();
   if(this.filterStrategy.IsFilterTimerActive()) {
    this.filterStrategy.FilterNowAndApply();
    return;
   }
   var adjustedSelectedIndex = this.GetAdjustedSelectedIndexByText(lb, text);
   var isNullState = this.allowNull && !text;
   var rollbackRequired = this.isDropDownListStyle && adjustedSelectedIndex < 0 && !isNullState;
   if(rollbackRequired) {
    var rollbackToItem = lb.GetSelectedItem();
    isRollback = rollbackToItem == null && this.isCallbackMode; 
    if(isRollback) {
     this.RollbackValueInputValue();
     this.RollbackTextInputValue();
    }
    text = rollbackToItem != null ? rollbackToItem.text : this.lastSuccessText;
   } 
   if(!isRollback) {
    var adjustedSelectedItem = this.GetItem(adjustedSelectedIndex);
    var adjustedSelectedItemText = adjustedSelectedItem && adjustedSelectedItem.text;
    this.SetText(adjustedSelectedItemText || text);
    this.OnChange();
   }
   else if(!inCallback) {
    this.filterStrategy.OnFilterRollback();
   }
  } 
 },
 GetCurrentText: function(){
  var textDecorated = !this.focused && this.GetRawValue() != null;
  return textDecorated ? this.GetRawValue() : this.GetInputElement().value;
 },
 GetCurrentValue: function(){
  var value = null;
  var selectedItem = this.listBox.GetSelectedItem();
  if(selectedItem && (selectedItem.value !== "" || !this.convertEmptyStringToNull))
   value = selectedItem.value;
  return selectedItem ? value : this.GetValue();
 },
 HasChanges: function(){
  return this.lastSuccessText != this.GetCurrentText() || this.lastSuccessValue != this.GetCurrentValue();
 },
 OnButtonClick: function(number){
  if(number != this.dropDownButtonIndex)
   this.droppedDown ? this.OnApplyChangesAndCloseWithEvents(false) : ASPxClientComboBoxBase.prototype.OnTextChanged.call(this);
  ASPxClientButtonEditBase.prototype.OnButtonClick.call(this, number);
 },
 OnCancelChanges: function(){
  var isCancelProcessed = ASPxClientDropDownEditBase.prototype.OnCancelChanges.call(this);
  this.filterStrategy.OnCancelChanges();
  var lb = this.GetListBoxControl();
  if(ASPx.IsExists(lb)) {
   var index = this.GetAdjustedSelectedIndexByText(lb, this.lastSuccessText);
   this.SelectIndexSilent(lb, index);
  }
  return isCancelProcessed;
 },
 ShouldCloseOnMCMouseDown: function () {
  return this.GetInputElement().readOnly;
 },
 OnCloseUp: function(evt){
  var evt = ASPx.Evt.GetEvent(evt);
  if(ASPx.Browser.Firefox && evt.type == "mouseup" && ASPx.Evt.GetEventSource(evt).tagName == "DIV") { 
   var scrollDiv = this.GetListBoxControl().GetScrollDivElement();
   var scrollDivID = scrollDiv ? scrollDiv.id : "";
   if(scrollDivID == ASPx.Evt.GetEventSource(evt).id) 
    return;
  }
  ASPxClientDropDownEditBase.prototype.OnCloseUp.call(this, evt);
 },
 OnDDButtonMouseMove: function(evt){
  return (this.droppedDown ? ASPx.Evt.CancelBubble(evt) : true);
 },
 CloseDropDownByDocumentOrWindowEvent: function(causedByWindowResizing){
  this.filterStrategy.OnCloseDropDownByDocumentOrWindowEvent(causedByWindowResizing);
 },
 IsCanToDropDown: function() {
  if(this.loadDropDownOnDemand) {
   var lb = this.GetListBoxControl();
   var itemCount = lb ? lb.GetItemCount() : 0;
   return (!this.needToLoadDropDown && itemCount > 0);
  }
  return ASPxClientDropDownEditBase.prototype.IsCanToDropDown.call(this);
 },
 OnPopupControlShown: function(){
  if(!this.isInitialized) return;
  if(ASPx.Browser.Opera) 
   this.GetListBoxControl().RestoreScrollTopFromCache();
  if(this.lockListBoxClick)
   this.RemoveLockListBoxClick();
  if(this.InCallback()) 
   this.ShowLoadingDivAndPanel();
  ASPxClientDropDownEditBase.prototype.OnPopupControlShown.call(this);
 },
 OnLBSelectedIndexChanged: function(){
  if(!this.lockListBoxClick) {
   this.OnSelectChanged();
   this.filterStrategy.ClearFilterApplied();
   if(this.IsNavigationOnKeyPress()){
    if(!this.droppedDown) {
     ASPx.Selection.Set(this.GetInputElement());
    }
   } else if(this.focused) {
    this.ForceRefocusEditor();
   }
  }
 },
 IsNavigationOnKeyPress: function() {
  var lb = this.GetListBoxControl();
  return lb.IsScrollOnKBNavigationLocked();
 },
 OnListBoxItemMouseUp: function(evt){
  if(!this.lockListBoxClick && !this.InCallback()){
   this.OnApplyChangesInternal();
   this.OnCloseUp(evt);
  }
 },
 OnMouseWheel: function(evt){
  if(this.allowMouseWheel && !this.droppedDown && this.filterStrategy.IsFilterMeetRequirementForMinLength()) {
   var wheelDelta = ASPx.Evt.GetWheelDelta(evt);
   if(wheelDelta > 0)
    this.SelectNeighbour(-1);
   else  if(wheelDelta < 0)
    this.SelectNeighbour(1);
   return ASPx.Evt.PreventEvent(evt);
  }
 },
 OnOpenAnotherDropDown: function(){
  this.OnApplyChangesAndCloseWithEvents();
 },
 ParseValue: function() {
  var forceValueChanged = !this.IsValueChanging() && this.IsValueChangeForced();
  var newText = this.GetInputElement().value;
  var oldText = this.GetText();
  var isNeedToParseValue = oldText != newText;
  if(isNeedToParseValue || forceValueChanged) {
   this.StartValueChanging();
   if(this.CanTextBeAccepted(newText, oldText) || forceValueChanged){
    this.SetText(newText);
    this.OnChange();
   } else
    this.SetTextInternal(oldText);
   this.EndValueChanging();
  }
 },
 CanTextBeAccepted: function(newText, oldText){
  var notAnyTextCanBeAccepted = this.isDropDownListStyle;
  if(notAnyTextCanBeAccepted){
   var lb = this.GetListBoxControl();
   var newTextPresentInItemCollection = this.GetAdjustedSelectedIndexByText(lb, newText) != -1;
   return newTextPresentInItemCollection;
  }
  var wasTextErased = !newText && oldText;
  if((!wasTextErased) && this.nullText && this.CanApplyNullTextDecoration()) {
   return false;
  }
  return true;
 },
 MakeItemVisible: function(index){
  var lb = this.GetListBoxControl();
  lb.MakeItemVisible(index);
 },
 PerformCallback: function(arg) {
  this.isPerformCallback = true;
  this.filterStrategy.PerformCallback();
  if(this.needToLoadDropDown) {
   var formatCallbackArg = function(prefix, arg) {  
    arg = arg.toString();
    return (ASPx.IsExists(arg) ? prefix + "|" + arg.length + ';' + arg + ';' : "");
   };
   if(arg === undefined || arg == null)
    arg = "";
   var performArgs = formatCallbackArg("LECC", arg);
   this.onLoadDropDownOnDemandCallbackFinalizedEventHandler = function() {
    var selectedItem = this.listBox.GetSelectedItem();
    if(selectedItem != null)
     this.SetTextInternal(selectedItem.text);
    var lb = this.GetListBoxControl();
    if(lb)
     lb.SetCustomCallbackArg(performArgs);
   };
   var loadItemsRangeArgs = formatCallbackArg("LBCRI", "0:-2");
   var args = this.FormatLoadDropDownOnDemandCallbackArguments(performArgs + loadItemsRangeArgs);
   this.SendLoadDropDownOnDemandCallback(args);
  } else {
   this.ClearItemsInternal();
   this.GetListBoxControl().PerformCallback(arg);
  }
 },
 ClearItemsInternal: function(){
  ASPxClientComboBoxBase.prototype.ClearItemsInternal.call(this);
  var lbScrollDiv = this.GetListBoxScrollDivElement();
  if(lbScrollDiv)
   lbScrollDiv.scrollTop = "0px";
 },
 SendLoadDropDownOnDemandCallback: function(args) {
  this.ShowInputLoadingPanel();
  this.SendSpecialCallback(args);
 },
 ShowInputLoadingPanel: function() {
  var inputElement = this.GetInputElement();
  var parentElement = inputElement.parentNode;
  this.CreateLoadingDiv(parentElement, inputElement);
  this.CreateLoadingPanelWithAbsolutePosition(parentElement, inputElement);
 },
 FormatLoadDropDownOnDemandCallbackArguments: function(arguments) {
  var internalArgs = ASPx.IsExists(arguments) ? arguments.toString() : "";
  var resultArgs = loadDropDownOnDemandCallbackPrefix + "|0;;";
  return resultArgs + internalArgs;
 },
 CorrectCaretPositionInChrome: function() {
  if(!ASPx.Browser.Chrome) return;
  var currentSelection = ASPx.Selection.GetInfo(this.GetInputElement());
  if(currentSelection.startPos === currentSelection.endPos)
   ASPx.Selection.SetCaretPosition(this.GetInputElement(), 0);
 },
 ForceRefocusEditor: function(evt, isNativeFocus) {
  this.CorrectCaretPositionInChrome();
  this.refocusWhenInputClicked = this.IsElementBelongToInputElement(ASPx.Evt.GetEventSource(evt));
  ASPxClientEdit.prototype.ForceRefocusEditor.call(this, evt, isNativeFocus);
 },
 OnFocus: function () {
  if(this.needToLoadDropDown) {
   var args = this.FormatLoadDropDownOnDemandCallbackArguments();
   this.SendLoadDropDownOnDemandCallback(args);
  } else
   this.FixButtonState();
  ASPxClientDropDownEditBase.prototype.OnFocus.call(this);
 },
 FixButtonState: function() {
  var lb = this.GetListBoxControl();
  if(lb && this.ddButtonPushed) {
   this.DropDownButtonPop(true);
  }
 },
 GetAccessibilityServiceElement: function() {
  return this.GetChildElement(accessibilityAssistID);
 }
});
ASPxClientComboBox.Cast = ASPxClientControl.Cast;
var CallbackProcessingStateManager = function(){
 var states = { 
  Default:   0,
  Rollback:     1,
  Apply:     2,
  ApplyAfterRollback: 3
 }
 var state = states.Default;
 return {
  ResetState: function() {
   state = states.Default;
  },
  IsApply: function() {
   return state == states.Apply;
  },
  IsRollback: function() {
   return state == states.Rollback;
  },
  IsApplyAfterRollback: function() {
   return state == states.ApplyAfterRollback;
  },
  NoFilterPostProcessing: function() {
   return !this.IsApply() && !this.IsApplyAfterRollback() && !this.IsRollback();
  },
  SetRollback: function() {
   if(state == states.Default)
    state = states.Rollback;
  },
  SetApply: function() {
   if(state == states.Default)
    state = states.Apply;
  },
  SetApplyAfterRollback: function() {
   if(state == states.Default || state == states.Apply)
    state = states.ApplyAfterRollback;
  },
  OnCallbackResult: function(filterRollbackRequired) {
   if(state == states.Apply) {
    state = filterRollbackRequired ? states.ApplyAfterRollback : states.Default;
    return;
   }
   if(state == states.Rollback) {
    state = states.ApplyAfterRollback;
    return;
   }
   if(state == states.ApplyAfterRollback) {
    state = states.Default;
    return;
   }
  }
 }
};
var ASPxComboBoxDisableFilteringStrategy = ASPx.CreateClass(null, {
 constructor: function(comboBox) {
  this.comboBox = comboBox;
  this.isDropDownListStyle = this.comboBox.isDropDownListStyle;
  this.callbackProcessingStateManager = new CallbackProcessingStateManager();
 },
 Initialize: function() {},
 AfterDoEndCallback: function() {},
 BeforeDoEndCallback: function() {},
 IsCallbackResultNotDiscarded: function() { return true; },
 IsCloseByEnterLocked: function() { return false; },
 IsFilterTimerActive: function() { return false; },
 OnAfterCallbackFinally: function() {
  if(this.callbackProcessingStateManager.IsApply() || this.callbackProcessingStateManager.IsApplyAfterRollback()) {
   this.comboBox.OnApplyChangesAndCloseWithEvents();
   this.callbackProcessingStateManager.ResetState();
  }
 },
 OnAfterEnter: function() {}, 
 OnApplyChanges: function() {},
 OnBeforeCallbackFinally: function() {},
 OnBeforeHideDropDownArea: function() {},
 OnCallbackInternal: function(result) {},
 OnCancelChanges: function () {
  this.OnFilterRollback();
 },
 OnFilterRollback: function() {},
 OnDropDownButtonClick: function() {},
 OnEscape: function() {},
 OnFilteringKeyUp: function (evt) { },
 OnFilterRollback: function (withoutCallback) { },
 SetFilter: function (value) {},
 Filtering: function() {},
 OnSelectionChanged: function() {},
 OnSpecialKeyDown: function(evt) {},
 OnTab: function() {
  if(this.comboBox.InCallback())
   this.callbackProcessingStateManager.SetApply()
  else
   this.comboBox.OnApplyChangesAndCloseWithEvents();
 },
 OnCloseDropDownByDocumentOrWindowEvent: function(causedByWindowResizing) {
  if(!this.comboBox.InCallback()) {
   this.comboBox.OnApplyChangesInternal();
   ASPxClientDropDownEditBase.prototype.CloseDropDownByDocumentOrWindowEvent.call(this.comboBox, causedByWindowResizing);
  }
  else
   this.callbackProcessingStateManager.SetApply();
 },
 OnTextChanged: function() {},
 PerformCallback: function() {},
 GetCallbackArguments: function() { return ""; },
 GetInputElement: function() {
  return this.comboBox.GetInputElement();
 },
 GetListBoxControl: function() {
  return this.comboBox.GetListBoxControl();
 },
 GetCurrentSelectedItemCallbackArguments: function () {
  return ASPx.FilteringUtils.FormatCallbackArg(currentSelectedItemCallbackPrefix, "");
 },
 GetStepForClientFiltrationEnabled: function(lb, step) {
  return step;
 },
 IsFilterMeetRequirementForMinLength: function() {
  return true;   
 },
 IsShowDropDownAllowed: function() {
  return this.IsFilterMeetRequirementForMinLength();
 },
 ClearFilterApplied: function() {}
});
var ASPxComboBoxIncrementalFilteringStrategy = ASPx.CreateClass(ASPxComboBoxDisableFilteringStrategy, {
 constructor: function(comboBox) {
  this.constructor.prototype.constructor.call(this, comboBox);
  this.currentCallbackIsFiltration = false;
  this.refiltrationRequired = false;
  this.isEnterLocked = false;
  this.filter = "";
  this.filterInitialized = false;
  this.filterTimerId = -1;
  this.filterTimer = comboBox.filterTimer;
  this.hasInputBeenChanged = false;
  this.needEmptyFilterBeforeFiltering = false;
  this.isTotallyMismatchedFilter = false;
  this.inputValueBeforeFiltering = null;
 },
 Initialize: function() {
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "keydown", this.OnInputKeyDown);
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "keyup", this.OnInputKeyUpOrPaste);
  ASPx.Evt.AttachEventToElement(this.GetInputElement(), "paste", function(evt) { this.OnInputKeyUpOrPaste(evt, true); }.aspxBind(this));
 },
 OnInputKeyDown: function(evt) {
  var cb = ASPx.GetDropDownCollection().GetFocusedDropDown();
  if(cb != null) {
   var cbInputElement = cb.GetInputElement();
   var selInfo = ASPx.Selection.GetInfo(cbInputElement);
   if(cb.filterStrategy.inputValueBeforeFiltering == null && cb.filterStrategy.IsTextChangingKey(evt)) 
    cb.filterStrategy.inputValueBeforeFiltering = cbInputElement.value;
   if(selInfo.startPos != selInfo.endPos && evt.keyCode == ASPx.Key.Backspace) {
    var currentText = cbInputElement.value;
    var cutText = currentText.slice(0, selInfo.startPos) + currentText.slice(selInfo.endPos);
    var newFilter = ASPx.Str.PrepareStringForFilter(cutText);
    if(cutText != currentText && cb.filterStrategy.FilterCompareLower(newFilter)) {
     cbInputElement.value = cutText;
     ASPx.Selection.SetCaretPosition(cbInputElement, selInfo.startPos);
    }
   }
  }
 },
 OnInputKeyUpOrPaste: function(evt, needSyncRawValue) {
  var cb = ASPx.GetDropDownCollection().GetFocusedDropDown();
  if(cb != null) {
   if(cb.IsAndroidKeyEventsLocked())
    return ASPx.Evt.PreventEventAndBubble(evt);
   if(needSyncRawValue) 
    cb.SyncRawValueIfHasTextDecorators(true);
   if(!cb.allowNull && !cb.GetInputElement().value)
    cb.filterStrategy.ClearFilterApplied();
   cb.filterStrategy.OnFilteringKeyUp(evt);
  }
 },
 OnEscape: function() {
  this.FilterStopTimer();
  if(this.comboBox.InCallback())
   this.callbackProcessingStateManager.SetRollback();
 },
 ClearFilter: function() {
  this.filter = "";
  this.filterInitialized = false;
 },
 ClearFilterApplied: function() {
  this.filterInitialized = false;
 },
 FilterApplied: function() {
  return this.filterInitialized;
 },
 SetFilter: function(value){
  this.filter = value;
  this.filterInitialized = true;
 },
 FilterCompare: function(value){
  if(!this.filterInitialized && this.hasInputBeenChanged)
   return false;
  return this.filter == value;
 },
 FilterCompareLower: function(value){
  if(!this.filterInitialized)
   return false;
  return ASPx.Str.PrepareStringForFilter(this.filter) == value;
 },
 OnCallbackInternal: function(result){
  if(!this.comboBox.isPerformCallback) 
   this.RefreshHighlightInItems();
  if(!this.currentCallbackIsFiltration)
   return;
  var lb = this.GetListBoxControl();
  if(lb.GetItemCount() == 0)
   this.comboBox.HideDropDownArea(true);
  else 
   this.OnFilterCallbackWithResult(lb);  
  this.isEnterLocked = false;
 },
 OnBeforeCallbackFinally: function() {
  this.currentCallbackIsFiltration = false;
 },
 OnAfterCallbackFinally: function() {
  var filterRollbackRequired = false;
  if(this.callbackProcessingStateManager.IsApply() || this.callbackProcessingStateManager.IsApplyAfterRollback()) {
   this.ApplyAfterFinalFiltrationCallback();
   filterRollbackRequired = this.IsFilterRollbackRequiredAfterApply();
  }
  if(this.callbackProcessingStateManager.IsRollback())
   filterRollbackRequired = true;
  this.callbackProcessingStateManager.OnCallbackResult(filterRollbackRequired);
  if(filterRollbackRequired)
   this.RollbackFilterDeferred();
 },
 ApplyAfterFinalFiltrationCallback: function() {
  var itemIsSelected = this.TrySelectItemAfterFilter();
  this.comboBox.HideDropDownArea();
  var requiredApplyFailed = this.comboBox.isDropDownListStyle && !itemIsSelected && this.comboBox.focused && this.callbackProcessingStateManager.IsApply();
  if(requiredApplyFailed)
   this.comboBox.ShowDropDownArea(true);
  var needApplyChanges = itemIsSelected || !this.comboBox.focused;
  if(needApplyChanges)
   this.comboBox.OnApplyChangesInternal();
 },
 IsFilterRollbackRequiredAfterApply: function() {
  return this.comboBox.IsFilterRollbackRequiredAfterApply();
 },
 RollbackFilterDeferred: function() {
  window.setTimeout(function() { 
   this.OnFilterRollback(); 
  }.aspxBind(this), 0);
 },
 OnEndFiltering: function(visibleCollectionChanged) {
  if(visibleCollectionChanged) 
   this.comboBox.VisibleCollectionChanged();
  this.HighlightTextInItems();
 },
 OnFilteringKeyUp: function(evt){
  if(this.comboBox.InCallback() || !this.comboBox.GetEnabled()) return;
  var currentInputValue = this.GetInputElement().value;
  var textChanged = this.inputValueBeforeFiltering != null && this.inputValueBeforeFiltering != currentInputValue;
  if((this.IsTextChangingKey(evt) && textChanged) || ASPx.IsPasteShortcut(evt)){
   this.FilterStopTimer();
   this.FilterStartTimer();
   this.inputValueBeforeFiltering = null;
  }
 },
 IsTextChangingKey: function(evt) {
  if(ASPx.Browser.AndroidMobilePlatform || ASPx.Browser.MacOSMobilePlatform) return true;
  var keyCode = ASPx.Evt.GetKeyCode(evt);
  var isSystemKey = ASPx.Key.Windows <= keyCode && keyCode <= ASPx.Key.ContextMenu;
  var isFKey = ASPx.Key.F1 <= keyCode && keyCode <= 127;
  return ASPx.Key.Delete <= keyCode && !isSystemKey && !isFKey || keyCode == ASPx.Key.Backspace || keyCode == ASPx.Key.Space;
 },
 OnFilterCallbackHighlightAndSelect: function(lb){
  var firstItemText = lb.GetItem(0).text;
  var isTextClearing = !this.comboBox.allowNull && this.FilterCompare("") && !this.FilterCompare(firstItemText);
  if(!isTextClearing){
   var isFilterRollBack = this.CheckForFilterRollback(lb, firstItemText);
   var isNonFilterChangingCallback = (lb.GetSelectedItem() == null);
   this.isTotallyMismatchedFilter = this.RollbackLastSuccessText(this.filter);
   var isNullState = this.comboBox.allowNull && !this.filter && !lb.FindItemByText(this.filter);
   if(!this.isTotallyMismatchedFilter && !isNullState && (isFilterRollBack || isNonFilterChangingCallback)) {
    this.HighlightTextAfterCallback(firstItemText);
   } else {
    this.RemoveHighlightInItems();
   }
  }
  else {
   this.RollbackLastSuccessText(this.filter);
  }
 },
 OnFilterCallbackWithResult: function(lb) {
  this.OnFilterCallbackHighlightAndSelect(lb);
  var isNeedToKeepDropDownVisible = !this.comboBox.isPerformCallback && this.callbackProcessingStateManager.NoFilterPostProcessing();
  if(isNeedToKeepDropDownVisible)
   this.EnsureShowDropDownArea();
  this.OnEndFiltering();
 },
 OnSpecialKeyDown: function(evt) {
  if(ASPx.FilteringUtils.EventKeyCodeChangesTheInput(evt)) {
   this.FilterStopTimer();
   this.hasInputBeenChanged = true;
  }
 },
 OnFilterRollback: function () {
  if(this.comboBox.InCallback() && this.currentCallbackIsFiltration)
   return;
  if(this.comboBox.isCallbackMode && this.FilterApplied()) {
   this.callbackProcessingStateManager.SetApplyAfterRollback();
   if(this.comboBox.GetText() != "" && this.isDropDownListStyle) {
    this.comboBox.GetListBoxControl().ClearItems();
    this.needEmptyFilterBeforeFiltering = false;
    this.comboBox.SendSpecialCallback(this.GetCurrentSelectedItemCallbackArguments());
   } else
    this.Filtering();
   this.SetFilter(this.comboBox.GetText());
   this.ClearFilterApplied();
  }
 },
 BeforeDoEndCallback: function() {
  if(this.refiltrationRequired)
   this.comboBox.preventEndCallbackRising = true;
 },
 AfterDoEndCallback: function() {
  if(this.refiltrationRequired){
   this.refiltrationRequired = false;
   window.setTimeout(function() {
    var cb = ASPx.GetControlCollection().Get(this.comboBox.name);
    if(cb != null) cb.filterStrategy.Filtering();
   }.aspxBind(this), 0);
  }
  this.inputValueBeforeFiltering = null;
 },
 GetCallbackArguments: function() { 
  var args = "";
  if(!this.FilterCompare(""))
   args = this.GetCallbackArgumentFilter(this.filter);
  return args;
 }, 
 GetCallbackArgumentFilter: function(value){
  var callbackPrefix = this.isDropDownListStyle ? correctFilterCallbackPrefix : loadFilteredItemsCallbackPrefix;
  return ASPx.FilteringUtils.FormatCallbackArg(callbackPrefix, value);
 },
 PerformCallback: function() {
   this.ClearFilter();
 },
 SendFilteringCallback: function(){
  this.currentCallbackIsFiltration = true;
  this.comboBox.SendCallback();
 },
 IsCallbackResultNotDiscarded: function(){
  var discardCallbackResult = !this.needEmptyFilterBeforeFiltering && this.FilterChanged() && this.currentCallbackIsFiltration;
  if(discardCallbackResult)
   this.refiltrationRequired = true;
  return !discardCallbackResult;
 },
 IsFilterTimerActive: function() {
  return (this.filterTimerId != -1);
 },
 FilterStopTimer: function() {
  this.filterTimerId = ASPx.Timer.ClearTimer(this.filterTimerId);
 },
 FilterStartTimer: function() {
  this.isEnterLocked = true;
  this.filterTimerId = window.setTimeout(function() {
   var cb = ASPx.GetControlCollection().Get(this.comboBox.name);
   if(cb != null) {
    cb.filterStrategy.needEmptyFilterBeforeFiltering = cb.filterStrategy.RollbackLastSuccessText(cb.filterStrategy.GetInputElementWithFilterValue());
    cb.filterStrategy.Filtering();
    cb.EnsureClearButtonVisibility();
   }
  }.aspxBind(this), this.filterTimer);
 },
 CheckForFilterRollback: function(lb, firstItemText){
  var isHasCorrection = false;
  var filter = ASPx.Str.PrepareStringForFilter(this.filter);
  firstItemText = ASPx.Str.PrepareStringForFilter(firstItemText);
  while(!this.IsSatisfy(firstItemText, filter)){
   filter = filter.slice(0, -1);
   isHasCorrection = true;
  }
  if(isHasCorrection){
   this.SetFilter(this.filter.substring(0, filter.length));
   this.GetInputElement().value = this.filter;
  } 
  return isHasCorrection;
 },
 EnsureShowDropDownArea: function(){
  if(!this.comboBox.droppedDown)
   this.comboBox.ShowDropDownArea(true);
 },
 FilterChanged: function(){
  var currentFilter = this.GetInputElementWithFilterValue();
  return !this.FilterCompareLower(ASPx.Str.PrepareStringForFilter(currentFilter));
 },
 FilteringStop: function(){
  this.isEnterLocked = false;
  if(!this.comboBox.isCallbackMode)
   this.FilteringStopClient();
 },
 FilteringStopClient: function(){
  this.MakeAllItemsClientVisible();
  this.ClearFilter();
  this.RemoveHighlightInItems();
 },
 MakeAllItemsClientVisible: function() {
  this.MakeAllItemsClientVisibleCore();
  this.comboBox.VisibleCollectionChanged();
 },
 MakeAllItemsClientVisibleCore: function() {
  var lb = this.GetListBoxControl();
  var listTable = lb.GetListTable();
  var count = lb.GetItemCount();
  for(var i = 0; i < count; i ++)
   ASPx.SetElementDisplay(listTable.rows[i], true);
 },
 FilteringBackspace: function(){
  var input = this.GetInputElement();
  ASPx.StartWithFilteringUtils.RollbackOneSuggestedChar(input);
  this.FilterStartTimer();
 },
 GetMinFilterLengthProcessed: function() {
  if(!this.IsFilterMeetRequirementForMinLength()) {
   this.comboBox.HideDropDownArea(true);
   var lb = this.GetListBoxControl();
   this.callbackProcessingStateManager.ResetState();
   lb.SelectIndexSilent(-1, false); 
   return true;
  }
  return false;
 },
 GetInputElementWithFilterValue: function() {
  return ASPx.IsExists(this.comboBox.GetRawValue()) ? this.comboBox.GetRawValue() : this.comboBox.GetInputElement().value;
 },
 Filtering: function(){
  this.FilterStopTimer();
  var newFilter = this.needEmptyFilterBeforeFiltering ? "" : this.GetInputElementWithFilterValue();
  var filterChanged = !this.FilterCompare(newFilter);
  if(filterChanged){
   this.SetFilter(newFilter);
   if(this.GetMinFilterLengthProcessed())
    return;
   if(this.callbackProcessingStateManager.NoFilterPostProcessing())
    this.EnsureShowDropDownArea();
   if(this.comboBox.isCallbackMode) {
    if(!this.comboBox.droppedDown && this.comboBox.isNeedToForceFirstShowLoadingPanel)
     this.comboBox.ForceShowLoadingPanel();
    this.FilteringOnServer();
   } else {
    this.FilteringOnClient(); 
    this.callbackProcessingStateManager.ResetState();
   }
  } else {
   this.isEnterLocked = false;
   this.callbackProcessingStateManager.ResetState();
  }
 },
 FilteringOnServer: function(){
  if(!this.comboBox.InCallback()){
   var listBox = this.GetListBoxControl();
   listBox.ClearItems(); 
   listBox.serverIndexOfFirstItem = 0;
   listBox.SetScrollSpacerVisibility(true, false);
   listBox.SetScrollSpacerVisibility(false, false);
   this.SendFilteringCallback();
  }
 },
 FilteringOnClient: function() {
  this.RemoveHighlightInItems();
  var filter = ASPx.Str.PrepareStringForFilter(this.filter),
   lb = this.GetListBoxControl(),
   listTable = lb.GetListTable(),
   count = lb.GetItemCount(),
   text = "",
   isSatisfy = false,
   firstSatisfyItemIndex = -1;
  if(this.isDropDownListStyle) {
   var coincide = new Array(count);
   var maxCoincide = 0;
   for(var i = count - 1; i >= 0; i--) {
    coincide[i] = this.GetCoincideCharCount(ASPx.Str.PrepareStringForFilter(lb.GetItem(i).text), filter);
    if(coincide[i] > maxCoincide)
     maxCoincide = coincide[i];
   }
   filter = this.filter.substr(0, maxCoincide);
   if(ASPx.IsExists(this.comboBox.GetRawValue()))
    this.comboBox.SetRawValue(filter);
   else {
    var cbInputElement = this.comboBox.GetInputElement();
    if(cbInputElement.value != filter)
     cbInputElement.value = filter;
   }
  }
  this.RollbackLastSuccessText(filter);
  this.needEmptyFilterBeforeFiltering = false;
  if(ASPx.Browser.IE && ASPx.Browser.Version > 9) 
   ASPx.SetElementDisplay(listTable, false);
  for(var i = 0; i < count; i ++) {
   text = lb.GetItem(i).text; 
   var showDropDownCustomizable = typeof(this.comboBox.showDropDownOnFocus) != "undefined";
   if(showDropDownCustomizable && filter === "")
    isSatisfy = this.comboBox.showDropDownOnFocus !== "Never";
   else {
    if(this.isDropDownListStyle) {
     isSatisfy = maxCoincide && coincide[i] === maxCoincide;
    } else {
     isSatisfy = this.IsSatisfy(text, filter);
    }
   }
   ASPx.SetElementDisplay(listTable.rows[i], isSatisfy);
   if(firstSatisfyItemIndex == -1 && isSatisfy) {
    var isTextClearing = !this.isDropDownListStyle && this.FilterCompare("") && this.filter != text;
    this.OnFirstSatisfiedItemFound(i, text, isTextClearing);
    firstSatisfyItemIndex = i;
   }
  }
  if(ASPx.Browser.IE && ASPx.Browser.Version > 9) 
   ASPx.SetElementDisplay(listTable, true);
  if(this.isDropDownListStyle) {
   this.SetFilter(filter);
  }
  var visibleCollectionChanged = firstSatisfyItemIndex != -1;
  if(visibleCollectionChanged) {
   lb.CopyCellWidths(0, firstSatisfyItemIndex);
  } else {
   this.UpdateDropDownAfterIneffectualFiltering();
  }
  this.isEnterLocked = false;
  this.OnEndFiltering(visibleCollectionChanged);
 },
 RollbackLastSuccessText: function(filter) {
  if(this.comboBox.allowNull || filter) return false;
  var inpValue = this.comboBox.lastSuccessText;
  var inputElement = this.comboBox.GetInputElement();
  if(ASPx.IsExists(this.comboBox.GetRawValue()) && this.comboBox.GetRawValue() != inpValue){
   this.comboBox.SetRawValue(inpValue);
   if(!this.comboBox.focused)
    inputElement.value = this.comboBox.GetDecoratedText(inpValue);
   else
    inputElement.value = inpValue;
  } else if(inputElement.value != inpValue)
   inputElement.value = inpValue;
  if(this.comboBox.focused)
   ASPx.Selection.Set(inputElement, 0, inputElement.value.length);
  var lb = this.GetListBoxControl();
  if(lb) {
   if(this.comboBox.lastSuccessValue != null)
    lb.SetValue(this.comboBox.lastSuccessValue);
   else {
    var index = lb.FindItemIndexByText(this.comboBox.lastSuccessText);
    lb.SelectIndexSilent(index);
   }
  }
  return true;
 },
 UpdateDropDownAfterIneffectualFiltering: function() {
  if(this.isDropDownListStyle && this.comboBox.showDropDownOnFocus !== "Never") {
   this.MakeAllItemsClientVisibleCore();
   this.comboBox.UpdateDropDownPositionAndSize();
  } else 
   this.comboBox.HideDropDownArea(true);
 },
 GetFirstVisibleItem: function(lb, listTable) {
  var itemCount = lb.GetItemCount();
  for(var i = 0; i < itemCount; i++)
   if(ASPx.GetElementDisplay(listTable.rows[i]))
    return i;
  return -1;
 },
 IsSelectedElementVisible: function(listTable, selectedIndex) {
  return ASPx.GetElementDisplay(listTable.rows[selectedIndex]);
 },
 GetStepForClientFiltrationEnabled: function(lb, step) {
  if(this.comboBox.isCallbackMode) return step;
  var listTable = lb.GetListTable();
  var startIndex = this.comboBox.GetSelectedIndex();
  var firstVisibleElementIndex = this.GetFirstVisibleItem(lb, listTable);
  if(startIndex > -1) {
   if(!this.IsSelectedElementVisible(listTable, startIndex))
    return firstVisibleElementIndex - startIndex;
  } else return firstVisibleElementIndex + 1;
  var stepDirection = step > 0 ? 1 : -1;
  var count = lb.GetItemCount();
  var needVisibleItemCount = Math.abs(step);
  var outermostVisibleIndex = startIndex;
  for(var index = startIndex + stepDirection; needVisibleItemCount > 0; index += stepDirection){
   if(index < 0 || count <= index) break;
   if(ASPx.GetElementDisplay(listTable.rows[index])) {
    outermostVisibleIndex = index;
    needVisibleItemCount--;
   }
  }
  step = outermostVisibleIndex - this.comboBox.GetSelectedIndex();
  return step;
 },
 GetCoincideCharCount: function(text, filter) {
  while(filter != "" && !this.IsSatisfy(text, filter)) {
   filter = filter.slice(0, -1);
  }
  return filter.length;
 },
 OnSelectionChanged: function() {
 },
 IsFilterMeetRequirementForMinLength: function() {
  var inputElement = this.GetInputElement();
  var isFilterExists = inputElement && (inputElement.value || inputElement.value == "");
  return isFilterExists ? inputElement.value.length >= this.comboBox.filterMinLength : true;
 },
 FilterNowAndApply: function() {
  this.callbackProcessingStateManager.SetApply();
  this.Filtering();
  if(!this.comboBox.isCallbackMode)
   this.comboBox.OnApplyChangesInternal();
 },
 RemoveHighlightInItems: function() {
  this.ApplySelectionFunctionToItems(ASPx.ContainsFilteringUtils.UnselectContainsTextInElement, true);
 },
 RefreshHighlightInItems: function() {
  if(this.filter != "")
   this.ApplySelectionFunctionToItems(ASPx.ContainsFilteringUtils.ReselectContainsTextInElement, false);
 },
 HighlightTextInItems: function() {
  if(this.filter != "")
   this.ApplySelectionFunctionToItems(ASPx.ContainsFilteringUtils.SelectContainsTextInElement, false);
 },
 ApplySelectionFunctionToItems: function(selectionFunction, applyToAllColumns) {
  var lb = this.GetListBoxControl();
  var count = lb.GetItemCount();
  for(var i = 0; i < count; i ++) {
   var item = lb.GetItemRow(i);
   if(applyToAllColumns || (!applyToAllColumns && ASPx.GetElementDisplay(item))) 
    this.ApplySelectionFunctionToItem(item, selectionFunction, applyToAllColumns);     
  }
 },
 GetFirstTextCellIndex: function () {
  return this.GetListBoxControl().GetItemFirstTextCellIndex();
 },
 ApplySelectionFunctionToItem: function(item, selectionFunction, applyToAllColumns) {
  var itemValues = this.GetItemValuesByItem(item);
  var itemSelection = ASPx.ContainsFilteringUtils.GetColumnSelectionsForItem(itemValues, this.GetListBoxControl().textFormatString, this.filter);
  var firstTextCellIndex = this.GetFirstTextCellIndex();
  if(applyToAllColumns) {
   for(var i = 0; i < item.cells.length; i++)
    selectionFunction(item.cells[i], itemSelection[i]);
  } else {
   for(var i = 0; i < itemSelection.length; i++)
    selectionFunction(item.cells[itemSelection[i].index + firstTextCellIndex], itemSelection[i]);
  }
 },
 GetItemValuesByItem: function(item) {
  var result = [];
  for(var i = this.GetFirstTextCellIndex(); i < item.cells.length; i++)
   result.push(ASPx.GetInnerText(item.cells[i]));
  return result;
 },
 IsSatisfy: function(text, filter) {},
 OnFirstSatisfiedItemFound: function(index, text, isTextClearing) {},   
 HighlightTextAfterCallback: function() {}
});
var ASPxContainsFilteringStrategy = ASPx.CreateClass(ASPxComboBoxIncrementalFilteringStrategy, {
 constructor: function(comboBox) {
  this.constructor.prototype.constructor.call(this, comboBox);
 },
 IsSatisfy: function(text, filter) {
  return ASPx.Str.PrepareStringForFilter(text).indexOf(filter) != -1;
 },
 IsCloseByEnterLocked: function() {
  if(this.isDropDownListStyle) {
   if(this.IsFilterTimerActive()) return false;
   var lb = this.GetListBoxControl();
   if(lb && lb.GetVisibleItemCount() == 1) return false;
   var selectedItem = this.comboBox.GetSelectedItem();
   if(selectedItem)
    if(this.GetInputElement().value == selectedItem.text)
     return false;
   return true;
  }
  return false;
 },
 OnBeforeCallbackFinally: function() {
  this.RefreshHighlightInItems();
  this.SetListBoxSuggestionSelection();
  ASPxComboBoxIncrementalFilteringStrategy.prototype.OnBeforeCallbackFinally.call(this);   
 },
 OnDropDownButtonClick: function() {
  var lb = this.GetListBoxControl();
  if(lb && lb.GetVisibleItemCount() == 0 && this.isDropDownListStyle) 
   this.comboBox.OnCancelChanges();
 },
 OnTextChanged: function() {
  if(!this.comboBox.IsFocusEventsLocked())
   if(!this.comboBox.ChangedByEnterKeyPress())
    this.OnFilterRollback();
 },
 OnEndFiltering: function(visibleCollectionChanged) {
  ASPxComboBoxIncrementalFilteringStrategy.prototype.OnEndFiltering.call(this, visibleCollectionChanged);  
  this.HighlightTextInItems();
  this.SetListBoxSuggestionSelection();
 },
 OnBeforeHideDropDownArea: function(){
  if(!this.comboBox.isCallbackMode)
   this.FilteringStopClient();
 },
 OnCallbackInternal: function() {
  if(!this.comboBox.isPerformCallback) 
   this.RefreshHighlightInItems();
  ASPxComboBoxIncrementalFilteringStrategy.prototype.OnCallbackInternal.call(this); 
 },
 TrySelectItemAfterFilter: function() {
  var lb = this.GetListBoxControl();
  var selectedItem = null;
  var mustSelectFromList = this.isDropDownListStyle;
  if(mustSelectFromList) 
   selectedItem = (lb && lb.GetVisibleItemCount() == 1) ? lb.GetItem(0) : null;
  else
   selectedItem = lb.FindItemByText(this.filter);
  if(selectedItem) {
   lb.SelectIndexSilent(selectedItem.index);
   this.comboBox.SetTextInternal(selectedItem.text);
  }
  return !!selectedItem;
 },
 OnFirstSatisfiedItemFound: function() {
 },
 SetListBoxSuggestionSelection: function() {
  var mustSelectFromList = this.isDropDownListStyle;
  var suggestionListVisible = this.comboBox.droppedDown;
  var lb = this.GetListBoxControl();
  var singleItem = lb && lb.GetVisibleItemCount() == 1;
  var canSuggest = mustSelectFromList && suggestionListVisible && singleItem;
  if(canSuggest) {
   var listTable = lb.GetListTable();
   var itemIndex = this.GetFirstVisibleItem(lb, listTable);
   this.comboBox.SelectIndexSilent(lb, itemIndex);
  }
  if(this.comboBox.accessibilityCompliant)
   this.comboBox.accessibilityHelper.SetLabelAttribute(canSuggest ? lb.GetItem(itemIndex).text : this.GetInputElement().value, canSuggest);
 }
});
var ASPxStartsWithFilteringStrategy = ASPx.CreateClass(ASPxComboBoxIncrementalFilteringStrategy, {
 constructor: function(comboBox) {
  this.constructor.prototype.constructor.call(this, comboBox);
 },
 IsSatisfy: function(text, filter) {
  return ASPx.Str.PrepareStringForFilter(text).indexOf(filter) == 0;
 },
 FilteringHighlightCompletedText: function(filterItemText){
  var input = this.GetInputElement();
  ASPx.StartWithFilteringUtils.HighlightSuggestedText(input, filterItemText, this.comboBox);
 },
 HighlightTextAfterCallback: function(firstItemText) {
  var lb = this.GetListBoxControl();
  this.FilteringHighlightCompletedText(firstItemText);
  if(this.comboBox.accessibilityCompliant)
   this.comboBox.accessibilityHelper.SetLabelAttribute(firstItemText, true);
  if(!this.comboBox.isPerformCallback )
   this.comboBox.SelectIndexSilent(lb, 0);
 },
 OnAfterEnter: function() {
  this.ClearInputSelection();
 },
 OnBeforeHideDropDownArea: function() {
  this.FilteringStop();
 },
 OnEndFiltering: function(visibleCollectionChanged) {
  ASPxComboBoxIncrementalFilteringStrategy.prototype.OnEndFiltering.call(this, visibleCollectionChanged);
  if(this.comboBox.accessibilityCompliant) {
   var selectedItem  = this.GetListBoxControl().GetSelectedItem();
   this.comboBox.accessibilityHelper.SetLabelAttribute(!!selectedItem ? selectedItem.text : this.GetInputElement().value, !!selectedItem);
  }
 },
 OnFirstSatisfiedItemFound: function(index, text, isTextClearing) {
  var lb = this.GetListBoxControl();
  if(!isTextClearing) 
   this.FilteringHighlightCompletedText(text);
  this.comboBox.SelectIndexSilent(lb, isTextClearing ? -1 : index);
 },
 ClearInputSelection: function() {
  var inputElement = this.comboBox.GetInputElement();
  ASPx.Selection.SetCaretPosition(inputElement);
 },
 TrySelectItemAfterFilter: function() {
  var lb = this.GetListBoxControl();
  var selectedItem = lb.GetItem(0);
  return !!selectedItem;
 }
});
var ASPxClientNativeComboBox = ASPx.CreateClass(ASPxClientComboBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.initSelectedIndex = -1;
  this.raiseValueChangedOnEnter = false;
 },
 InlineInitialize: function () {
  ASPxClientComboBoxBase.prototype.InlineInitialize.call(this);
  var lb = this.GetListBoxControl();
  if(lb != null) lb.SetMainElement(this.GetMainElement());
  if(this.initSelectedIndex == -1) 
   this.SelectIndex(this.initSelectedIndex, true);
 },
 Initialize: function(){
  ASPxClientComboBoxBase.prototype.Initialize.call(this);
 },
 FindInputElement: function(){
  return this.GetMainElement();
 }, 
 GetDropDownInnerControlName: function(suffix){
  return this.name + suffix;
 },
 PerformCallback: function(arg) {
  this.GetListBoxControl().PerformCallback(arg);
 },
 GetTextInternal: function(){
  var selectedItem = this.GetSelectedItem();
  return (selectedItem != null) ? selectedItem.text : "";
 },
 HasTextDecorators: function() {
  return false;
 },
 SetText: function (text){
  var lb = this.GetListBoxControl();
  var index = this.FindItemIndexByText(lb, text);
  this.SelectIndex(index, false);
  this.SetLastSuccessText((index > -1) ? text : "");
  this.SetLastSuccessValue((index > -1) ? lb.GetValue() : null);
 },
 GetValue: function(){
  var selectedItem = this.GetSelectedItem();
  return (selectedItem != null) ? selectedItem.value : null;
 },
 SetValue: function(value){
  var lb = this.GetListBoxControl();
  if(lb){
   lb.SetValue(value);
   var item = lb.GetSelectedItem();
   var text = item ? item.text : value;
   this.SetLastSuccessText((item != null) ? text : "");
   this.SetLastSuccessValue(item != null) ? item.value : null;
  }
 },
 ForceRefocusEditor: function(){
 },
 OnCallback: function(result) {
  this.GetListBoxControl().OnCallback(result);
  if(this.GetItemCount() > 0)
   this.SetSelectedIndex(0);
 },
 OnTextChanged: function() {
  this.OnChange();
 },
 SetTextInternal: function(text){
 },
 SetTextBase: function(text){
 },
 ChangeEnabledAttributes: function(enabled){
  this.GetMainElement().disabled = !enabled;
 }
});
var AccessibilityHelperComboBox = ASPx.CreateClass(ASPx.AccessibilityHelperBase, {
 constructor: function(comboBox) {
  this.constructor.prototype.constructor.call(this, comboBox);
  this.currentValue = null;
  this.Initialize();
 },
 Initialize: function() {
  this.control.GotFocus.AddHandler(function() { this.setActiveItemLabel(); }.aspxBind(this));
 },
 SetLabelAttribute: function(text, isItemSelected) {
  this.currentValue = this.control.GetValue();
  var message = text !== null ? this.getLabelText(text, isItemSelected) : this.getListSelectedItemText();
  this.PronounceMessage(message);
 },
 PronounceMessage: function(text) {
  var input = this.getInputElement();
  var expandArg = {"aria-expanded" : this.control.droppedDown };
  ASPx.AccessibilityHelperBase.prototype.PronounceMessage.call(this, text, expandArg, ASPx.CloneObject(expandArg), null, input);
 }, 
 SetExpandedState: function(expanded) {
  if(this.currentValue != this.control.GetValue()) {
   this.SetLabelAttribute(null, null);
  } else {
   var input = this.getInputElement();
   var expandArg =  { "aria-expanded": expanded };
   this.changeActivityAttributes(input, expandArg);
   this.changeActivityAttributes(this.getItem(true), expandArg);
  }
 },
 getLabelText: function(text, isItemSelected) {
  var blankText = ASPx.AccessibilitySR.BlankEditorText;
  if(!text)
   text = blankText;
  var itemsCount = this.getListBoxControl().GetVisibleItemCount();
  var formatString = ASPx.AccessibilitySR.ComboBoxFilteringResultFormatString;
  if(!isItemSelected || itemsCount == 1)
   formatString += ASPx.AccessibilitySR.ComboBoxCurrentTextFormatString;
  return ASPx.Str.ApplyReplacement(formatString, [["{0}", itemsCount],
   ["{1}", (isItemSelected || !this.control.lastSuccessText) ? text : this.control.lastSuccessText],
   ["{2}", this.getInputElement().value || blankText]]);
 },
 getListBoxControl: function() { return this.control.GetListBoxControl(); },
 getInputElement: function() { return this.control.GetInputElement(); },
 getListSelectedItemText: function() {
  var lb = this.getListBoxControl();
  var selectedItem = lb.GetSelectedItem();
  var itemText = "";
  if(!!selectedItem) {
   var formatString = ASPx.AccessibilitySR.ItemPositionFormatString;
   var visibleIndex = this.control.isCallbackMode ? selectedItem.index + 1 : lb.GetIndexVisibleItem(selectedItem);
   var itemPositionText = ASPx.Str.ApplyReplacement(formatString, [["{0}", visibleIndex], ["{1}", lb.GetVisibleItemCount()]]);
   itemText = selectedItem.text + itemPositionText;
  } else {
   var input = this.getInputElement();
   itemText = !!input.value ? input.value : ASPx.AccessibilitySR.BlankEditorText;
  }
  return itemText;
 },
 setActiveItemLabel: function() {
    this.changeActivityAttributes(this.getItem(true), { "aria-label": this.getListSelectedItemText() });
 }
});
function setValueOptimizeHelper() {
 var itemCollectionWasChangedSinceLastSetValue = false;
 function canReSetValue() {
  return itemCollectionWasChangedSinceLastSetValue;
 }
 function onSetValue() {
  itemCollectionWasChangedSinceLastSetValue = false;
 }
 return {
  onItemCollectionChanged: function () {
   itemCollectionWasChangedSinceLastSetValue = true;
  },
  setValue: function (comboBox, newValue, methodName) {
   var item = comboBox.FindItemByValue(newValue);
   var reSetValue = comboBox.GetValue() === newValue;
   if (reSetValue && !canReSetValue() && (!item || item.selected)) return;
   comboBox.SetValueInternal(newValue);
   onSetValue();
  }
 }
}
ASPx.CBDDButtonMMove = function(evt){
 return ASPx.GetDropDownCollection().OnDDButtonMouseMove(evt);
}
function aspxCBMouseWheel(evt){
 var srcElement = ASPx.Evt.GetEventSource(evt);
 var focusedCB = ASPx.GetDropDownCollection().GetFocusedDropDown();
 if(focusedCB != null && ASPx.GetIsParent(focusedCB.GetMainElement(), srcElement))
  return focusedCB.OnMouseWheel(evt);
}
window.ASPxClientComboBoxBase = ASPxClientComboBoxBase;
window.ASPxClientComboBox = ASPxClientComboBox;
window.ASPxClientNativeComboBox = ASPxClientNativeComboBox;
})();

(function() {
ASPx.PCWIdSuffix = "_PW";
var popupControlZIndex = 11998;
var defaultZIndexFromServer = "10000";
function PCResizeCursorInfo(horizontalDirection, verticalDirection, horizontalOffset, verticalOffset) {
 this.horizontalDirection = horizontalDirection;
 this.verticalDirection = verticalDirection;
 this.horizontalOffset = horizontalOffset;
 this.verticalOffset = verticalOffset;
 this.course = verticalDirection + horizontalDirection;
}
var PopupControlCssClasses = {};
PopupControlCssClasses.Prefix = "dxpc-";
PopupControlCssClasses.SizeGripLiteCssClassName = PopupControlCssClasses.Prefix + "sizeGrip";
PopupControlCssClasses.LinkCssClassName = PopupControlCssClasses.Prefix + "link";
PopupControlCssClasses.ShadowLiteCssClassName = PopupControlCssClasses.Prefix + "shadow";
PopupControlCssClasses.MainDivLiteCssClass = PopupControlCssClasses.Prefix + "mainDiv";
PopupControlCssClasses.ContentWrapperCssClassName = PopupControlCssClasses.Prefix + "contentWrapper";
PopupControlCssClasses.ContentCssClassName = PopupControlCssClasses.Prefix + "content";
PopupControlCssClasses.HeaderContentCssClassName = PopupControlCssClasses.Prefix + "headerContent";
var constants = {
 DEFAULT_WINDOW_WIDTH: 200,
 DEFAULT_WINDOW_HEIGHT: 0
};
var ASPxClientPopupControl = ASPx.CreateClass(ASPxClientControl, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.leadingAfterInitCall = ASPxClientControl.LeadingAfterInitCallConsts.Direct; 
  this.adjustInnerControlsSizeOnShow = true;
  this.slideAnimationDuration = 80;
  this.fadeAnimationDuration = 400;
  this.appearAfter = 300;
  this.disappearAfter = 500;
  this.allowResize = false;
  this.popupAnimationType = "none";
  this.closeAnimationType = "none";
  this.enableAnimation = true;
  this.animationLockCount = 0;
  this.shadowVisible = true;
  this.allowCorrectYOffsetPosition = true; 
  this.contentUrl = "";
  this.contentUrlArray = [];
  this.contentLoadingMode = "Default"
  this.loadingPanels = [];
  this.loadingDivs = [];
  this.lpTimers = [];
  this.windowRequestCount = [];
  this.callbackAnimationProcessings = [];
  this.savedCallbackResults = [];
  this.isCallbackFinishedStates = [];
  this.savedCallbackWindowIndex = null;
  this.cookieName = "";
  this.closeOnEscape = false;
  this.closeAction = "OuterMouseClick";
  this.popupAction = "LeftMouseClick";
  this.closeOnEscapeArray = [];
  this.closeActionArray = [];
  this.popupActionArray = [];
  this.windowsPopupElementIDList = [];
  this.windowsPopupElementList = [];
  this.windowsLastUsedPopupElementInfoList = [];
  this.windowsIsPopupedList = [];
  this.windowsPopupReasonMouseEventList = [];
  this.defaultWindowPopupElementIDList = [];
  this.defaultWindowPopupElementList = [];
  this.defaultLastUsedPopupElementInfo = {};
  this.defaultIsPopuped = false;
  this.defaultPopupReasonMouseEvent = null;
  this.showOnPageLoad = false;
  this.showOnPageLoadArray = [];
  this.popupHorizontalAlign = ASPx.PopupUtils.NotSetAlignIndicator;
  this.popupVerticalAlign = ASPx.PopupUtils.NotSetAlignIndicator;
  this.popupHorizontalOffset = 0;
  this.popupVerticalOffset = 0;
  this.windows = [];
  this.windowCount = 0;
  this.isDragged = false;
  this.isResized = false;
  this.zIndex = -1;
  this.left = 0;
  this.top = 0;
  this.iframeLoading = false;
  this.isDraggedArray = [];
  this.isResizedArray = [];
  this.zIndexArray = [];
  this.leftArray = [];
  this.topArray = [];
  this.height = constants.DEFAULT_WINDOW_HEIGHT;
  this.width = constants.DEFAULT_WINDOW_WIDTH;
  this.widthFromServer = false;
  this.minHeight = null;
  this.minWidth = null;
  this.maxHeight = null;
  this.maxWidth = null;
  this.shownArray = [];
  this.heightArray = [];
  this.widthArray = [];
  this.widthFromServerArray = [];
  this.minHeightArray = [];
  this.minWidthArray = [];
  this.maxHeightArray = [];
  this.maxWidthArray = [];
  this.iframeLoadingArray = [];
  this.isLiveResizingMode = true;
  this.isPopupPositionCorrectionOn = true;
  this.isPopupFullCorrectionOn = true;
  this.windowElements = {};
  this.hideBodyScrollWhenModal = true;
  this.hideBodyScrollWhenModalArray = [];
  this.hideBodyScrollWhenMaximized = true;
  this.autoUpdatePosition = false;
  this.autoUpdatePositionArray = [];
  this.cachedSize = null;
  this.cachedSizeArray = [];
  this.fakeDragDiv = null;
  this.headerHeight = 0;
  this.headerHeightArray = [];
  this.footerHeight = 0;
  this.footerHeightArray = [];
  this.ResizeBorderSize = ASPx.Browser.TouchUI ? 10 : 6;
  this.ResizeCornerBorderSize = 20;
  this.allowDragging = false;
  this.isWindowDragging = false;
  this.enableContentScrolling = false;
  this.enableContentScrollingArray = [];
  this.contentOverflowX = "None";
  this.contentOverflowY = "None";
  this.contentOverflowXArray = [];
  this.contentOverflowYArray = [];
  this.isPinned = false;
  this.isPinnedArray = [];
  this.pinX = 0;
  this.pinXArray = [];
  this.pinY = 0;
  this.pinYArray = [];
  this.lockScroll = 0;
  this.isCollapsed = false;
  this.isCollapsedArray = [];
  this.isCollapsedInit = false;
  this.isCollapsedInitArray = [];
  this.collapseExecutingLockCount = 0;
  this.isMaximized = false;
  this.isMaximizedArray = [];
  this.isMaximizedInit = false;
  this.isMaximizedInitArray = [];
  this.maximizationExecutingLockCount = 0;
  this.restoredWindowValues = {};
  this.restoredWindowValuesArray = [];
  this.browserResizingForMaxWindowLockCount = 0;
  this.updateRestoredWindowSizeLockCount = 0;
  this.iframeAdjustingPostponedArray = [];
  this.iframeAdjustingPostponed = false;
  this.touchUIScrollers = {};
  this.prohibitClearSelectionOnMouseDown = false;
  this.CloseButtonClick = new ASPxClientEvent();
  this.CloseUp = new ASPxClientEvent();
  this.Closing = new ASPxClientEvent();
  this.PopUp = new ASPxClientEvent();
  this.Resize = new ASPxClientEvent();
  this.Shown = new ASPxClientEvent();
  this.BeforeResizing = new ASPxClientEvent();
  this.AfterResizing = new ASPxClientEvent();
  this.PinnedChanged = new ASPxClientEvent();
  aspxGetPopupControlCollection().Add(this);
 },
 InlineInitialize: function() {
  ASPxClientControl.prototype.InlineInitialize.call(this);
  this.InitializeArrayCores();
 },
 Initialize: function() {
  aspxGetPopupControlCollection().EnsureSaveScrollState();
  this.InitializeBeforeAnyShow();
  if(this.HasDefaultWindow())
   this.InitializeWindow(-1);
  for(var i = 0; i < this.GetWindowCount() ; i++)
   this.InitializeWindow(i);
  this.InitializeScrollbars();
  this.constructor.prototype.Initialize.call(this);
 },
 InitializeBeforeAnyShow: function() {
  this.InitializeEnableContentScrolling();
 },
 InitializeEnableContentScrolling: function() {
  for(var windowIndex = 0; windowIndex < this.GetWindowCount() ; windowIndex++) {
   var contentOverflowX = this.GetWindowOverflowX(windowIndex);
   var contentOverflowY = this.GetWindowOverflowY(windowIndex);
   this.enableContentScrollingArray.push(contentOverflowX != "None" || contentOverflowY != "None");
  }
  this.enableContentScrolling = this.contentOverflowX != "None" || this.contentOverflowY != "None";
 },
 InitializeScrollbars: function() {
  if(!ASPx.Browser.WebKitTouchUI && (!ASPx.Browser.WindowsPhonePlatform || !ASPx.Browser.IE))
   return;
  var indices = [];
  for(var i = 0; i < this.GetWindowCount(); i++)
   indices.push(i);
  if(this.HasDefaultWindow())
   indices.push(-1);
  for(var i = 0; i < indices.length; i++) {
   if(this.GetEnableContentScrolling(i)) {
    var windowIndex = indices[i];
    var scrollElement = this.GetContentContainer(windowIndex);
    if(scrollElement) {
     var contentOverflowX = this.GetWindowOverflowX(windowIndex);
     var contentOverflowY = this.GetWindowOverflowY(windowIndex);
     var options = {
      showHorizontalScrollbar: contentOverflowX === "Auto" || contentOverflowX === "Scroll",
      showVerticalScrollbar: contentOverflowY === "Auto" || contentOverflowY === "Scroll"
     };
     this.touchUIScrollers[windowIndex] = ASPx.TouchUIHelper.MakeScrollable(scrollElement, options);
    }
   }
  }
 },
 OnDispose: function() { 
  this.constructor.prototype.OnDispose.call(this);
  this.ClearPopupElementConnection();
 },
 preventParentOverlowOnIos: function(index) {
  if(!ASPx.Browser.MacOSMobilePlatform) return;
  var parent = this.getParentPopupControl(index);
  if(parent) 
   parent.popupControl.changeContentOverflow(parent.windowIndex);
 },
 restoreParentOverflowOnIos: function(index) {
  if(!ASPx.Browser.MacOSMobilePlatform) return;
  var parent = this.getParentPopupControl(index);
  if(parent) 
   parent.popupControl.restoreContentOverflow(parent.windowIndex);
 },
 getTouchScrollerElement: function(index) {
  var touchUIScroller = this.touchUIScrollers[index];
  if(!touchUIScroller) return null;
  return touchUIScroller.element;
 },
 changeContentOverflow: function(index) {
  var scrollerElement = this.getTouchScrollerElement(index);
  if(!scrollerElement) return;
  ASPx.Attr.ChangeStyleAttribute(scrollerElement, "overflow", "visible");
  ASPx.Attr.ChangeStyleAttribute(scrollerElement, "overflowX", "visible");
  ASPx.Attr.ChangeStyleAttribute(scrollerElement, "overflowY", "visible");
 },
 restoreContentOverflow: function(index) {
  var scrollerElement = this.getTouchScrollerElement(index);
  if(!scrollerElement) return;
  ASPx.Attr.RestoreStyleAttribute(scrollerElement, "overflow");
  ASPx.Attr.RestoreStyleAttribute(scrollerElement, "overflowX");
  ASPx.Attr.RestoreStyleAttribute(scrollerElement, "overflowY");
 },
 UpdateScrollbar: function(index) {
  var touchUIScroller = this.touchUIScrollers[index];
  if(!touchUIScroller)
   return;
  var scrollElement = this.GetContentContainer(index);
  if(scrollElement)
   touchUIScroller.ChangeElement(scrollElement);
 },
 AfterInitialize: function() {
  if(this.HasDefaultWindow())
   this.AfterInitializeWindow(-1);
  for(var i = 0; i < this.GetWindowCount() ; i++)
   this.AfterInitializeWindow(i);
  this.constructor.prototype.AfterInitialize.call(this);
 },
 InitializeArrayCores: function() {
  if(this.GetWindowCountCore() > 0) {
   this.InitializeWindowPopupElementList();
   this.InitializeWindowPopupElementIDList();
   this.InitializeWindowLastUsedPopupElementInfoList();
   this.InitializeArray(this.shownArray);
   this.InitializeArray(this.windowsPopupReasonMouseEventList, null);
   this.InitializeArray(this.windowsIsPopupedList, false);
   this.InitializeArray(this.contentUrlArray, "");
   this.InitializeArray(this.popupActionArray, this.popupAction);
   this.InitializeArray(this.closeActionArray, this.closeAction);
   this.InitializeArray(this.showOnPageLoadArray, false);
   this.InitializeArray(this.isDraggedArray, false);
   this.InitializeArray(this.isPinnedArray, false);
   this.InitializeArray(this.isCollapsedArray, false);
   this.InitializeArray(this.isCollapsedInitArray, false);
   this.InitializeArray(this.isMaximizedArray, false);
   this.InitializeArray(this.isMaximizedInitArray, false);
   this.InitializeArray(this.restoredWindowValuesArray, {});
   this.InitializeArray(this.iframeAdjustingPostponedArray, {});
   this.InitializeArray(this.isResizedArray, false);
   this.InitializeArray(this.zIndexArray, -1);
   this.InitializeArray(this.leftArray, 0);
   this.InitializeArray(this.topArray, 0);
   this.InitializeArray(this.widthArray, constants.DEFAULT_WINDOW_WIDTH);
   this.InitializeArray(this.heightArray, constants.DEFAULT_WINDOW_HEIGHT);
   this.InitializeArray(this.widthFromServerArray, false);
   this.InitializeArray(this.pinXArray, 0);
   this.InitializeArray(this.pinYArray, 0);
   this.InitializeArray(this.minWidthArray, null);
   this.InitializeArray(this.minHeightArray, null);
   this.InitializeArray(this.maxWidthArray, null);
   this.InitializeArray(this.maxHeightArray, null);
   this.InitializeArray(this.cachedSizeArray, null);
   this.InitializeArray(this.iframeLoadingArray, false);
   this.InitializeArray(this.autoUpdatePositionArray, false);
   this.InitializeArray(this.hideBodyScrollWhenModalArray, true);
   this.InitializeArray(this.closeOnEscapeArray, this.closeOnEscape);
   if(ASPx.Browser.IE) {
    this.InitializeArray(this.headerHeightArray, -1);
    this.InitializeArray(this.footerHeightArray, -1);
   }
  }
 },
 InitializeArray: function(array, defaultValue) {
  if(array.length == 0) {
   for(var i = 0; i < this.GetWindowCountCore() ; i++)
    array[i] = defaultValue;
  }
 },
 InitializeWindowPopupElementIDList: function() {
  for(var i = 0; i < this.GetWindowCountCore() ; i++) {
   if(!this.windowsPopupElementIDList[i])
    this.windowsPopupElementIDList[i] = [];
  }
 },
 InitializeWindowPopupElementList: function() {
  for(var i = 0; i < this.GetWindowCountCore() ; i++) {
   if(!this.windowsPopupElementList[i])
    this.windowsPopupElementList[i] = [];
  }
 },
 InitializeWindowLastUsedPopupElementInfoList: function() {
  for(var i = 0; i < this.GetWindowCountCore() ; i++) {
   if(!this.windowsLastUsedPopupElementInfoList[i])
    this.windowsLastUsedPopupElementInfoList[i] = {};
  }
 },
 WindowElementIDAssignmentMap: [
  { cssClass: "dxpc-header", prefix: "_PWH" },
  { cssClass: "dxpc-headerText", prefix: "_PWH", postfix: "T" },
  { cssClass: "dxpc-headerImg", prefix: "_PWH", postfix: "I" },
  { cssClass: "dxpc-closeBtn", prefix: "_HCB" },
  { cssClass: "dxpc-pinBtn", prefix: "_HPB" },
  { cssClass: "dxpc-refreshBtn", prefix: "_HRB" },
  { cssClass: "dxpc-collapseBtn", prefix: "_HMNB" },
  { cssClass: "dxpc-maximizeBtn", prefix: "_HMXB" },
  { cssClass: "dxpc-content", prefix: "_PWC" },
  { cssClass: "dxpc-iFrame", prefix: "_CIF" },
  { cssClass: "dxpc-footer", prefix: "_PWF" },
  { cssClass: "dxpc-footerText", prefix: "_PWF", postfix: "T" },
  { cssClass: "dxpc-footerImg", prefix: "_PWF", postfix: "I" }
 ],
 AssignElementID: function(element, index, prefix, postfix) {
  element.id = this.name + prefix + index + (postfix ? postfix : "");
 },
 AssignWindowElementsID: function(index, windowElement) {
  for(var i = 0; i < this.WindowElementIDAssignmentMap.length; i++) {
   var elementClass = this.WindowElementIDAssignmentMap[i].cssClass;
   var elements = ASPx.GetNodesByClassName(windowElement, elementClass);
   for(var j = 0; j < elements.length; j++) {
    var element = elements[j];
    if(this.GetFirstParentWindow(element) === windowElement)
     this.AssignElementID(element, index, this.WindowElementIDAssignmentMap[i].prefix, this.WindowElementIDAssignmentMap[i].postfix);
   }
  }
 },
 AddKeyDownHandler: function(shortcutString, handler) {
  if(typeof(this.keyDownHandlers) === "undefined")
   this.keyDownHandlers = [];
  this.keyDownHandlers[ASPx.ParseShortcutString(shortcutString)] = handler;
 },
 GetFirstParentWindow: function(el) {
  while(el && el.tagName != "BODY") {
   if(el.nodeType == 1 && el.className.indexOf("dxpclW") > -1 && !isNaN(this.GetWindowIndex(el)))
    return el;
   el = el.parentNode;
  }
 },
 getParentPopupControl: function(index) {
  var parentPopupWindowElement = this.GetFirstParentWindow(this.GetWindowElement(index).parentNode);
  if(parentPopupWindowElement)
   return aspxGetPopupControlCollection().GetPopupWindowFromID(parentPopupWindowElement.id);
 },
 PreventHeaderButtonMouseDownBubbling: function(evt, hdrButton) {
  if(hdrButton) {
   var source = ASPx.Evt.GetEventSource(evt);
   if(ASPx.GetIsParent(hdrButton, source)) {
    ASPx.PWHMDown(evt);
    return true;
   }
  }
  return false;
 },
 GetWindowElementMouseDownEventHandler: function(index) {
  var instance = this;
  return function(evt) {
   if(!instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowCloseButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowPinButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowRefreshButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowCollapseButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowMaximizeButton(index)))
    ASPx.PWMDown(evt, instance.name, index, instance.isWindowDragging);
  }
 },
 GetWindowElementMouseMoveEventHandler: function(index) {
  var instance = this;
  return function(evt) { ASPx.PWMMove(evt, instance.name, index); };
 },
 GetWindowHeaderElementMouseDownEventHandler: function(index) {
  var instance = this;
  return function(evt) {
   if(!instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowCloseButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowPinButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowRefreshButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowCollapseButton(index)) &&
    !instance.PreventHeaderButtonMouseDownBubbling(evt, instance.GetWindowMaximizeButton(index)))
    ASPx.PWDGMDown(evt, instance.name, index);
  }
 },
 AssignWindowElementsEvents: function(index, element) {
  var instance = this;
  var mdEventName = ASPx.TouchUIHelper.touchMouseDownEventName;
  ASPx.Evt.AttachEventToElement(element, mdEventName, this.GetWindowElementMouseDownEventHandler(index));
  if(this.allowResize) {
   var mmEventName = ASPx.TouchUIHelper.touchMouseMoveEventName;
   ASPx.Evt.AttachEventToElement(element, mmEventName, this.GetWindowElementMouseMoveEventHandler(index));
  }
  var header = this.GetWindowHeaderElement(index);
  if(header && this.allowDragging && !this.isWindowDragging) {
   ASPx.Evt.AttachEventToElement(header, mdEventName, this.GetWindowHeaderElementMouseDownEventHandler(index), true);
  }
  var sizeGrip = this.GetWindowSizeGripElement(index);
  if(sizeGrip) {
   ASPx.Evt.AttachEventToElement(sizeGrip, mdEventName, function(evt) {
    ASPx.PWGripMDown(evt, instance.name, index);
    ASPx.Evt.PreventEvent(evt);
   });
  }
  this.AttachClickToHeaderButton(index, this.GetWindowCloseButton(index), "ASPx.PWCBClick");
  this.AttachClickToHeaderButton(index, this.GetWindowPinButton(index), "ASPx.PWPBClick");
  this.AttachClickToHeaderButton(index, this.GetWindowRefreshButton(index), "ASPx.PWRBClick");
  this.AttachClickToHeaderButton(index, this.GetWindowCollapseButton(index), "ASPx.PWMNBClick");
  this.AttachClickToHeaderButton(index, this.GetWindowMaximizeButton(index), "ASPx.PWMXBClick");
 },
 AttachClickToHeaderButton: function(index, headerButton, eventFuncName) {
  var instance = this;
  if(headerButton) {
   ASPx.Evt.AttachEventToElement(headerButton, "click", function(evt) {
    eval(eventFuncName)(evt, instance.name, index);
   });
  }
 },
 InitializeWindow: function(index) {
  var modalElement = this.GetWindowModalElement(index);
  if(modalElement)
   ASPx.Evt.AttachEventToElement(modalElement, "mousedown", aspxPWMEMDown);
  this.RemoveWindowAllPopupElements(index);
  this.PopulatePopupElements(index);
  var element = this.GetWindowElement(index);
  if(element != null) {
   this.AssignWindowElementsID(index, element);
   this.AssignWindowElementsEvents(index, element);
   element.DXPopupWindowElement = true;
   ASPx.Evt.AttachEventToElement(element, "resize", this.CreateWindowResizeHandler(this.name, index));
   if(ASPx.Browser.IE)
    this.AttachOnDragStartEventToWindowImages(index);
   var contentUrl = this.GetWindowContentIFrameUrl(index);
   if(contentUrl != "")
    this.SetWindowContentUrlInternal(index, contentUrl);
   element.isHiding = false;
   element.isContentHeightInit = false;
   element.isPopupPositionCorrectionOn = this.isPopupPositionCorrectionOn || !this.GetShowOnPageLoad(index);
   if(this.GetShowOnPageLoad(index) && this.GetZIndex(index) > 0) {
    this.FirstShowWindow(index, false);
    aspxGetPopupControlCollection().SetWindowElementZIndex(element, this.GetZIndex(index));
    element.isPopupPositionCorrectionOn = true;
   }
   this.InitializeWindowEscKeyHandler(element, index);
  }
 },
 InitializeWindowEscKeyHandler: function(element, index) {
  if(!this.GetEnableCloseByEsc(index)) return;
  this.AddKeyDownHandler("ESC", this.OnEscKeyDown.aspxBind(this));
 },
 OnEscKeyDown: function(index) {
  if(this.GetEnableCloseByEsc(index))
   this.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.Escape);
 }, 
 OnDocumentKeyDown: function(evt, popupWindow) {
  var handler = this.keyDownHandlers && this.keyDownHandlers[ASPx.GetShortcutCode(evt.keyCode, evt.ctrlKey, evt.shiftKey, evt.altKey)];
  if(handler)
   handler(this.GetWindowIndex(popupWindow));
 },
 CreateWindowResizeHandler: function(name, index) {
  return function() {
   var pc = aspxGetPopupControlCollection().Get(name);
   if(pc)
    pc.ResizeWindowIFrame(index);
  };
 },
 BrowserWindowResizeSubscriber: function() {
  return true;
 },
 OnBrowserWindowResize: function(evt) {
  window.setTimeout(this.SetPopupMaximizedPositionOnBrowserResize.aspxBind(this), 0);
 },
 SetPopupMaximizedPositionOnBrowserResize: function() {
  if(this.HasDefaultWindow())
   this.SetMaximizedPositionOnBrowserResize(-1);
  for(var i = 0; i < this.GetWindowCount() ; i++)
   this.SetMaximizedPositionOnBrowserResize(i);
 },
 SetMaximizedPositionOnBrowserResize: function(index) {
  var element = this.GetWindowElement(index);
  if(element && this.GetIsMaximized(index) && this.InternalIsWindowVisible(index)) {
   var left = this.GetMaximizedPosition(element, true);
   var top = this.GetMaximizedPosition(element, false);
   this.SetWindowPos(index, element, left, top);
  }
 },
 InitIFrame: function(index) {
  var contentIFrameElement = this.GetWindowContentIFrameElement(index);
  if(contentIFrameElement) {
   contentIFrameElement.popupControlName = this.name;
   contentIFrameElement.pcWndIndex = index;
   ASPx.Evt.AttachEventToElement(contentIFrameElement, "load", ASPx.PCIframeLoad);
  }
 },
 InitCollapsedWindows: function(index) {
  if((this.isCollapsedInit && index == -1) || (index >= 0 && index < this.isCollapsedInitArray.length && this.isCollapsedInitArray[index])) {
   if(this.InternalIsWindowVisible(index)) {
    this.DoCollapse(index, true);
    if(index == -1)
     this.isCollapsedInit = false;
    else
     this.isCollapsedInitArray[index] = false;
   }
  }
 },
 InitMaximizedWindows: function(index) {
  if(this.GetIsMaximizedInit(index) && this.InternalIsWindowVisible(index)) {
   this.DoMaximize(index, true);
   this.SetIsMaximizedInit(index, false);
  }
 },
 InitPinnedWindows: function(index) {
  if((this.isPinned && index == -1) || (index >= 0 && index < this.isPinnedArray.length && this.isPinnedArray[index]))
   this.HoldPosition(index, true);
 },
 AfterInitializeWindow: function(index) {
  if(this.contentOverflowX !== "None" && !this.GetWindowWidthFromServer(index))
   this.SetWindowWidth(index, 0);
  if(this.GetShowOnPageLoad(index) && this.GetZIndex(index) < 0) {
   this.FirstShowWindow(index, true);
   var element = this.GetWindowElement(index);
   if(element != null)
    element.isPopupPositionCorrectionOn = true;
  }
  this.EnsureContent(index, true);
  this.InitPinnedWindows(index);
  this.InitMaximizedWindows(index);
  this.InitCollapsedWindows(index);
 },
 AttachOnDragStartEventToWindowImages: function(index) {
  this.AttachChildImagesPreventDragStartEvent(this.GetWindowHeaderElement(index));
  this.AttachChildImagesPreventDragStartEvent(this.GetWindowFooterElement(index));
 },
 AttachChildImagesPreventDragStartEvent: function(parentElem) {
  var images = parentElem == null ? null : ASPx.GetNodesByTagName(parentElem, "img");
  if(images != null) {
   for(var i = 0; i < images.length; i++)
    ASPx.Evt.AttachEventToElement(images[i], "dragstart", ASPx.Evt.PreventDragStart);
  }
 },
 FirstShowWindow: function(index, allowChangeZIndex) {
  var isFreeWindow = this.GetIsDragged(index);
  var x = ASPx.InvalidPosition;
  var y = ASPx.InvalidPosition;
  if(isFreeWindow) {
   x = this.GetWindowLeft(index);
   y = this.GetWindowTop(index);
   var popupHorizontalOffsetBackup = this.popupHorizontalOffset;
   var popupVerticalOffsetBackup = this.popupVerticalOffset;
   this.popupHorizontalOffset = 0;
   this.popupVerticalOffset = 0;
  }
  this.LockAnimation();
  this.DoShowWindowAtPos(index, x, y, isFreeWindow ? -1 : 0, false, allowChangeZIndex);
  this.UnlockAnimation();
  if(isFreeWindow) {
   this.popupHorizontalOffset = popupHorizontalOffsetBackup;
   this.popupVerticalOffset = popupVerticalOffsetBackup;
  }
  this.CorrectElementVerticalAlignment(ASPx.AdjustVerticalMarginsInContainer, this.GetWindowHeaderElement(index));
 },
 GetIsDragged: function(index) {
  if(0 <= index && index < this.isDraggedArray.length)
   return this.isDraggedArray[index];
  return this.isDragged;
 },
 SetIsDragged: function(index, value) {
  if(0 <= index && index < this.isDraggedArray.length)
   this.isDraggedArray[index] = value;
  else
   this.isDragged = value;
 },
 GetIsPinned: function(index) {
  if(0 <= index && index < this.isPinnedArray.length)
   return this.isPinnedArray[index];
  return this.isPinned;
 },
 SetIsPinned: function(index, value) {
  if(0 <= index && index < this.isPinnedArray.length)
   this.isPinnedArray[index] = value;
  else
   this.isPinned = value;
 },
 GetPinPosX: function(index) {
  if(0 <= index && index < this.pinXArray.length)
   return this.pinXArray[index];
  return this.pinX;
 },
 SetPinPosX: function(index, pinX) {
  if(0 <= index && index < this.pinXArray.length)
   this.pinXArray[index] = pinX;
  else
   this.pinX = pinX;
 },
 GetPinPosY: function(index) {
  if(0 <= index && index < this.pinYArray.length)
   return this.pinYArray[index];
  return this.pinY;
 },
 SetPinPosY: function(index, pinY) {
  if(0 <= index && index < this.pinYArray.length)
   this.pinYArray[index] = pinY;
  else
   this.pinY = pinY;
 },
 GetIsCollapsed: function(index) {
  if(0 <= index && index < this.isCollapsedArray.length)
   return this.isCollapsedArray[index];
  return this.isCollapsed;
 },
 SetIsCollapsed: function(index, value) {
  if(0 <= index && index < this.isCollapsedArray.length)
   this.isCollapsedArray[index] = value;
  else
   this.isCollapsed = value;
 },
 GetIsMaximized: function(index) {
  if(0 <= index && index < this.isMaximizedArray.length)
   return this.isMaximizedArray[index];
  return this.isMaximized;
 },
 GetIsMaximizedOnWebKitTouch: function(index) {
  return this.GetIsMaximized(index) && ASPx.Browser.WebKitTouchUI;
 },
 SetIsMaximized: function(index, value) {
  if(0 <= index && index < this.isMaximizedArray.length)
   this.isMaximizedArray[index] = value;
  else
   this.isMaximized = value;
 },
 GetIsMaximizedInit: function(index) {
  if(0 <= index && index < this.isMaximizedInitArray.length)
   return this.isMaximizedInitArray[index];
  return this.isMaximizedInit;
 },
 SetIsMaximizedInit: function(index, value) {
  if(0 <= index && index < this.isMaximizedInitArray.length)
   this.isMaximizedInitArray[index] = value;
  else
   this.isMaximizedInit = value;
 },
 GetRestoredWindowData: function(index) {
  if(0 <= index && index < this.restoredWindowValuesArray.length)
   return this.restoredWindowValuesArray[index];
  return ASPx.CloneObject(this.restoredWindowValues);
 },
 SetRestoredWindowData: function(index, value) {
  if(0 <= index && index < this.restoredWindowValuesArray.length)
   this.restoredWindowValuesArray[index] = value;
  else
   this.restoredWindowValues = value;
 },
 GetIsResized: function(index) {
  if(0 <= index && index < this.isResizedArray.length)
   return this.isResizedArray[index];
  return this.isResized;
 },
 SetIsResized: function(index, value) {
  if(0 <= index && index < this.isResizedArray.length)
   this.isResizedArray[index] = value;
  else
   this.isResized = value;
 },
 GetHorizontalAlign: function() {
  return this.popupHorizontalAlign;
 },
 GetVerticalAlign: function() {
  return this.popupVerticalAlign;
 },
 GetPopupHorizontalOffset: function() {
  return this.popupHorizontalOffset;
 },
 SetPopupHorizontalOffset: function(offset) {
  this.popupHorizontalOffset = offset;
 },
 SetPopupVerticalOffset: function(offset) {
  this.popupVerticalOffset = offset;
 },
 GetPopupVerticalOffset: function() {
  return this.popupVerticalOffset;
 },
 HasDefaultWindow: function() {
  return this.GetWindowCountCore() == 0;
 },
 GetCurrentLeft: function(index) {
  return this.GetPosition(index, true);
 },
 GetCurrentTop: function(index) {
  return this.GetPosition(index, false);
 },
 GetHeaderHeight: function(index) {
  if(0 <= index && index < this.headerHeightArray.length)
   return this.headerHeightArray[index];
  return this.headerHeight;
 },
 GetFooterHeight: function(index) {
  if(0 <= index && index < this.footerHeightArray.length)
   return this.footerHeightArray[index];
  return this.footerHeight;
 },
 GetWindowFooterHeightLite: function(index) {
  var footer = this.GetWindowFooterElement(index);
  if(footer)
   return footer.offsetHeight;
  return null;
 },
 SetHeaderHeight: function(index, height) {
  if(0 <= index && index < this.headerHeightArray.length)
   this.headerHeightArray[index] = height;
  else
   this.headerHeight = height;
 },
 SetFooterHeight: function(index, height) {
  if(0 <= index && index < this.footerHeightArray.length)
   return this.footerHeightArray[index] = height;
  else
   this.footerHeight = height;
 },
 GetPosition: function(index, isLeft) {
  if(0 <= index && index < this.GetWindowCountCore())
   return isLeft ? this.leftArray[index] : this.topArray[index];
  return isLeft ? this.left : this.top;
 },
 GetEnableCloseByEsc: function(index) {
  if(0 <= index && index < this.closeOnEscapeArray.length)
   return this.closeOnEscapeArray[index];
  return this.closeOnEscape;
 },
 SetPopupElementReference: function(index, popupElement, popupElementIndex, attach) {
  if(!ASPx.IsExistsElement(popupElement)) return;
  var setReferenceFunction = attach ? ASPx.Evt.AttachEventToElement : ASPx.Evt.DetachEventFromElement;
  var windowPopupAction = this.GetWindowPopupAction(index);
  if(windowPopupAction == "LeftMouseClick")
   setReferenceFunction(popupElement, "mouseup", aspxPEMEvent);
  else if(windowPopupAction == "RightMouseClick")
   setReferenceFunction(popupElement, "contextmenu", aspxPEMEvent);
  else if(windowPopupAction == "MouseOver") {
   var windowElement = this.GetWindowElement(index);
   setReferenceFunction(popupElement, "mouseover", ASPx.PopupUtils.OverControl.OnMouseOver);
   setReferenceFunction(windowElement, "mouseover", aspxPWEMOver);
   if(attach)
    this.SetMSTouchMouseOverReference(popupElement, windowElement, this.name, index, this.appearAfter);
  }
  if(windowPopupAction == "LeftMouseClick" || windowPopupAction == "RightMouseClick") {
   setReferenceFunction(popupElement, "mousedown", aspxPEMEvent);
  }
  if(attach) {
   popupElement.DXPopupElementControl = this;
   popupElement.DXPopupWindowIndex = index;
   popupElement.DXPopupElementIndex = popupElementIndex;
  } else
   popupElement.DXPopupElementControl = popupElement.DXPopupWindowIndex = popupElement.DXPopupElementIndex = undefined;
 },
 SetMSTouchMouseOverReference: function(popupElement, windowElement, popupName, index, appearAfter) {
  if(!ASPx.TouchUIHelper.pointerEnabled) return;
  popupElement.dxMsTouchGesture = popupElement.dxMsTouchGesture ||
   ASPx.TouchUIHelper.msTouchCreateGesturesWrapper(popupElement, function(evt) {
    window.setTimeout(function() {
     aspxGetPopupControlCollection().SetAppearTimer(popupName, index, popupElement.DXPopupElementIndex, appearAfter, evt);
    }, 0);
   });
  windowElement.dxMsTouchGesture = windowElement.dxMsTouchGesture || ASPx.TouchUIHelper.msTouchCreateGesturesWrapper(windowElement, function(evt) {
   window.setTimeout(function() {
    aspxGetPopupControlCollection().ClearDisappearTimer();
   }, 0);
  });
 },
 PopulatePopupElements: function(index) {
  var ids = this.GetPopupElementIDList(index);
  for(var i = 0; i < ids.length; i++) {
   var popupElement = ASPx.PopupUtils.FindPopupElementById(ids[i]);
   if(popupElement)
    this.AddWindowPopupElement(index, popupElement);
  }
 },
 GetPopupElement: function(index, popupElementIndex) {
  var popupElement = this.GetPopupElementList(index)[popupElementIndex];
  return popupElement ? popupElement : null;
 },
 GetPopupElementIDList: function(index) {
  if(0 <= index && index < this.GetWindowCountCore())
   return this.windowsPopupElementIDList[index];
  return this.defaultWindowPopupElementIDList;
 },
 GetPopupElementList: function(index) {
  if(0 <= index && index < this.GetWindowCountCore())
   return this.windowsPopupElementList[index];
  return this.defaultWindowPopupElementList;
 },
 SetPopupElementIDs: function(index, ids) {
  if(0 <= index && index < this.GetWindowCountCore())
   this.windowsPopupElementIDList[index] = ids;
  this.defaultWindowPopupElementIDList = ids;
 },
 AddPopupElementInternal: function(index, element) {
  var popupElements = this.GetPopupElementList(index);
  for(var i = 0; i < popupElements.length; i++) {
   if(!popupElements[i]) {
    popupElements[i] = element;
    return i;
   }
  }
  popupElements.push(element);
  return popupElements.length - 1;
 },
 RemovePopupElementInternal: function(index, element) {
  var popupElements = this.GetPopupElementList(index);
  for(var i = 0; i < popupElements.length; i++) {
   if(popupElements[i] == element) {
    popupElements[i] = null;
    return;
   }
  }
 },
 AddPopupElement: function(popupElement) {
  this.AddWindowPopupElement(-1, popupElement);
 },
 AddWindowPopupElement: function(index, popupElement) {
  var popupElementIndex = this.AddPopupElementInternal(index, popupElement);
  this.SetPopupElementReference(index, popupElement, popupElementIndex, true);
 },
 RemovePopupElement: function(popupElement) {
  this.RemoveWindowPopupElement(-1, popupElement);
 },
 RemoveWindowPopupElement: function(index, popupElement) {
  this.RemovePopupElementInternal(index, popupElement);
  this.SetPopupElementReference(index, popupElement, null, false);
 },
 RemoveAllPopupElements: function() {
  this.RemoveWindowAllPopupElements(-1);
 },
 RemoveWindowAllPopupElements: function(index) {
  var popupElements = this.GetPopupElementList(index);
  for(var i = 0; i < popupElements.length; i++)
   this.RemoveWindowPopupElement(index, popupElements[i]);
 },
 GetIsPopuped: function(index) {
  if(0 <= index && index < this.GetWindowCountCore())
   return this.windowsIsPopupedList[index];
  return this.defaultIsPopuped;
 },
 SetIsPopuped: function(index, isPopuped) {
  if(0 <= index && index < this.GetWindowCountCore())
   this.windowsIsPopupedList[index] = isPopuped;
  this.defaultIsPopuped = isPopuped;
 },
 GetLastShownPopupElementIndex: function(windowIndex) {
  var info = this.GetLastUsedPopupElementInfo(windowIndex);
  return ASPx.GetDefinedValue(info.shownPEIndex, 0);
 },
 SetLastShownPopupElementIndex: function(windowIndex, popupElementIndex) {
  var info = this.GetLastUsedPopupElementInfo(windowIndex);
  info.shownPEIndex = popupElementIndex;
 },
 GetLastOverPopupElementIndex: function(windowIndex) {
  var info = this.GetLastUsedPopupElementInfo(windowIndex);
  return ASPx.GetDefinedValue(info.overPEIndex, -1);
 },
 SetLastOverPopupElementIndex: function(windowIndex, popupElementIndex) {
  var info = this.GetLastUsedPopupElementInfo(windowIndex);
  info.overPEIndex = popupElementIndex;
 },
 GetLastUsedPopupElementInfo: function(index) {
  if(0 <= index && index < this.GetWindowCountCore())
   return this.windowsLastUsedPopupElementInfoList[index];
  return this.defaultLastUsedPopupElementInfo;
 },
 SetWindowPopUpReasonMouseEvent: function(index, evt) {
  evt = ASPx.CloneObject(evt);
  if(evt === undefined)
   evt = null;
  if(0 <= index && index < this.GetWindowCountCore())
   this.windowsPopupReasonMouseEventList[index] = evt;
  this.defaultPopupReasonMouseEvent = evt;
 },
 GetPopUpReasonMouseEvent: function() {
  return this.GetWindowPopUpReasonMouseEvent(null);
 },
 GetWindowPopUpReasonMouseEvent: function(window) {
  var index = (window != null) ? window.index : -1;
  if(0 <= index && index < this.GetWindowCountCore())
   return this.windowsPopupReasonMouseEventList[index];
  return this.defaultPopupReasonMouseEvent;
 },
 GetShowOnPageLoad: function(index) {
  if(0 <= index && index < this.showOnPageLoadArray.length)
   return this.showOnPageLoadArray[index];
  return this.showOnPageLoad;
 },
 GetWindowCountCore: function() {
  return (this.windows.length > 0) ? this.windows.length : this.windowCount;
 },
 GetWindowIFrame: function(index) {
  var element = this.GetWindowElement(index);
  var iFrame = element.overflowElement;
  if(!iFrame) {
   iFrame = this.FindWindowIFrame(index);
   element.overflowElement = iFrame;
  }
  return iFrame;
 },
 FindWindowIFrame: function(index) {
  return ASPx.GetElementById(this.name + "_DXPWIF" + index);
 },
 GetWindowModalElement: function(index) {
  var element = this.GetWindowElement(index);
  if(!element) return;
  var modalElement = element.modalElement;
  if(!modalElement) {
   modalElement = this.FindWindowModalElement(index);
   element.modalElement = modalElement;
   if(modalElement) {
    modalElement.DXModalPopupControl = this;
    modalElement.DXModalPopupWindowIndex = index;
   }
  }
  return modalElement;
 },
 GetModalElementEndAnimationOpacity: function(index) {
  if(typeof (this.modalElementOpacity) == "undefined")
   this.modalElementOpacity = [];
  if(typeof (this.modalElementOpacity[index]) == "undefined")
   this.modalElementOpacity[index] = ASPx.GetElementOpacity(this.GetWindowModalElement(index));
  return this.modalElementOpacity[index];
 },
 FindWindowModalElement: function(index) {
  return ASPx.GetElementById(this.name + "_DXPWMB" + index);
 },
 GetWindowElementId: function(index) {
  return this.name + ASPx.PCWIdSuffix + index;
 },
 WindowIsModal: function(index) {
  return !!this.GetWindowModalElement(index);
 },
 SetClientModality: function(isModal) {
  this.SetWindowClientModality(-1, isModal);
 },
 SetWindowClientModality: function(index, isModal) {
  var modalElement = this.GetWindowModalElement(index);
  if(isModal && !ASPx.IsElementVisible(modalElement))
   this.DoShowWindowModalElement(index);
  if(!isModal && ASPx.IsElementVisible(modalElement)) {
   var element = this.GetWindowElement(index);
   this.DoHideWindowModalElement(element);
  }
 },
 GetWindowElement: function(index) {
  if(!ASPx.IsExistsElement(this.windowElements[index]))
   this.windowElements[index] = ASPx.GetElementById(this.GetWindowElementId(index));
  return this.windowElements[index];
 },
 GetWindowCloseButton: function(index) {
  return ASPx.GetElementById(this.name + "_HCB" + index);
 },
 GetWindowPinButton: function(index) {
  return ASPx.GetElementById(this.name + "_HPB" + index);
 },
 GetWindowRefreshButton: function(index) {
  return ASPx.GetElementById(this.name + "_HRB" + index);
 },
 GetWindowCollapseButton: function(index) {
  return ASPx.GetElementById(this.name + "_HMNB" + index);
 },
 GetWindowMaximizeButton: function(index) {
  return ASPx.GetElementById(this.name + "_HMXB" + index);
 },
 GetWindowChild: function(index, idPostfix) {
  var elem = this.GetWindowElement(index);
  if(elem)
   return ASPx.GetChildById(elem, this.name + idPostfix);
  return null;
 },
 GetWindowContentIFrameDivElementID: function(index) {
  return this.name + "_CIFD" + index;
 },
 GetWindowContentIFrameDivElement: function(index) {
  return this.GetWindowChild(index, "_CIFD" + index);
 },
 GetWindowScrollDiv: function(index) {
  return this.GetWindowChild(index, "_CSD" + index);
 },
 GetWindowContentIFrameElementId: function(index) {
  return this.name + "_CIF" + index;
 },
 GetWindowContentIFrameElement: function(index) {
  return this.GetWindowChild(index, "_CIF" + index);
 },
 GetWindowContentIFrameUrl: function(index) {
  if(0 <= index && index < this.contentUrlArray.length)
   return this.contentUrlArray[index];
  return this.contentUrl;
 },
 GetWindowPopupAction: function(index) {
  if(0 <= index && index < this.popupActionArray.length)
   return this.popupActionArray[index];
  return this.popupAction;
 },
 GetWindowCloseAction: function(index) {
  if(0 <= index && index < this.closeActionArray.length)
   return this.closeActionArray[index];
  return this.closeAction;
 },
 SetWindowContentIFrameUrl: function(index, url) {
  if(0 <= index && index < this.contentUrlArray.length)
   this.contentUrlArray[index] = url;
  else
   this.contentUrl = url;
 },
 ShowWindowContentUrl: function(index) {
  var contentIFrame = this.GetWindowContentIFrameElement(index);
  this.LoadWindowContentUrl(index);
  if(contentIFrame && contentIFrame.DXReloadAfterShowRequired) {
   this.RefreshWindowContentUrl(this.GetWindow(index));
   contentIFrame.DXReloadAfterShowRequired = false;
  }
 },
 LoadWindowContentUrl: function(index) {
  var url = this.GetWindowContentIFrameUrl(index);
  this.LoadWindowContentFromUrl(index, url);
 },
 LoadWindowContentFromUrl: function(index, url) {
  var element = this.GetWindowContentIFrameElement(index);
  if(element && element.src != url && element.DXSrcRaw != url) {
   this.SetSrcToIframeElement(index, element, url);
   this.SetWindowContentIFrameUrl(index, element.src); 
  }
 },
 SetSrcToIframeElement: function(index, iframeElement, src) {
  this.SetIframeLoading(index, true);
  iframeElement.src = src;
  if(ASPx.Browser.Chrome && src.indexOf("#"))
   this.PreventScrollingAfterIframeLoaded(iframeElement)
  iframeElement.DXSrcRaw = src;
 },
 PreventScrollingAfterIframeLoaded: function(iframeElement) {
  var docScrollTop = ASPx.GetDocumentScrollTop();
  var onIframeLoadedHandler = function() {
   window.setTimeout(function() {
    ASPx.SetDocumentScrollTop(docScrollTop);
    ASPx.Evt.DetachEventFromElement(iframeElement, "load", onIframeLoadedHandler);
   }, 0);
  };
  ASPx.Evt.AttachEventToElement(iframeElement, "load", onIframeLoadedHandler);
 },
 GetWindowContentElement: function(index) {
  return this.GetWindowChild(index, "_PWC" + index);
 },
 GetWindowHeaderElement: function(index) {
  return this.GetWindowChild(index, "_PWH" + index);
 },
 GetWindowHeaders: function() {
  var elements = [];
  if(this.HasDefaultWindow())
   elements = elements.concat(ASPx.GetNodesByClassName(this.GetWindowElement(-1), "dxpc-header"));
  for(var i = 0; i < this.GetWindowCount() ; i++)
   elements = elements.concat(ASPx.GetNodesByClassName(this.GetWindowElement(i), "dxpc-header"));
  return elements;
 },
 GetEnableContentScrolling: function(index) {
  if(0 <= index && index < this.enableContentScrollingArray.length)
   return this.enableContentScrollingArray[index];
  else
   return this.enableContentScrolling;
 },
 GetWindowOverflowX: function(index) {
  if(0 <= index && index < this.contentOverflowXArray.length)
   return this.contentOverflowXArray;
  else
   return this.contentOverflowX;
 },
 GetWindowOverflowY: function(index) {
  if(0 <= index && index < this.contentOverflowYArray.length)
   return this.contentOverflowYArray;
  else
   return this.contentOverflowY;
 },
 GetWindowSizeGripElement: function(index) {
  return this.GetWindowSizeGripLite(index);
 },
 GetWindowSizeGripLite: function(index) {
  var footer = this.GetWindowFooterElement(index);
  if(!footer)
   return null;
  var descendants = ASPx.GetNodesByClassName(footer, PopupControlCssClasses.SizeGripLiteCssClassName);
  return descendants.length > 0 ? descendants[0] : null;
 },
 GetWindowFooterElement: function(index) {
  return this.GetWindowChild(index, "_PWF" + index);
 },
 GetContentContainer: function(index) {
  return this.GetWindowContentElement(index);
 },
 GetWindowIndex: function(element) {
  var id = element.id;
  var pos = id.lastIndexOf(ASPx.PCWIdSuffix);
  return parseInt(id.substr(pos + ASPx.PCWIdSuffix.length));
 },
 GetWindowElementDisplayValue: function(windowHasAnyScrollbars, windowHeight) {
  return windowHasAnyScrollbars && windowHeight ? "block" : "table";
 },
 HaveSpecialDivForAnimation: function() {
  return this.enableAnimation;
 },
 GetWindowMainCell: function(element) {
  return this.HaveSpecialDivForAnimation() ? ASPx.GetNodeByTagName(element, "DIV", 0) : element;
 },
 GetWindowMainTable: function(element) {
  return this.GetWindowMainCell(element);
 },
 GetWindowShadowTable: function(index) {
  var shadowTable = this.HaveSpecialDivForAnimation() ? this.GetWindowShadowTableCore(index) : this.GetWindowElement(index);
  if(!shadowTable) return null;
  if(shadowTable.tagName != "TABLE")
   shadowTable = this.GetWindowShadowTableCore(index);
  return (shadowTable && shadowTable.tagName == "TABLE") ? shadowTable : null;
 },
 GetWindowShadowTableCore: function(index) {
  return this.GetWindowChild(index, "_PWST" + index);
 },
 GetWindowClientTable: function(index) {
  return this.GetWindowElement(index);
 },
 GetWindowIsShown: function(index) {
  if(0 <= index && index < this.shownArray.length)
   return this.shownArray[index];
  return this.shown;
 },
 SetWindowIsShown: function(index, shown) {
  if(0 <= index && index < this.shownArray.length)
   this.shownArray[index] = shown;
  else
   this.shown = shown;
 },
 GetWindowLeft: function(index) {
  if(0 <= index && index < this.leftArray.length)
   return this.leftArray[index];
  return this.left;
 },
 SetWindowLeft: function(index, left) {
  if(0 <= index && index < this.leftArray.length)
   this.leftArray[index] = left;
  else
   this.left = left;
 },
 GetWindowHeightInternal: function(index) {
  if(0 <= index && index < this.heightArray.length)
   return this.heightArray[index];
  return this.height;
 },
 GetWindowMinHeight: function(index) {
  if(0 <= index && index < this.minHeightArray.length)
   return this.minHeightArray[index];
  return this.minHeight;
 },
 GetWindowMaxHeight: function(index) {
  if(0 <= index && index < this.maxHeightArray.length)
   return this.maxHeightArray[index];
  return this.maxHeight;
 },
 SetWindowHeight: function(index, height) {
  if(0 <= index && index < this.heightArray.length)
   this.heightArray[index] = height;
  else
   this.height = height;
 },
 GetWindowWidthInternal: function(index) {
  if(0 <= index && index < this.widthArray.length)
   return this.widthArray[index];
  return this.width;
 },
 GetWindowWidthFromServer: function(index) {
  if(0 <= index && index < this.widthFromServerArray.length)
   return this.widthFromServerArray[index];
  return this.widthFromServer;
 },
 GetWindowMinWidth: function(index) {
  if(0 <= index && index < this.minWidthArray.length)
   return this.minWidthArray[index];
  return this.minWidth;
 },
 GetWindowMaxWidth: function(index) {
  if(0 <= index && index < this.maxWidthArray.length)
   return this.maxWidthArray[index];
  return this.maxWidth;
 },
 SetWindowWidth: function(index, width) {
  if(0 <= index && index < this.widthArray.length)
   this.widthArray[index] = width;
  else
   this.width = width;
 },
 GetWindowTop: function(index) {
  if(0 <= index && index < this.topArray.length)
   return this.topArray[index];
  return this.top;
 },
 SetWindowTop: function(index, top) {
  if(0 <= index && index < this.topArray.length)
   return this.topArray[index] = top;
  else
   return this.top = top;
 },
 GetStateHiddenFieldName: function() {
  return this.uniqueID + "State";
 },
 GetZIndex: function(index) {
  if(0 <= index && index < this.zIndexArray.length)
   return this.zIndexArray[index];
  return this.zIndex;
 },
 GetCurrentZIndex: function(index) {
  var element = this.GetWindowElement(index);
  if(element != null) {
   if(element.style.zIndex != "" && element.style.zIndex != defaultZIndexFromServer)
    return element.style.zIndex;
   if(0 <= index && index < this.GetWindowCountCore())
    return this.zIndexArray[index];
   return this.zIndex;
  }
 },
 GetMainWindowWidth: function(index, noCache) {
  return this.GetClientWindowWidth(index, true, noCache);
 },
 GetClientWindowWidth: function(index, outerSize, noCache) {
  if(!noCache && (this.GetIsCollapsed(index) || this.GetIsMaximized(index))) {
   var cachedSize = this.GetWindowCachedSize(index);
   if(cachedSize != null)
    return cachedSize.width;
  }
  var element = this.GetWindowElement(index);
  if(element != null)
   return element.offsetWidth;
 },
 GetMainWindowHeight: function(index, noCache) {
  return this.GetClientWindowHeight(index, true, noCache);
 },
 GetClientWindowHeight: function(index, outerSize, noCache) {
  if(!noCache && (this.GetIsCollapsed(index) || this.GetIsMaximized(index))) {
   var cachedSize = this.GetWindowCachedSize(index);
   if(cachedSize != null)
    return cachedSize.height;
  }
  var element = this.GetWindowElement(index);
  if(element != null)
   return element.offsetHeight;
 },
 GetIframeLoading: function(index) {
  if(0 <= index && index < this.iframeLoadingArray.length)
   return this.iframeLoadingArray[index];
  return this.iframeLoading;
 },
 SetIframeLoading: function(index, value) {
  if(0 <= index && index < this.iframeLoadingArray.length)
   this.iframeLoadingArray[index] = value;
  else
   this.iframeLoading = value;
 },
 GetAutoUpdatePosition: function(index) {
  if(0 <= index && index < this.autoUpdatePositionArray.length)
   return this.autoUpdatePositionArray[index];
  return this.autoUpdatePosition;
 },
 GetHideBodyScrollWhenModal: function(index) {
  if(0 <= index && index < this.hideBodyScrollWhenModalArray.length)
   return this.hideBodyScrollWhenModalArray[index];
  return this.hideBodyScrollWhenModal;
 },
 SetHideBodyScrollWhenModal: function(index, value) {
  if(0 <= index && index < this.hideBodyScrollWhenModalArray.length)
   this.hideBodyScrollWhenModalArray[index] = value;
  else
   this.hideBodyScrollWhenModal = value;
 },
 GetClientPopupPos: function(element, popupElement, pos, isX, isDragged) {
  var index = this.GetWindowIndex(element);
  var popupPosition = null;
  if(this.GetIsMaximizedOnWebKitTouch(index))
   return new ASPx.PopupPosition(ASPx.PrepareClientPosForElement(0, element, isX), false);
  if(isDragged)
   popupPosition = new ASPx.PopupPosition(pos == ASPx.InvalidPosition ? this.GetPosition(index, isX) : pos, false);
  else
   popupPosition = isX ? this.GetClientPopupPosX(element, popupElement, pos) : this.GetClientPopupPosY(element, popupElement, pos);
  popupPosition.position = ASPx.PrepareClientPosForElement(popupPosition.position, element, isX);
  if(ASPx.Browser.Firefox && ASPx.Browser.Version < 3 && this.GetWindowModalElement(index))
   popupPosition.position -= isX ? ASPx.GetDocumentScrollLeft() : ASPx.GetDocumentScrollTop();
  return popupPosition;
 },
 GetClientPopupPosX: function(element, popupElement, x) {
  var mainElement = this.GetWindowMainCell(element);
  var popupPosition = ASPx.PopupUtils.GetPopupAbsoluteX(mainElement, popupElement, this.popupHorizontalAlign, this.popupHorizontalOffset,
   x, this.GetWindowLeft(this.GetWindowIndex(element)), this.rtl, this.isPopupFullCorrectionOn);
  return this.CorrectPopupPositionForClientWindow(element, popupPosition, true);
 },
 GetClientPopupPosY: function(element, popupElement, y) {
  var mainElement = this.GetWindowMainCell(element);
  var popupPosition = ASPx.PopupUtils.GetPopupAbsoluteY(mainElement, popupElement, this.popupVerticalAlign, this.popupVerticalOffset,
   y, this.GetWindowTop(this.GetWindowIndex(element)), this.isPopupFullCorrectionOn);
  return (this.allowCorrectYOffsetPosition ? this.CorrectPopupPositionForClientWindow(element, popupPosition, false) : popupPosition);
 },
 CorrectPopupPositionForClientWindow: function(element, popupPosition, isX) {
  if(element.isPopupPositionCorrectionOn && this.isPopupFullCorrectionOn) {
   popupPosition.position = ASPx.PopupUtils.AdjustPositionToClientScreen(element, popupPosition.position, this.rtl, isX);
  }
  return popupPosition;
 },
 DoShowWindow: function(index, popupElementIndex, evt) {
  if(!this.InternalIsWindowVisible(index)) {
   var x = ASPx.Evt.GetEventX(evt);
   var y = ASPx.Evt.GetEventY(evt);
   this.DoShowWindowAtPos(index, x, y, popupElementIndex, true, true, evt, ASPxClientPopupControlCloseReason.OuterMouseClick);
  }
 },
 AdjustContentOnShow: function(index) {
  var windowElement = this.GetWindowElement(index);
  if(this.adjustInnerControlsSizeOnShow)
   ASPx.GetControlCollection().AdjustControls(windowElement);
 },
 DoShowWindowAtPos: function(index, x, y, popupElementIndex, closeOtherWindows, allowChangeZIndex, evt, closeOtherReason) {
  if(!this.isInitialized)
   this.PopulatePopupElements(index);
  var element = this.GetWindowElement(index);
  if(element != null) {
   this.StopCloseAnimation(index);
   if(this.adjustInnerControlsSizeOnShow) {
    var windowContent = this.GetContentContainer(index);
    var collection = ASPx.GetControlCollection();
    collection.CollapseControls(windowContent);
   }
   this.FFTextCurFixShow(index, true);
   if(closeOtherWindows)
    aspxGetPopupControlCollection().DoHideAllWindows(element, this.GetWindowElementId(index), false, closeOtherReason);
   var isMoving = this.InternalIsWindowVisible(index);
   ASPx.SetElementDisplay(element, true);
   element.style.display = this.GetWindowElementDisplayValue(this.HasAnyScrollBars(index), this.GetPopupWindowDimensionFromCache(index, false));
   element.style.position = "absolute";
   var scrollDiv = this.GetWindowScrollDiv(index),
    shouldResetScrollSize = scrollDiv && this.GetEnableContentScrolling(index) && ASPx.GetDocumentMaxClientHeight() <= element.offsetHeight,
    savedScrollDivHeight = shouldResetScrollSize && scrollDiv.style.height;
   if(shouldResetScrollSize)
    scrollDiv.style.height = 0;
   var cachedSize = this.GetWindowCachedSize(index);
   if(cachedSize != null) {
    this.SetWindowSize(this.GetWindow(index), cachedSize.width, cachedSize.height);
    this.ResetWindowCachedSize(index);
   }
   if(!this.GetWindowIsShown(index)) {
    var width = this.GetPopupWindowDimensionFromCache(index, true),
     height = this.GetPopupWindowDimensionFromCache(index, false);
    this.SetClientWindowSizeCoreLite(index, width, height);
     this.SetWindowIsShown(index, true);
   }
   var popupElement = this.GetPopupElement(index, popupElementIndex);
   if(popupElement)
    this.SetLastShownPopupElementIndex(index, popupElementIndex);
   var isDragged = this.GetIsDragged(index),
    isMaximized = this.GetIsMaximized(index);
   if(isMaximized)
    this.NormalizeMaximizedWindowSize(index);
   var horizontalPopupPosition = this.GetClientPopupPos(element, popupElement, x, true, isDragged);
   var verticalPopupPosition = this.GetClientPopupPos(element, popupElement, y, false, isDragged);
   var clientX = horizontalPopupPosition.position;
   var clientY = verticalPopupPosition.position;
   this.SetWindowPos(index, element, clientX, clientY);
   if(shouldResetScrollSize)
    scrollDiv.style.height = savedScrollDivHeight;
   if(this.hideBodyScrollWhenMaximized && this.GetIsMaximized(index))
    ASPx.PopupUtils.BodyScrollHelper.HideBodyScroll(element.id);
   this.DoShowWindowModalElement(index);
   var isAnimationNeed = this.IsAnimationAllowed() && !isMoving;
   if(isAnimationNeed && this.popupAnimationType !== "none") {
    if(this.popupAnimationType === 'slide')
     this.StartSlideAnimation(element, index, horizontalPopupPosition, verticalPopupPosition);
    else
     this.StartFadeAnimation(element, index);
   } else
    ASPx.SetElementVisibility(element, true);
   this.SetWindowPopUpReasonMouseEvent(index, evt);
   this.ShowWindowContentUrl(index);
   this.AdjustContentOnShow(index);
   var scrollDiv = this.GetWindowScrollDiv(index);
   if(scrollDiv && this.GetEnableContentScrolling(index)) {
    var dimension = null;
    var windowMainCell = this.GetWindowMainCell(element);
    if(windowMainCell.style.width && windowMainCell.style.height)
     dimension = 'both';
    else if(windowMainCell.style.width)
     dimension = 'width';
    else if(windowMainCell.style.height)
     dimension = 'height';
    if(!dimension)
     return;
    ASPx.SetElementDisplay(scrollDiv, false);
    this.SetWindowScrollDivSize(scrollDiv, index, dimension);
    ASPx.SetElementDisplay(scrollDiv, true);
   }
   this.registerAndActivateWindow(element, index, allowChangeZIndex);
   if(!isMoving) {
    this.RaisePopUp(index);
    if(!this.IsAnimationAllowed())
     this.OnWindowShown(index);
   }
   this.CorrectWindowSizeGripPositionLite(index);
   this.CorrectWindowHeaderText(index);
   this.InitMaximizedWindows(index);
   this.InitCollapsedWindows(index);
   if(this.GetIsPinned(index)) window.setTimeout(function() { this.HoldPosition(index, true); }.aspxBind(this), 0);
   if(!this.GetShowOnPageLoad(index))
    this.CorrectElementVerticalAlignment(ASPx.AdjustVerticalMarginsInContainer, this.GetWindowHeaderElement(index));
  }
 },
 registerAndActivateWindow: function(windowElement, index, allowChangeZIndex) {
  aspxGetPopupControlCollection().RegisterVisibleWindow(windowElement, this, index);
  if(allowChangeZIndex)
   aspxGetPopupControlCollection().ActivateWindowElement(windowElement);
 },
 GetPopupWindowDimensionFromCache: function(index, isWidth) {
  var dimension;
  if(isWidth) {
   dimension = Math.max(this.GetWindowWidthInternal(index), this.GetWindowMinWidth(index));
   var maxWidth = this.GetWindowMaxWidth(index);
   if(maxWidth)
    dimension = Math.min(dimension, maxWidth);
  }
  else {
   dimension = Math.max(this.GetWindowHeightInternal(index), this.GetWindowMinHeight(index));
   var maxHeight = this.GetWindowMaxHeight(index);
   if(maxHeight)
    dimension = Math.min(dimension, maxHeight);
  }
  return dimension;
 },
 NormalizeMaximizedWindowSize: function(index) {
  var width = this.GetPopupWindowDimensionFromCache(index, true),
   height = this.GetPopupWindowDimensionFromCache(index, false),
   dimensions = this.getDocumentDimensions(index),
   sizeNormalizationIsNeeded = width < dimensions.width || height < dimensions.height;
  if(sizeNormalizationIsNeeded)
   this.NormalizeWindowSize(index, true);
 },
 NormalizeWindowSize: function(index, isMaximized) {
  var width = this.GetClientWindowWidth(index),
   height = this.GetClientWindowHeight(index),
   normWidth = width,
   normHeight = height,
   maxWidth = this.GetWindowMaxWidth(index),
   minWidth = this.GetWindowMinWidth(index),
   maxHeight = this.GetWindowMaxHeight(index),
   minHeight = this.GetWindowMinHeight(index);
  if(maxWidth)
   normWidth = Math.min(normWidth, maxWidth);
  if(minWidth)
   normWidth = Math.max(normWidth, minWidth);
  if(maxHeight)
   normHeight = Math.min(normHeight, maxHeight);
  if(minHeight)
   normHeight = Math.max(normHeight, minHeight);
  if(normWidth !== width || normHeight !== height)
   this.SetWindowSize(this.GetWindow(index), normWidth, normHeight);
  if(isMaximized) {
   var dimensions = this.getDocumentDimensions(index);
   if(this.GetIsCollapsed(index)) {
    if(normWidth != dimensions.width) {
     this.SetWindowSizeByIndexCore(index, dimensions.width, normHeight, true);
    }
   } else {
    if(normWidth != dimensions.width || normHeight != dimensions.height) {
     this.SetWindowSizeByIndexCore(index, dimensions.width, dimensions.height, false);
    }
   }
  }
 },
 DoShowWindowIFrame: function(index, x, y, width, height) {
  if(!this.renderIFrameForPopupElements) return;
  var element = this.GetWindowElement(index);
  var iFrame = this.GetWindowIFrame(index);
  if(element && iFrame) {
   var cell = this.GetWindowMainCell(element);
   if(width < 0)
    width = cell.offsetWidth;
   if(height < 0)
    height = cell.offsetHeight;
   ASPx.SetStyles(iFrame, { width: width, height: height });
   if(x != ASPx.InvalidPosition && y != ASPx.InvalidPosition)
    ASPx.SetStyles(iFrame, { left: x, top: y });
   if(ASPx.Browser.IE || ASPx.Browser.Firefox)
    this.ClearWindowIframeBodyInnerHtml(iFrame);
   ASPx.SetElementDisplay(iFrame, true);
  }
 },
 GetIframeBody: function(iFrame) {
  var document = iFrame.contentDocument || iFrame.contentWindow.document;
  if(document)
   return document.getElementsByTagName('body')[0];
 },
 ClearWindowIframeBodyInnerHtml: function(iFrame) {
  var iFrameBody = this.GetIframeBody(iFrame);
  if(iFrameBody)
   iFrameBody.innerHTML = "";
 },
 DoShowWindowModalElement: function(index) {
  var modalElement = this.GetWindowModalElement(index);
  if(modalElement) {
   var bodyScrollHasJustBeingHidden = false;
   if(this.GetHideBodyScrollWhenModal(index) && (!this.IsWindowVisible(this.GetWindow(index)) || !ASPx.IsElementVisible(modalElement))) {
    bodyScrollHasJustBeingHidden = true;
    aspxGetPopupControlCollection().LockWindowResizeByBodyScrollVisibilityChanging();
    ASPx.PopupUtils.BodyScrollHelper.HideBodyScroll(this.GetWindowElementId(index));
   }
   if(ASPx.Browser.IE && this.GetHideBodyScrollWhenModal(index))
    ASPx.Evt.AttachEventToElement(modalElement, ASPx.Evt.GetMouseWheelEventName(), function(evt) { return ASPx.Evt.PreventEventAndBubble(evt); });
   ASPx.SetElementDisplay(modalElement, true);
   aspxGetPopupControlCollection().AdjustModalElementBounds(modalElement);
   if(this.popupAnimationType == "fade") {
    var endOpacity = this.GetModalElementEndAnimationOpacity(index);
    if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9) {
     ASPx.SetElementVisibility(modalElement, true);
     ASPx.AnimationHelper.setOpacity(modalElement, 0);
    } else {
     ASPx.AnimationHelper.setOpacity(modalElement, 0);
     ASPx.SetElementVisibility(modalElement, true);
    }
    ASPx.AnimationHelper.fadeTo(modalElement, { to: endOpacity });
   } else {
    ASPx.SetElementVisibility(modalElement, true);
   }
   aspxGetPopupControlCollection().RegisterVisibleModalElement(modalElement);
   if(bodyScrollHasJustBeingHidden)
    aspxGetPopupControlCollection().UnlockWindowResizeByBodyScrollVisibilityChanging();
  }
 },
 DoHideWindowCore: function(index, closeReason) {
  this.FFTextCurFixHide(index, true);
  var element = this.GetWindowElement(index);
  if(element != null) {
   if(this.HasCloseAnimation())
    this.PrepareElementAfterCloseAnimation(element);
   element.isHiding = true;
   element.style.zIndex = defaultZIndexFromServer;
   this.SetIsDragged(index, false);
   this.UpdateWindowsStateCookie();
   element.isHiding = false;
   this.StopShowAnimation(index);
   ASPx.SetElementDisplay(element, false);
   ASPx.SetElementVisibility(element, false);
   if(this.hideBodyScrollWhenMaximized && this.GetIsMaximized(index))
    ASPx.PopupUtils.BodyScrollHelper.RestoreBodyScroll(element.id);
   this.DoHideWindowModalElement(element, closeReason);
   this.DoHideWindowIFrame(element);
   aspxGetPopupControlCollection().UnregisterVisibleWindow(element);
   this.HideWindowLoadingPanel(index);
  }
 },
 PrepareElementAfterCloseAnimation: function(element) {
  element.closeAnimationCompleted = true;
  if(this.closeAnimationType == "fade")
   ASPx.SetStyles(element, { opacity: 1 });
  else
   ASPx.SetStyles(this.GetWindowMainTable(element), {
    left: 0,
    top: 0
   });
 },
 HasCloseAnimation: function() {
  return this.closeAnimationType != "none";
 },
 StopCloseAnimation: function(index) {
  var element = this.GetWindowElement(index);
  if(this.HasCloseAnimation() && !element.closeAnimationCompleted) {
   ASPx.AnimationHelper.cancelAnimation(element);
   this.DoHideWindowCore(index);
  }
 },
 StopShowAnimation: function(index) {
  if(this.popupAnimationType != "none") {
   var windowElement = this.GetWindowElement(index);
   if(this.popupAnimationType === 'slide')
    ASPx.PopupUtils.StopAnimation(windowElement, this.GetWindowMainCell(windowElement));
   else
    ASPx.AnimationHelper.cancelAnimation(windowElement);
  }
 },
 DoHideWindowCoreWithAnimation: function(index, closeReason) {
  this.StopShowAnimation(index);
  var element = this.GetWindowElement(index);
  element.closeAnimationCompleted = false;
  if(this.closeAnimationType == "fade") {
   if(element.modalElement)
    ASPx.AnimationHelper.fadeOut(element.modalElement, null, this.fadeAnimationDuration);
   ASPx.AnimationHelper.fadeOut(element, function() {
    this.DoHideWindowCore(index);
    this.RaiseCloseUp(index, closeReason);
   }.aspxBind(this), this.fadeAnimationDuration);
  }
  else
   this.DoHideWindowWithSlideAnimation(index, closeReason);
 },
 DoHideWindowWithSlideAnimation: function(index, closeReason) {
  var element = this.GetWindowElement(index);
  var horizontalPopupPosition = this.GetClientPopupPos(element, null, ASPx.InvalidPosition, true, true);
  var verticalPopupPosition = this.GetClientPopupPos(element, null, ASPx.InvalidPosition, false, true);
  var horizontalDirection = ASPx.PopupUtils.GetAnimationHorizontalDirection(horizontalPopupPosition, this.popupHorizontalAlign, this.popupVerticalAlign, this.rtl);
  var verticalDirection = ASPx.PopupUtils.GetAnimationVerticalDirection(verticalPopupPosition, this.popupHorizontalAlign, this.popupVerticalAlign);
  ASPx.PopupUtils.InitAnimationDivCore(element);
  ASPx.AnimationHelper.createMultipleAnimationTransition(this.GetWindowMainTable(element), {
   duration: this.slideAnimationDuration,
   onComplete: function(element) {
    this.DoHideWindowCore(index);
    this.RaiseCloseUp(index, closeReason);
   }.aspxBind(this)
  }).Start({
   left: { to: horizontalDirection * element.offsetWidth, unit: "px" },
   top: { to: verticalDirection * element.offsetHeight, unit: "px" }
  });
 },
 DoHideWindow: function(index, dontRaiseClosing, closeReason) {
  if(!this.InternalIsWindowVisible(index)) return;
  var cancel = !dontRaiseClosing && this.RaiseClosing(index, closeReason);
  if(!cancel) {
   if(this.HasCloseAnimation())
    this.DoHideWindowCoreWithAnimation(index, closeReason);
   else {
    this.DoHideWindowCore(index, closeReason);
    this.RaiseCloseUp(index, closeReason);
   }
  }
  return cancel;
 },
 DoHideWindowIFrame: function(element) {
  if(!this.renderIFrameForPopupElements) return;
  var iFrame = element.overflowElement;
  if(iFrame)
   ASPx.SetElementDisplay(iFrame, false);
 },
 DoHideWindowModalElement: function(element, closeReason) {
  var modalElement = element.modalElement;
  if(modalElement) {
   if(!ASPx.GetElementVisibility(modalElement))
    return;
   function closeModalElement() {
    ASPx.SetStyles(modalElement, { width: 1, height: 1, zIndex: defaultZIndexFromServer - 1 });
    ASPx.SetElementVisibility(modalElement, false);
    ASPx.SetElementDisplay(modalElement, false);
   }
   aspxGetPopupControlCollection().UnregisterVisibleModalElement(modalElement);
   if(this.GetHideBodyScrollWhenModal(this.GetWindowIndex(element))) {
    if(ASPx.Browser.WebKitFamily)
     aspxGetPopupControlCollection().LockScrollEvent();
    ASPx.PopupUtils.BodyScrollHelper.RestoreBodyScroll(element.id);
    if(ASPx.Browser.WebKitFamily)
     aspxGetPopupControlCollection().UnlockScrollEvent();
   }
   if(closeReason == ASPxClientPopupControlCloseReason.OuterMouseClick) {     
    ASPx.SetStyles(modalElement, { opacity: 0 });
    if(!modalElement.mouseHandler) {
     modalElement.mouseHandler = function() {
      ASPx.SetStyles(modalElement, { opacity: "" });
      closeModalElement();
      ASPx.Evt.DetachEventFromElement(modalElement, "mouseup", modalElement.mouseHandler);
      ASPx.Evt.DetachEventFromElement(modalElement, "mouseout", modalElement.mouseHandler);
     }
    }
    ASPx.Evt.AttachEventToElement(modalElement, "mouseup", modalElement.mouseHandler);
    ASPx.Evt.AttachEventToElement(modalElement, "mouseout", modalElement.mouseHandler);
   } else
    closeModalElement();
  }
 },
 SetWindowDisplay: function(index, value) {
  var pcwElement = this.GetWindowElement(index);
  this.SetFFTextCurFixShowing(index, value, false);
  ASPx.SetElementDisplay(pcwElement, value);
 },
 GetTextCurFixDiv: function(index) {
  return ASPx.GetElementById(this.name + "_" + "TCFix" + index);
 },
 FFTextCurFixShow: function(index, isSetVisibility) {
  this.SetFFTextCurFixShowing(index, true, isSetVisibility);
 },
 FFTextCurFixHide: function(index, isSetVisibility) {
  this.SetFFTextCurFixShowing(index, false, isSetVisibility);
 },
 IsFFTextCurFixRequired: function(index) {
  return ASPx.Browser.Firefox && ASPx.Browser.Version < 3 && this.GetWindowModalElement(index);
 },
 SetFFTextCurFixShowing: function(index, value, isSetVisibility) {
  if(this.IsFFTextCurFixRequired(index)) {
   var fixDiv = this.GetTextCurFixDiv(index);
   if(fixDiv) {
    if(isSetVisibility)
     ASPx.SetElementVisibility(fixDiv, value);
    ASPx.SetElementDisplay(fixDiv, value);
   }
  }
 },
 SetWindowPos: function(index, element, x, y) {
  ASPx.SetStyles(element, { left: x, top: y });
  this.DoShowWindowIFrame(index, x, y, ASPx.InvalidDimension, ASPx.InvalidDimension);
  this.SetIsDragged(index, true);
  this.SetWindowLeft(index, ASPx.GetAbsoluteX(element));
  this.SetWindowTop(index, ASPx.GetAbsoluteY(element));
  this.UpdateWindowsStateCookie();
 },
 OnWindowShown: function(windowIndex) {
  this.EnsureContent(windowIndex, false);
  this.EnsureIFrameHeightAdjusted(windowIndex);
  var isMaximized = this.GetIsMaximized(windowIndex);
  if(isMaximized || this.HasAnyScrollBars(windowIndex))
   this.NormalizeWindowSize(windowIndex, isMaximized);
  this.RaiseShown(windowIndex);
  var loadingElementsWillNotBeShown = !this.lpTimers[windowIndex] || this.lpTimers[windowIndex] < 0;
  if(this.InWindowCallback(windowIndex) && loadingElementsWillNotBeShown) {
   this.ShowWindowLoadingElementsInternal(windowIndex);
  }
 },
 EnsureContent: function(windowIndex, isInit) {
  var element = this.GetWindowElement(windowIndex);
  if(element && !element.loaded && !element.loading) {
   var shouldLoad = this.contentLoadingMode == "OnPageLoad" || this.contentLoadingMode == "OnFirstShow" && !isInit;
   if(shouldLoad) {
    element.loading = true;
    this.CreateWindowCallback(windowIndex, windowIndex);
   } else if(this.contentLoadingMode == "Default")
    element.loaded = true;
  }
 },
 CreateWindowCallback: function(windowIndex, argument) {
  this.IncreaseWindowRequestCount(windowIndex);
  var element = this.GetWindowElement(windowIndex);
  if(this.contentLoadingMode != "OnPageLoad" || !element.loading || this.GetShowOnPageLoad(windowIndex))
   this.ShowWindowLoadingElements(windowIndex);
  this.CreateCallback(argument);
 },
 OnCallback: function(result) {
  this.OnCallbackInternal(result.html, result.index, false);
 },
 OnCallbackError: function(result, data) {
  this.OnCallbackInternal(result, ASPx.IsExists(data) ? data : -1, true);
 },
 OnCallbackErrorAfterUserHandle: function(result, data) {
  this.DecreaseWindowRequestCount(data);
 },
 RaiseCallbackError: function(message) {
  var result = ASPxClientControl.prototype.RaiseCallbackError.call(this, message);
  if(result.isHandled)
   this.HideAllLoadingPanels();
  return result;
 },
 OnCallbackInternal: function(html, windowIndex, isError) {
  var element = this.GetWindowElement(windowIndex);
  element.loaded = !isError;
  element.loading = false;
  this.DecreaseWindowRequestCount(windowIndex);
  this.HideWindowLoadingPanel(windowIndex);
  this.SetWindowContentHtmlCore(windowIndex, html);
  if(this.contentLoadingMode === "OnFirstShow" && this.InternalIsWindowVisible(windowIndex))
   this.UpdateWindowPositionInternal(windowIndex, this.GetPopupElement(windowIndex, this.GetLastShownPopupElementIndex(windowIndex)));
  this.savedCallbackWindowIndex = windowIndex;
  this.UpdateWindowsStateCookie();
 },
 IncreaseWindowRequestCount: function(index) {
  !this.windowRequestCount[index] ? this.windowRequestCount[index] = 1 : this.windowRequestCount[index]++;
 },
 DecreaseWindowRequestCount: function(index) {
  this.windowRequestCount[index]--;
 },
 InWindowCallback: function(windowIndex) {
  return this.windowRequestCount[windowIndex] > 0;
 },
 ShowWindowLoadingElements: function(windowIndex) {
  if(this.lpTimers[windowIndex] && this.lpTimers[windowIndex] > -1) return;
  if(this.enableCallbackAnimation)
   this.StartWindowBeginCallbackAnimation(windowIndex);
  else
   this.ShowWindowLoadingElementsInternal(windowIndex);
 },
 ShowWindowLoadingElementsInternal: function(windowIndex) {
  if(this.lpDelay > 1 && !this.enableCallbackAnimation) {
   var _this = this;
   this.lpTimers[windowIndex] = window.setTimeout(function() { _this.ShowWindowLoadingPanelOnTimer(windowIndex); }, this.lpDelay);
  }
  else
   this.ShowWindowLoadingPanel(windowIndex);
 },
 StartWindowBeginCallbackAnimation: function(windowIndex) {
  this.callbackAnimationProcessings[windowIndex] = true;
  this.isCallbackFinishedStates[windowIndex] = false;
  ASPx.AnimationHelper.fadeOut(this.GetWindowContentElement(windowIndex), function() { this.FinishWindowBeginCallbackAnimation(windowIndex); }.aspxBind(this));
 },
 FinishWindowBeginCallbackAnimation: function(windowIndex) {
  this.callbackAnimationProcessings[windowIndex] = false;
  if(!this.isCallbackFinishedStates[windowIndex])
   this.ShowWindowLoadingElementsInternal(windowIndex);
  else
   this.DoCallback(this.savedCallbackResults[windowIndex]);
 },
 CheckBeginCallbackAnimationInProgress: function(callbackResult) {
  var windowIndex = this.EvalCallbackResult(callbackResult).result.index;
  if(this.enableCallbackAnimation && this.callbackAnimationProcessings[windowIndex]) {
   this.savedCallbackResults[windowIndex] = callbackResult;
   this.isCallbackFinishedStates[windowIndex] = true;
   return true;
  }
  return false;
 },
 StartWindowEndCallbackAnimation: function(windowIndex) {
  this.callbackAnimationProcessings[windowIndex] = true;
  ASPx.AnimationHelper.fadeIn(this.GetWindowContentElement(windowIndex), function() { this.FinishWindowEndCallbackAnimation(windowIndex); }.aspxBind(this));
 },
 FinishWindowEndCallbackAnimation: function(windowIndex) {
  this.DoEndCallback();
  this.callbackAnimationProcessings[windowIndex] = false;
 },
 CheckEndCallbackAnimationNeeded: function() {
  var windowIndex = this.savedCallbackWindowIndex;
  this.savedCallbackWindowIndex = null;
  if(windowIndex !== null && !this.callbackAnimationProcessings[windowIndex]) {
   this.StartWindowEndCallbackAnimation(windowIndex);
   return true;
  }
  return false;
 },
 CreateLoadingDiv: function(parentElement, offsetElement, windowIndex) {
  if(typeof (windowIndex) != "undefined") { 
   var loadingDiv = ASPxClientControl.prototype.CreateLoadingDiv.call(this, parentElement, offsetElement);
   loadingDiv.id += windowIndex;
   return loadingDiv;
  }
 },
 CreateLoadingPanelWithAbsolutePosition: function(parentElement, offsetElement, windowIndex) {
  if(typeof (windowIndex) != "undefined") { 
   var loadingPanel = ASPxClientControl.prototype.CreateLoadingPanelWithAbsolutePosition.call(this, parentElement, offsetElement);
   loadingPanel.id += windowIndex;
   return loadingPanel;
  }
 },
 ShowWindowLoadingPanelOnTimer: function(windowIndex) {
  this.ClearWindowLoadingPanelTimer(windowIndex);
  this.ShowWindowLoadingPanel(windowIndex);
 },
 ClearWindowLoadingPanelTimer: function(windowIndex) {
  this.lpTimers[windowIndex] = ASPx.Timer.ClearTimer(this.lpTimers[windowIndex]);
 },
 ShowWindowLoadingPanel: function(windowIndex) {
  if(!this.IsExistLoadingPanel())
   return;
  if(!this.loadingPanels[windowIndex] && this.InternalIsWindowVisible(windowIndex)) {
   var contentElement = this.GetWindowContentWrapperElement(windowIndex);
   this.loadingDivs[windowIndex] = this.CreateLoadingDiv(this.GetWindowElement(windowIndex).parentNode, contentElement, windowIndex);
   this.loadingPanels[windowIndex] = this.CreateLoadingPanelWithAbsolutePosition(this.GetWindowElement(windowIndex).parentNode, contentElement, windowIndex);
  }
 },
 HideAllLoadingPanels: function() {
  if(this.HasDefaultWindow())
   this.HideWindowLoadingPanel(-1);
  for(var i = 0; i < this.GetWindowCount() ; i++)
   this.HideWindowLoadingPanel(i);
 },
 HideWindowLoadingPanel: function(windowIndex) {
  this.ClearWindowLoadingPanelTimer(windowIndex);
  if(this.loadingDivs[windowIndex]) {
   ASPx.RemoveElement(this.loadingDivs[windowIndex]);
   this.loadingDivs[windowIndex] = null;
  }
  if(this.loadingPanels[windowIndex]) {
   ASPx.RemoveElement(this.loadingPanels[windowIndex]);
   this.loadingPanels[windowIndex] = null;
  }
 },
 ShouldHideExistingLoadingElements: function() {
  return false;
 },
 IsLoadingContainerVisible: function() {
  return true;
 },
 IsExistLoadingPanel: function() {
  return !!this.GetLoadingDiv();
 },
 InitializeDOM: function() {
  var windowElement = this.GetWindowElement(this.GetWindowCountCore() - 1);
  if(windowElement)
   windowElement["dxinit"] = true;
 },
 IsDOMInitialized: function() {
  var windowElement = this.GetWindowElement(this.GetWindowCountCore() - 1);
  return windowElement && windowElement["dxinit"];
 },
 IsDOMDisposed: function() { 
  var windowElement = this.GetWindowElement(this.GetWindowCountCore() - 1);
  return !ASPx.IsExistsElement(windowElement);
 },
 PerformCallback: function(parameter) {
  this.PerformWindowCallback(null, parameter);
 },
 PerformWindowCallback: function(window, parameter) {
  parameter = ASPx.IsExists(parameter) ? parameter.toString() : ""
  var index = (window != null) ? window.index : -1;
  if(!this.InWindowCallback(index)) {
   var windowCallbackArguments = index + ";" + parameter;
   this.CreateWindowCallback(index, windowCallbackArguments);
  }
 },
 RegisterInControlTree: function(tree) {
  var mainNode = tree.createNode(null, this);
  if(this.HasDefaultWindow())
   this.RegisterRelatedNodeForWindowElement(tree, -1, mainNode);
  for(var i = 0; i < this.GetWindowCount() ; i++)
   this.RegisterRelatedNodeForWindowElement(tree, i, mainNode);
 },
 RegisterRelatedNodeForWindowElement: function(tree, windowElementIndex, mainNode) {
  var windowElement = this.GetWindowElement(windowElementIndex);
  if(windowElement) {
   var childNode = tree.createNode(windowElement.id, null);
   tree.addRelatedNode(mainNode, childNode);
  }
 },
 GetTwoVerticalPaddingSize: function(element) {
  var heightWithBorders = element.clientHeight;
  var paddingTopBackup = element.style.paddingTop;
  var paddingBottomBackup = element.style.paddingBottom;
  element.style.paddingTop = "0px";
  element.style.paddingBottom = "0px";
  var heightWithoutBorders = element.clientHeight;
  element.style.paddingTop = paddingTopBackup;
  element.style.paddingBottom = paddingBottomBackup;
  return (heightWithBorders - heightWithoutBorders);
 },
 InternalIsWindowVisible: function(index) {
  var element = this.GetWindowElement(index);
  if(!element)
   return false;
  if(this.HasCloseAnimation() && !element.closeAnimationCompleted)
   return false;
  var currentStyle = ASPx.GetCurrentStyle(element);
  return ((currentStyle && currentStyle.visibility != "hidden") && ASPx.GetElementDisplay(element) ? true : false);
 },
 InternalIsWindowDisplayed: function(index) {
  var element = this.GetWindowElement(index);
  return (element != null) ? ASPx.GetElementDisplay(element) : false;
 },
 OnActivate: function(index, evt) {
  var element = this.GetWindowElement(index);
  if(element != null)
   aspxGetPopupControlCollection().ActivateWindowElement(element, evt);
 },
 OnAnimationStop: function(index) {
  this.OnWindowShown(index);
  if(ASPx.Browser.Firefox)
   this.GetWindowElement(index).style.display = "table";
 },
 OnDragStart: function(evt, index) {
  this.SetIsDragged(index, true);
  this.ShowDragCursor(index);
  if(this.GetWindowContentIFrameElement(index))
   this.HideIframeElementBeforeDragging(index);
  this.InitDragInfo(index, evt);
 },
 InitDragInfo: function(index, evt) {
  var element = this.GetWindowElement(index);
  var gragXOffset = ASPx.GetAbsoluteX(element) - ASPx.Evt.GetEventX(evt);
  var gragYOffset = ASPx.GetAbsoluteY(element) - ASPx.Evt.GetEventY(evt);
  var xClientCorrection = ASPx.GetPositionElementOffset(element, true);
  var yClientCorrection = ASPx.GetPositionElementOffset(element, false);
  gragXOffset -= xClientCorrection;
  gragYOffset -= yClientCorrection;
  aspxGetPopupControlCollection().InitDragObject(this, index, gragXOffset, gragYOffset, xClientCorrection, yClientCorrection);
 },
 OnDrag: function(index, x, y, xClientCorrection, yClientCorrection) {
  var element = this.GetWindowElement(index);
  if(element != null) {
   ASPx.SetStyles(element, { left: x, top: y });
   xClientCorrection = typeof(xClientCorrection) != "undefined" ? xClientCorrection : 0;
   yClientCorrection = typeof(yClientCorrection) != "undefined" ? yClientCorrection : 0;
   this.SetWindowLeft(index, x + xClientCorrection);
   this.SetWindowTop(index, y + yClientCorrection);
   var iFrame = element.overflowElement;
   if(iFrame)
    ASPx.SetStyles(iFrame, { left: x, top: y });
   if(ASPx.Browser.Opera)
    ASPx.Selection.Clear();
  }
 },
 OnDragStop: function(index) {
  var element = this.GetWindowElement(index);
  this.HideDragCursor(index);
  this.UpdateWindowsStateCookie();
  if(this.GetWindowContentIFrameElement(index))
   this.ShowIframeElementAfterDragging(index);
 },
 OnPopupElementMouseOver: function(evt, popupElement) {
  if(popupElement != null) {
   var index = popupElement.DXPopupWindowIndex;
   var isVisible = this.InternalIsWindowVisible(index);
   var popupElementIndex = popupElement.DXPopupElementIndex;
   if(this.GetLastOverPopupElementIndex(index) != popupElementIndex) {
    if(aspxGetPopupControlCollection().IsAppearTimerActive())
     aspxGetPopupControlCollection().ClearAppearTimer();
    if(aspxGetPopupControlCollection().IsDisappearTimerActive())
     aspxGetPopupControlCollection().ClearDisappearTimer();
    if(isVisible) {
     this.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.MouseOut);
     isVisible = false;
    }
   }
   if(!isVisible) {
    aspxGetPopupControlCollection().SetAppearTimer(this.name, index, popupElement.DXPopupElementIndex, this.appearAfter, evt);
    aspxGetPopupControlCollection().InitOverObject(this, index, evt);
   }
   this.SetLastOverPopupElementIndex(index, popupElementIndex);
  }
 },
 OnPopupElementMouseOut: function(evt, popupElement) {
 },
 HideIframeElementBeforeDragging: function(index) {
  var iframeElement = this.GetWindowContentIFrameElement(index);
  if(ASPx.Browser.IE) {
   this.CreateFakeDragDiv(iframeElement);
   ASPx.SetElementDisplay(iframeElement, false);
  } else
   ASPx.SetElementVisibility(iframeElement, false);
 },
 ShowIframeElementAfterDragging: function(index) {
  var iframeElement = this.GetWindowContentIFrameElement(index);
  if(this.fakeDragDiv != null) {
   this.RemoveFakeDragDiv(iframeElement);
   ASPx.SetElementDisplay(iframeElement, true);
  } else
   ASPx.SetElementVisibility(iframeElement, true);
 },
 CreateFakeDivForIframe: function(iframe) {
  fakeDiv = document.createElement("div");
  ASPx.SetStyles(fakeDiv, { width: iframe.offsetWidth, height: iframe.offsetHeight });
  return fakeDiv;
 },
 CreateFakeDragDiv: function(iframe) {
  this.fakeDragDiv = this.CreateFakeDivForIframe(iframe);
  iframe.parentElement.appendChild(this.fakeDragDiv);
 },
 CreateFakeResizeDiv: function(iframe, index) {
  if(!this.fakeResizeDiv)
   this.fakeResizeDiv = [];
  if(!this.fakeResizeDiv[index])
   this.fakeResizeDiv[index] = this.CreateFakeDivForIframe(iframe);
  this.fakeResizeDiv[index].style.position = "absolute";
  iframe.parentElement.appendChild(this.fakeResizeDiv[index]);
  ASPx.SetAbsoluteX(this.fakeResizeDiv[index], ASPx.GetAbsoluteX(iframe));
  ASPx.SetAbsoluteY(this.fakeResizeDiv[index], ASPx.GetAbsoluteY(iframe));
 },
 RemoveFakeResizeDiv: function(iframe, index) {
  iframe.parentElement.removeChild(this.fakeResizeDiv[index]);
  this.fakeResizeDiv[index] = null;
 },
 RemoveFakeDragDiv: function(iframe) {
  iframe.parentElement.removeChild(this.fakeDragDiv);
  this.fakeDragDiv = null;
 },
 CreateResizePanel: function(index) {
  var element = this.GetWindowElement(index);
  var mainCell = this.GetWindowMainCell(element);
  var resizePanel = document.createElement("DIV");
  element.parentNode.appendChild(resizePanel);
  resizePanel.style.overflow = "hidden";
  resizePanel.style.position = "absolute";
  resizePanel.style.zIndex = popupControlZIndex + aspxGetPopupControlCollection().visiblePopupWindowIds.length * 2 + 2;
  if(!this.isLiveResizingMode)
   resizePanel.style.border = "black 1px dotted";
  return resizePanel;
 },
 OnResizeStart: function(evt, index) {
  if(!aspxGetPopupControlCollection().IsResizeInint()) {
   var cursor = this.CreateResizeCursorInfo(evt, index);
   if(cursor.course != "") {
    aspxGetPopupControlCollection().setIframesMouseMoveEnabled(false);
    this.SetIsResized(index, true);
    var resizePanel = this.CreateResizePanel(index);
    this.UpdateResizeCursor(resizePanel, cursor.verticalDirection, cursor.horizontalDirection);
    aspxGetPopupControlCollection().InitResizeObject(this, index, cursor, resizePanel);
    this.OnResize(evt, index, cursor, resizePanel);
   }
  }
  return aspxGetPopupControlCollection().IsResizeInint();
 },
 OnResize: function(evt, index, cursor, resizePanel) {
  this.OnResizePanelLite(evt, index, cursor, resizePanel);
  if(this.isLiveResizingMode)
   this.OnResizeWindow(index, cursor, resizePanel);
  ASPx.Selection.Clear();
  if(ASPx.Browser.WebKitTouchUI)
   evt.preventDefault();
  if(this.GetIsPinned(index))
   this.HoldPosition(index, true, resizePanel);
 },
 OnResizePanelLite: function(evt, index, cursor, resizePanel) {
  var x = ASPx.Evt.GetEventX(evt);
  var y = ASPx.Evt.GetEventY(evt);
  var element = this.GetWindowElement(index);
  if(ASPx.Browser.IE && ASPx.Browser.Version >= 10) {
   x = Math.round(x);
   y = Math.round(y);
  }
  var newLeft = ASPx.GetAbsoluteX(element);
  var newTop = ASPx.GetAbsoluteY(element);
  var newWidth = element.offsetWidth;
  var newHeight = element.offsetHeight;
  if(cursor.verticalDirection == "n") {
   if(!this.fixedBottom)
    this.fixedBottom = newTop + newHeight;
   newHeight = newHeight + (newTop - y) + cursor.verticalOffset;
   newTop = y - cursor.verticalOffset;
  }
  if(cursor.verticalDirection == "s") {
   newHeight = newHeight + (y - (newTop + newHeight)) + cursor.verticalOffset;
   this.fixedBottom = null;
  }
  if(cursor.horizontalDirection == "w") {
   if(!this.fixedRight)
    this.fixedRight = newLeft + newWidth;
   newWidth = newWidth + (newLeft - x) + cursor.horizontalOffset;
   newLeft = x - cursor.horizontalOffset;
  }
  if(cursor.horizontalDirection == "e") {
   newWidth = newWidth + (x - (newLeft + newWidth)) + cursor.horizontalOffset;
   this.fixedRight = null;
  }
  if(newWidth > 0 && newHeight > 0) {
   var minWidth = this.GetWindowMinWidth(index);
   var maxWidth = this.GetWindowMaxWidth(index);
   if(minWidth && newWidth < minWidth)
    newWidth = minWidth;
   if(maxWidth && newWidth > maxWidth)
    newWidth = maxWidth;
   var minHeight = this.GetWindowMinHeight(index);
   var maxHeight = this.GetWindowMaxHeight(index);
   if(minHeight && newHeight < minHeight)
    newHeight = minHeight;
   if(maxHeight && newHeight > maxHeight)
    newHeight = maxHeight;
   newLeft = ASPx.PrepareClientPosForElement(newLeft, element, true);
   newTop = ASPx.PrepareClientPosForElement(newTop, element, false);
   if(ASPx.Browser.IE && ASPx.Browser.Version >= 10) {
    newLeft = Math.round(newLeft);
    newTop = Math.round(newTop);
    newHeight = Math.round(newHeight);
    newWidth = Math.round(newWidth);
   }
   var widthWithoutBorders = newWidth - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(resizePanel);
   var heightWithoutBorders = newHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(resizePanel);
   ASPx.SetStyles(resizePanel, {
    left: newLeft, top: newTop,
    width: widthWithoutBorders, height: heightWithoutBorders
   });
   this.SetWindowLeft(index, ASPx.GetAbsoluteX(element));
   this.SetWindowTop(index, ASPx.GetAbsoluteY(element));
  }
 },
 OnResizeWindow: function(index, cursor, resizePanel) {
  var windowElement = this.GetWindowElement(index);
  var left = ASPx.GetAbsoluteX(resizePanel);
  var top = ASPx.GetAbsoluteY(resizePanel);
  this.SetClientWindowSizeLite(index, resizePanel.offsetWidth, resizePanel.offsetHeight);
  var bottom = top + windowElement.offsetHeight;
  var right = left + windowElement.offsetWidth;
  if(this.fixedBottom && (bottom > this.fixedBottom || bottom < this.fixedBottom))
   top = this.fixedBottom - windowElement.offsetHeight;
  if(this.fixedRight && (right > this.fixedRight || right < this.fixedRight))
   left = this.fixedRight - windowElement.offsetWidth;
  this.fixedBottom = null;
  this.fixedRight = null;
  var styleLeft = ASPx.PrepareClientPosForElement(left, windowElement, true);
  var styleTop = ASPx.PrepareClientPosForElement(top, windowElement, false);
  if(ASPx.Browser.IE && ASPx.Browser.Version >= 10) {
   styleLeft = Math.round(styleLeft);
   styleTop = Math.round(styleTop);
  }
  ASPx.SetStyles(windowElement, {
   left: styleLeft,
   top: styleTop
  });
  if(this.InternalIsWindowVisible(index)) 
   this.DoShowWindowIFrame(index, left, top, ASPx.InvalidDimension, ASPx.InvalidDimension);
  this.CorrectElementVerticalAlignment(ASPx.AdjustVerticalMarginsInContainer, this.GetWindowHeaderElement(index), true);
 },
 OnResizeStop: function(evt, index, cursor, resizePanel) {
  if(this.allowResize) {
   aspxGetPopupControlCollection().setIframesMouseMoveEnabled(true);
   if(!this.isLiveResizingMode) {
    var windowElement = this.GetWindowElement(index);
    ASPx.GetControlCollection().CollapseControls(windowElement);
    this.OnResizeWindow(index, cursor, resizePanel);
   }
   this.CreateResizeCursorInfo(evt, index);
   this.UpdateWindowsStateCookie();
   this.RaiseResize(index);
   if(!this.isLiveResizingMode)
    ASPx.GetControlCollection().AdjustControls(windowElement, true);
   this.SetWindowCachedSize(index, this.GetClientWindowWidth(index), this.GetClientWindowHeight(index));
  }
 },
 OnMouseDownModalElement: function(evt, index) {
  aspxGetPopupControlCollection().DoHideAllWindows(ASPx.Evt.GetEventSource(evt), "", false, ASPxClientPopupControlCloseReason.OuterMouseClick);
  this.SetIsPopuped(index, true)
 },
 IsRaiseAfterResizingLocked: function() {
  return this.CollapseExecuting() || this.MaximizationExecuting();
 },
 SetClientWindowSizeLite: function(index, width, height, isWindowCollapsed) {
  this.RaiseBeforeResizing(index);
  this.SetClientWindowSizeCoreLite(index, width, height, isWindowCollapsed);
  if(!this.IsRaiseAfterResizingLocked())
   this.RaiseAfterResizing(index);
 },
 HasAnyScrollBars: function(index) {
  var contentElement = this.GetWindowContentElement(index);
  var hasBothScrollBars = contentElement.style.overflow == "scroll" || contentElement.style.overflow == "auto";
  return hasBothScrollBars || contentElement.style.overflowX == "scroll" ||
    contentElement.style.overflowY == "scroll" || contentElement.style.overflowX == "auto" ||
    contentElement.style.overflowY == "auto";
 },
 SetClientWindowSizeCoreLite: function(index, width, height, isWindowCollapsed) {
  var contentUrl = this.GetWindowContentIFrameUrl(index);
  var needToHideContent = !contentUrl;
  var element = this.GetWindowElement(index);
  var contentWrapper = this.GetWindowContentWrapperElement(index);
  var contentElement = this.GetWindowContentElement(index);
  if(ASPx.Browser.IE) {
   var scrollTop = contentElement.scrollTop;
   var scrollLeft = contentElement.scrollLeft;
  }
  var contentIframeElement = this.GetWindowContentIFrameElement(index);
  var iframeHeightCorrectionOnFirstShow = height > 0;
  if(contentIframeElement && (this.GetWindowIsShown(index) || iframeHeightCorrectionOnFirstShow))
   contentIframeElement.style.height = "0px";
  contentWrapper.style.height = "";
  contentWrapper.style.width = "";
  contentElement.style.height = "";
  contentElement.style.width = "";
  if(needToHideContent) {
   if(ASPx.Browser.IE) {
    var contentElementChildren = contentElement.getElementsByTagName("*"),
     contentElementChildrenScroll = [];
    for(var i = 0; i < contentElementChildren.length; i++) {
     var child = contentElementChildren[i];
     if(!!child.scrollLeft || !!child.scrollTop)
      contentElementChildrenScroll.push([i, child.scrollLeft, child.scrollTop]);
    }
   }
   contentElement.style.display = "none";
  }
  var hasAnyScrollBars = this.HasAnyScrollBars(index);
  var elementsDisplayValue = this.GetWindowElementDisplayValue(hasAnyScrollBars, height);
  element.style.display = elementsDisplayValue;
  if(!this.GetIsCollapsed(index))
   contentWrapper.style.display = elementsDisplayValue;
  if(typeof (width) != "undefined") {
   var actualWidth = width - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(element);
   if(actualWidth <= 0)
    actualWidth = ASPx.Browser.WebKitFamily ? 1 : 0; 
   element.style.width = actualWidth + "px";
   if(element.offsetWidth != width) {
    actualWidth += (width - element.offsetWidth);
    if(actualWidth <= 0)
     actualWidth = ASPx.Browser.WebKitFamily ? 1 : 0;
    element.style.width = actualWidth + "px";
   }
   if(ASPx.Browser.WebKitFamily && hasAnyScrollBars) {
    var mainDiv = this.GetWindowMainCell(element);
    var dxpcMainDiv = ASPx.GetNodeByClassName(mainDiv, "dxpc-mainDiv");
    var dxpcMainDivBordersAndPaddings = dxpcMainDiv ? ASPx.GetLeftRightBordersAndPaddingsSummaryValue(dxpcMainDiv) : 0;
    contentWrapper.style.width = width - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(mainDiv) - dxpcMainDivBordersAndPaddings + "px";
   }
  }
  if(typeof (height) != "undefined") {
   var actualHeight = height - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(element);
   if(actualHeight < 0)
    actualHeight = 0;
   element.style.height = actualHeight + "px";
   if(element.offsetHeight != height) {
    actualHeight += (height - element.offsetHeight);
    if(actualHeight < 0) actualHeight = 0;
    element.style.height = actualHeight + "px";
   }
  }
  this.CorrectWindowSizeGripPositionLite(index);
  this.CorrectWindowHeaderText(index);
  this.SetContentWrapperHeightLite(index);
  var correctContentElementSize = hasAnyScrollBars || contentElement.style.overflow == "hidden" || contentElement.style.overflowX == "hidden" || contentElement.style.overflowY == "hidden";
  if((correctContentElementSize || contentUrl) && height) {
   var contentHeight = ASPx.GetClearClientHeight(contentWrapper) -
    (ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9 ? 0 : ASPx.GetTopBottomBordersAndPaddingsSummaryValue(contentElement));
   if(contentHeight < 0)
    contentHeight = 0;
   contentElement.style.height = contentHeight + "px";
  }
  if(correctContentElementSize && width) {
   if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9)
    contentElement.style.width = ASPx.GetClearClientWidth(contentWrapper);
   else
    ASPx.SetOffsetWidth(contentElement, ASPx.GetClearClientWidth(contentWrapper));
  }
  contentElement.style.display = correctContentElementSize || contentUrl ? "block" : "table-cell";
  if(ASPx.IsExists(contentElementChildrenScroll) && contentElementChildrenScroll.length > 0) {
   for(var i = 0; i < contentElementChildrenScroll.length; i++) {
    var childScroll = contentElementChildrenScroll[i],
     childIndex = childScroll[0],
     childScrollLeft = childScroll[1],
     childScrollTop = childScroll[2];
    if(!!childScrollLeft)
     contentElementChildren[childIndex].scrollLeft = childScrollLeft;
    if(!!childScrollTop)
     contentElementChildren[childIndex].scrollTop = childScrollTop;
   }
  }
  if(ASPx.Browser.IE) {
   contentElement.scrollTop = scrollTop;
   contentElement.scrollLeft = scrollLeft;
  }
  if(contentIframeElement)
   contentIframeElement.style.height = "100%";
  this.SetWindowWidth(index, width);
  this.SetWindowHeight(index, height);
  if(isWindowCollapsed)
   this.ResetWindowHeight(index);
 },
 SetContentWrapperHeightLite: function(index) {
  var windowElem = this.GetWindowElement(index);
  if(!windowElem.style.height || ASPx.IsPercentageSize(windowElem.style.height))
   return;
  var borderOwner;
  if(ASPx.ElementHasCssClass(windowElem, PopupControlCssClasses.MainDivLiteCssClass))
   borderOwner = windowElem;
  else
   borderOwner = ASPx.GetNodeByClassName(windowElem, PopupControlCssClasses.MainDivLiteCssClass);
  var height = windowElem.offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(borderOwner);
  var extenders = [
   this.GetWindowHeaderElement(index),
   this.GetWindowFooterElement(index)
  ];
  for(var i = 0; i < extenders.length; i++) {
   if(extenders[i])
    height -= extenders[i].offsetHeight;
  }
  var contentWrapper = this.GetWindowContentWrapperElement(index);
  if(height > 0)
   contentWrapper.style.height = height + "px";
 },
 GetWindowContentWrapperElement: function(index) {
  var windowElem = this.GetWindowElement(index);
  var mainDiv = this.GetWindowMainCell(windowElem);
  var contentWrapperParent = mainDiv;
  return ASPx.GetChildByClassName(contentWrapperParent, PopupControlCssClasses.ContentWrapperCssClassName);
 },
 SetWindowScrollDivSize: function(scrollDiv, index, dimension) {
  var windowClientTable = this.GetWindowClientTable(index);
  var headerElement = this.GetWindowHeaderElement(index);
  var height = windowClientTable.offsetHeight;
  if(headerElement)
   height -= headerElement.offsetHeight;
  height -= this.GetWindowFooterHeightLite(index);
  if(dimension == 'height' || dimension == 'both')
   ASPx.SetOffsetHeight(scrollDiv, height);
  if(dimension == 'width' || dimension == 'both') {
   var width = windowClientTable.offsetWidth;
   var contentElement = this.GetWindowContentElement(index);
   width -= ASPx.GetLeftRightBordersAndPaddingsSummaryValue(scrollDiv) + ASPx.GetHorizontalBordersWidth(contentElement);
   if(width > -1)
    scrollDiv.style.width = width + "px";
  }
  scrollDiv.style.marginRight = "0px";
 },
 CorrectWindowSizeGripPositionLite: function(index) {
  var sizeGrip = this.GetWindowSizeGripElement(index);
  if(!sizeGrip || sizeGrip.corrected) return;
  if(this.rtl)
   sizeGrip.style.marginRight = "-" + sizeGrip.offsetWidth + "px";
  else
   sizeGrip.style.marginLeft = "-" + sizeGrip.offsetWidth + "px";
  sizeGrip.style.marginTop = "-" + sizeGrip.offsetHeight + "px";
  sizeGrip.corrected = true;
 },
 CorrectWindowHeaderText: function(index) {
  var headerElement = this.GetWindowHeaderElement(index);
  if(!headerElement || headerElement.corrected) return;
  var leftChildrenWidth = 0, rightChildrenWidth = 0, headerContentElement;
  for(var i = 0; i < headerElement.childNodes.length; i++) {
   var child = headerElement.childNodes[i];
   if(!child.offsetWidth) continue;
   if(ASPx.GetElementFloat(child) === "right")
    rightChildrenWidth += child.offsetWidth + ASPx.GetLeftRightMargins(child);
   else if(ASPx.GetElementFloat(child) === "left")
    leftChildrenWidth += child.offsetWidth + ASPx.GetLeftRightMargins(child);
   else if(!headerContentElement)
    headerContentElement = child;
  }
  if(headerContentElement && (leftChildrenWidth > 0 || rightChildrenWidth > 0)) {
   var headerContentElementStyle = ASPx.GetCurrentStyle(headerContentElement);
   var originalPaddingLeft = parseInt(headerContentElementStyle.paddingLeft);
   var originalPaddingRight = parseInt(headerContentElementStyle.paddingRight);
   ASPx.SetStyles(headerContentElement, {
    paddingLeft: leftChildrenWidth + originalPaddingLeft,
    paddingRight: rightChildrenWidth + originalPaddingRight
   }, true);
   this.CorrectHeaderContentElementHeight(index);
  }
  headerElement.corrected = true;
 },
 CorrectHeaderContentElementHeight: function(index) {
  var headerElement = this.GetWindowHeaderElement(index),
   headerContentElement = ASPx.GetChildByClassName(headerElement, PopupControlCssClasses.HeaderContentCssClassName);
  if(!headerElement || !headerContentElement) return;
  if(headerContentElement.style.height)
   headerContentElement.style.height = "";
  var contentElementHeight = ASPx.GetClearClientHeight(headerElement) - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(headerContentElement),
   lineHeightForTextVerticalAlign = contentElementHeight,
   windowHeaderTextCell = this.GetWindowHeaderTextCell(index);
  if(windowHeaderTextCell)
     lineHeightForTextVerticalAlign -= ASPx.GetTopBottomBordersAndPaddingsSummaryValue(windowHeaderTextCell);
  ASPx.SetStyles(headerContentElement, { lineHeight: lineHeightForTextVerticalAlign, height: contentElementHeight }, false);
 },
 SetWindowCachedSize: function(index, width, height) {
  if(0 <= index && index < this.heightArray.length)
   this.cachedSizeArray[index] = new ASPx.PopupSize(width, height);
  else
   this.cachedSize = new ASPx.PopupSize(width, height);
 },
 GetWindowCachedSize: function(index) {
  if(0 <= index && index < this.heightArray.length)
   return this.cachedSizeArray[index];
  else
   return this.cachedSize;
 },
 ResetWindowCachedSize: function(index) {
  if(0 <= index && index < this.heightArray.length)
   this.cachedSizeArray[index] = null;
  else
   this.cachedSize = null;
 },
 SetWindowSizeByIndex: function(index, width, height) {
  var minWidth = this.GetWindowMinWidth(index);
  var minHeight = this.GetWindowMinHeight(index);
  var maxWidth = this.GetWindowMaxWidth(index);
  var maxHeight = this.GetWindowMaxHeight(index);
  if(minWidth)
   width = Math.max(width, minWidth);
  if(minHeight)
   height = Math.max(height, minHeight);
  if(maxWidth)
   width = Math.min(width, maxWidth);
  if(maxHeight)
   height = Math.min(height, maxHeight);
  var isWindowMaximized = this.GetIsMaximized(index);
  var isWindowCollapsed = this.GetIsCollapsed(index);
  var isWindowMaximizedAndCollapsed = (isWindowMaximized && isWindowCollapsed);
  if(this.InternalIsWindowDisplayed(index) && (!isWindowMaximizedAndCollapsed || this.ResizingForMaxWindowLocked())) {
   if(!this.CollapseExecuting() && !this.MaximizationExecuting() && !this.ResizingForMaxWindowLocked()) {
    this.SetWindowCachedSize(index, width, height);
    this.SetIsResized(index, true);
   }
   if(isWindowCollapsed && !this.MaximizationExecuting() && !this.ResizingForMaxWindowLocked()) {
    this.SetWindowCachedSize(index, width, height);
    this.UpdateRestoredWindowSize(index, width, height);
    height = 0;
   }
   if(isWindowMaximized && !this.CollapseExecuting() && !this.ResizingForMaxWindowLocked()) {
    this.SetWindowCachedSize(index, width, height);
    this.UpdateRestoredWindowSize(index, width, height);
   } else {
    this.SetWindowSizeByIndexCore(index, width, height, isWindowCollapsed);
   }
  } else
   this.SetWindowCachedSize(index, width, height);
 },
 SetWindowSizeByIndexCore: function(index, width, height, isWindowCollapsed) {
  this.SetClientWindowSizeLite(index, width, height, isWindowCollapsed);
  var iFrame = this.GetWindowIFrame(index);
  if(iFrame && !isWindowCollapsed) {
   var winElememnt = this.GetWindowElement(index);
   var realWidth = winElememnt.offsetWidth;
   var realHeight = winElememnt.offsetHeight;
   ASPx.SetStyles(iFrame, { width: realWidth, height: realHeight });
  }
  this.UpdateWindowsStateCookie();
 },
 CreateResizeCursorInfo: function(evt, index) {
  var element = this.GetWindowElement(index);
  var mainCell = this.GetWindowMainCell(element);
  var clientWindow = this.GetWindowClientTable(index);
  var headerElement = this.GetWindowHeaderElement(index);
  var left = ASPx.GetAbsoluteX(mainCell);
  var top = ASPx.GetAbsoluteY(mainCell);
  var x = ASPx.Evt.GetEventX(evt);
  var y = ASPx.Evt.GetEventY(evt);
  var mainCellWidth = mainCell.offsetWidth;
  var mainCellHeight = mainCell.offsetHeight;
  var leftOffset = Math.abs(x - left);
  var rightOffset = Math.abs(x - left - mainCellWidth);
  var topOffset = Math.abs(y - top);
  var bottomOffset = Math.abs(y - top - mainCellHeight);
  var cursorInfo = this.CreateResizeBorderCursorInfo(index, leftOffset, rightOffset, topOffset, bottomOffset);
  var grip = this.GetWindowSizeGripElement(index);
  if(grip) {
   var gripCursorInfo = this.CreateGripCursorInfo(index, mainCell, grip, leftOffset, rightOffset, bottomOffset);
   if(gripCursorInfo)
    cursorInfo = gripCursorInfo;
  }
  this.UpdateResizeCursor(clientWindow, cursorInfo.verticalDirection, cursorInfo.horizontalDirection);
  this.UpdateResizeCursor(mainCell, cursorInfo.verticalDirection, cursorInfo.horizontalDirection);
  if(headerElement)
   this.UpdateResizeCursor(headerElement, cursorInfo.verticalDirection, cursorInfo.horizontalDirection);
  return cursorInfo;
 },
 CreateGripCursorInfo: function(index, mainCell, grip, leftOffset, rightOffset, bottomOffset) {
  var gripWidth = this.rtl
   ? ASPx.GetAbsoluteX(grip) - ASPx.GetAbsoluteX(mainCell) + grip.offsetWidth
   : mainCell.offsetWidth - (ASPx.GetAbsoluteX(grip) - ASPx.GetAbsoluteX(mainCell));
  var gripHeight = mainCell.offsetHeight - (ASPx.GetAbsoluteY(grip) - ASPx.GetAbsoluteY(mainCell));
  if(gripHeight > bottomOffset) {
   if(this.rtl && gripWidth > leftOffset)
    return new PCResizeCursorInfo("w", "s", leftOffset, bottomOffset);
   if(gripWidth > rightOffset)
    return new PCResizeCursorInfo("e", "s", rightOffset, bottomOffset);
  }
  return null;
 },
 CreateResizeBorderCursorInfo: function(index, leftOffset, rightOffset, topOffset, bottomOffset) {
  var ResizeBorderSize = this.ResizeBorderSize;
  var verticalDirection = this.GetResizeVerticalCourse(ResizeBorderSize, topOffset, bottomOffset);
  ResizeBorderSize = verticalDirection != "" ? this.ResizeCornerBorderSize : this.ResizeBorderSize;
  var horizontalDirection = this.GetResizeHorizontalCourse(ResizeBorderSize, leftOffset, rightOffset);
  if(verticalDirection == "" && horizontalDirection != "")
   verticalDirection = this.GetResizeVerticalCourse(this.ResizeCornerBorderSize, topOffset, bottomOffset);
  var horizontalOffset = leftOffset < rightOffset ? leftOffset : rightOffset;
  var verticalOffset = topOffset < bottomOffset ? topOffset : bottomOffset;
  return new PCResizeCursorInfo(horizontalDirection, verticalDirection, horizontalOffset, verticalOffset);
 },
 GetResizeVerticalCourse: function(ResizeBorderSize, topOffset, bottomOffset) {
  if(ResizeBorderSize > topOffset) return "n";
  if(ResizeBorderSize > bottomOffset) return "s";
  return "";
 },
 GetResizeHorizontalCourse: function(ResizeBorderSize, leftOffset, rightOffset) {
  if(ResizeBorderSize > leftOffset) return "w";
  if(ResizeBorderSize > rightOffset) return "e";
  return "";
 },
 UpdateResizeCursor: function(element, verticalDirection, horizontalDirection) {
  var cursor = verticalDirection + horizontalDirection;
  if(cursor != "") {
   cursor += "-resize";
   this.ShowTemporaryCursor(element, cursor);
  }
  else
   this.HideTemporaryCursor(element);
 },
 ShowTemporaryCursor: function(element, cursor) {
  ASPx.Attr.ChangeStyleAttribute(element, "cursor", cursor);
 },
 HideTemporaryCursor: function(element) {
  ASPx.Attr.RestoreStyleAttribute(element, "cursor");
 },
 ResizeWindowIFrame: function(index) {
  if(!this.renderIFrameForPopupElements) return;
  if(!this.InternalIsWindowVisible(index)) return;
  var iFrame = this.GetWindowIFrame(index);
  if(iFrame) {
   var cell = this.GetWindowMainCell(this.GetWindowElement(index));
   ASPx.SetStyles(iFrame, { width: cell.offsetWidth, height: cell.offsetHeight });
  }
 },
 GetContentIFrameWindow: function() {
  var iframeElement = this.GetContentIFrame();
  return iframeElement.contentWindow;
 },
 ShowDragCursor: function(index) {
  var dragElement = this.GetDragElement(index);
  if(dragElement)
   this.ShowTemporaryCursor(dragElement, "move");
 },
 HideDragCursor: function(index) {
  var dragElement = this.GetDragElement(index);
  if(dragElement != null)
   this.HideTemporaryCursor(dragElement);
 },
 GetDragElement: function(index) {
  var headerElement = this.GetWindowHeaderElement(index);
  var element = this.GetWindowElement(index);
  if(element != null)
   return (headerElement != null ? headerElement : this.GetWindowMainCell(element));
  return null;
 },
 OnActivateMouseDown: function(evt, index) {
  this.OnActivate(index, evt);
 },
 OnCloseButtonClick: function(index) {
  this.RaiseCloseButtonClick(index);
  if(this.GetWindowCloseAction(index) != "None")
   this.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.CloseButton);
 },
 OnRefreshButtonClick: function(index) {
  var contentIFrame = this.GetWindowContentIFrameElement(index);
  if(contentIFrame)
   this.RefreshWindowContentUrl(this.GetWindow(index));
  else
   this.PerformWindowCallback(this.GetWindow(index));
 },
 OnPinButtonClick: function(index) {
  var value = this.GetIsPinned(index);
  this.SetPinCore(index, !value);
 },
 SetPinCore: function(index, value) {
  if(this.GetIsPinned(index) != value) {
   this.SetIsPinned(index, value);
   this.HoldPosition(index, value);
   this.UpdateWindowsStateCookie();
   this.OnPinned(index, value);
  }
 },
 OnPinned: function(index, pinned) {
  this.RaisePinnedChanged(index, pinned);
 },
 HoldPosition: function(index, hold, element) {
  if(hold) {
   var element = element || this.GetWindowElement(index);
   if(!element) return;
   var x = ASPx.GetAbsoluteX(element);
   var y = ASPx.GetAbsoluteY(element);
   scrollX = ASPx.GetDocumentScrollLeft();
   scrollY = ASPx.GetDocumentScrollTop();
   this.SetPinPosX(index, x - scrollX);
   this.SetPinPosY(index, y - scrollY);
  }
  this.UpdateHeaderButtonSelected(index, "GetWindowPinButton", hold);
  this.CheckHeaderCursor(index);
 },
 GetBodyWidth: function() {
  return aspxGetPopupControlCollection().GetSavedBodyWidth();
 },
 GetBodyHeight: function() {
  return aspxGetPopupControlCollection().GetSavedBodyHeight();
 },
 GetIsOutFromViewPort: function(index) {
  var element = this.GetWindowElement(index);
  if(!element) return false;
  var pinXTarget = this.GetPinPosX(index);
  var pinYTarget = this.GetPinPosY(index);
  var popupWindowWidth = this.GetClientWindowWidth(index);
  var docClientWidth = ASPx.GetDocumentClientWidth();
  var rightOutOffset = (pinXTarget + popupWindowWidth) - docClientWidth;
  var popupWindowHeight = this.GetClientWindowHeight(index);
  var docClientHeight = ASPx.GetDocumentClientHeight();
  var bottomOutOffset = (pinYTarget + popupWindowHeight) - docClientHeight;
  return (rightOutOffset > 0 || bottomOutOffset > 0);
 },
 needToHidePinnedOutFromViewPort: function(index) {
  return this.GetIsPinned(index) && this.GetIsOutFromViewPort(index);
 },
 AdjustPinPositionWhileScroll: function(index) {
  var element = this.GetWindowElement(index);
  if(!element) return;
  var x = ASPx.GetAbsoluteX(element);
  var y = ASPx.GetAbsoluteY(element);
  var scrollX = ASPx.GetDocumentScrollLeft();
  var scrollY = ASPx.GetDocumentScrollTop();
  var pinX = x - scrollX;
  var pinY = y - scrollY;
  var pinXTarget = this.GetPinPosX(index);
  var pinYTarget = this.GetPinPosY(index);
  if((pinX != pinXTarget) || (pinY != pinYTarget)) {
   this.lockScroll++;
   var xNew = pinXTarget + scrollX;
   var yNew = pinYTarget + scrollY;
   var bodyWidth = this.GetBodyWidth();
   var bodyHeight = this.GetBodyHeight();
   var popupWindowWidth = this.GetClientWindowWidth(index);
   var docClientWidth = ASPx.GetDocumentClientWidth();
   var rightOutOffset = (pinXTarget + popupWindowWidth) - docClientWidth;
   var popupWindowHeight = this.GetClientWindowHeight(index);
   var docClientHeight = ASPx.GetDocumentClientHeight();
   var bottomOutOffset = (pinYTarget + popupWindowHeight) - docClientHeight;
   var cancelScrollX = false;
   if(xNew + (popupWindowWidth - rightOutOffset) > bodyWidth) {
    xNew -= (xNew + (popupWindowWidth - rightOutOffset) - bodyWidth);
    cancelScrollX = true;
   }
   var cancelScrollY = false;
   if(yNew + (popupWindowHeight - bottomOutOffset) > bodyHeight) {
    yNew -= (yNew + (popupWindowHeight - bottomOutOffset) - bodyHeight);
    cancelScrollY = true;
   }
   xNew = ASPx.PrepareClientPosForElement(xNew, element, true);
   yNew = ASPx.PrepareClientPosForElement(yNew, element, false);
   this.SetWindowPos(index, element, xNew, yNew);
   if(cancelScrollX) {
    var scrollLeftMax = bodyWidth - ASPx.GetDocumentClientWidth();
    if((rightOutOffset > 0) && (scrollX > scrollLeftMax)) {
     this.lockScroll++;
     ASPx.SetDocumentScrollLeft(scrollLeftMax);
     this.lockScroll--;
    }
   }
   if(cancelScrollY) {
    var scrollTopMax = bodyHeight - ASPx.GetDocumentClientHeight();
    if((bottomOutOffset > 0) && (scrollY > scrollTopMax)) {
     this.lockScroll++;
     ASPx.SetDocumentScrollTop(scrollTopMax);
     this.lockScroll--;
    }
   }
   this.lockScroll--;
  }
 },
 OnScroll: function(evt, index) {
  if(!this.GetIsPinned(index) || (this.lockScroll > 0)) return;
  this.AdjustPinPositionWhileScroll(index);
 },
 OnCollapseButtonClick: function(index) {
  this.SetCollapsedCore(index, !this.GetIsCollapsed(index));
 },
 SetCollapsedCore: function(index, minimization) {
  if(this.GetIsCollapsed(index) == minimization) return;
  this.DoCollapse(index, minimization);
  this.OnCollapsed(index, minimization);
 },
 DoCollapse: function(index, minimization) {
  if(this.GetIsCollapsed(index) == minimization) return;
  this.StartCollapse();
  if(minimization) {
   var cachedWidth = this.GetClientWindowWidth(index);
   var cachedHeight = this.GetClientWindowHeight(index);
   var shouldUpdateRestoredSize = this.ShoulUpdatedRestoredWindowSizeOnCollapse(index);
   var width = this.GetMainWindowWidth(index, !shouldUpdateRestoredSize);
   var height = this.GetMainWindowHeight(index, !shouldUpdateRestoredSize);
   this.SetWindowSizeByIndex(index, width, 0);
   this.SetWindowContentVisible(index, false);
   this.SetWindowFooterVisible(index, false);
   this.ResetWindowHeight(index);
   this.SetIsCollapsed(index, minimization);
   this.SetWindowCachedSize(index, cachedWidth, cachedHeight);
   if(shouldUpdateRestoredSize)
    this.UpdateRestoredWindowSize(index, width, height);
  }
  else {
   if(this.MaximizationExecuting()) {
    var element = this.GetWindowElement(index);
    if(element) {
     element.style.left = ASPx.GetDocumentScrollLeft();
     element.style.top = ASPx.GetDocumentScrollTop();
    }
   }
   this.SetWindowContentVisible(index, true);
   this.SetWindowFooterVisible(index, true);
   this.SetIsCollapsed(index, minimization);
   if(this.GetIsMaximized(index)) {
    var documentClientWidth = ASPx.PopupUtils.GetDocumentClientWidthForPopup();
    var documentClientHeight = ASPx.PopupUtils.GetDocumentClientHeightForPopup();
    this.SetWindowSizeByIndex(index, documentClientWidth, documentClientHeight);
   } else {
    var restoredWindowData = this.GetRestoredWindowData(index);
    this.SetWindowSizeByIndex(index, restoredWindowData.width, restoredWindowData.height);
   }
   ASPx.GetControlCollection().AdjustControls(this.GetWindowElement(index));
  }
  this.UpdateHeaderButtonSelected(index, "GetWindowCollapseButton", minimization);
  this.EndCollapse();
  this.UpdateWindowsStateCookie();
 },
 ResetWindowHeight: function(index) {
  var element = this.GetWindowElement(index);
  if(element)
   element.style.height = "";
 },
 ShoulUpdatedRestoredWindowSizeOnCollapse: function(index) {
  return !this.GetIsMaximized(index);
 },
 OnCollapsed: function(index, value) {
  if(value)
   this.RaiseCollapsed(index);
  else
   this.RaiseExpanded(index);
  this.RaiseAfterResizing(index);
 },
 OnMaximizeButtonClick: function(index) {
  this.SetMaximizedCore(index, !this.GetIsMaximized(index));
 },
 SetMaximizedCore: function(index, maximization) {
  if(this.GetIsMaximized(index) == maximization) return;
  this.DoMaximize(index, maximization);
  this.OnMaximizedChanged(index, maximization);
 },
 GetMaximizedPosition: function(element, isX) {
  if(ASPx.Browser.WebKitTouchUI)
   return ASPx.PrepareClientPosForElement(0, element, isX);
  return ASPx.PrepareClientPosForElement(isX ? ASPx.GetDocumentScrollLeft() : ASPx.GetDocumentScrollTop(), element, isX);
 },
 DoMaximize: function(index, maximization) {
  if(this.GetIsMaximized(index) == maximization) return;
  var element = this.GetWindowElement(index);
  if(!element) return;
  this.StartMaximization();
  if(maximization) {
   if(this.hideBodyScrollWhenMaximized)
    ASPx.PopupUtils.BodyScrollHelper.HideBodyScroll(element.id);
   if(this.GetIsCollapsed(index))
    this.DoCollapse(index, false);
   var cachedWidth = this.GetClientWindowWidth(index);
   var cachedHeight = this.GetClientWindowHeight(index);
   var restoredWindowData = this.GetInitRestoredWindowData(index);
   var documentClientWidth = ASPx.PopupUtils.GetDocumentClientWidthForPopup();
   var documentClientHeight = ASPx.PopupUtils.GetDocumentClientHeightForPopup();
   var currentStyle = ASPx.GetCurrentStyle(element);
   var windowClientTable = this.GetWindowClientTable(index);
   var windowClientTableParent = windowClientTable.parentNode;
   childStyle = ASPx.GetCurrentStyle(windowClientTableParent);
   var left = this.GetMaximizedPosition(element, true);
   var top = this.GetMaximizedPosition(element, false);
   this.SetWindowPos(index, element, left, top);
   this.SetWindowSizeByIndex(index, documentClientWidth, documentClientHeight);
   this.SetWindowCachedSize(index, cachedWidth, cachedHeight);
   this.SetRestoredWindowData(index, restoredWindowData);
   this.SetIsMaximized(index, maximization);
  }
  else {
   var restoredWindowData = this.GetRestoredWindowData(index);
   var width = restoredWindowData.width || this.GetMainWindowWidth(index);
   var height = restoredWindowData.height || this.GetMainWindowHeight(index);
   this.SetIsMaximized(index, maximization);
   var left = ASPx.PrepareClientPosForElement(restoredWindowData.left, element, true);
   var top = ASPx.PrepareClientPosForElement(restoredWindowData.top, element, false);
   this.SetWindowPos(index, element, left, top);
   this.SetWindowSizeByIndex(index, width, height);
   if(this.GetIsCollapsed(index)) {
    this.SetIsCollapsed(index, false);
    this.DoCollapse(index, true);
   }
   if(this.hideBodyScrollWhenMaximized)
    ASPx.PopupUtils.BodyScrollHelper.RestoreBodyScroll(element.id);
  }
  if(this.GetIsPinned(index))
   this.HoldPosition(index, true, element);
  this.UpdateHeaderButtonSelected(index, "GetWindowMaximizeButton", maximization);
  this.EndMaximization();
  this.UpdateWindowsStateCookie();
  this.CheckHeaderCursor(index);
 },
 OnMaximizedChanged: function(index, value) {
  if(value)
   this.RaiseMaximized(index);
  else
   this.RaiseRestoredAfterMaximized(index);
  this.RaiseAfterResizing(index);
 },
 GetInitRestoredWindowData: function(index) {
  var restoredWindowData = this.GetRestoredWindowData(index);
  restoredWindowData.left = this.GetCurrentLeft(index);
  restoredWindowData.top = this.GetCurrentTop(index);
  restoredWindowData.width = this.GetMainWindowWidth(index);
  restoredWindowData.height = this.GetMainWindowHeight(index);
  return restoredWindowData;
 },
 getDocumentDimensions: function(index) {
  if(ASPx.Browser.WebKitTouchUI)
   ASPx.Attr.ChangeStyleAttribute(this.GetWindowElement(index), "display", "none");
  var documentClientWidth = ASPx.PopupUtils.GetDocumentClientWidthForPopup(),
   documentClientHeight = ASPx.PopupUtils.GetDocumentClientHeightForPopup();
  if(ASPx.Browser.WebKitTouchUI)
   ASPx.Attr.RestoreStyleAttribute(this.GetWindowElement(index), "display");
  return { width: documentClientWidth, height: documentClientHeight};
 }, 
 UpdateMaximizedWindowSizeOnResize: function(index) {
  this.StartUpdateMaximizedWindowSizeOnResize();
  var dimensions = this.getDocumentDimensions(index);
  if(this.GetIsCollapsed(index)) dimensions.height = 0;
  this.SetWindowSizeByIndex(index, dimensions.width, dimensions.height);
  if(this.GetIsCollapsed(index)) {
   this.CorrectCollapsedSize(index);
  }
  window.setTimeout(function() { this.SetMaximizedWindowSizeAfterOnResize(index); }.aspxBind(this), 0);
  this.EndUpdateMaximizedWindowSizeOnResize();
 },
 SetMaximizedWindowSizeAfterOnResize: function(index) {
  this.StartUpdateMaximizedWindowSizeOnResize();
  var dimensions = this.getDocumentDimensions(index);
  windowWidthCurrent = this.GetMainWindowWidth(index, true);
  windowHeightCurrent = this.GetMainWindowHeight(index, true);
  if(this.GetIsCollapsed(index))
   dimensions.height = 0;
  if(dimensions.width != windowWidthCurrent || dimensions.height != windowHeightCurrent) {
   this.SetWindowSizeByIndex(index, dimensions.width, dimensions.height);
   if(this.GetIsCollapsed(index)) {
    this.CorrectCollapsedSize(index);
   }
  }
  this.EndUpdateMaximizedWindowSizeOnResize();
 },
 CorrectCollapsedSize: function(index) {
  var contentWrapper = this.GetWindowContentWrapperElement(index);
  if(contentWrapper && ASPx.IsElementVisible(contentWrapper))
   contentWrapper.style.display = 'none';
 },
 UpdateHeaderButtonSelected: function(index, methodGetWindowButton, flagSelected) {
  if(typeof (ASPx.GetStateController) != "undefined") {
   button = this[methodGetWindowButton](index);
   var method = flagSelected ? "SelectElementBySrcElement" : "DeselectElementBySrcElement";
   ASPx.GetStateController()[method](button);
  }
 },
 CheckHeaderCursor: function(index) {
  if(!this.allowDragging) return;
  var dragElement = this.GetDragElement(index);
  if(!dragElement) return;
  var styleCursor = dragElement.style.cursor;
  var isPinned = this.GetIsPinned(index);
  var isMaximized = this.GetIsMaximized(index);
  if((isPinned || isMaximized) && styleCursor != "default")
   dragElement.style.cursor = "default";
  else if(!isPinned && !isMaximized && styleCursor != "move")
   dragElement.style.cursor = "move";
 },
 LockAnimation: function() {
  this.animationLockCount++;
 },
 UnlockAnimation: function() {
  this.animationLockCount--;
 },
 IsAnimationLocked: function() {
  return this.animationLockCount > 0;
 },
 IsAnimationAllowed: function() {
  return this.enableAnimation && !this.IsAnimationLocked();
 },
 StartCollapse: function() {
  this.collapseExecutingLockCount++;
 },
 EndCollapse: function() {
  this.collapseExecutingLockCount--;
 },
 CollapseExecuting: function() {
  return this.collapseExecutingLockCount > 0;
 },
 StartMaximization: function() {
  this.maximizationExecutingLockCount++;
 },
 EndMaximization: function() {
  this.maximizationExecutingLockCount--;
 },
 MaximizationExecuting: function() {
  return this.maximizationExecutingLockCount > 0;
 },
 StartUpdateMaximizedWindowSizeOnResize: function() {
  this.browserResizingForMaxWindowLockCount++;
 },
 EndUpdateMaximizedWindowSizeOnResize: function() {
  this.browserResizingForMaxWindowLockCount--;
 },
 ResizingForMaxWindowLocked: function() {
  return this.browserResizingForMaxWindowLockCount > 0;
 },
 UpdateRestoredWindowSizeLock: function() {
  this.updateRestoredWindowSizeLockCount++;
 },
 UpdateRestoredWindowSizeUnlock: function() {
  this.updateRestoredWindowSizeLockCount--;
 },
 UpdateRestoredWindowSizeLocked: function() {
  return this.updateRestoredWindowSizeLockCount > 0;
 },
 UpdateRestoredWindowSize: function(index, width, height) {
  if(!this.UpdateRestoredWindowSizeLocked()) {
   restoredMinWindowData = this.GetRestoredWindowData(index);
   restoredMinWindowData.width = width;
   restoredMinWindowData.height = height;
   this.SetRestoredWindowData(index, restoredMinWindowData);
  }
 },
 OnMouseDown: function(evt, index, isDraggingAllowed, pointOnScrollBar) {
  if(ASPx.Evt.IsLeftButtonPressed(evt)) {
   if((this.allowResize || isDraggingAllowed) && !this.prohibitClearSelectionOnMouseDown) 
    ASPx.Selection.Clear();
   var isResizing = false;
   if(this.allowResize && !this.GetIsCollapsed(index) && !this.GetIsMaximized(index)) {
    var eventSourceControl = ASPx.Evt.GetEventSource(evt);
    var eventFromPopupContainer = ASPx.ElementHasCssClass(eventSourceControl, PopupControlCssClasses.ContentCssClassName) ||
     !ASPx.GetParentByClassName(eventSourceControl, PopupControlCssClasses.ContentCssClassName) ||
     this.eventFromOwnPopupContent(eventSourceControl);
    if(eventFromPopupContainer)
     isResizing = this.OnResizeStart(evt, index);
   }
   if(isResizing && ASPx.Browser.WebKitTouchUI)
    aspxGetPopupControlCollection().OverStop();
   var clickedOnScroll = pointOnScrollBar && this.GetEnableContentScrolling(index);
   if(isDraggingAllowed && !isResizing && !clickedOnScroll && !this.GetIsPinned(index) && !this.GetIsMaximized(index))
    this.OnDragStart(evt, index);
  }
 },
 eventFromOwnPopupContent: function(element) {
  while(element != null) {
   if(element.tagName == "BODY")
    return false;
   if(element.style.position == "absolute") {
    var windowIndex = this.GetWindowIndex(element);
    if(!isNaN(windowIndex)) {
     if(this.GetWindowElementId(windowIndex) == element.id)
      return true;
     return false;
    }
   }
   element = element.parentNode;
  }
  return false;
 },
 OnMouseMove: function(evt, index) {
  if(this.allowResize && !this.GetIsCollapsed(index) && !this.GetIsMaximized(index))
   this.CreateResizeCursorInfo(evt, index);
 },
 SetShadowVisibility: function(visible, index) {
  var shadowTable = this.GetWindowShadowTable(index);
  if(shadowTable && shadowTable.rows.length > 1) {
   var shadowCol = shadowTable.rows[0].cells[1];
   var shadowRow = shadowTable.rows[1];
   ASPx.SetElementVisibility(shadowCol, visible);
   ASPx.SetElementVisibility(shadowRow, visible);
  }
 },
 StartFadeAnimation: function(element, index) {
  if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 9) {
   ASPx.SetElementVisibility(element, true);
   ASPx.AnimationHelper.setOpacity(element, 0);
   this.SetShadowVisibility(false, index); 
  } else {
   ASPx.AnimationHelper.setOpacity(element, 0);
   ASPx.SetElementVisibility(element, true);
  }
  var callback = function() {
   if(ASPx.Browser.IE && ASPx.Browser.Version < 9 && element.style.filter) {
    if(element.style.filter)
     element.style.filter = "";
    this.SetShadowVisibility(true, index);
   }
   this.OnAnimationStop(index);
  }.aspxBind(this);
  ASPx.AnimationHelper.fadeIn(element, callback, this.fadeAnimationDuration);
 },
 StartSlideAnimation: function(animationDivElement, index, horizontalPopupPosition, verticalPopupPosition) {
  var element = this.GetWindowMainTable(animationDivElement);
  var clientX = horizontalPopupPosition.position;
  var clientY = verticalPopupPosition.position;
  var args = "(\"" + this.name + "\", " + index + ")";
  var onAnimStopCallString = "ASPx.PCAStop" + args;
  if(ASPx.Browser.Firefox)
   animationDivElement.style.display = "block";
  ASPx.PopupUtils.InitAnimationDiv(animationDivElement, clientX, clientY, onAnimStopCallString, true);
  var horizontalDirection = ASPx.PopupUtils.GetAnimationHorizontalDirection(horizontalPopupPosition, this.popupHorizontalAlign, this.popupVerticalAlign, this.rtl);
  var verticalDirection = ASPx.PopupUtils.GetAnimationVerticalDirection(verticalPopupPosition, this.popupHorizontalAlign, this.popupVerticalAlign);
  var xPos = horizontalDirection * animationDivElement.offsetWidth;
  var yPos = verticalDirection * animationDivElement.offsetHeight;
  neddToForceAnimation = xPos === 0 && yPos === 0;
  if(neddToForceAnimation) 
   yPos = 1;
  ASPx.SetStyles(element, { left: xPos, top: yPos });
  ASPx.SetElementVisibility(animationDivElement, true);
  this.DoShowWindowIFrame(index, clientX, clientY, 0, 0);
  ASPx.PopupUtils.StartSlideAnimation(animationDivElement, element, this.GetWindowIFrame(index), this.slideAnimationDuration);
 },
 GetWindowsState: function() {
  var state = "";
  if(this.HasDefaultWindow()) {
   state += this.GetWindowState(-1);
  }
  for(var i = 0; i < this.GetWindowCountCore() ; i++) {
   state += this.GetWindowState(i);
   if(i < this.GetWindowCountCore() - 1) state += ";";
  }
  return state;
 },
 GetWindowState: function(index) {
  var element = this.GetWindowElement(index);
  if(element != null) {
   var visibleFlag = (!this.InternalIsWindowVisible(index) || element.isHiding) ? "0" : "1";
   var isDraggedFlag = this.GetIsDragged(index) ? "1" : "0";
   var zIndex = this.GetCurrentZIndex(index);
   var isResized = this.GetIsResized(index);
   var isResizedFlag = isResized ? "1" : "0";
   var width = isResized ? this.GetWindowWidthInternal(index) : ASPx.InvalidDimension;
   var height = isResized ? this.GetWindowHeightInternal(index) : ASPx.InvalidDimension;
   var contentWasLoaded = element.loaded ? "1" : "0";
   var left, top;
   var isMaximized = this.GetIsMaximized(index);
   if(isMaximized && !this.MaximizationExecuting()) {
    var restoredWindowData = this.GetRestoredWindowData(index);
    left = restoredWindowData.left;
    top = restoredWindowData.top;
   } else {
    left = this.GetCurrentLeft(index);
    top = this.GetCurrentTop(index);
   }
   var isPinned = this.GetIsPinned(index);
   if(isPinned) {
    left -= ASPx.GetDocumentScrollLeft();
    top -= ASPx.GetDocumentScrollTop();
   }
   left = Math.ceil(left);
   top = Math.ceil(top);
   var pinFlag = isPinned ? "1" : "0";
   var minFlag = this.GetIsCollapsed(index) ? "1" : "0";
   var maxFlag = isMaximized || this.GetIsMaximizedInit(index) ? "1" : "0";
   return [visibleFlag, isDraggedFlag, zIndex, left, top, isResizedFlag, width, height, contentWasLoaded, pinFlag, minFlag, maxFlag].join(":");
  }
  return "";
 },
 UpdateWindowsStateCookie: function() {
  if(this.cookieName == "") return;
  ASPx.Cookie.DelCookie(this.cookieName);
  ASPx.Cookie.SetCookie(this.cookieName, this.GetWindowsState());
 },
 UpdateStateObject: function(){
  this.UpdateStateObjectWithObject({ windowsState: this.GetWindowsState() });
 },
 GetStateHiddenFieldOrigin: function() {
  return this.GetWindowElement(this.GetWindowCountCore() - 1);
 },
 OnIFrameLoad: function(index) {
  this.SetIframeLoading(index, false);
 },
 OnPWHBClickCore: function(evt, index, method) {
  if(ASPx.TouchUIHelper.handleFastTapIfRequired(evt,
   function() { this[method](index); }.aspxBind(this), true)) {
   return;
  }
  if((ASPx.Browser.IE && ASPx.Browser.Version < 9) || ASPx.Browser.Opera)
   ASPx.Evt.EmulateDocumentOnMouseDown(evt);
  this[method](index);
 },
 CreateWindows: function(windowsNames) {
  for(var i = 0; i < windowsNames.length; i++) {
   var window = new ASPxClientPopupWindow(this, i, windowsNames[i]);
   this.windows.push(window);
  }
 },
 RaiseCloseButtonClick: function(index) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.CloseButtonClick.IsEmpty()) {
   var args = new ASPxClientPopupWindowEventArgs(window);
   this.CloseButtonClick.FireEvent(this, args);
  }
 },
 RaiseClosing: function(index, closeReason) {
  var window = index < 0 ? null : this.GetWindow(index);
  var cancel = false;
  if(!this.Closing.IsEmpty()) {
   var args = new ASPxClientPopupWindowCancelEventArgs(window, closeReason);
   this.Closing.FireEvent(this, args);
   cancel = args.cancel;
  }
  return cancel;
 },
 RaiseCloseUp: function(index, closeReason) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.CloseUp.IsEmpty()) {
   var args = new ASPxClientPopupWindowCloseUpEventArgs(window, closeReason);
   this.CloseUp.FireEvent(this, args);
  }
 },
 RaisePopUp: function(index) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.PopUp.IsEmpty()) {
   var args = new ASPxClientPopupWindowEventArgs(window);
   this.PopUp.FireEvent(this, args);
  }
 },
 RaiseResize: function(index, resizeState) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.Resize.IsEmpty()) {
   if(!resizeState)
    resizeState = ASPxClientPopupControlResizeState.Resized;
   var args = new ASPxClientPopupWindowResizeEventArgs(window, resizeState);
   this.Resize.FireEvent(this, args);
  }
 },
 RaiseBeforeResizing: function(index) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.BeforeResizing.IsEmpty()) {
   var args = new ASPxClientPopupWindowEventArgs(window);
   this.BeforeResizing.FireEvent(this, args);
  }
 },
 RaiseAfterResizing: function(index) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.AfterResizing.IsEmpty()) {
   var args = new ASPxClientPopupWindowEventArgs(window);
   this.AfterResizing.FireEvent(this, args);
  }
 },
 RaiseShown: function(index) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.Shown.IsEmpty()) {
   var args = new ASPxClientPopupWindowEventArgs(window);
   this.Shown.FireEvent(this, args);
  }
 },
 RaisePinnedChanged: function(index, pinned) {
  var window = index < 0 ? null : this.GetWindow(index);
  if(!this.PinnedChanged.IsEmpty()) {
   var args = new ASPxClientPopupWindowPinnedChangedEventArgs(window, pinned);
   this.PinnedChanged.FireEvent(this, args);
  }
 },
 RaiseCollapsed: function(index) {
  this.RaiseResize(index, ASPxClientPopupControlResizeState.Collapsed);
 },
 RaiseExpanded: function(index) {
  this.RaiseResize(index, ASPxClientPopupControlResizeState.Expanded);
 },
 RaiseMaximized: function(index) {
  this.RaiseResize(index, ASPxClientPopupControlResizeState.Maximized);
 },
 RaiseRestoredAfterMaximized: function(index) {
  this.RaiseResize(index, ASPxClientPopupControlResizeState.RestoredAfterMaximized);
 },
 AdjustSize: function() {
  if(this.enableContentScrolling)
   return;
  this.SetSize(0, 0);
 },
 GetHeight: function() {
  return this.GetWindowHeight(null);
 },
 GetWidth: function() {
  return this.GetWindowWidth(null);
 },
 GetContentWidth: function() {
  return this.GetWindowContentWidth(null);
 },
 GetContentHeight: function() {
  return this.GetWindowContentHeight(null);
 },
 SetSize: function(width, height) {
  this.SetWindowSize(null, width, height);
 },
 SetWidth: function(width) {
  var height = this.GetHeight();
  this.SetSize(width, height);
 },
 SetHeight: function(height) {
  var width = this.GetWidth();
  this.SetSize(width, height);
 },
 GetWindowDimensionByIndex: function(index, isWidth, forceFromCache) {
  var cachedSize = this.GetWindowCachedSize(index);
  var dimensionValue = null;
  if(forceFromCache == undefined && !this.GetWindowElement(index))
   forceFromCache = true;
  if(cachedSize && forceFromCache)
   dimensionValue = isWidth ? cachedSize.width : cachedSize.height;
  if(dimensionValue)
   return dimensionValue;
  else {
   var element = this.GetWindowElement(index);
   var sizeFromDOM = 0;
   if(this.GetIsCollapsed(index)) {
    var headerCell = this.GetWindowHeaderElement(index);
    sizeFromDOM = isWidth ? headerCell.offsetWidth : headerCell.offsetHeight;
   }
   else {
    var mainCell = this.GetWindowMainCell(element);
    sizeFromDOM = isWidth ? mainCell.offsetWidth : mainCell.offsetHeight;
   }
   if(sizeFromDOM === 0 && cachedSize)
    sizeFromDOM = isWidth ? cachedSize.width : cachedSize.height;
   return sizeFromDOM;
  }
 },
 GetWindowDimension: function(window, isWidth, forceFromCache) {
  var index = (window != null) ? window.index : -1;
  return this.GetWindowDimensionByIndex(index, isWidth, forceFromCache);
 },
 GetWindowContentDimension: function(window, isWidth) {
  var index = (window != null) ? window.index : -1,
   dimension = 0,
   contentElem = this.GetWindowContentElement(index),
   dimensionHolder = contentElem.parentNode,
   paddingsHolder = contentElem;
  return isWidth ?
  (dimensionHolder.offsetWidth - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(paddingsHolder)) :
  (dimensionHolder.offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(paddingsHolder));
 },
 GetWindowContentWidth: function(window) {
  return this.GetWindowContentDimension(window, true);
 },
 GetWindowContentHeight: function(window) {
  return this.GetWindowContentDimension(window, false);
 },
 GetWindowHeight: function(window) {
  return this.GetWindowDimension(window, false);
 },
 GetWindowWidth: function(window) {
  return this.GetWindowDimension(window, true);
 },
 SetWindowSize: function(window, width, height) {
  var index = (window != null) ? window.index : -1;
  this.SetWindowSizeByIndex(index, width, height);
 },
 GetContentHTML: function() {
  return this.GetContentHtml();
 },
 SetContentHTML: function(html) {
  this.SetContentHtml(html);
 },
 GetContentHtml: function() {
  return this.GetWindowContentHtml(null);
 },
 SetContentHtml: function(html, useAnimation) {
  this.SetWindowContentHtml(null, html, useAnimation);
 },
 GetContentIFrame: function(window) {
  return this.GetWindowContentIFrame(null);
 },
 GetContentUrl: function() {
  return this.GetWindowContentUrl(null);
 },
 SetContentUrl: function(url) {
  this.SetWindowContentUrl(null, url);
 },
 RefreshContentUrl: function() {
  this.RefreshWindowContentUrl(null);
 },
 SetWindowPopupElementID: function(window, popupElementId) {
  var index = (window != null) ? window.index : -1;
  this.RemoveWindowAllPopupElements(index);
  this.SetPopupElementIDs(index, popupElementId.split(';'));
  if(aspxGetPopupControlCollection().IsDisappearTimerActive()) {
   aspxGetPopupControlCollection().ClearDisappearTimer();
   this.Hide(index);
  }
  this.PopulatePopupElements(index);
 },
 SetPopupElementID: function(popupElementId) {
  this.SetWindowPopupElementID(null, popupElementId);
 },
 GetCurrentPopupElementIndex: function() {
  return this.GetWindowCurrentPopupElementIndex(null);
 },
 GetWindowCurrentPopupElementIndex: function(window) {
  var popupElement = this.GetWindowCurrentPopupElement(window);
  return popupElement ? popupElement.DXPopupElementIndex : -1;
 },
 GetCurrentPopupElement: function() {
  return this.GetWindowCurrentPopupElement(null);
 },
 GetWindowCurrentPopupElement: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.GetWindowCurrentPopupElementByIndex(index);
 },
 GetWindowCurrentPopupElementByIndex: function(index) {
  var popupElement = this.GetPopupElement(index, this.GetLastShownPopupElementIndex(index));
  if(popupElement && popupElement.DXPopupElementControl)
   return popupElement;
  return null;
 },
 Show: function(popupElementIndex) {
  this.ShowWindow(null, popupElementIndex);
 },
 ShowAtElement: function(htmlElement) {
  this.ShowWindowAtElement(null, htmlElement);
 },
 ShowAtElementByID: function(id) {
  var htmlElement = document.getElementById(id);
  this.ShowWindowAtElement(null, htmlElement);
 },
 ShowAtPos: function(x, y) {
  this.ShowWindowAtPos(null, Math.round(x), Math.round(y));
 },
 BringToFront: function() {
  this.BringWindowToFront(null);
 },
 Hide: function() {
  this.HideWindow(null);
 },
 IsWindowVisible: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.InternalIsWindowVisible(index);
 },
 IsVisible: function() {
  return this.InternalIsWindowVisible(-1);
 },
 GetWindow: function(index) {
  return (0 <= index && index < this.windows.length) ? this.windows[index] : null;
 },
 GetWindowByName: function(name) {
  for(var i = 0; i < this.windows.length; i++)
   if(this.windows[i].name == name) return this.windows[i];
  return null;
 },
 GetWindowCount: function() {
  return this.GetWindowCountCore();
 },
 ShowWindow: function(window, popupElementIndex) {
  var index = (window != null) ? window.index : -1;
  if(popupElementIndex === undefined)
   popupElementIndex = this.GetLastShownPopupElementIndex(index);
  this.DoShowWindowAtPos(index, ASPx.InvalidPosition, ASPx.InvalidPosition, popupElementIndex, false, true);
 },
 ShowWindowAtElement: function(window, htmlElement) {
  var index = (window != null) ? window.index : -1;
  var lastIndexBackup = this.GetLastShownPopupElementIndex(index);
  this.ShowWindow(window, this.AddPopupElementInternal(index, htmlElement));
  this.RemovePopupElementInternal(index, htmlElement);
  this.SetLastShownPopupElementIndex(index, lastIndexBackup);
 },
 ShowWindowAtElementByID: function(window, id) {
  var htmlElement = document.getElementById(id);
  this.ShowWindowAtElement(window, htmlElement);
 },
 ShowWindowAtPos: function(window, x, y) {
  var index = (window != null) ? window.index : -1;
  this.DoShowWindowAtPos(index, x, y, -1, false, true);
 },
 BringWindowToFront: function(window) {
  var index = (window != null) ? window.index : -1;
  var element = this.GetWindowElement(index);
  aspxGetPopupControlCollection().ActivateWindowElement(element);
 },
 HideWindow: function(window) {
  var index = (window != null) ? window.index : -1;
  this.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.API);
 },
 GetWindowContentHTML: function(window) {
  return this.GetWindowContentHtml(window);
 },
 SetWindowContentHTML: function(window, html) {
  this.SetWindowContentHtml(window, html);
 },
 GetWindowContentHtml: function(window) {
  var index = (window != null) ? window.index : -1;
  var element = this.GetContentContainer(index);
  return (element != null) ? element.innerHTML : "";
 },
 SetWindowContentHtml: function(window, html, useAnimation) {
  var index = (window != null) ? window.index : -1;
  this.SetWindowContentHtmlCore(index, html, useAnimation);
 },
 SetWindowContentHtmlCore: function(index, html, useAnimation) {
  var element = this.GetContentContainer(index);
  if(element != null) {
   ASPx.SetInnerHtml(element, html);
   this.RecalculateWindowSize(index);
   if(useAnimation && typeof (ASPx.AnimationHelper) != "undefined")
    ASPx.AnimationHelper.fadeIn(element, function() { this.ResizeWindowIFrame(index); }.aspxBind(this));
   else
    this.ResizeWindowIFrame(index);
   this.UpdateScrollbar(index);
  }
 },
 RecalculateWindowSize: function(index) {
  var window = this.GetWindowElement(index);
  var displayAfterSetSize = window.style.display;
  this.SetClientWindowSizeCoreLite(index, this.GetWindowWidthInternal(index), this.GetWindowHeightInternal(index), this.GetIsCollapsed(index));
  window.style.display = displayAfterSetSize;
  if(this.HasAnyScrollBars(index))
   this.NormalizeWindowSize(index, this.GetIsMaximized(index));
 },
 GetWindowContentIFrame: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.GetWindowContentIFrameElement(index);
 },
 GetWindowContentUrl: function(window) {
  var index = (window != null) ? window.index : -1;
  if(!this.IsWindowVisible(window))
   return this.GetWindowContentIFrameUrl(index);
  var element = this.GetWindowContentIFrameElement(index);
  return (element != null) ? element.src : "";
 },
 SetWindowContentUrl: function(window, url) {
  var index = (window != null) ? window.index : -1;
  this.SetWindowContentUrlInternal(index, url);
 },
 SetWindowContentUrlInternal: function(index, url) {
  var element = this.GetWindowContentIFrameElement(index);
  var windowVisible = this.InternalIsWindowVisible(index);
  if(windowVisible && element != null)
   this.ShowIframeElementAfterDragging(index);
  this.SetWindowContentIFrameUrl(index, url);
  var src = !windowVisible ? ASPx.SSLSecureBlankUrl : url;
  if(element == null) {
   this.CreateWindowContentIFrameElement(index, src);
   if(ASPx.IsElementVisible(this.GetWindowElement(index))) {
    var windowWidth = this.GetWindowDimensionByIndex(index, true, false);
    var windowHeight = this.GetWindowDimensionByIndex(index, false, false);
    this.SetClientWindowSizeCoreLite(index, windowWidth, windowHeight);
   }
  }
  else
   this.SetSrcToIframeElement(index, element, src);
 },
 GetPinned: function() {
  return this.GetIsPinned(-1);
 },
 SetPinned: function(value) {
  this.SetPinCore(-1, value);
 },
 GetWindowPinned: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.GetIsPinned(index);
 },
 SetWindowPinned: function(window, value) {
  var index = (window != null) ? window.index : -1;
  this.SetPinCore(index, value);
 },
 GetMaximized: function() {
  return this.GetIsMaximized(-1);
 },
 SetMaximized: function(value) {
  this.SetMaximizedCore(-1, value);
 },
 GetWindowMaximized: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.GetIsMaximized(index);
 },
 SetWindowMaximized: function(window, value) {
  var index = (window != null) ? window.index : -1;
  this.SetMaximizedCore(index, value);
 },
 GetCollapsed: function() {
  return this.GetIsCollapsed(-1);
 },
 SetCollapsed: function(value) {
  this.SetCollapsedCore(-1, value);
 },
 GetWindowCollapsed: function(window) {
  var index = (window != null) ? window.index : -1;
  return this.GetIsCollapsed(index);
 },
 SetWindowCollapsed: function(window, value) {
  var index = (window != null) ? window.index : -1;
  this.SetCollapsedCore(index, value);
 },
 RefreshWindowContentUrl: function(window) {
  var index = (window != null) ? window.index : -1;
  if(ASPx.Browser.IE)
   this.RefreshWindowContentUrlIE(index, window);
  else
   this.RefreshWindowContentUrlCommon(window);
 },
 RefreshWindowContentUrlIE: function(index, window) {
  var windowVisible = this.InternalIsWindowVisible(index);
  if(windowVisible)
   this.RefreshWindowContentUrlIECore(index, window);
  else {
   var iframe = this.GetWindowContentIFrameElement(index);
   if(iframe)
    iframe.DXReloadAfterShowRequired = true;
  }
 },
 RefreshWindowContentUrlIECore: function(index, window) {
  try {
   if(!this.GetIframeLoading(index)) {
    var iframe = this.GetWindowContentIFrameElement(index);
    if(iframe)
     iframe.contentWindow.location.reload();
   }
  } catch (e) {
   this.RefreshWindowContentUrlCommon(window);
  }
 },
 RefreshWindowContentUrlCommon: function(window) {
  this.SetWindowContentUrl(window, this.GetWindowContentUrl(window));
 },
 SetWindowContentVisible: function(index, visible) {
  var contentElement = this.GetWindowContentWrapperElement(index);
  if(contentElement)
   this.SetWindowPartVisibleCore(contentElement, "DXPopupWindowContentDisplay", visible);
 },
 SetWindowFooterVisible: function(index, visible) {
  var footerElement = this.GetWindowFooterElement(index);
  if(footerElement)
   this.SetWindowPartVisibleCore(footerElement, "DXPopupWindowFooterDisplay", visible);
 },
 SetWindowPartVisibleCore: function(partElement, displayCacheName, visible) {
  var nothingChanged = ASPx.IsElementVisible(partElement) && visible;
  if(nothingChanged) return;
  if(!(ASPx.IsExists(partElement[displayCacheName])))
   partElement[displayCacheName] = partElement.style.display;
  partElement.style.display = visible ? partElement[displayCacheName] : 'none';
 },
 UpdatePosition: function() {
  this.UpdatePositionAtElement(this.GetPopupElement(-1, this.GetLastShownPopupElementIndex(-1)));
 },
 UpdatePositionAtElement: function(popupElement) {
  this.UpdateWindowPositionAtElement(null, popupElement);
 },
 UpdateWindowPosition: function(window) {
  var index = (window != null) ? window.index : -1;
  this.UpdateWindowPositionAtElement(window, this.GetPopupElement(index, this.GetLastShownPopupElementIndex(index)));
 },
 UpdateWindowPositionAtElement: function(window, popupElement) {
  var index = (window != null) ? window.index : -1;
  this.UpdateWindowPositionInternal(index, popupElement);
 },
 UpdateWindowPositionInternal: function(index, popupElement) {
  var element = this.GetWindowElement(index);
  if(this.InternalIsWindowVisible(index) && element != null) {
   var horizontalPopupPosition = this.GetClientPopupPos(element, popupElement, ASPx.InvalidPosition, true, false);
   var verticalPopupPosition = this.GetClientPopupPos(element, popupElement, ASPx.InvalidPosition, false, false);
   this.SetWindowPos(index, element, horizontalPopupPosition.position, verticalPopupPosition.position);
  } else
   this.DoShowWindowAtPos(index, ASPx.InvalidDimension, ASPx.InvalidDimension, this.GetLastShownPopupElementIndex(index), false, false);
 },
 TryAutoUpdatePosition: function(index) {
  if(this.GetAutoUpdatePosition(index))
   this.UpdateWindowPositionInternal(index, this.GetPopupElement(index, this.GetLastShownPopupElementIndex(index)));
  if(this.GetIsMaximized(index))
   this.UpdateMaximizedWindowSizeOnResize(index);
 },
 CreateWindowContentIFrameElement: function(index, src) {
  var content = this.GetContentContainer(index);
  var iframeParent = content;
  content.innerHTML = "";
  content.style.display = "block";
  var iframe = this.CreateContentIFrameElement(index, src);
  this.RequireIFrameHeightAdjusting(index, iframe);
  iframeParent.appendChild(iframe);
  this.InitIFrame(index);
  return iframe;
 },
 RequireIFrameHeightAdjusting: function(index, iframe) {
  if(this.InternalIsWindowVisible(index))
   this.AdjustIFrameHeight(index, iframe);
  else
   this.PostponeIframeAdjusting(index);
 },
 EnsureIFrameHeightAdjusted: function(index) {
  if(this.GetIframeAdjustingPostponed(index)) {
   var iframe = this.GetWindowContentIFrameElement(index);
   this.AdjustIFrameHeight(index, iframe);
  }
 },
 PostponeIframeAdjusting: function(index) {
  this.SetIframeAdjustingPostponed(index, true);
 },
 SetIframeAdjustingPostponed: function(index, value) {
  if(0 <= index && index < this.iframeAdjustingPostponedArray.length)
   this.iframeAdjustingPostponedArray[index] = value;
  else
   this.iframeAdjustingPostponed = value;
 },
 GetIframeAdjustingPostponed: function(index) {
  if(0 <= index && index < this.iframeAdjustingPostponedArray.length)
   return this.iframeAdjustingPostponedArray[index];
  return this.iframeAdjustingPostponed;
 },
 AdjustIFrameHeight: function(index, iframe) {
  if(!this.InternalIsWindowVisible(index) || !iframe) return;
  this.SetIframeAdjustingPostponed(index, false);
  var content = this.GetContentContainer(index);
  var contentWrapper = this.GetWindowContentWrapperElement(index);
  iframe.style.verticalAlign = "text-bottom";
  var iframeHeight = contentWrapper.offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(content);
  if(iframeHeight >= 0)
   iframe.style.height = iframeHeight + "px";
 },
 CreateContentIFrameElement: function(index, src) {
  var iframe = document.createElement("IFRAME");
  iframe.id = this.GetWindowContentIFrameElementId(index);
  iframe.scrolling = "auto";
  iframe.frameBorder = 0;
  iframe.style.width = "100%";
  iframe.style.height = "100%";
  iframe.style.overflow = "auto";
  if(ASPx.Browser.Chrome) iframe.style.webkitBackfaceVisibility = "hidden";
  this.SetSrcToIframeElement(index, iframe, src);
  return iframe;
 },
 GetWindowHeaderTextCell: function(index) {
  return this.GetWindowChild(index, "_PWH" + index + "T");
 },
 GetWindowHeaderImageCell: function(index) {
  return this.GetWindowChild(index, "_PWH" + index + "I");
 },
 GetWindowFooterTextCell: function(index) {
  return this.GetWindowChild(index, "_PWF" + index + "T");
 },
 GetWindowFooterImageCell: function(index) {
  return this.GetWindowChild(index, "_PWF" + index + "I");
 },
 GetWindowHeaderImageUrl: function(index) {
  var element = this.GetWindowHeaderImageCell(index);
  return element ? element.src : "";
 },
 SetWindowHeaderImageUrl: function(index, url) {
  var element = this.GetWindowHeaderImageCell(index);
  if(element != null) {
   element.onload = function() { this.CorrectHeaderContentElementHeight(index); }.aspxBind(this);
   element.src = url;
  }
 },
 GetWindowFooterImageUrl: function(index) {
  var element = this.GetWindowFooterImageCell(index);
  return element ? element.src : "";
 },
 SetWindowFooterImageUrl: function(index, url) {
  var element = this.GetWindowFooterImageCell(index);
  if(element != null) {
   element.src = url;
   this.CorrectWindowSizeGripPositionLite(index);
  }
 },
 GetWindowHeaderNavigateUrl: function(index) {
  var header = this.GetWindowHeaderElement(index);
  if(header) {
   var link = ASPx.GetNodeByClassName(header, PopupControlCssClasses.LinkCssClassName);
   if(link)
    return link.href || ASPx.Attr.GetAttribute(linkEl, "savedhref");
  }
  return "";
 },
 SetWindowHeaderNavigateUrl: function(index, url) {
  var header = this.GetWindowHeaderElement(index);
  if(header) {
   var link = ASPx.GetNodeByClassName(header, PopupControlCssClasses.LinkCssClassName);
   if(link) {
    if(ASPx.Attr.IsExistsAttribute(link, "savedhref"))
     ASPx.Attr.SetAttribute(link, "savedhref", url);
    else if(ASPx.Attr.IsExistsAttribute(link, "href"))
     link.href = url;
   }
  }
 },
 GetWindowFooterNavigateUrl: function(index) {
  var footer = this.GetWindowFooterElement(index);
  if(footer) {
   var link = ASPx.GetNodeByClassName(footer, PopupControlCssClasses.LinkCssClassName);
   if(link)
    return link.href || ASPx.Attr.GetAttribute(linkEl, "savedhref");
  }
  return "";
 },
 SetWindowFooterNavigateUrl: function(index, url) {
  var footer = this.GetWindowFooterElement(index);
  if(footer) {
   var link = ASPx.GetNodeByClassName(footer, PopupControlCssClasses.LinkCssClassName);
   if(link) {
    if(ASPx.Attr.IsExistsAttribute(link, "savedhref"))
     ASPx.Attr.SetAttribute(link, "savedhref", url);
    else if (ASPx.Attr.IsExistsAttribute(link, "href"))
     link.href = url;
   }
  }
  return;
 },
 GetWindowHeaderText: function(index) {
  var element = this.GetWindowHeaderTextCell(index);
  if(element != null) {
   var link = ASPx.GetNodeByTagName(element, "A", 0);
   if(link != null)
    return link.innerHTML;
   else
    return element.innerHTML;
  }
  return "";
 },
 SetWindowHeaderText: function(index, text) {
  var element = this.GetWindowHeaderTextCell(index);
  if(element != null) {
   var link = ASPx.GetNodeByTagName(element, "A", 0);
   if(link != null)
    link.innerHTML = text;
   else
    element.innerHTML = text;
   this.CorrectElementVerticalAlignment(ASPx.AdjustVerticalMarginsInContainer, this.GetWindowHeaderElement(index), true);
  }
 },
 GetWindowFooterText: function(index) {
  var element = this.GetWindowFooterTextCell(index);
  if(element != null) {
   var link = ASPx.GetNodeByTagName(element, "A", 0);
   if(link != null)
    return link.innerHTML;
   else
    return element.innerHTML;
  }
  return "";
 },
 SetWindowFooterText: function(index, text) {
  var element = this.GetWindowFooterTextCell(index);
  if(element != null) {
   var link = ASPx.GetNodeByTagName(element, "A", 0);
   if(link != null)
    link.innerHTML = text;
   else
    element.innerHTML = text;
   this.CorrectWindowSizeGripPositionLite(index);
  }
 },
 RefreshPopupElementConnection: function() {
  this.ClearPopupElementConnection();
  var index = this.HasDefaultWindow() ? -1 : 0;
  for(; index < this.GetWindowCount() ; index++)
   this.PopulatePopupElements(index);
 },
 ClearPopupElementConnection: function() {
  var index = this.HasDefaultWindow() ? -1 : 0;
  for(; index < this.GetWindowCount() ; index++)
   this.RemoveWindowAllPopupElements(index);
 },
 GetHeaderImageUrl: function() {
  return this.GetWindowHeaderImageUrl(-1);
 },
 SetHeaderImageUrl: function(value) {
  this.SetWindowHeaderImageUrl(-1, value);
 },
 GetFooterImageUrl: function() {
  return this.GetWindowFooterImageUrl(-1);
 },
 SetFooterImageUrl: function(value) {
  this.SetWindowFooterImageUrl(-1, value);
 },
 GetHeaderNavigateUrl: function() {
  return this.GetWindowHeaderNavigateUrl(-1);
 },
 SetHeaderNavigateUrl: function(value) {
  this.SetWindowHeaderNavigateUrl(-1, value);
 },
 GetFooterNavigateUrl: function() {
  return this.GetWindowFooterNavigateUrl(-1);
 },
 SetFooterNavigateUrl: function(value) {
  this.SetWindowFooterNavigateUrl(-1, value);
 },
 GetHeaderText: function() {
  return this.GetWindowHeaderText(-1);
 },
 SetHeaderText: function(value) {
  this.SetWindowHeaderText(-1, value);
 },
 GetFooterText: function() {
  return this.GetWindowFooterText(-1);
 },
 SetFooterText: function(value) {
  this.SetWindowFooterText(-1, value);
 },
 GetVisible: function() {
  return this.IsVisible();
 },
 SetVisible: function(visible) {
  if(visible && !this.IsVisible())
   this.Show();
  else if(!visible && this.IsVisible())
   this.Hide();
 }
});
ASPxClientPopupControl.Cast = ASPxClientControl.Cast;
ASPxClientPopupControl.GetPopupControlCollection = function() {
 return aspxGetPopupControlCollection();
}
var ASPxClientPopupWindow = ASPx.CreateClass(null, {
 constructor: function(popupControl, index, name) {
  this.popupControl = popupControl;
  this.index = index;
  this.name = name;
 },
 GetHeaderImageUrl: function() {
  return this.popupControl.GetWindowHeaderImageUrl(this.index);
 },
 SetHeaderImageUrl: function(value) {
  this.popupControl.SetWindowHeaderImageUrl(this.index, value);
 },
 GetFooterImageUrl: function() {
  return this.popupControl.GetWindowFooterImageUrl(this.index);
 },
 SetFooterImageUrl: function(value) {
  this.popupControl.SetWindowFooterImageUrl(this.index, value);
 },
 GetHeaderNavigateUrl: function() {
  return this.popupControl.GetWindowHeaderNavigateUrl(this.index);
 },
 SetHeaderNavigateUrl: function(value) {
  this.popupControl.SetWindowHeaderNavigateUrl(this.index, value);
 },
 GetFooterNavigateUrl: function() {
  return this.popupControl.GetWindowFooterNavigateUrl(this.index);
 },
 SetFooterNavigateUrl: function(value) {
  this.popupControl.SetWindowFooterNavigateUrl(this.index, value);
 },
 GetHeaderText: function() {
  return this.popupControl.GetWindowHeaderText(this.index);
 },
 SetHeaderText: function(value) {
  this.popupControl.SetWindowHeaderText(this.index, value);
 },
 GetFooterText: function() {
  return this.popupControl.GetWindowFooterText(this.index);
 },
 SetFooterText: function(value) {
  this.popupControl.SetWindowFooterText(this.index, value);
 }
});
var ASPxClientPopupWindowEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function(window) {
  this.constructor.prototype.constructor.call(this);
  this.window = window;
 }
});
var ASPxClientPopupWindowCancelEventArgs = ASPx.CreateClass(ASPxClientCancelEventArgs, {
 constructor: function(window, closeReason) {
  this.constructor.prototype.constructor.call(this);
  this.window = window;
  this.closeReason = closeReason;
 }
});
var ASPxClientPopupWindowCloseUpEventArgs = ASPx.CreateClass(ASPxClientPopupWindowEventArgs, {
 constructor: function(window, closeReason) {
  this.constructor.prototype.constructor.call(this, window);
  this.closeReason = closeReason;
 }
});
var ASPxClientPopupWindowResizeEventArgs = ASPx.CreateClass(ASPxClientPopupWindowEventArgs, {
 constructor: function(window, resizeState) {
  this.constructor.prototype.constructor.call(this, window);
  this.resizeState = resizeState;
 }
});
var ASPxClientPopupWindowPinnedChangedEventArgs = ASPx.CreateClass(ASPxClientPopupWindowEventArgs, {
 constructor: function(window, pinned) {
  this.constructor.prototype.constructor.call(this, window);
  this.pinned = pinned;
 }
});
var ASPxClientPopupControlCollection = ASPx.CreateClass(ASPxClientControlCollection, {
 constructor: function() {
  this.constructor.prototype.constructor.call(this);
  this.draggingControl = null;
  this.draggingWindowIndex = -1;
  this.gragXOffset = 0;
  this.gragYOffset = 0;
  this.visibleModalElements = [];
  this.visiblePopupWindowIds = [];
  this.zIndex = popupControlZIndex;
  this.windowResizeByBodyScrollVisibilityChangingLockCount = 0;
  this.savedBodyWidth = 0;
  this.savedBodyHeight = 0;
  this.overControl = null;
  this.overWindowIndex = -1;
  this.overXPos = ASPx.InvalidPosition;
  this.overYPos = ASPx.InvalidPosition;
  this.appearTimerID = -1;
  this.disappearTimerID = -1;
  this.scrollEventLockCount = 0;
  this.currentActiveWindowElement = null;
  this.resizeControl = null;
  this.resizeIndex = -2;
  this.resizeCursor = "";
  this.resizePanel = null;
  this.selectBanned = false;
  this.pcWindowsAreRestrictedByDocumentWindow = true;
  this.searchForTabIndexInAllElements = false;
  this.docScrollLeft = -1;
  this.docScrollTop = -1;
  this.EnsureSaveScrollState();
 },
 GetCollectionType: function(){
  return "Popup";
 },
 Remove: function(popupControl) {
  for(var i = this.visibleModalElements.length - 1; i >= 0; i--) {
   var modalElement = this.visibleModalElements[i];
   if(modalElement && modalElement.DXModalPopupControl === popupControl)
    this.UnregisterVisibleModalElement(modalElement);
  }
  for(var i = this.visiblePopupWindowIds.length - 1; i >= 0; i--) {
   var id = this.visiblePopupWindowIds[i];
   if(!ASPx.IsExists(id)) continue;
   var popupWindow = this.GetPopupWindowFromID(id);
   if(popupWindow.popupControl === popupControl) {
    var windowElement = popupControl.GetWindowElement(popupWindow.windowIndex);
    if(windowElement)
     this.UnregisterVisibleWindow(windowElement);
    else
     ASPx.Data.ArrayRemove(this.visiblePopupWindowIds, id);
   }
  }
  ASPxClientControlCollection.prototype.Remove.call(this, popupControl);
 },
 EnsureSaveScrollState: function() {
  if(ASPx.documentLoaded && this.docScrollLeft < 0 && this.docScrollTop < 0)
   this.SaveScrollState();
 },
 GetPopupWindowFromID: function(id) {
  var pos = id.lastIndexOf(ASPx.PCWIdSuffix);
  var name = id.substring(0, pos);
  var index = id.substr(pos + ASPx.PCWIdSuffix.length);
  var popupControl = aspxGetPopupControlCollection().Get(name);
  return new _aspxPopupWindow(popupControl, index);
 },
 DoHideAllWindows: function(srcElement, excptId, applyToAll, closeReason) {
  for(var i = this.visiblePopupWindowIds.length - 1; i >= 0; i--) {
   var id = this.visiblePopupWindowIds[i];
   if(id == excptId) continue;
   if(srcElement != null && ASPx.GetParentById(srcElement, id) != null) continue;
   var popupWindow = this.GetPopupWindowFromID(id);
   var windowCloseAction = popupWindow.popupControl.GetWindowCloseAction(popupWindow.windowIndex);
   if(popupWindow.popupControl != null) {
    var popupWindowZIndexArray = ASPx.PopupUtils.GetElementZIndexArray(popupWindow.popupControl.GetWindowElement(popupWindow.windowIndex));
    var isPopupHigherSrcElement = ASPx.PopupUtils.IsHigher(popupWindowZIndexArray, ASPx.PopupUtils.GetElementZIndexArray(srcElement)) || !popupWindow.popupControl.HasDefaultWindow();
   }
   if(popupWindow.popupControl != null && (
    (windowCloseAction != "CloseButton" && windowCloseAction != "None") && isPopupHigherSrcElement || applyToAll)) {
    popupWindow.popupControl.DoHideWindow(parseInt(popupWindow.windowIndex), false, closeReason);
   }
  }
 },
 DoShowAtCurrentPos: function(name, index, popupElementIndex, evtClone) {
  var pc = this.Get(name);
  if(pc != null && !pc.InternalIsWindowVisible(index))
   pc.DoShowWindowAtPos(index, this.overXPos, this.overYPos, popupElementIndex, true, true, evtClone, ASPxClientPopupControlCloseReason.MouseOut);
 },
 WindowZIndexWasInitialized: function(zIndex) {
  return popupControlZIndex <= zIndex;
 },
 ActivateWindowElement: function(element, evt) {
  var maxZIndex = this.GetMaxZIndex(),
   topZIndex = this.WindowZIndexWasInitialized(maxZIndex) ? parseInt(maxZIndex) : popupControlZIndex;
  if(this.WindowZIndexWasInitialized(element.style.zIndex) && element.style.zIndex != topZIndex) {
   this.DeleteWindowFromZIndexOrder(element);
  }
  if(!this.WindowZIndexWasInitialized(element.style.zIndex))
   topZIndex += 2;
  this.SetWindowElementZIndex(element, topZIndex);
  var pcWElementEventSource = ASPx.PopupUtils.FindEventSourceParentByTestFunc(evt, aspxTestPopupWindowElement);
  if(!evt || (evt && pcWElementEventSource == element)) { 
   if(this.GetCurrentActiveWindowElement() != element) {
    this.RefreshTabIndexes(false);
    this.SaveCurrentActiveWindowElement(element);
   }
  }
 },
 RefreshTabIndexes: function(forceRecalculate) {
  var topModalWindow = this.GetTopModalWindow();
  if(topModalWindow != null || forceRecalculate) {
   var topModalWindowZIndexArray = ASPx.PopupUtils.GetElementZIndexArray(topModalWindow);
   this.CalculateTabIndexes(topModalWindowZIndexArray);
  }
 },
 ElementHasTabIndex: function(element) {
  return ASPx.IsExists(ASPx.Attr.GetAttribute(element, "tabindex"));
 },
 IsElementCanBeActive: function(element) {
  return element.tagName === "INPUT" || element.tagName === "A" ||
   element.tagName === "BUTTON" || element.tagName === "TEXTAREA" ||
   element.tagName === "SELECT" || this.ElementHasTabIndex(element);
 },
 GetCanBeActiveElements: function() {
  var searchForTabIndexInAllElements = aspxGetPopupControlCollection().searchForTabIndexInAllElements;
  if(searchForTabIndexInAllElements) {
   var elements = document.getElementsByTagName("*");
   var canBeActiveElements = [];
   for(var i = 0; i < elements.length; i++) {
    if(this.IsElementCanBeActive(elements[i], searchForTabIndexInAllElements))
     canBeActiveElements.push(elements[i]);
   }
   return canBeActiveElements;
  } else {
   var inputs = document.getElementsByTagName("INPUT");
   var links = document.getElementsByTagName("A");
   var lists = document.getElementsByTagName("UL");
   var buttons = document.getElementsByTagName("BUTTON");
   var textareas = document.getElementsByTagName("TEXTAREA");
   var selects = document.getElementsByTagName("SELECT");
   var iframes = document.getElementsByTagName("IFRAME");
   var editableDivs = this.GetEditableDivs();
   var union = ASPx.Data.CollectionsUnionToArray(inputs, links);
   union = ASPx.Data.CollectionsUnionToArray(union, buttons);
   union = ASPx.Data.CollectionsUnionToArray(union, textareas);
   union = ASPx.Data.CollectionsUnionToArray(union, selects);
   union = ASPx.Data.CollectionsUnionToArray(union, iframes);
   union = ASPx.Data.CollectionsUnionToArray(union, editableDivs);
   return ASPx.Data.CollectionsUnionToArray(union, lists);
  }
 },
 GetEditableDivs: function(){
  if(document.querySelectorAll)
   return document.querySelectorAll("div[contenteditable=true]");
  var editableDivs = [ ];
  var allDivs = document.getElementsByTagName("DIV");
  for(var i = 0; i < allDivs.length; i++){
   var div = allDivs[i];
   (div.getAttribute("contenteditable") == 'true') && editableDivs.push(div);
  }
  return editableDivs;
 },
 CalculateTabIndexes: function(topModalWindowZIndexArray) {
  var elements = this.GetCanBeActiveElements();
  for(var i = 0; i < elements.length; i++) {
   var currentElementZIndexArray = ASPx.PopupUtils.GetElementZIndexArray(elements[i]);
   if(ASPx.PopupUtils.IsHigher(currentElementZIndexArray, topModalWindowZIndexArray))
    ASPx.Attr.RestoreTabIndexAttribute(elements[i]);
   else
    ASPx.Attr.ChangeTabIndexAttribute(elements[i]);
  }
 },
 PopupWindowIsModalByVisibleIndex: function(visiblePopupWindowIndex) {
  return this.PopupWindowIsModalByID(this.visiblePopupWindowIds[visiblePopupWindowIndex]);
 },
 PopupWindowIsModalByID: function(windowElementID) {
  var popupWindow = this.GetPopupWindowFromID(windowElementID);
  return popupWindow.popupControl.WindowIsModal(popupWindow.windowIndex);
 },
 SaveCurrentActiveWindowElement: function(windowElement) {
  this.currentActiveWindowElement = windowElement;
 },
 SkipCurrentActiveWindowElement: function(element) {
  if(element == this.GetCurrentActiveWindowElement())
   this.SaveCurrentActiveWindowElement(null);
 },
 GetCurrentActiveWindowElement: function() {
  return this.currentActiveWindowElement;
 },
 GetMaxZIndex: function () {
  var maxZIndex = defaultZIndexFromServer;
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var currentWindow = ASPx.GetElementById(this.visiblePopupWindowIds[i]);
   if(!!currentWindow && ASPx.IsElementVisible(currentWindow) && currentWindow.style && currentWindow.style.zIndex > maxZIndex)
    maxZIndex = currentWindow.style.zIndex;
  }
  return maxZIndex;
 },
 GetTopModalWindow: function() {
  return this.GetTopWindow(true);
 },
 GetTopWindow: function(onlyModal) {
  var topWindow = null;
  var topWindowZIndexArray = null;
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var currentWindow = ASPx.GetElementById(this.visiblePopupWindowIds[i]);
   if(onlyModal && !this.PopupWindowIsModalByVisibleIndex(i))
    continue;
   if(ASPx.IsElementVisible(currentWindow)) {
    var currentWindowZIndexArray = ASPx.PopupUtils.GetElementZIndexArray(currentWindow);
    if(topWindow == null || ASPx.PopupUtils.IsHigher(currentWindowZIndexArray, topWindowZIndexArray)) {
     topWindow = currentWindow;
     topWindowZIndexArray = currentWindowZIndexArray;
    }
   }
  }
  return topWindow;
 },
 DeleteWindowFromZIndexOrder: function(element) {
  for(var i = this.visiblePopupWindowIds.length - 1; i >= 0; i--) {
   var windowElement = ASPx.GetElementById(this.visiblePopupWindowIds[i]);
   if(!windowElement)
    ASPx.Data.ArrayRemoveAt(this.visiblePopupWindowIds, i);
   else if(windowElement.style.zIndex > element.style.zIndex)
    this.SetWindowElementZIndex(windowElement, windowElement.style.zIndex - 2);
  }
 },
 SetWindowElementZIndex: function(element, zIndex) {
  element.style.zIndex = zIndex;
  var iFrame = element.overflowElement;
  if(iFrame)
   iFrame.style.zIndex = zIndex - 1;
  var modalElement = element.modalElement;
  if(modalElement)
   modalElement.style.zIndex = zIndex - 1;
  this.UpdateWindowsStateCookie(element.id);
 },
 AdjustModalElementsBounds: function() {
  for(var i = 0; i < this.visibleModalElements.length; i++)
   this.AdjustModalElementBounds(this.visibleModalElements[i]);
 },
 AdjustModalElementBounds: function(element) {
  if(!ASPx.IsExistsElement(element)) return;
  var x = ASPx.PrepareClientPosForElement(0, element, true);
  var y = ASPx.PrepareClientPosForElement(0, element, false);
  ASPx.SetStyles(element, { left: x, top: y });
  if(ASPx.Browser.NetscapeFamily && !ASPx.Browser.Firefox)
   ASPx.SetStyles(element, { width: 1, height: 1 });
  ASPx.SetStyles(element, { width: ASPx.GetDocumentWidth(), height: ASPx.GetDocumentHeight() });
 },
 ClearAppearTimer: function() {
  this.appearTimerID = ASPx.Timer.ClearTimer(this.appearTimerID);
 },
 ClearDisappearTimer: function() {
  this.disappearTimerID = ASPx.Timer.ClearTimer(this.disappearTimerID);
 },
 IsAppearTimerActive: function() {
  return this.appearTimerID > -1;
 },
 IsDisappearTimerActive: function() {
  return this.disappearTimerID > -1;
 },
 SetAppearTimer: function(name, index, popupElementIndex, timeout, evt) {
  var evtClone = ASPx.CloneObject(evt);
  this.appearTimerID = window.setTimeout(function() {
   aspxGetPopupControlCollection().DoShowAtCurrentPos(name, index, popupElementIndex, evtClone);
  }, timeout);
 },
 SetDisappearTimer: function(name, index, timeout) {
  this.disappearTimerID = window.setTimeout(function() {
   aspxGetPopupControlCollection().OnPWDisappearTimer(name, index);
  }, timeout);
 },
 GetDocScrollDifference: function() {
  return new _aspxScrollDifference(ASPx.GetDocumentScrollLeft() - this.docScrollLeft, ASPx.GetDocumentScrollTop() - this.docScrollTop);
 },
 IsDocScrolled: function(scroll) {
  return scroll.horizontal != 0 || scroll.vertical != 0;
 },
 SaveScrollState: function() {
  this.docScrollLeft = ASPx.GetDocumentScrollLeft();
  this.docScrollTop = ASPx.GetDocumentScrollTop();
 },
 InitDragObject: function(control, index, x, y, xClientCorrection, yClientCorrection) {
  this.draggingControl = control;
  this.draggingWindowIndex = index;
  this.gragXOffset = x;
  this.gragYOffset = y;
  this.xClientCorrection = xClientCorrection;
  this.yClientCorrection = yClientCorrection;
  this.SetDocumentSelectionBan(true);
 },
 InitOverObject: function(control, index, evt) {
  this.overControl = control;
  this.overWindowIndex = index;
  if(evt)
   this.SaveCurrentMouseOverPos(evt);
 },
 InitResizeObject: function(control, index, cursor, resizePanel) {
  this.resizeControl = control;
  this.resizeIndex = index;
  this.resizeCursor = cursor;
  this.resizePanel = resizePanel;
  this.SetDocumentSelectionBan(true);
 },
 SetDocumentSelectionBan: function(value) {
  if(this.selectBanned === value)
   return;
  this.selectBanned = value;
  if(ASPx.Browser.WebKitFamily) {
   if(value) {
    if(!this.webkitUserSelectBackup && document.body.style.webkitUserSelect)
     this.webkitUserSelectBackup = document.body.style.webkitUserSelect;
    document.body.style.webkitUserSelect = "none";
   } else {
    if(this.webkitUserSelectBackup) {
     document.body.style.webkitUserSelect = this.webkitUserSelectBackup;
     delete this.webkitUserSelectBackup;
    } else
     document.body.style.webkitUserSelect = "auto";
   }
  }
 },
 IsResizeInint: function() {
  return this.resizeControl != null;
 },
 ClearDragObject: function() {
  this.draggingControl = null;
  this.draggingWindowIndex = -1;
  this.gragXOffset = 0;
  this.gragYOffset = 0;
  this.SetDocumentSelectionBan(this.resizeControl != null);
 },
 ClearResizeObject: function() {
  this.resizeControl = null;
  this.resizeIndex = -2;
  this.resizeCursor = "";
  this.SetDocumentSelectionBan(this.draggingControl != null);
  this.resizePanel.parentNode.removeChild(this.resizePanel);
 },
 Drag: function(evt) {
  if(ASPx.tableColumnResizing || ASPx.currentDragHelper || !ASPx.Evt.IsLeftButtonPressed(evt)) return;
  var x = ASPx.Evt.GetEventX(evt);
  var y = ASPx.Evt.GetEventY(evt);
  if(this.pcWindowsAreRestrictedByDocumentWindow && ASPx.PopupUtils.CoordinatesInDocumentRect(x, y)) {
   x += this.gragXOffset;
   y += this.gragYOffset;
   this.draggingControl.OnDrag(this.draggingWindowIndex, x, y, this.xClientCorrection, this.yClientCorrection, evt);
   if(ASPx.Browser.WebKitTouchUI)
    evt.preventDefault();
  }
 },
 DragStop: function() {
  this.draggingControl.OnDragStop(this.draggingWindowIndex);
  this.ClearDragObject();
 },
 ResizeStop: function(evt) {
  this.resizeControl.OnResizeStop(evt, this.resizeIndex, this.resizeCursor, this.resizePanel);
  aspxGetPopupControlCollection().ClearResizeObject();
 },
 setIframesMouseMoveEnabled: function(enabled) {
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var popupWindow = this.GetPopupWindowFromID(this.visiblePopupWindowIds[i]);
   var popupControl = popupWindow.popupControl;
   if(popupControl) {
    iframe = popupControl.GetWindowContentIFrameElement(popupWindow.windowIndex);
    if(iframe) {
     iframe.style.pointerEvents = enabled ? "" : "none";
     if(ASPx.Browser.IE && ASPx.Browser.MajorVersion < 11) {
      if(enabled)
       popupControl.RemoveFakeResizeDiv(iframe, popupWindow.windowIndex)
      else
       popupControl.CreateFakeResizeDiv(iframe, popupWindow.windowIndex);
     }
    }
   }
  }
 },
 OnPWMouseMove: function(evt, name, index) {
  if(this.draggingControl == null &&
   this.overControl == null &&
   this.resizeControl == null) {
   var pc = aspxGetPopupControlCollection().Get(name);
   if(pc != null) pc.OnMouseMove(evt, index);
  }
 },
 OnPWMouseOver: function(evt) {
  if(!this.overControl || this.draggingControl) return;
  if(this.IsOverPopupWindow(evt))
   this.ClearDisappearTimer();
 },
 IsOverPopupWindow: function(evt) {
  return ASPx.PopupUtils.FindEventSourceParentByTestFunc(evt, aspxTestPopupControlOverElement) != null;
 },
 OnDocumentKeyDown: function(evt) {
  var windowElement = this.GetTopWindow(false);
  if(windowElement) {
   var window = this.GetPopupWindowFromID(windowElement.id)
   if(window.popupControl);
    window.popupControl.OnDocumentKeyDown(evt, windowElement);
  }
 },
 OnDocumentMouseDown: function(evt) {
  var popupElement = ASPx.PopupUtils.FindEventSourceParentByTestFunc(evt, aspxTestPopupControlElement);
  var excptId = popupElement == null ? "" :
   popupElement.DXPopupElementControl.GetWindowElementId(popupElement.DXPopupWindowIndex);
  this.OnMouseDownCore(evt, excptId);
 },
 OnMouseDown: function(evt) {
  this.OnMouseDownCore(evt, "");
 },
 OnMouseDownCore: function(evt, excptId) {
  var srcElement = ASPx.Evt.GetEventSource(evt);
  this.DoHideAllWindows(srcElement, excptId, false, ASPxClientPopupControlCloseReason.OuterMouseClick);
  aspxGetPopupControlCollection().ClearAppearTimer();
 },
 OnMouseMove: function(evt) {
  if(ASPx.Browser.WebKitTouchUI && ASPx.TouchUIHelper.isGesture)
   return;
  if(this.draggingControl != null) {
   this.Drag(evt);
  }
  else if(this.overControl != null) {
   this.OnMouseOver(evt);
  }
  else if(this.resizeControl != null) {
   if(ASPx.Browser.IE && !ASPx.Evt.IsLeftButtonPressed(evt))
    this.ResizeStop(evt);
   else
    this.resizeControl.OnResize(evt, this.resizeIndex, this.resizeCursor, this.resizePanel);
  }
 },
 OnMouseOver: function(evt) {
  var element = ASPx.PopupUtils.FindEventSourceParentByTestFunc(evt, aspxTestPopupControlOverElement);
  var curPopupElement = this.overControl.GetWindowCurrentPopupElementByIndex(this.overWindowIndex);
  var popup = element != null ? element.DXPopupElementControl : null;
  var isPopupActionMouseOver = popup && popup.GetWindowPopupAction(this.overWindowIndex) == 'MouseOver';
  var isCurPopupElement = element !== null && element === curPopupElement;
  var isCurPopupWindow = element != null && element.id === this.overControl.GetWindowElementId(this.overWindowIndex);
  var isCurPopupElementOrCurPopupWindow = isCurPopupElement || isCurPopupWindow || isPopupActionMouseOver;
  if(isCurPopupElementOrCurPopupWindow) {
   var clearTimer = true;
   var popup = element.DXPopupElementControl;
   if(popup && popup.GetLastShownPopupElementIndex(element.DXPopupWindowIndex) != element.DXPopupElementIndex)
    clearTimer = false;
   if(clearTimer)
    this.ClearDisappearTimer();
   this.SaveCurrentMouseOverPos(evt);
   if(ASPx.Browser.TouchUI && !ASPx.TouchUIHelper.IsNativeScrolling())
    return;
   return ASPx.Evt.CancelBubble(evt);
  }
  this.OnMouseOut();
 },
 OnMouseOut: function(evt) {
  if(!this.overControl || this.draggingControl) return;
  this.ClearAppearTimer();
  var windowCloseAction = this.overControl.GetWindowCloseAction(this.overWindowIndex);
  if(windowCloseAction == "MouseOut" && this.overControl.InternalIsWindowVisible(this.overWindowIndex)) {
   if(!this.IsDisappearTimerActive() && this.IsDisappearAllowedByMouseOut(evt))
    this.SetDisappearTimer(this.overControl.name, this.overWindowIndex, this.overControl.disappearAfter);
  }
  else
   this.OverStop();
 },
 IsDisappearAllowedByMouseOut: function(evt) {
  return ASPx.Browser.Firefox ? !this.IsOverPopupWindow(evt) : true;  
 },
 OnMouseUp: function(evt) {
  if(this.draggingControl != null)
   this.DragStop();
  if(this.resizeControl != null)
   this.ResizeStop(evt);
 },
 OnResize: function(evt) {
  this.AutoUpdateElementsPosition();
  this.AdjustModalElementsBounds();
 },
 OnScroll: function(evt) {
  if(this.scrollEventLockCount > 0)
   return;
  var scroll = this.GetDocScrollDifference();
  if(this.IsDocScrolled(scroll)) { 
   this.CorrectPositionAtScroll(scroll);
   this.AdjustModalElementsBounds();
   this.SaveScrollState();
  }
  if(ASPx.Browser.IE && ASPx.Browser.Version <= 8) {
   this.CalculateDocumentDimensionsWithoutPinnedWindowsOldIE(function() {
    this.FireScrollEventToWindowsOldIE(evt);
   }.aspxBind(this), evt);
  }
  else {
   this.CalculateDocumentDimensionsWithoutPinnedWindows(evt);
   this.FireScrollEventToWindows(evt);
  }
 },
 GetSavedBodyWidth: function() {
  if(this.savedBodyWidth == 0)
   this.CalculateDocumentDimensionsWithoutPinnedWindows();
  return this.savedBodyWidth;
 },
 GetSavedBodyHeight: function() {
  if(this.savedBodyHeight == 0)
   this.CalculateDocumentDimensionsWithoutPinnedWindows();
  return this.savedBodyHeight;
 },
 HidePinnedPopupsThatOutFromViewPort: function() {
  var popupsToRestoreVisible = [];
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var popupWindow = this.GetPopupWindowFromID(this.visiblePopupWindowIds[i]);
   var popupControl = popupWindow.popupControl;
   if(!popupControl.needToHidePinnedOutFromViewPort(popupWindow.windowIndex))
    continue;
   var element = popupControl.GetWindowElement(popupWindow.windowIndex);
   if(!element) continue;
   var restoreData = {};
   restoreData.element = element;
   restoreData.display = element.style.display;
   element.style.display = "none";
   popupsToRestoreVisible.push(restoreData);
  }
  return popupsToRestoreVisible;
 },
 RestorePinnedPopupsThatOutFromViewPort: function(popupsToRestoreVisible) {
  if(popupsToRestoreVisible.length > 0) {
   for(var i = 0; i < popupsToRestoreVisible.length; i++) {
    var restoreData = popupsToRestoreVisible[i];
    restoreData.element.style.display = restoreData.display;
   }
  }
 },
 CalculateDocumentDimensionsWithoutPinnedWindows: function(evt) { 
  var popupsToRestoreVisible = [];
  var needToHideRestorePopupsThatOutFromViewPort = !!evt && ASPx.Evt.GetEventSource(evt) == document;
  if(needToHideRestorePopupsThatOutFromViewPort)
   popupsToRestoreVisible = this.HidePinnedPopupsThatOutFromViewPort();
  this.savedBodyWidth = ASPx.GetDocumentWidth();
  this.savedBodyHeight = ASPx.GetDocumentHeight();
  if(needToHideRestorePopupsThatOutFromViewPort)
   this.RestorePinnedPopupsThatOutFromViewPort(popupsToRestoreVisible);
 },
 FireScrollEventToWindows: function(evt) {
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var popupWindow = this.GetPopupWindowFromID(this.visiblePopupWindowIds[i]);
   var popupControl = popupWindow.popupControl;
   popupControl.OnScroll(evt, popupWindow.windowIndex);
  }
 },
 CalculateDocumentDimensionsWithoutPinnedWindowsOldIE: function(onCalculateFinished, evt) {  
  var popupsToRestoreVisible = [];
  var needToHideRestorePopupsThatOutFromViewPort = !!evt && ASPx.Evt.GetEventSource(evt) == document;
  if(needToHideRestorePopupsThatOutFromViewPort)
   popupsToRestoreVisible = this.HidePinnedPopupsThatOutFromViewPort();
  this.scrollEventLockCount++;
  window.setTimeout(function() {
   this.savedBodyWidth = ASPx.GetDocumentWidth();
   this.savedBodyHeight = ASPx.GetDocumentHeight();
   if(needToHideRestorePopupsThatOutFromViewPort)
    this.RestorePinnedPopupsThatOutFromViewPort(popupsToRestoreVisible);
   if(onCalculateFinished)
    window.setTimeout(function() { onCalculateFinished(); }.aspxBind(this), 0);
   this.scrollEventLockCount--;
  }.aspxBind(this), 0);
 },
 FireScrollEventToWindowsOldIE: function(evt) {
  this.scrollEventLockCount++;
  this.FireScrollEventToWindows(evt);
  this.scrollEventLockCount--;
 },
 LockScrollEvent: function() {
  this.scrollEventLockCount++;
 },
 UnlockScrollEvent: function() {
  this.scrollEventLockCount--;
 },
 CorrectPositionAtScroll: function(scroll) {
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var popupWindow = this.GetPopupWindowFromID(this.visiblePopupWindowIds[i]);
   var popupControl = popupWindow.popupControl;
   if(popupControl != null && popupControl.InternalIsWindowVisible(popupWindow.windowIndex)) {
    if(popupControl.GetAutoUpdatePosition(popupWindow.windowIndex))
     popupWindow.popupControl.TryAutoUpdatePosition(popupWindow.windowIndex);
   }
  }
 },
 OnSelectStart: function() {
  return !this.selectBanned;
 },
 OverStop: function() {
  this.overControl = null;
  this.overWindowIndex = -1;
 },
 OnPWDisappearTimer: function(name, index) {
  var pc = this.Get(name);
  if(pc != null) {
   if(!pc.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.MouseOut))
    this.OverStop();
   this.ClearDisappearTimer();
  }
 },
 SaveCurrentMouseOverPos: function(evt) {
  this.overXPos = ASPx.Evt.GetEventX(evt);
  this.overYPos = ASPx.Evt.GetEventY(evt);
 },
 RegisterVisibleModalElement: function(element) {
  if(ASPx.Data.ArrayIndexOf(this.visibleModalElements, element) == -1)
   this.visibleModalElements.push(element);
 },
 UnregisterVisibleModalElement: function(element) {
  ASPx.Data.ArrayRemove(this.visibleModalElements, element);
 },
 RegisterVisibleWindow: function(element, popupControl, index) {
  if(ASPx.Data.ArrayIndexOf(this.visiblePopupWindowIds, element.id) == -1) {
   this.visiblePopupWindowIds.push(element.id);
   if(popupControl && popupControl.GetWindowCloseAction(index) == "MouseOut")
    aspxGetPopupControlCollection().InitOverObject(popupControl, index, null);
   this.OnRegisteredVisibleWindow(element);
  }
 },
 OnRegisteredVisibleWindow: function(element) {
  var elementIndex = ASPx.Data.ArrayIndexOf(this.visiblePopupWindowIds, element.id);
  if(this.PopupWindowIsModalByVisibleIndex(elementIndex))
   ASPx.PopupUtils.RemoveFocus(element);
 },
 UnregisterVisibleWindow: function(element) {
  this.DeleteWindowFromZIndexOrder(element);
  ASPx.Data.ArrayRemove(this.visiblePopupWindowIds, element.id);
  var forceRecalculate = this.PopupWindowIsModalByID(element.id);
  this.RefreshTabIndexes(forceRecalculate);
  this.SkipCurrentActiveWindowElement(element);
 },
 UpdateWindowsStateCookie: function(id) {
  var pos = id.lastIndexOf(ASPx.PCWIdSuffix);
  var name = id.substring(0, pos);
  var popupControl = aspxGetPopupControlCollection().Get(name);
  if(popupControl != null)
   popupControl.UpdateWindowsStateCookie(false);
 },
 AutoUpdateElementsPosition: function() {
  for(var i = 0; i < this.visiblePopupWindowIds.length; i++) {
   var popupWindow = this.GetPopupWindowFromID(this.visiblePopupWindowIds[i]);
   var popupControl = popupWindow.popupControl;
   if(popupControl != null && popupControl.InternalIsWindowVisible(popupWindow.windowIndex))
    popupControl.TryAutoUpdatePosition(popupWindow.windowIndex);
  }
 },
 LockWindowResizeByBodyScrollVisibilityChanging: function() {
  this.windowResizeByBodyScrollVisibilityChangingLockCount++;
 },
 UnlockWindowResizeByBodyScrollVisibilityChanging: function() {
  this.windowResizeByBodyScrollVisibilityChangingLockCount--;
 },
 WindowResizeByBodyScrollVisibilityChangingLocked: function() {
  return this.windowResizeByBodyScrollVisibilityChangingLockCount > 0;
 },
 HideAllWindows: function() {
  this.DoHideAllWindows(null, "", true, ASPxClientPopupControlCloseReason.API);
 }
});
var ASPxClientPopupControlResizeState = {
 Resized: 0,
 Collapsed: 1,
 Expanded: 2,
 Maximized: 3,
 RestoredAfterMaximized: 4
};
var ASPxClientPopupControlCloseReason = {
 API: "API",
 CloseButton: "CloseButton",
 OuterMouseClick: "OuterMouseClick",
 MouseOut: "MouseOut",
 Escape: "Escape"
};
var popupControlCollection = null;
function aspxGetPopupControlCollection() {
 if(popupControlCollection == null)
  popupControlCollection = new ASPxClientPopupControlCollection();
 return popupControlCollection;
}
function _aspxPopupWindow(popupControl, windowIndex) {
 this.popupControl = popupControl;
 this.windowIndex = windowIndex;
}
function _aspxScrollDifference(horizontal, vertical) {
 this.horizontal = horizontal;
 this.vertical = vertical;
}
function aspxPWEMOver(evt) {
 aspxGetPopupControlCollection().OnPWMouseOver(evt);
}
ASPx.PWHMDown = function(evt) {
 return ASPx.Evt.CancelBubble(evt);
}
ASPx.PWCBClick = function(evt, name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnPWHBClickCore(evt, index, "OnCloseButtonClick");
}
ASPx.PWPBClick = function(evt, name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnPWHBClickCore(evt, index, "OnPinButtonClick");
}
ASPx.PWRBClick = function(evt, name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnPWHBClickCore(evt, index, "OnRefreshButtonClick");
}
ASPx.PWMNBClick = function(evt, name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnPWHBClickCore(evt, index, "OnCollapseButtonClick");
}
ASPx.PWMXBClick = function(evt, name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnPWHBClickCore(evt, index, "OnMaximizeButtonClick");
}
ASPx.PWDGMDown = function(evt, name, index) {
 return ASPx.PWMDown(evt, name, index, true);
}
ASPx.PWGripMDown = function(evt, name, index) {
 aspxPWMDownCore(evt, name, index, false);
 return ASPx.PWHMDown(evt);
}
ASPx.PWMMove = function(evt, name, index) {
 aspxGetPopupControlCollection().OnPWMouseMove(evt, name, index);
}
ASPx.PWMDown = function(evt, name, index, isWindowContentDraggingAllowed) {
 var pointOnScrollBar = false;
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc && pc.GetEnableContentScrolling(index)) {
  var rtl = pc.rtl && (ASPx.Browser.IE || ASPx.Browser.Firefox || ASPx.Browser.Opera);
  pointOnScrollBar = aspxPointOnElementScrollBar(pc.GetContentContainer(index), evt.clientX, evt.clientY, rtl);
 }
 aspxPWMDownCore(evt, name, index, isWindowContentDraggingAllowed, pointOnScrollBar);
 if(isWindowContentDraggingAllowed) { 
  aspxGetPopupControlCollection().OnDocumentMouseDown(evt); 
  if(typeof (ASPx.GetDropDownCollection) == "function")
   ASPx.GetDropDownCollection().OnDocumentMouseDown(evt); 
  if(!pointOnScrollBar) {
   if(!ASPx.Browser.WebKitTouchUI && ASPx.Evt.GetEventSource(evt).tagName == "IMG") 
    ASPx.Evt.PreventEvent(evt);
  }
 }
}
function aspxPWMDownCore(evt, name, index, isDraggingAllowed, pointOnScrollBar) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) {
  pc.OnActivateMouseDown(evt, index);
  pc.OnMouseDown(evt, index, isDraggingAllowed, pointOnScrollBar);
 }
}
function aspxPWMEMDown(evt) {
 var internalScrollableModalDiv = ASPx.Browser.AndroidDefaultBrowser ? ASPx.Evt.GetEventSource(evt) : null;
 var modalDiv = internalScrollableModalDiv ? internalScrollableModalDiv.parentNode : ASPx.Evt.GetEventSource(evt);
 if(modalDiv != null) 
  modalDiv.DXModalPopupControl.OnMouseDownModalElement(evt, modalDiv.DXModalPopupWindowIndex);
}
function aspxPEMEvent(evt) {
 var element = ASPx.PopupUtils.FindEventSourceParentByTestFunc(evt, aspxTestPopupControlElement);
 if(element != null) {
  var popupControl = element.DXPopupElementControl;
  var index = element.DXPopupWindowIndex;
  if(evt.type == "mousedown") {
   popupControl.SetIsPopuped(index, popupControl.InternalIsWindowVisible(index));
   aspxGetPopupControlCollection().OnMouseDown(evt);
  }
  else {
   var windowPopupAction = popupControl.GetWindowPopupAction(element.DXPopupWindowIndex);
   var leftMouseButtonAction = windowPopupAction == "LeftMouseClick" && ASPx.Evt.IsLeftButtonPressed(evt);
   var rightMouseButtonAction = windowPopupAction == "RightMouseClick" && !ASPx.Evt.IsLeftButtonPressed(evt);
   if(leftMouseButtonAction || rightMouseButtonAction) {
    if(rightMouseButtonAction)
     ASPx.PopupUtils.PreventContextMenu(evt);
    var windowCloseAction = popupControl.GetWindowCloseAction(index);
    var isPopuped = popupControl.GetIsPopuped(index);
    var isNewPopupElement = popupControl.GetLastShownPopupElementIndex(index) != element.DXPopupElementIndex;
    if(isPopuped && isNewPopupElement) {
     popupControl.DoHideWindow(index, false, ASPxClientPopupControlCloseReason.OuterMouseClick);
     aspxGetPopupControlCollection().ClearDisappearTimer();
     isPopuped = false;
    }
    if(!(isPopuped && windowCloseAction == "OuterMouseClick")) {
     popupControl.DoShowWindow(index, element.DXPopupElementIndex, evt);
    }
    if(windowCloseAction == "MouseOut")
     aspxGetPopupControlCollection().InitOverObject(popupControl, element.DXPopupWindowIndex, evt);
    return false;
   }
  }
 }
}
function aspxPointOnElementScrollBar(element, x, y, rtl) {
 var scrollWidth = ASPx.GetVerticalScrollBarWidth();
 var hasHorizontalScroll = element.scrollWidth > element.clientWidth;
 var hasVerticalScroll = element.scrollHeight > element.clientHeight;
 var ceilX = rtl ? ASPx.GetAbsoluteX(element) + scrollWidth :
  ASPx.GetAbsoluteX(element) + (element.offsetWidth - ASPx.GetHorizontalBordersWidth(element));
 var ceilY = ASPx.GetAbsoluteY(element) + (element.offsetHeight - ASPx.GetVerticalBordersWidth(element));
 return (hasVerticalScroll && x >= ceilX - scrollWidth && x <= ceilX) ||
   (hasHorizontalScroll && y >= ceilY - scrollWidth && y <= ceilY);
}
ASPx.PCAStop = function(name, index) {
 var pc = aspxGetPopupControlCollection().Get(name);
 if(pc != null) pc.OnAnimationStop(index);
}
ASPx.PCIframeLoad = function(evt) {
 var srcElement = ASPx.Evt.GetEventSource(evt);
 if(srcElement) {
  var pcName = srcElement.popupControlName;
  var pcWndIndex = srcElement.pcWndIndex;
  if(pcName) {
   var pc = aspxGetPopupControlCollection().Get(pcName);
   if(pc) pc.OnIFrameLoad(pcWndIndex);
  }
 }
}
function aspxTestPopupWindowElement(element) {
 return !!element.DXPopupWindowElement;
}
function aspxTestPopupControlElement(element) {
 return element.DXPopupElementControl && ASPx.IsExists(element.DXPopupWindowIndex);
}
function aspxTestPopupControlOverElement(element) {
 var collection = aspxGetPopupControlCollection();
 var popupControl = collection.overControl;
 var index = collection.overWindowIndex;
 var windowId = popupControl.GetWindowElementId(index);
 if(element.id == windowId)
  return true;
 var popupElements = popupControl.GetPopupElementList(index);
 for(var i = 0; i < popupElements.length; i++)
  if(popupElements[i] == element)
   return true;
 return false;
}
ASPx.Evt.AttachEventToDocument("keydown", function(evt) {
 aspxGetPopupControlCollection().OnDocumentKeyDown(evt);
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseDownEventName, function(evt) {
 aspxGetPopupControlCollection().OnDocumentMouseDown(evt);
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseUpEventName, function(evt) {
 return aspxGetPopupControlCollection().OnMouseUp(evt);
});
ASPx.Evt.AttachEventToDocument(ASPx.TouchUIHelper.touchMouseMoveEventName, function(evt) {
 if(typeof (aspxGetPopupControlCollection) != "undefined")
  aspxGetPopupControlCollection().OnMouseMove(evt);
});
ASPx.Evt.AttachEventToDocument("mouseout", function(evt) {
 if(typeof (aspxGetPopupControlCollection) != "undefined")
  aspxGetPopupControlCollection().OnMouseOut(evt);
});
ASPx.Evt.AttachEventToElement(window, ASPx.Browser.MacOSMobilePlatform ? "orientationchange" : "resize", function(evt) {
 aspxGetPopupControlCollection().OnResize(evt);
});
ASPx.Evt.AttachEventToElement(window, "scroll", function(evt) {
 aspxGetPopupControlCollection().OnScroll(evt);
});
ASPx.Evt.AttachEventToDocument("selectstart", function(evt) {
 var ret = aspxGetPopupControlCollection().OnSelectStart(evt);
 if(!ret) return false; 
});
window.ASPxClientPopupControl = ASPxClientPopupControl;
window.ASPxClientPopupWindow = ASPxClientPopupWindow;
window.ASPxClientPopupWindowEventArgs = ASPxClientPopupWindowEventArgs;
window.ASPxClientPopupWindowCancelEventArgs = ASPxClientPopupWindowCancelEventArgs;
window.ASPxClientPopupWindowResizeEventArgs = ASPxClientPopupWindowResizeEventArgs;
window.ASPxClientPopupWindowPinnedChangedEventArgs = ASPxClientPopupWindowPinnedChangedEventArgs;
window.ASPxClientPopupControlCollection = ASPxClientPopupControlCollection;
window.ASPxClientPopupControlResizeState = ASPxClientPopupControlResizeState;
window.ASPxClientPopupControlCloseReason = ASPxClientPopupControlCloseReason;
ASPx.GetPopupControlCollection = aspxGetPopupControlCollection;
ASPx.PopupControlCssClasses = PopupControlCssClasses;
})();
(function() {
var serializingSeparator = "|";
var serializingSeparatorLength = serializingSeparator.length;
var loadRangeItemsCallbackPrefix = "LBCRI";
var lbIPostfixes = ['C', 'I', 'T'];
var lbIIdSuffix = "LBI";
var lbSIIdSuffix = lbIIdSuffix + "-1";
var lbAIRIdSuffix = "AIR";
var lbAIRTIdSuffix = lbAIRIdSuffix + "-1";
var lbTSIdSuffix = "_TS";
var lbBSIdSuffix = "_BS";
var lbHeaderDivIdSuffix = "_H";
var lTableIdSuffix = "_LBT";
var leVISuffix = "_VI";
var lbDSuffix = "_D";
var emptyItemsRange = "0:-1";
var nbsp = "&nbsp;";
var nameSeparator = "_";
var nbspChar = String.fromCharCode(160);
var accessibilityAssistID =  "AcAs";
var ListBoxSelectionMode = { Single : 0, Multiple : 1, CheckColumn : 2 };
var ASPxClientListEdit = ASPx.CreateClass(ASPxClientEdit, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.SelectedIndexChanged = new ASPxClientEvent();
  this.savedSelectedIndex = -1;
 },
 FindInputElement: function() {
  return this.FindStateInputElement();
 },
 FindStateInputElement: function(){
  return document.getElementById(this.name + leVISuffix);
 },
 GetItem: function(index) {
  throw "Not implemented";
 },
 GetItemValue: function(index) {
  throw "Not implemented";
 },
 GetValue: function(){
  return this.GetItemValue(this.GetSelectedIndex());
 }, 
 GetSelectedIndexInternal: function(){
  return this.savedSelectedIndex;
 }, 
 SetSelectedIndexInternal: function(index){
  this.savedSelectedIndex = index;
 },
 FindItemIndexByValue: function(value){
  for(var i = 0; i < this.GetItemCount(); i++){
   if(this.GetItemValue(i) == value)
    return i;
  }
  return -1;
 },
 RaiseItemClick: function() {
  var processOnServer = this.autoPostBack;
  if(!this.ItemClick.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.ItemClick.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 RaiseItemDoubleClick: function() {
  var processOnServer = this.autoPostBack;
  if(!this.ItemDoubleClick.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.ItemDoubleClick.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 RaiseValueChangedEvent: function() {
  if(!this.isInitialized) return false;
  var processOnServer = ASPxClientEdit.prototype.RaiseValueChangedEvent.call(this);
  processOnServer = this.RaiseValueChangedAdditionalEvents(processOnServer);
  return processOnServer;
 },
 RaiseValueChangedAdditionalEvents: function(processOnServer){
  return this.RaiseSelectedIndexChanged(processOnServer);
 },
 RaiseSelectedIndexChanged: function (processOnServer) {
  this.RaiseValidationInternal();
  if(!this.SelectedIndexChanged.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.SelectedIndexChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 UpdateHiddenInputs: function(){
  var element = this.FindStateInputElement();
  if(ASPx.IsExistsElement(element)) {
   var value = this.GetValue();
   if(value == null)
    value = "";
   element.value = value;
  }
 },
 GetSelectedItem: function(){
  var index = this.GetSelectedIndexInternal();
  return this.GetItem(index);
 },
 GetSelectedIndex: function(){
  return this.GetSelectedIndexInternal();
 },
 SetSelectedItem: function(item){
  var index = (item != null) ? item.index : -1;
  this.SetSelectedIndex(index);
 },
 SetSelectedIndex: function(index){
  this.SelectIndexSilent(index);
 },
 SelectIndexSilent: function(index){
  throw "Not implemented";
 },
 OnValueChanged: function () {
  var processOnServer = this.RaiseValueChangedEvent() && this.GetIsValid();
  if(processOnServer)
   this.SendPostBackInternal("");
 }
});
var ASPxClientListEditItem = ASPx.CreateClass(null, {
 constructor: function(listEditBase, index, text, value, imageUrl){
  this.listEditBase = listEditBase;
  this.index = index;
  this.imageUrl = imageUrl;
  this.text = text;
  this.value = value;
 }
});
var ASPxClientListBoxItem = ASPx.CreateClass(ASPxClientListEditItem, {
 constructor: function(listEditBase, index, texts, value, imageUrl, selected){
  this.constructor.prototype.constructor.call(this, listEditBase, index, null, value, imageUrl);
  this.selected = selected ? selected : false;
  this.texts = texts;
  this.text = listEditBase.FormatText(texts);
 },
 GetColumnText: function(columnIndexOrFieldName){
  var columnIndex = -1;
  if(typeof(columnIndexOrFieldName) == "string")
   columnIndex = ASPx.Data.ArrayIndexOf(this.listEditBase.columnFieldNames, columnIndexOrFieldName);
  else if(typeof(columnIndexOrFieldName) == "number")
   columnIndex = columnIndexOrFieldName;
  return this.GetColumnTextByIndex(columnIndex);
 },
 GetColumnTextByIndex: function(columnIndex){
  if(0 <= columnIndex && columnIndex < this.texts.length)
   return this.texts[columnIndex];
  else
   return null;
 }
});
var ListBoxScrollCallbackHelperBase = ASPx.CreateClass(null, {
 constructor: function(listBoxControl) {
  this.listBoxControl = listBoxControl;
  this.itemsRange = "";
  this.defaultItemsRange = "0:" + (this.listBoxControl.callbackPageSize - 1);
 },
 OnScroll: function(){ },
 Reset: function(){ },
 IsScrolledToTopSpacer: function(){ return false; },
 IsScrolledToBottomSpacer: function(){ return false; },
 GetIsNeedToHideTopSpacer: function(){ return false; },
 GetIsNeedCallback: function(){ return false; },
 GetItemsRangeForLoad: function(){ return this.defaultItemsRange; },
 SetItemsRangeForLoad: function(){}
});
var ListBoxScrollCallbackHelper = ASPx.CreateClass(ListBoxScrollCallbackHelperBase, {
 constructor: function(listBoxControl) {
  this.constructor.prototype.constructor.call(this, listBoxControl);
  this.isScrolledToTopSpacer = false;
  this.isScrolledToBottomSpacer = false;
 },
 OnScroll: function(){
  this.DetectScrollDirection();
  this.ResetItemsRange();
  if(this.GetIsAnySpacerVisible())
   this.RecalcItemsRangeForLoad();
 },
 DetectScrollDirection: function(){
  var listBoxControl = this.listBoxControl;
  var divElement = listBoxControl.GetScrollDivElement();
  var listTable = listBoxControl.GetListTable();
  var scrollTop = divElement.scrollTop;
  var scrollBottom = divElement.scrollTop + divElement.clientHeight;
  var isTopSpacerVisible = listBoxControl.GetScrollSpacerVisibility(true);
  var isBottomSpacerVisible = listBoxControl.GetScrollSpacerVisibility(false);
  var topSpacerHeight = listBoxControl.GetScrollSpacerVisibility(true) ? parseInt(listBoxControl.GetScrollSpacerElement(true).clientHeight) : 0;
  this.isScrolledToTopSpacer = (scrollTop < topSpacerHeight) && isTopSpacerVisible;
  this.isScrolledToBottomSpacer = (scrollBottom >= topSpacerHeight + listTable.clientHeight) && isBottomSpacerVisible;
 },
 Reset: function(){
  this.ResetItemsRange();
  this.isScrolledToTopSpacer = false;
  this.isScrolledToBottomSpacer = false;
 },
 ResetItemsRange: function(){
  this.itemsRange = "";
 },
 RecalcItemsRangeForLoad: function(){
  if(this.listBoxControl.isCallbackMode) {
   if(this.isScrolledToTopSpacer || this.isScrolledToBottomSpacer)
    this.SetItemsRangeForLoad(this.isScrolledToTopSpacer);
  }
 },
 IsScrolledToTopSpacer: function(){
  return this.isScrolledToTopSpacer;
 },
 IsScrolledToBottomSpacer: function(){
  return this.isScrolledToBottomSpacer;
 },
 GetIsAnySpacerVisible: function(){
  return this.isScrolledToTopSpacer || this.isScrolledToBottomSpacer;
 },
 GetIsNeedCallback: function(){
  return !this.GetIsItemsRangeEmpty();
 },
 GetIsNeedToHideTopSpacer: function(){
  return this.isScrolledToTopSpacer && this.GetIsItemsRangeEmpty();
 },
 GetItemsRangeForLoad: function(){
  return (!this.GetIsItemsRangeEmpty() ? this.itemsRange : this.defaultItemsRange);
 },
 SetItemsRangeForLoad: function(isForTop){
  var listbox = this.listBoxControl;
  var beginIndex = isForTop ? 
   listbox.serverIndexOfFirstItem - listbox.callbackPageSize : 
   listbox.serverIndexOfFirstItem + listbox.GetItemCount();
  beginIndex = beginIndex < 0 ? 0 : beginIndex;
  var endIndex = isForTop ? 
   listbox.serverIndexOfFirstItem - 1 : 
   beginIndex + listbox.callbackPageSize - 1;
  this.itemsRange = beginIndex + ":" + endIndex;
  this.isScrolledToTopSpacer = isForTop;
  this.isScrolledToBottomSpacer = !isForTop;
 },
 GetIsItemsRangeEmpty: function(){
  return (this.itemsRange == "" || this.itemsRange == emptyItemsRange);
 }
});
var ASPxClientListBoxBase = ASPx.CreateClass(ASPxClientListEdit, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.APILockCount = 0;
  this.enableSyncOnPerfCallback = false;
  this.scrollOnKBNavigationLockCount = 0;
  this.isComboBoxList = false;
  this.isSyncEnabled = true;
  this.ownerName = "";
  this.selectionEventsLockCount = 0;
  this.syncLockCount = 0;
  this.encodeHtml = true;
  this.useCaseInsensitiveSearch = true;
  this.serializingHelper = null;
  this.deletedItems = [];
  this.insertedItems = [];
  this.itemsValue = [];
  this.ItemDoubleClick = new ASPxClientEvent();
  this.ItemClick = new ASPxClientEvent();
 },
 InlineInitialize: function () {
  ASPxClientListEdit.prototype.InlineInitialize.call(this);
  for(var i = 0; i < this.itemsValue.length; i++)
   this.itemsValue[i] = this.GetDecodeValue(this.itemsValue[i]);
 },
 LockScrollOnKBNavigation: function(){
  this.scrollOnKBNavigationLockCount++;
 },
 UnlockScrollOnKBNavigation: function(){
  this.scrollOnKBNavigationLockCount--;
 },
 IsScrollOnKBNavigationLocked: function() {
  return this.scrollOnKBNavigationLockCount > 0;
 },
 LockSelectionEvents: function(){
  this.selectionEventsLockCount++;
 },
 UnlockSelectionEvents: function(){
  this.selectionEventsLockCount--;
 },
 IsSelectionEventsLocked: function(){
  return this.selectionEventsLockCount > 0;
 },
 LockSynchronizationOnInternalCallback: function(){
  if(!this.enableSyncOnPerfCallback)
   this.LockSynchronization();
 },
 UnlockSynchronizationOnInternalCallback: function (){
  if(!this.enableSyncOnPerfCallback)
   this.UnlockSynchronization();
 },
 GetItemCount: function(){
  return 0;
 },
 GetItemValue: function(index){
  if(0 <= index && index < this.GetItemCount())
   return this.PrepareItemValue(this.itemsValue[index]);
  return null;
 },
 GetItemTexts: function(item) {
  return item.text;
 },
 PrepareItemValue: function(value) {
  return (typeof(value) == "string" && value == "" && this.convertEmptyStringToNull) ? null : value;
 },
 LoadItemsFromCallback: function(isToTop, itemStrings){
 },
 SetValue: function(value){
  var index = this.FindItemIndexByValue(value);
  this.SelectIndexSilentAndMakeVisible(index);
 },
 FindItemIndexByText: function(text){
  var transformText = function(text) { return text; }
  var textIsString = typeof(text) === "string";
  if(this.useCaseInsensitiveSearch && textIsString)
   transformText = function(text) { return text.toUpperCase(); }
  text = transformText(text);
  for(var i = 0; i < this.GetItemCount(); i ++){
   if(transformText(this.GetItem(i).text) == text)
    return i;
  }
  return -1;
 },
 SelectIndex: function (index){ 
  if(this.SelectIndexSilentAndMakeVisible(index, false)){
   this.RaisePersonalStandardValidation();
   this.OnValueChanged();
  }
 },
 SelectIndexSilentAndMakeVisible: function(index){
  var selectionChanged = this.SelectIndexSilent(index);
  if(!this.IsScrollOnKBNavigationLocked())
   this.MakeItemVisible(index);
  return selectionChanged;
 },
 FormatText: function (texts) {
  return texts;
 },
 MakeItemVisible: function(index){
 },
 InitOnContainerMadeVisible: function(){
 },
 AddItem: function(texts, value, imageUrl){
  var index = this.GetItemCount();
  this.InsertItemInternal(index, texts, value, imageUrl);
  return index;
 },
 InsertItem: function(index, texts, value, imageUrl){
  this.InsertItemInternal(index, texts, value, imageUrl);
 },
 InsertItemInternal: function(index, text, value, imageUrl){
 },
 BeginUpdate: function(){
  this.APILockCount ++;
 },
 EndUpdate: function(){
  this.APILockCount --;
  this.Synchronize();
 },
 ClearItems: function(){
  this.BeginUpdate();
  this.UpdateArraysItemsCleared();
  this.ClearItemsCore();
  this.EndUpdate();
 },
 ClearItemsCore: function(){
 },
 ClearItemsForPerformCallback: function(){
  this.itemsValue = [];
  this.ClearItemsCore();
 },
 RemoveItem: function(index){
 },
 FindItemByText: function(text){
  var index = this.FindItemIndexByText(text);
  return this.GetItem(index);
 },
 FindItemByValue: function(value){
  var index = this.FindItemIndexByValue(value);
  return this.GetItem(index);
 },
 PerformCallback: function(arg) {
 },
 GetCallbackArguments: function(){
  var args = this.GetCustomCallbackArg();
  args += this.GetLoadItemsRangeCallbackArg();
  return args;
 },
 GetLoadItemsRangeCallbackArg: function(){
  return this.FormatCallbackArg(loadRangeItemsCallbackPrefix, this.GetItemsRangeForLoad());
 },
 FormatCallbackArg: function(prefix, arg) { 
  arg = arg.toString();
  return (ASPx.IsExists(arg) ? prefix + "|" + arg.length + ';' + arg + ';' : "");
 },
 GetItemsRangeForLoad: function(){
  return emptyItemsRange;
 },
 GetCallbackOwnerControl: function(){
  if(this.ownerName && !this.ownerControl)
   this.ownerControl = ASPx.GetControlCollection().Get(this.ownerName);
  return this.ownerControl;
 },
 GetCustomCallbackArg: function(){
  return this.stateObject["CustomCallback"];
 },
 SetCustomCallbackArg: function(arg){
  this.UpdateStateObjectWithObject({ CustomCallback: arg });
 },
 FormatAndSetCustomCallbackArg: function(arg){
  arg = ASPx.IsExists(arg) ? arg.toString() : ""
  var formatArg = this.FormatCallbackArg("LECC", arg);
  this.SetCustomCallbackArg(formatArg);
 },
 SendCallback: function(){
 },
 LockSynchronization: function(){
  this.syncLockCount++;
 },
 UnlockSynchronization: function(){
  this.syncLockCount--;
 },
 IsSyncLocked: function(){
  return this.syncLockCount > 0;
 },
 IsSyncEnabled: function(){
  return this.isSyncEnabled && !this.IsSyncLocked();
 },
 RegisterInsertedItem: function(index, text, value, imageUrl){
  if(this.IsSyncEnabled()){
   this.RefreshSynchroArraysIndex(index, true);
   var item = this.CreateItem(index, text, value, imageUrl);
   this.insertedItems.push(item);
   this.Synchronize();
  }
 },
 CreateItem: function(index, text, value, imageUrl, selected){
  return new ASPxClientListBoxItem(this, index, text, value, imageUrl, selected);
 },
 UpdateSyncArraysItemDeleted: function(item, isValueRemovingRequired){
  if(isValueRemovingRequired)
   ASPx.Data.ArrayRemoveAt(this.itemsValue, item.index);
  if(this.IsSyncEnabled()){
   var index = this.FindItemInArray(this.insertedItems, item);
   if(index == -1){
    this.RefreshSynchroArraysIndex(item.index, false);
    this.deletedItems.push(item);
   } else {
    this.RefreshSynchroArraysIndex(item.index, false);
    ASPx.Data.ArrayRemoveAt(this.insertedItems, index);
   }
   this.Synchronize();
  }
 },
 UpdateArraysItemsCleared: function(){
  if(this.IsSyncEnabled()){
   for(var i = this.GetItemCount() - 1; i >= 0; i --)
    this.UpdateSyncArraysItemDeleted(this.GetItem(i), false);
  } 
  this.itemsValue = [];
 },
 RefreshSynchroArraysIndex: function(startIndex, isIncrease){
  this.RefreshSynchroArrayIndexIndex(this.deletedItems, startIndex, isIncrease);
  this.RefreshSynchroArrayIndexIndex(this.insertedItems, startIndex, isIncrease);
 },
 RefreshSynchroArrayIndexIndex: function(array, startIndex, isIncrease){
  var delta = isIncrease ? 1 : -1;
  for(var i = 0; i < array.length; i ++){
   if(array[i].index >= startIndex)
    array[i].index += delta;
  }   
 },
 FindItemInArray: function(array, item){
  for(var i = array.length - 1; i >= 0; i--){
   var currentItem = array[i];
   if((!this.encodeHtml || currentItem.text == item.text) && currentItem.value == item.value &&
    currentItem.imageUrl == item.imageUrl)
    break;
  }
  return i;
 },
 Synchronize: function(){
  if(this.APILockCount == 0){
   if(this.IsSyncEnabled()){
    this.SynchronizeItems(this.deletedItems, "DeletedItems");
    this.SynchronizeItems(this.insertedItems, "InsertedItems");
   }
   this.CorrectSizeByTimer();
  }
 },
 CorrectSizeByTimer: function(){
 },
 SynchronizeItems: function(items, syncType){
  var itemsObj = { };
  itemsObj[syncType] = this.SerializeItems(items);
  this.UpdateStateObjectWithObject(itemsObj);
 },
 GetSerializingHelper: function(){ 
  if(this.serializingHelper == null)
   this.serializingHelper = this.CreateSerializingHelper();
  return this.serializingHelper;
 },
 CreateSerializingHelper: function(){
  return new ListBoxBaseItemsSerializingHelper(this);
 },
 SerializeItems: function(items){
  var serialiser = this.GetSerializingHelper();
  return serialiser.SerializeItems(items);
 },
 DeserializeItems: function(serializedItems){
  var serialiser = this.GetSerializingHelper();
  return serialiser.DeserializeItems(serializedItems);
 }
});
var ListBoxBaseItemsSerializingHelper = ASPx.CreateClass(null, {
 constructor: function(listBoxControl) {
  this.listBoxControl = listBoxControl;
  this.startPos = 0;
 },
 SerializeItems: function(items){
  var sb = [ ];
  for(var i = 0; i < items.length; i++)
   this.SerializeItem(sb, items[i]);
  return sb.join("");
 },
 SerializeItem: function(sb, item) {
  if(!item)
   return;
  this.SerializeAtomValue(sb, item.index);
  this.SerializeAtomValue(sb, item.value);
  this.SerializeAtomValue(sb, item.imageUrl);
  var texts = this.listBoxControl.GetItemTexts(item);
  if(typeof(texts) == "string")
   this.SerializeAtomValue(sb, texts);
  else {
   for(var i = 0; i < texts.length; i++)
    this.SerializeAtomValue(sb, texts[i]);
  }
 },
 SerializeAtomValue: function(sb, value) {
  var valueStr = ASPx.IsExists(value) ? value.toString() : "";
  sb.push(valueStr.length);
  sb.push('|');
  sb.push(valueStr);
 },
 DeserializeItems: function(serializedItems){
  var deserializedItems = [];
  var evalItems = ASPx.Json.Eval(serializedItems, this.listBoxControl.name);
  if(evalItems.length > 0) {
   var textsCount = this.listBoxControl.isNative ? 1 : this.listBoxControl.GetItemTextCellCount();
   var itemLength = (this.listBoxControl.imageCellExists ? 1 : 0) + 1 + textsCount;
   var index = 0, selected, value, texts, imageUrl, item;
   for(var i = 0; i < evalItems.length; i += itemLength, index ++) {
    selected = typeof (evalItems[i]) == "object" && !!evalItems[i];
    value = selected ? evalItems[i][0] : evalItems[i];
    texts = textsCount > 0 ? evalItems.slice(i + 1, i + 1 + textsCount) : evalItems[i + 1];
    imageUrl = this.listBoxControl.imageCellExists ? evalItems[i + itemLength - 1] : "";
    item = this.listBoxControl.CreateItem(index, texts, value, imageUrl, selected);
    deserializedItems.push(item);
   }
  }
  return deserializedItems;
 },
 ParseItemIndex: function(serializedItem){
  return parseInt(this.ParseString(serializedItem));
 },
 ParseItemValue: function(serializedItem){
  return this.ParseString(serializedItem);
 },
 ParseString: function(str){
  var indexOfSeparator = str.indexOf(serializingSeparator, this.startPos);
  var strLength = parseInt(str.substring(this.startPos, indexOfSeparator));
  var strStartPos = indexOfSeparator + serializingSeparatorLength;
  this.startPos = strStartPos + strLength;
  return str.substring(strStartPos, strStartPos + strLength);
 },
 ParseTexts: function(serializedItems){
  return this.ParseString(serializedItems);
 },
 DeserializeValues: function(serializedValues){
  var deserializedValues = [];
  this.startPos = 0;
  while(this.startPos < serializedValues.length){
   deserializedValues.push(this.ParseItemValue(serializedValues));
  }
  return deserializedValues;
 }
});
var ListBoxItemsSerializingHelper = ASPx.CreateClass(ListBoxBaseItemsSerializingHelper, {
 constructor: function(listBoxControl) {
  this.constructor.prototype.constructor.call(this, listBoxControl);
 },
 ParseTexts: function(serializedItems){
  var textColumnCount = this.listBoxControl.GetItemTextCellCount();
  return (textColumnCount > 1) ? this.DeserializeItemTexts(serializedItems, textColumnCount) 
   : this.constructor.prototype.ParseTexts.call(this, serializedItems);
 },
 DeserializeItemTexts: function(serializedItem, textColumnCount){
  var text = "";
  var texts = [];
  for(var i = 0; i < textColumnCount; i++)
   texts.push(this.ParseString(serializedItem));
  return texts;
 }
});
var ListBoxSingleSelectionHelper = ASPx.CreateClass(null, {
 constructor: function(listBoxControl) {
  this.listBoxControl = listBoxControl;
  this.savedSelectedIndex = -1;
  this.updateHiddenInputsLockCount = 0;
  this.cachedSelectionChangedArgs = [];
 },
 ClearSelection: function(){
  this.SetSelectedIndexCore(-1);
  this.OnSelectionCleared();
 },
 OnSelectionCleared: function(){
  this.cachedSelectionChangedArgs = [];
 },
 GetSelectedIndexInternal: function(){
  return this.savedSelectedIndex;
 }, 
 SetSelectedIndexInternal: function(index){
  this.savedSelectedIndex = index;
 }, 
 SetSelectedIndexCore: function(index){
  if(index != this.savedSelectedIndex && -1 <= index && index < this.GetItemCount()){
   this.BeginSelectionUpdate();
   this.SetSelectedIndexInternal(index);
   this.EndSelectionUpdate();
   return true;
  }
  return false;
 },
 GetSelectedIndex: function(){
  return this.GetSelectedIndexInternal();
 },
 SetSelectedIndex: function(index){
  this.ChangeSelectedItem(index);
  this.SetSelectedIndexCore(index);
  this.OnItemSelectionChanged(index, true);
 },
 GetSelectedIndices: function(){ 
  var selectedIndex = this.GetSelectedIndexInternal();
  return selectedIndex != -1 ? [selectedIndex] : [];
 },
 GetSelectedValues: function(){ 
  var selectedValue =  this.listBoxControl.GetValue();
  return selectedValue != null ? [selectedValue] : [];
 },
 GetSelectedItems: function(){ 
  var selectedItem = this.listBoxControl.GetSelectedItem();
  return selectedItem != null? [selectedItem] : [];
 },
 SelectIndices: function(indices){},
 SelectItems: function(items){},
 SelectValues: function(values){},
 UnselectIndices: function (selected) { this.SetSelectedIndex(-1); },
 UnselectItems: function(items){},
 UnselectValues: function(values){},
 GetIsItemSelected: function(index){ return index == this.GetSelectedIndexInternal(); },
 ResetSelectionCollectionsCache: function(){ },
 OnItemClick: function(index, evt){
  var selected = true;
  this.BeginSelectionUpdate();
  this.ChangeSelectedItem(index);
  var selectedIndexChanged = this.SetSelectedIndexCore(index);
  this.EndSelectionUpdate();
  if(selectedIndexChanged)
   this.OnItemSelectionChanged(index, selected);
 },
 ChangeSelectedItem: function(newSelectedIndex){
  var selected = true;
  var oldSelectedIndex = this.GetSelectedIndexInternal();
  this.BeginSelectionUpdate();
  this.SetItemSelectionState(oldSelectedIndex, !selected);
  this.SetItemSelectionState(newSelectedIndex, selected);
  this.EndSelectionUpdate();
 },
 SetItemSelectionState: function(itemIndex, selected, controller){
  this.BeginSelectionUpdate();
  this.listBoxControl.SetItemSelectionAppearance(itemIndex, selected, controller);
  this.EndSelectionUpdate();
 },
 GetFocusedIndex: function(){
  return this.GetSelectedIndexInternal();
 },
 BeginSelectionUpdate: function(){
  this.updateHiddenInputsLockCount++;
 },
 EndSelectionUpdate: function(){
  this.updateHiddenInputsLockCount--;
  if(!this.IsUpdateInternalSelectionStateLocked()){
   this.listBoxControl.UpdateInternalState();
   this.FlushSelectionChanged();
  }
 },
 IsUpdateInternalSelectionStateLocked: function(){
  return this.updateHiddenInputsLockCount > 0;
 },
 GetItemCount: function(){
  return this.listBoxControl.GetItemCount();
 },
 OnItemSelectionChanged: function(index, selected){
  if(this.IsUpdateInternalSelectionStateLocked()){
   var a = {Index: index, Selected: selected};
   this.cachedSelectionChangedArgs.push(a);
  }
  else 
   this.listBoxControl.OnItemSelectionChanged(index, selected);
 },
 FlushSelectionChanged: function(){
  if(this.IsUpdateInternalSelectionStateLocked()) 
   return;
  for(var i = 0; i < this.cachedSelectionChangedArgs.length; i++)
   this.listBoxControl.OnItemSelectionChanged(this.cachedSelectionChangedArgs[i].Index, this.cachedSelectionChangedArgs[i].Selected);
  this.cachedSelectionChangedArgs = [];
 },
 OnItemInserted: function(index){
  if(index <= this.savedSelectedIndex && this.savedSelectedIndex != -1)
   this.SetSelectedIndexInternal(this.savedSelectedIndex + 1);
 },
 OnItemRemoved: function(index){
  var selectedIndex = this.GetSelectedIndex();
  if(index < this.savedSelectedIndex)
   this.SetSelectedIndexInternal( this.savedSelectedIndex - 1);
  else if(index == this.savedSelectedIndex)
   this.SetSelectedIndexInternal(-1);
 },
 OnItemsCleared: function(){
  this.ClearSelection();
 }
});
var ListBoxMultiSelectionHelper = ASPx.CreateClass(ListBoxSingleSelectionHelper, {
 constructor: function(listBoxControl) {
  this.constructor.prototype.constructor.call(this, listBoxControl);
  this.selectedValuesCache = [];
  this.selectedItemsCache = [];
  this.savedSelectedIndices = [];
  this.selectedIndicesSortingRequired = false;
  this.focusedIndex = -1;
  this.lastIndexFocusedWithoutShift = -1;
 },
 SetSelectedIndex: function(index){
  this.SingleIndexSelection(index);
 },
 ResetSelectionCollectionsCache: function(){
  this.selectedIndicesSortingRequired = true;
  this.selectedItemsCache = [];
  this.selectedValuesCache = [];
 },
 GetSelectedIndices: function(){
  return this.GetSortedSelectedIndices().slice();
 },
 GetSortedSelectedIndices: function() {
  if(this.savedSelectedIndices.length > 1 && this.selectedIndicesSortingRequired)
   this.SortSelectedIndices();
  return this.savedSelectedIndices;
 },
 GetSelectedValues: function(){ 
  if(this.savedSelectedIndices.length == 0)
   return [];
  if(this.selectedValuesCache.length == 0)
   this.selectedValuesCache = this.GetSelectedValuesCore();
  return this.selectedValuesCache;
 },
 GetSelectedValuesCore: function(){
  var selectedValues = [];
  var selectedIndices = this.GetSortedSelectedIndices();
  if(selectedIndices.length == 0)
   return selectedValues;
  for(var i = 0; i < selectedIndices.length; i++)
   selectedValues.push(this.listBoxControl.GetItemValue([selectedIndices[i]]));
  return selectedValues;
 },
 GetSelectedItems: function(){
  if(this.savedSelectedIndices.length == 0)
   return [];
  if(this.selectedItemsCache.length == 0)
   this.selectedItemsCache = this.GetSelectedItemsCore();
  return this.selectedItemsCache;
 },
 GetSelectedItemsCore: function(){
  var selectedItems = [];
  for(var i = 0; i < this.savedSelectedIndices.length; i++)
   selectedItems.push(this.listBoxControl.GetItem(this.savedSelectedIndices[i]));
  return selectedItems;
 },
 SetIndicesSelectionState: function(indices, selected){
  this.BeginSelectionUpdate();
  var controller = typeof(ASPx.GetStateController) != "undefined" ? ASPx.GetStateController() : null;
  var itemCount = this.listBoxControl.GetItemCount();
  if(indices){
   for(var i = 0; i < indices.length; i++){
    var index = indices[i];
    if(index >= 0 && index < itemCount)
     this.SetItemSelectionState(indices[i], selected, controller);
   }
  } else
   this.SetAllItemsSelectionState(selected, controller);
  this.SetSelectedIndexCore(this.GetFirstSelectedIndex());
  this.EndSelectionUpdate();
 },
 SetItemsSelectionState: function(items, selected){
  var indices = items ? this.ConvertItemsToIndices(items) : null;
  this.SetIndicesSelectionState(indices, selected);
 },
 SetValuesSelectionState: function(values, selected){
  var indices = values ? this.ConvertValuesToIndices(values)  : null;
  this.SetIndicesSelectionState(indices, selected);
 },
 ConvertValuesToIndices: function(values){
  var indices = [];
  for(var i = 0; i < values.length; i++)
   indices.push(this.listBoxControl.FindItemIndexByValue(values[i]));
  return indices;
 },
 ConvertItemsToIndices: function(items){
  var indices = [];
  for(var i = 0; i < items.length; i++)
   indices.push(items[i].index);
  return indices;
 },
 SelectIndices: function(indices){
  this.SetIndicesSelectionState(indices, true);
 },
 SelectItems: function(items){
  this.SetItemsSelectionState(items, true);
 },
 SelectValues: function(values){
  this.SetValuesSelectionState(values, true);
 },
 UnselectIndices: function(indices){
  this.SetIndicesSelectionState(indices, false);
 },
 UnselectItems: function(items){
  this.SetItemsSelectionState(items, false);
 },
 UnselectValues: function(values){
  this.SetValuesSelectionState(values, false);  
 },
 GetIsItemSelected: function(index){ 
  return ASPx.Data.ArrayBinarySearch(this.GetSortedSelectedIndices(), index) > -1;
 },
 OnItemClick: function(index, evt){
  this.BeginSelectionUpdate();
  var ctrlKey = evt.ctrlKey || evt.metaKey;
  var shift = evt.shiftKey;
  if(ctrlKey)
   this.AddSelectedIndex(index);
  else if(shift){
   var startIndex = index > this.lastIndexFocusedWithoutShift ? this.lastIndexFocusedWithoutShift + 1 : index;
   var endIndex = index > this.lastIndexFocusedWithoutShift ? index : this.lastIndexFocusedWithoutShift - 1;
   this.SelectRangeIndicesOnly(startIndex, endIndex);
   this.SetFocusedIndexInternal(index, true);
  }else 
   this.SingleIndexSelection(index);
  this.EndSelectionUpdate();
 },
 OnItemCheckBoxClick: function(index, evt){
  this.BeginSelectionUpdate();
  this.AddSelectedIndex(index);
  this.EndSelectionUpdate();
 },
 AddSelectedIndex: function(index){
  this.SetFocusedIndexInternal(index, false);
  var indexInSelectedIndices = ASPx.Data.ArrayIndexOf(this.savedSelectedIndices, index);
  var selectionOperation = indexInSelectedIndices == -1;
  this.SetItemSelectionState(index, selectionOperation);
  this.SetSelectedIndexCore(this.GetFirstSelectedIndex());
 },
 SelectRangeIndicesOnly: function(startIndex, endIndex){
  this.BeginSelectionUpdate();
  var controller = typeof(ASPx.GetStateController) != "undefined" ? ASPx.GetStateController() : null;
  var itemCount = this.GetItemCount();
  for(var i = 0; i < itemCount; i ++) {
   if(i == this.lastIndexFocusedWithoutShift) 
    continue;
   this.SetItemSelectionState(i, i >= startIndex && i <= endIndex, controller);
  }
  this.SetSelectedIndexCore(this.GetFirstSelectedIndex());
  this.EndSelectionUpdate();
 },
 SingleIndexSelection: function(index){
  this.SetFocusedIndexInternal(-1, false);
  this.SelectRangeIndicesOnly(index, index);
  this.SetFocusedIndexInternal(index, false);
 },
 SetAllItemsSelectionState: function(selected, controller){
  this.BeginSelectionUpdate();
  this.savedSelectedIndices = [ ];
  var itemCount = this.GetItemCount();
  for(var i = 0; i < itemCount; i ++) {
   this.SetItemSelectionStateCore(i, selected, controller);
   if(selected)
    this.PushSelectedIndex(i);
   this.OnItemSelectionChanged(i, selected);
  }
  this.ResetSelectionCollectionsCache();
  this.EndSelectionUpdate();
 },
 SetItemSelectionState: function(itemIndex, selected, controller){
  this.SetItemSelectionStateCore(itemIndex, selected, controller);
  this.ResetSelectionCollectionsCache();
  var indexInSelectionArray = ASPx.Data.ArrayIndexOf(this.savedSelectedIndices, itemIndex);
  if(selected && indexInSelectionArray == -1){
   this.PushSelectedIndex(itemIndex);
   this.OnItemSelectionChanged(itemIndex, true);
  }
  if(!selected && indexInSelectionArray != -1){
   this.RemoveSelectedIndexAt(indexInSelectionArray);
   this.OnItemSelectionChanged(itemIndex, false);
  }
 },
 GetFirstSelectedIndex: function(){
  var selectedIndices = this.GetSelectedIndices();
  var selectedIndicesCount = selectedIndices.length;
  var firstSelectedIndex = -1;
  if(selectedIndicesCount > 0){
   firstSelectedIndex = selectedIndices[0];
   for(var i = 1; i < selectedIndices.length; i++){
    if(firstSelectedIndex > selectedIndices[i])
     firstSelectedIndex = selectedIndices[i];
   }
  }
  return firstSelectedIndex;
 },
 PushSelectedIndex: function(index){
  this.savedSelectedIndices.push(index);
 },
 RemoveSelectedIndex: function(index){
  ASPx.Data.ArrayRemove(this.savedSelectedIndices, index);
 },
 RemoveSelectedIndexAt: function(indexInArray){
  ASPx.Data.ArrayRemoveAt(this.savedSelectedIndices, indexInArray);
 },
 SortSelectedIndices: function(){
  ASPx.Data.ArrayIntegerAscendingSort(this.savedSelectedIndices);
  this.selectedIndicesSortingRequired = false;
 },
 SetItemSelectionStateCore: function(itemIndex, selected, controller){
  ListBoxSingleSelectionHelper.prototype.SetItemSelectionState.call(this, itemIndex, selected, controller);
 },
 GetFocusedIndex: function(){
  return this.focusedIndex;
 },
 SetFocusedIndexInternal: function(index, isShiftPressed){
  if(!isShiftPressed)
   this.lastIndexFocusedWithoutShift = index;
  this.focusedIndex = index;
 },
 OnItemInserted: function(index){
  this.ResetSelectionCollectionsCache();
  ListBoxSingleSelectionHelper.prototype.OnItemInserted.call(this, index);
  if(this.focusedIndex >= index)
   this.focusedIndex ++;
  for(var i = 0; i < this.savedSelectedIndices.length; i++){
   if(this.savedSelectedIndices[i] >= index)
    this.savedSelectedIndices[i]++;
  }
 },
 OnItemRemoved: function(index){
  this.ResetSelectionCollectionsCache();
  ListBoxSingleSelectionHelper.prototype.OnItemRemoved.call(this, index);
  if(this.focusedIndex == index)
   this.focusedIndex = -1;
  else if(this.focusedIndex > index)
   this.focusedIndex --;
  if(this.GetIsItemSelected(index))
   this.RemoveSelectedIndex(index);
  for(var i = 0; i < this.savedSelectedIndices.length; i++){
   if(this.savedSelectedIndices[i] > index)
    this.savedSelectedIndices[i]--;
  }
  if(this.GetSelectedIndex() == -1)
   this.SetSelectedIndexCore(this.GetFirstSelectedIndex());
 },
 ClearSelection: function(){
  this.ResetSelectionCollectionsCache();
  ASPx.Data.ArrayClear(this.savedSelectedIndices);
  this.OnSelectionCleared();
  this.SetSelectedIndexCore(-1);
 }
});
var CheckBoxListMultiSelectionHelper = ASPx.CreateClass(ListBoxMultiSelectionHelper, {
 OnItemClick: function(index){
  this.BeginSelectionUpdate();
  this.AddSelectedIndex(index);
  this.EndSelectionUpdate();
 },
 GetFocusedItemIndex: function(){
  return this.lastIndexFocusedWithoutShift;
 }
});
var ListBoxCheckSelectionHelper = ASPx.CreateClass(ListBoxMultiSelectionHelper, {
 OnItemClick: function(index, evt){
  this.BeginSelectionUpdate();
  if(evt.shiftKey)
   ListBoxMultiSelectionHelper.prototype.OnItemClick.call(this, index, evt);
  else
   this.AddSelectedIndex(index);
  this.EndSelectionUpdate();
 }
});
var ListBoxTemporaryCache = ASPx.CreateClass(null, {
 constructor: function() { 
  this.cache = { };
  this.invalidateTimerID = -1;
 },
 Get: function(key, getObjectFunc, context, args) {
  if(this.invalidateTimerID < 0) {
   this.invalidateTimerID = window.setTimeout(function() {
    this.Invalidate();
   }.aspxBind(this), 0);
  }
  if(!ASPx.IsExists(this.cache[key])) {
   if(!ASPx.IsExists(args))
    args = [ ];
   this.cache[key] = getObjectFunc.apply(context, args);
  }
  return this.cache[key];
 },
 Invalidate: function() {
  this.cache = { };
  this.invalidateTimerID = ASPx.Timer.ClearTimer(this.invalidateTimerID);
 }
});
var ASPxClientListBox = ASPx.CreateClass(ASPxClientListBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.freeUniqIndex = -1;
  this.isHasFakeRow = false;
  this.headerDiv = null;
  this.headerTable = null;
  this.listTable = null;
  this.sampleItemFirstTextCell = null;
  this.width = "";
  this.hasSampleItem = false;
  this.hoverClasses = [""];
  this.hoverCssArray = [""];
  this.selectedClasses = [""];
  this.selectedCssArray = [""];
  this.disabledClasses = [""];
  this.disabledCssArray = [""];
  this.imageCellExists = false;
  this.scrollHandlerLockCount = 0;
  this.columnFieldNames = [];
  this.textFormatString = "";
  this.defaultImageUrl = "";
  this.selectionMode = 0;
  this.initSelectedIndices = [];
  this.itemHorizontalAlign = "";
  this.emptyTextRowCellIndices = null;
  this.accessibilityHelper = null;
  this.accessibilityHelperID = "";
  this.allowMultipleCallbacks = false;
  this.isCallbackMode = false;
  this.callbackPageSize = -1;
  this.isTopSpacerVisible = false;
  this.isBottomSpacerVisible = false;
  this.serverIndexOfFirstItem = 0;
  this.scrollHelper = null;
  this.changeSelectAfterCallback = 0;
  this.ownerControl = null;
  this.SampleItem = null;
  this.sampleHeaderRow = null;
  this.scrollDivElement = null;
  this.scrollPageSize = 4;
  this.itemsValue = [];
  this.cachedValue = null;
  this.tempCache = new ListBoxTemporaryCache();
  this.sizingConfig.adjustControl = true;
  this.disableScrolling = false;
  this.icbFocusedStyle = null;
  this.icbImageProperties = null;
  this.internalCheckBoxCollection = null;
  this.focusableCheckInput = null;
  this.nativeCheckOnFocusHandler = null;
 },
 Initialize: function() {   
  this.LockScrollHandler();
  this.InitScrollPos();
  if((ASPx.Browser.WebKitTouchUI || (ASPx.Browser.WindowsPhonePlatform && ASPx.Browser.IE)) && !this.disableScrolling)
   ASPx.TouchUIHelper.MakeScrollable(this.GetScrollDivElement(), {showHorizontalScrollbar: false});
  this.CreateInternalCheckBoxCollection();
  this.InitSelection();
  this.AdjustControl();
  this.InitializeLoadOnDemand();
  this.UnlockScrollHandler();
  this.freeUniqIndex = this.GetItemCount();
  ASPxClientEdit.prototype.Initialize.call(this);
  if(ASPx.Browser.Firefox)
   ASPx.Attr.SetAttribute(this.GetScrollDivElement(), "tabIndex", "-1");
 },
 InitDXTextAttributes: function(){
  if(this.emptyTextRowCellIndices != null){
   var itemWithDXTextCount = this.emptyTextRowCellIndices.length;
   for(var i = 0; i < itemWithDXTextCount; i++){
    var itemIndex = this.emptyTextRowCellIndices[i][0];
    var cellIndices = this.emptyTextRowCellIndices[i][1];
    var itemRow = this.GetItemRow(itemIndex);
    for(var j = 0; j < cellIndices.length; j++){
     ASPx.Attr.SetAttribute(itemRow.cells[cellIndices[j]], "DXText", "");
    }
   }
  }
 },
 InitSelection: function(){
  var valueFromLastTime = this.GetValueFromValueInput();
  if(this.MultiSelectionMode()){
   if(valueFromLastTime != ""){
    var serialiser = this.GetSerializingHelper();
    var selectedValuesFromLastTime = serialiser.DeserializeValues(valueFromLastTime);
    var selectedIdicesFromLastTime = [];
    for(var i = 0; i < selectedValuesFromLastTime.length; i++)
     selectedIdicesFromLastTime.push(this.FindItemIndexByValue(selectedValuesFromLastTime[i]));
    this.SelectIndices(selectedIdicesFromLastTime);
   } else
    this.SelectIndices(this.initSelectedIndices);
  } else {
   var selectedIndex = (valueFromLastTime != "") ? 
    this.FindItemIndexByValue(valueFromLastTime) : this.GetSelectedIndexInternal();
   this.SetSelectedIndexInternal(selectedIndex);
   this.SelectIndexSilent(selectedIndex);
  }
  this.CacheValue();
 },
 CreateInternalCheckBoxCollection: function() {
  if(this.IsNativeCheckBoxes() || this.internalCheckBoxCollection)
   return;
  this.internalCheckBoxCollection = new ASPx.CheckBoxInternalCollection(this.icbImageProperties, false, false, null, true, this.accessibilityCompliant);
  var count = this.GetItemCount();
  var enabled = this.GetEnabled();
  var changeEventMethod = ASPx.Attr.ChangeEventsMethod(enabled);
  for(var i = 0; i < count; i++)
   this.AddInternalCheckBoxToCollectionCore(i, enabled, changeEventMethod);
 },
 AddInternalCheckBoxToCollection: function(index) {
  if(!this.internalCheckBoxCollection)
   return;
  var enabled = this.GetEnabled();
  var changeEventMethod = ASPx.Attr.ChangeEventsMethod(enabled);
  this.AddInternalCheckBoxToCollectionCore(index, enabled, changeEventMethod);
 },
 AddInternalCheckBoxToCollectionCore: function(index, enabled, changeEventMethod) {
  var inputElement = this.GetItemCheckBoxInput(index)
  if(inputElement) {
   var internalCheckBox = this.internalCheckBoxCollection.Add(this.GetInternalCheckBoxKey(index), inputElement);
   internalCheckBox.CreateFocusDecoration(this.icbFocusedStyle);
   internalCheckBox.SetEnabled(enabled);
   internalCheckBox.autoSwitchEnabled = false;
   var checkBoxFocusableElement = this.GetCheckBoxFocusableElement(index);
   this.ChangeSpecialInputEnabledAttributes(checkBoxFocusableElement, changeEventMethod, true);
   internalCheckBox.CheckedChanged.AddHandler(
    function(s, e) {
     if(ASPx.Evt.GetKeyCode(e) == ASPx.Key.Space) {
      var element = ASPx.Evt.GetEventSource(e);
      this.GetItemSelectionHelper().OnItemCheckBoxClick(this.FindInternalCheckBoxIndex(element), e);
     }
    }.aspxBind(this)
   );
   internalCheckBox.Focus.AddHandler(
    function(s, e) {
     var index = this.FindInternalCheckBoxIndex(s.mainElement);
     window.setTimeout(function() { this.ScrollToItemVisible(index); }.aspxBind(this), 50);
    }.aspxBind(this)
   );
  }
 },
 ClearInternalCheckBoxCollection: function() {
  if(this.internalCheckBoxCollection)
   this.internalCheckBoxCollection.Clear();
 },
 RemoveInternalCheckBoxFromCollecntion: function(index) {
  if(this.internalCheckBoxCollection)
   this.internalCheckBoxCollection.Remove(this.GetItemValue(index));
 },
 GetInternalCheckBoxKey: function(index) {
  return this.name + nameSeparator + this.GetItemValue(index);
 },
 GetInternalCheckBox: function (index) {
  if(this.internalCheckBoxCollection == null)
   this.CreateInternalCheckBoxCollection()
  if(this.internalCheckBoxCollection)
   return this.internalCheckBoxCollection.Get(this.GetInternalCheckBoxKey(index));
  return null;
 },
 IsNativeCheckBoxes: function() {
  return !this.icbImageProperties;
 },
 SetCheckBoxChecked: function(index, checked) {
  if(this.IsNativeCheckBoxes()) {
   var checkBox = this.GetItemCheckBoxInput(index);
   checkBox.checked = checked;
  }
  else {
   var internalCheckBox = this.GetInternalCheckBox(index);
   internalCheckBox.SetValue(checked ? ASPx.CheckBoxInputKey.Checked : ASPx.CheckBoxInputKey.Unchecked);
  }
 },
 SetCheckBoxEnabled: function(index, enabled) {
  var inputElement; 
  if(this.IsNativeCheckBoxes()) {
   var checkbox = this.GetItemCheckBoxInput(index);
   checkbox.disabled = !enabled;
   this.ChangeNativeCheckEnabledAttributes(checkbox, ASPx.Attr.ChangeEventsMethod(this.GetEnabled()));
   inputElement = checkbox;
  }
  else {
   var internalCheckBox = this.GetInternalCheckBox(index);
   internalCheckBox.SetEnabled(enabled);
   inputElement = internalCheckBox.inputElement;
  }
  this.ChangeSpecialInputEnabledAttributes(inputElement, ASPx.Attr.ChangeEventsMethod(enabled));
 },
 ClearItems: function() {
  ASPxClientListBoxBase.prototype.ClearItems.call(this);
  this.ClearInternalCheckBoxCollection();
  this.freeUniqIndex = this.GetItemCount();
 },
 OnDelayedSpecialFocusMouseDown: function(evt) {
  if(this.GetIsCheckColumnExists())
   this.SetFocusableCheckInput(this.GetCheckBoxInputFromEvent(evt));
  ASPxClientListBoxBase.prototype.OnDelayedSpecialFocusMouseDown.call(this, evt);
  var shiftPressed = evt.shiftKey;
  var ctrlKey = evt.ctrlKey || evt.metaKey;
  if(shiftPressed || ctrlKey){
   ASPx.Selection.Clear();
   if(ASPx.Browser.IE)
    ASPx.Evt.PreventEventAndBubble(evt);
  }
 },
 GetCheckBoxInputFromEvent: function(evt) {
  var element = ASPx.Evt.GetEventSource(evt);
  if(this.IsNativeCheckBoxes())
   return element.type == "checkbox" ? element : null;
  var index = this.FindInternalCheckBoxIndex(element);
  return index > -1 ? this.GetCheckBoxFocusableElement(index) : null;
 },
 GetCheckBoxFocusableElement: function(index) {
  return this.accessibilityCompliant ? this.GetInternalCheckBox(index).mainElement : this.GetInternalCheckBox(index).inputElement;
 },
 FindInternalCheckBoxIndex: function(element) {
  var level = 5;
  while(level > 0) {
   var id = element.id;
   if(id && element.tagName == "TD" && id.slice(-1) == lbIPostfixes[0])
    return element.parentNode.rowIndex;
   element = element.parentNode;
   level--;
  }
  return -1;
 },
 IsCheckBoxClicked: function(evt) {
  return !!this.GetCheckBoxInputFromEvent(evt);
 },
 GetFocusableInputElement: function() {
  return this.focusableCheckInput || this.GetInputElement();
 },
 SetFocusableCheckInput: function(element) {
  this.focusableCheckInput = element;
 },
 OnFocusCore: function() {
  if(this.UseDelayedSpecialFocus())
   window.clearTimeout(this.specialFocusTimer);
  if(this.focused) {
   this.UnlockFocusEvents();
   return;
  }
  ASPxClientListBoxBase.prototype.OnFocusCore.call(this);
 },
 OnLostFocusCore: function() {
  if(!this.IsFocusEventsLocked())
   this.SetFocusableCheckInput(null);
  ASPxClientListBoxBase.prototype.OnLostFocusCore.call(this);
 },
 GetValueFromValueInput: function(){
  if(this.ShouldRestoreSelectionAfterBackPressed()){
   var valueInput = this.FindStateInputElement();
   if(ASPx.IsExistsElement(valueInput))
    return valueInput.value;
  }
  return "";
 },
 ShouldRestoreSelectionAfterBackPressed: function(){
  return ASPx.Browser.IE || ASPx.Browser.Chrome;
 },
 GetInitSelectedIndex: function(){
  return this.savedSelectedIndex;
 },
 CacheValue: function(){
  this.cachedValue = this.GetValue();
 },
 InitScrollPos: function(){ 
  if(!this.isComboBoxList && this.isCallbackMode && this.GetInitSelectedIndex() == -1)
   this.GetScrollDivElement().scrollTop = 0;
 },
 InitializeLoadOnDemand: function(){
  var loadOnDemandRequired = this.isCallbackMode && this.GetEnabledByServer();
  this.scrollHelper = loadOnDemandRequired ? new ListBoxScrollCallbackHelper(this) : new ListBoxScrollCallbackHelperBase(this);
 },
 InlineInitialize: function(){
  this.InitializeNativeCheckHandlers();
  this.LockScrollHandler();
  if(!this.disableScrolling)
   this.InitSpecialKeyboardHandling();
  this.InitializeItemsAttributes();
  this.InitDXTextAttributes();
  this.GenerateStateItems();
  this.UnlockScrollHandler();
  ASPxClientListBoxBase.prototype.InlineInitialize.call(this);
 },
 InitializeNativeCheckHandlers: function() {
  this.nativeCheckOnFocusHandler = function(evt) {
   this.SetFocusableCheckInput(ASPx.Evt.GetEventSource(evt));
  }.aspxBind(this);
 },
 ChangeNativeCheckEnabledAttributes: function(element, method) {
  if(this.nativeCheckOnFocusHandler)
   method(element, "focus", this.nativeCheckOnFocusHandler);
 },
 InitializeItemsAttributes: function() { 
  var listTable = this.GetListTable();
  if(this.isHasFakeRow){
   this.LockSynchronization();
   this.ClearItems();
   this.UnlockSynchronization();
  }
  listTable.ListBoxId = this.name;  
  var rows = listTable.rows;
  var count = this.GetItemCount();
  if(this.accessibilityCompliant && this.IsMultiColumn())
   count--;
  var rowIdConst = this.name + "_";
  if(this.hasSampleItem)
   this.InitializeItemAttributes(this.GetSampleItemRow(), rowIdConst + lbSIIdSuffix);
  rowIdConst += lbIIdSuffix;
  for(var i = 0; i < count; i ++)
   this.InitializeItemAttributes(rows[i], rowIdConst + i);
  if(this.accessibilityCompliant && rows[count])
   rows[count].id = this.GetAccessibilityHeaderRowID();
 },
 InitializeItemAttributes: function(row, rowId) {
  var cells = row.cells;
  var itemCellsIdSuffixes = this.GetItemCellsIdPostfixes();
  for(var i = 0; i < row.cells.length; i++) {
   cells[i].style.textAlign = this.itemHorizontalAlign;
   cells[i].id = rowId + itemCellsIdSuffixes[i];
  }
  if(this.GetIsCheckColumnExists() && this.IsNativeCheckBoxes() && rowId != this.GetSampleItemRowID()) {
   var input = this.GetItemCheckBoxInput(row.rowIndex);
   this.ChangeNativeCheckEnabledAttributes(input, ASPx.Attr.ChangeEventsMethod(this.GetEnabled()));
   this.ChangeSpecialInputEnabledAttributes(input, ASPx.Attr.ChangeEventsMethod(this.GetEnabled()));
  }
 },
 InitializePageSize: function(){
  var divElement = this.GetScrollDivElement();
  var listTable = this.GetListTable();
  var count = this.GetItemCount();
  if(divElement && count > 0)
   this.scrollPageSize = Math.round(divElement.clientHeight / listTable.rows[0].offsetHeight) - 1;
 },
 GenerateStateItems: function() {
  if(typeof(ASPx.GetStateController) == "undefined") return;
  var itemCellsIdSuffixes = this.GetItemCellsIdPostfixes();
  var count = this.GetItemCount();
  var constName = this.name + "_" + lbIIdSuffix;
  var name = "";
  var controller = ASPx.GetStateController();
  var i = this.hasSampleItem ? -1 : 0 ;
  for(; i < count; i ++){
   name = constName + i;
   if(!ASPx.Browser.WebKitTouchUI)
    controller.AddHoverItem(name, this.hoverClasses, this.hoverCssArray, itemCellsIdSuffixes, null, null, true);
   controller.AddSelectedItem(name, this.selectedClasses, this.selectedCssArray, itemCellsIdSuffixes, null, null, true);
   controller.AddDisabledItem(name, this.disabledClasses, this.disabledCssArray, itemCellsIdSuffixes, null, null, true);
  }
 },
 AfterInitialize: function() {
  if(this.disableScrolling) {
   var scrollDiv = this.GetScrollDivElement();
   var mainElement = this.GetMainElement();
   scrollDiv.style.height = mainElement.style.height = ASPx.GetClearClientHeight(this.GetListTable()) + "px";
  }
  this.CallbackSpaceInit(true);
  if(this.accessibilityCompliant)
   this.accessibilityHelper = new AccessibilityHelperListBox(this);
  this.constructor.prototype.AfterInitialize.call(this);
 },
 GetEnabledByServer: function(){
  return this.enabled;
 },
 SetEnabled: function(enabled){  
  ASPxClientListBoxBase.prototype.SetEnabled.call(this, enabled);
  this.CallbackSpaceInit(false);
 },
 CallbackSpaceInit: function(isInitialization){
  if(this.isCallbackMode){
   this.SetBottomScrollSpacerVisibility(this.GetScrollSpacerVisibility(false));
   this.SetTopScrollSpacerVisibility(this.GetScrollSpacerVisibility(true));
   if(isInitialization || this.isComboBoxList){
    this.EnsureSelectedItemVisible();
    ASPx.Evt.AttachEventToElement(this.GetScrollDivElement(), "scroll", aspxLBScroll);
   }
  }
 },
 GetListTable: function() {
  return this.tempCache.Get("ListTable", this.GetListTableCore, this);
 },
 GetListTableCore: function(){
  if(!ASPx.IsExistsElement(this.listTable))
   this.listTable = ASPx.GetElementById(this.name + lTableIdSuffix);
  return this.listTable;
 },
 GetListTableHeight: function(){
  return this.GetListTable().offsetHeight;
 },
 GetHeaderDivElement: function(){
  if(!ASPx.IsExistsElement(this.headerDiv))
   this.headerDiv = ASPx.GetElementById(this.name + lbHeaderDivIdSuffix);
  return this.headerDiv;
 },
 GetHeaderTableElement: function(){
  if(!ASPx.IsExistsElement(this.headerTable)){
   var headerDiv = this.GetHeaderDivElement();
   this.headerTable = ASPx.GetNodeByTagName(headerDiv, "table", 0);
  }
  return this.headerTable;
 },
 GetScrollDivElement: function(){
  if(!ASPx.IsExistsElement(this.scrollDivElement))
   this.scrollDivElement = document.getElementById(this.name + lbDSuffix);
  return this.scrollDivElement;
 },
 GetItemElement: function(index) {
  var itemElement = this.GetItemRow(index);
  return itemElement ? itemElement.cells[0] : null;
 },
 GetItemRow: function(index){
  var listTable = this.GetListTable();
  if(listTable && index >= 0)
   return listTable.rows[index] || null;
  return null;
 },
 GetItemTexts: function(item) {
  return item.texts ? item.texts : [ item.text ];
 },
 GetItemCount: function(){
  var lbt = this.GetListTable();
  if(lbt) {
   var rowLength = lbt.rows.length;
   if(!!this.GetAccessibilityHeaderRow())
    rowLength--;
   return rowLength;
  }
  return 0;
 },
 GetVisibleItemCount: function(){
  var lbTable = this.GetListTable();
  var count = this.GetItemCount();
  var visibleItemCount = 0;
  for(var i = 0; i < count; i ++){
   if(ASPx.GetElementDisplay(lbTable.rows[i]))
    visibleItemCount++;
  }
  return visibleItemCount;
 },
 GetIndexVisibleItem: function(item) {
  var lbTable = this.GetListTable();
  var count = this.GetItemCount();
  var visibleItemCount = 0;
  for(var i = 0; i < count; i ++){
   if(ASPx.GetElementDisplay(lbTable.rows[i]))
    visibleItemCount++;
   var curItem = this.GetItem(i);
   if(item.value === curItem.value && item.text === curItem.text)
    break;
  }
  return visibleItemCount;
 },
 GetItemCellCount: function(){
  if(this.hasSampleItem)
   return this.GetSampleItemRow().cells.length;
  else if(this.GetItemCount() > 0){
   var listTable = this.GetListTable();
   return listTable.rows[0].cells.length;
  }
  return 0;
 },
 GetItemTextCellCount: function(){
  return this.GetItemCellCount() - this.GetItemFirstTextCellIndex();
 },
 GetItemFirstTextCellIndex: function(){
  var itemFirstTextCellIndex  = 0;
  if(this.GetIsCheckColumnExists())
   itemFirstTextCellIndex++;
  if(this.imageCellExists)
   itemFirstTextCellIndex++;
  return itemFirstTextCellIndex;
 },
 GetItemFirstTextCell: function(index){
  var rowElement = this.GetItemRow(index);
  if(rowElement == null) 
   return null;
   return rowElement.cells[this.GetItemFirstTextCellIndex()];
 },
 GetItemTopOffset: function(index){
  var itemElement = this.GetItemElement(index);
  return (itemElement != null) ? itemElement.offsetTop + this.GetTopScrollSpacerHeight() : 0;
 },
 GetItemHeight: function(index){
  var itemElement = this.GetItemElement(index);
  return (itemElement != null) ? itemElement.offsetHeight : 0;
 },
 GetItemCheckBoxInput: function(index){
  var itemRow = this.GetItemRow(index);
  var checkBoxCell = itemRow.cells[this.GetCheckBoxCellIndex()];
  return ASPx.GetNodesByTagName(checkBoxCell, "input")[0];
 },
 GetItemImageUrl: function(item) {
  return item.imageUrl != "" ? item.imageUrl : this.defaultImageUrl;
 },
 GetIsCheckColumnExists: function(){
  if(!this.checkCellExists)
   this.checkCellExists = this.CheckColumnSelectionMode();
  return this.checkCellExists;
 },
 GetCheckBoxCellIndex: function(){
  return 0;
 },
 GetImageCellIndex: function(){
  return this.GetIsCheckColumnExists() ? 1 : 0;
 },
 GetItemCellsIdPostfixes: function(){
  if(this.itemCellsIdPostfixes == null){
   this.itemCellsIdPostfixes = [];
   var i = 0;
   if(this.GetIsCheckColumnExists()) {
    this.itemCellsIdPostfixes.push(lbIPostfixes[0]);
    i++;
   }
   if(this.imageCellExists){
    this.itemCellsIdPostfixes.push(lbIPostfixes[1]);
    i++;
   }
   var cellCount = this.GetItemCellCount();
   for(; i < cellCount; i++) 
    this.itemCellsIdPostfixes.push(lbIPostfixes[2] + i);
  }
  return this.itemCellsIdPostfixes;
 },
 AdjustControl: function (nestedCall) {
  if(this.IsAdjustmentRequired()) 
   this.heightCorrected = false;
  ASPxClientEdit.prototype.AdjustControl.call(this, nestedCall);
 },
 AdjustControlCore: function(){
  if(this.disableScrolling)
   return;
  ASPxClientEdit.prototype.AdjustControlCore.call(this);
  this.CorrectSize();
  this.EnsureSelectedItemVisible();
  if(!this.isComboBoxList && ASPx.Browser.IE) 
   this.CorrectWidth();
 },
 CorrectSize: function() {
  if(this.isComboBoxList || this.disableScrolling)
   return;
  this.LockScrollHandler();
  this.CorrectHeight();
  this.CorrectWidth();
  this.InitializePageSize();
  this.UnlockScrollHandler();
 },
 OnCorrectSizeByTimer: function() {
  if(this.IsVisible())
   this.CorrectSize();
 }, 
 SetProtectionFromFlick_inFF: function(changeVisibility, changeDisplay){
  if(!ASPx.Browser.Firefox) return;
  var listTable = this.GetListTable();
  if(changeVisibility)
   listTable.style.visibility = "hidden";
  if(changeDisplay)
   listTable.style.display = "none";
 },
 ResetProtectionFromFlick_inFF: function(){
  if(!ASPx.Browser.Firefox) return;
  var listTable = this.GetListTable();
  listTable.style.visibility = "";
  listTable.style.display = "";
 },
 CorrectHeight: function(){
  if(ASPx.Browser.Firefox && this.heightCorrected) return; 
  this.heightCorrected = true;
  var mainElement = this.GetMainElement();
  var divElement = this.GetScrollDivElement();
  divElement.style.height = "0px";
  var height = mainElement.offsetHeight;
  divElement.style.height = height + "px";
  var extrudedHeight = mainElement.offsetHeight;
  var heightCorrection = extrudedHeight - height;
  if(heightCorrection > 0){
   var divHeight = divElement.offsetHeight;
   this.SetProtectionFromFlick_inFF(true, false);
   divElement.style.height = (divHeight - heightCorrection) + "px";
   this.ResetProtectionFromFlick_inFF(); 
   extrudedHeight = mainElement.offsetHeight;
   var paddingsHeightCorrection = extrudedHeight - height;
   if(paddingsHeightCorrection > 0)
    divElement.style.height = (divHeight - heightCorrection - paddingsHeightCorrection) + "px";
  } 
 },
 IsMultiColumn: function(){
  return this.columnFieldNames.length > 0;
 },
 CorrectWidth: function(){
  if(this.IsMultiColumn())
   this.CorrectMultiColumnWidth();
  else
   this.CorrectNonMultiColumnWidth();
 },
 CorrectMultiColumnWidth: function(){
  var scrollDivElement = this.GetScrollDivElement();
  var scrollBarWidth = this.GetVerticalScrollBarWidth(); 
  this.CorrectMultiColumnHeaderWidth(scrollBarWidth);
 },
 CollapseMultiColumnHeaderWidth:function(){
  var headerDivElement = this.GetHeaderDivElement();
  headerDivElement.style.width = "0px";
 },
 CorrectMultiColumnHeaderWidth: function(scrollBarWidth){
  var scrollDivElement = this.GetScrollDivElement();
  var headerDivElement = this.GetHeaderDivElement();
  if(ASPx.IsExistsElement(headerDivElement)){
   var headerTable;
   if(ASPx.Browser.WebKitFamily){
    headerTable = this.GetHeaderTableElement();
    if(!ASPx.IsExistsElement(headerTable))
     headerTable = null;
   }
   if(headerTable)
    headerTable.style.width = "0";
   if(this.rtl)
    headerDivElement.style.paddingLeft = scrollBarWidth + "px";
   else
    headerDivElement.style.paddingRight = scrollBarWidth + "px";
   if(headerTable)
    window.setTimeout(function() { headerTable.style.width = "100%"; }, 0);
  }
 },
 CorrectNonMultiColumnWidth: function(){
  var divElement = this.GetScrollDivElement();
  if(this.width == ""){
   var listTable = this.GetListTable();
   var mainElement = this.GetMainElement();
   if(listTable.offsetWidth != 0 || !ASPx.Browser.NetscapeFamily){ 
    divElement.style.width = (listTable.offsetWidth + this.GetVerticalScrollBarWidth()) + "px";
    if(ASPx.Browser.Firefox) 
     mainElement.style.width = divElement.offsetWidth + "px";
   }
  } else {  
   var mainElement = this.GetMainElement();  
   mainElement.style.width = this.width;
   if(this.width !== "100%") {
    divElement.style.width = ASPx.Browser.WebKitFamily ? "1px" : "0px";
    divElement.style.width = mainElement.clientWidth + "px";
   }
  }
 },
 UpdateAdjustmentFlags: function() {
  var mainElement = this.GetMainElement();
  if(mainElement) {
   var mainElementStyle = ASPx.GetCurrentStyle(mainElement);
   this.UpdatePercentSizeConfig([this.width], [mainElementStyle.height, mainElement.style.height]);
  }
 },
 EnsureSelectedItemVisible: function(){
  var index = this.GetSelectedIndex();
  if(index != -1)
   this.MakeItemVisible(index);
 },
 MakeItemVisible: function(index){
  if(!this.IsItemVisible(index))
   this.ScrollItemToTop(index);
 },
 IsItemVisible: function(index){
  var scrollDiv = this.GetScrollDivElement();
  var itemElement = this.GetItemElement(index);
  var topVisible = false;
  var bottomVisible = false;
  if(itemElement != null){
   var itemOffsetTop = itemElement.offsetTop + this.GetTopScrollSpacerHeight();
   topVisible = itemOffsetTop >= scrollDiv.scrollTop;
   bottomVisible = itemOffsetTop + itemElement.offsetHeight < scrollDiv.scrollTop + scrollDiv.clientHeight;
  }
  return (topVisible && bottomVisible);
 },
 ScrollItemToTop: function(index){
  this.LockScrollHandler();
  this.SetScrollTop(this.GetItemTopOffset(index));
  this.UnlockScrollHandler();
 },
 ScrollToItemVisible: function(index){
  if(!this.IsItemVisible(index)){
   var scrollDiv = this.GetScrollDivElement();
   var scrollTop = scrollDiv.scrollTop;
   var scrollDivHeight = scrollDiv.clientHeight;
   var itemOffsetTop = this.GetItemTopOffset(index);
   var itemHeight = this.GetItemHeight(index);
   var itemAbove = scrollTop > itemOffsetTop;
   var itemBelow = scrollTop  + scrollDivHeight < itemOffsetTop + itemHeight;
   if(itemAbove)
    scrollDiv.scrollTop = itemOffsetTop;
   else if(itemBelow){
    var scrollPaddings = scrollDiv.scrollHeight - this.GetListTable().offsetHeight - 
     this.GetTopScrollSpacerHeight() - this.GetBottomScrollSpacerHeight();
    scrollDiv.scrollTop = itemOffsetTop + itemHeight - scrollDivHeight + scrollPaddings;
   }
  }
 },
 SetScrollTop: function(scrollTop){
  var scrollDiv = this.GetScrollDivElement();
  if(scrollDiv){ 
   scrollDiv.scrollTop = scrollTop;
   if(ASPx.Browser.Opera) 
    this.CachedScrollTop();
  }   
 },
 CachedScrollTop: function(){
  var scrollDiv = this.GetScrollDivElement();
  scrollDiv.cachedScrollTop = scrollDiv.scrollTop;
 },
 RestoreScrollTopFromCache: function(){
  var scrollDiv = this.GetScrollDivElement();
  if(scrollDiv && ASPx.IsExists(scrollDiv.cachedScrollTop))
   scrollDiv.scrollTop = scrollDiv.cachedScrollTop;
 },
 IsListBoxWidthLessThenList: function(){
  var divElement = this.GetScrollDivElement();
  var listTable = this.GetListTable();
  var listTabelWidth = listTable.style.width;
  var isLess = false;
  listTable.style.width = "";
  isLess = listTable.offsetWidth < divElement.offsetWidth;
  listTable.style.width = listTabelWidth;
  return isLess;
 },
 GetVerticalScrollBarWidth: function(){
  var divElement = this.GetScrollDivElement(); 
  if(!this.verticalScrollBarWidth || this.verticalScrollBarWidth <= 0){
   this.verticalScrollBarWidth = this.GetVerticalScrollBarWidthCore(divElement);
   return this.verticalScrollBarWidth;
  } else
   return this.GetIsVerticalScrollBarVisible(divElement) ? this.verticalScrollBarWidth : 0;
 },
 GetIsVerticalScrollBarVisible: function(divElement){
  var verticalOverflow = this.GetVerticalOverflow(divElement);
  if(verticalOverflow != "auto"){ 
   var listTable = this.GetListTable();
   return divElement.clientHeight < listTable.offsetHeight;
  } else {
   var borderWidthWithScroll = divElement.offsetWidth - divElement.clientWidth;
   return borderWidthWithScroll == this.scrollDivBordersWidthWithScroll;
  }
 },
 GetVerticalScrollBarWidthCore: function(divElement){
  var overflowYReserv = this.GetVerticalOverflow(divElement);
  this.SetVerticalOverflow(divElement, "auto");
  this.scrollDivBordersWidthWithScroll = divElement.offsetWidth - divElement.clientWidth;
  if(ASPx.Browser.IE)
   return this.scrollDivBordersWidthWithScroll; 
  this.SetProtectionFromFlick_inFF(false, true);
  this.SetVerticalOverflow(divElement, "hidden");
  var bordersWidthWithoutScroll = divElement.offsetWidth - divElement.clientWidth;
  this.SetVerticalOverflow(divElement, overflowYReserv);
  this.ResetProtectionFromFlick_inFF();
  return this.scrollDivBordersWidthWithScroll - bordersWidthWithoutScroll;
 },
 GetVerticalOverflow: function(element){
  if(ASPx.Browser.IE || ASPx.Browser.Safari && ASPx.Browser.Version >= 3 || ASPx.Browser.Chrome)
   return element.style.overflowY;
  return element.style.overflow;
 },
 SetVerticalOverflow: function(element, value) {
  if(ASPx.Browser.IE || ASPx.Browser.Safari && ASPx.Browser.Version >= 3 || ASPx.Browser.Chrome || ASPx.Browser.AndroidDefaultBrowser) {
   element.style.overflowY = value;
  } else {
   element.style.overflow = value;
  }
 },
 MultiSelectionMode: function(){
  return this.selectionMode != ListBoxSelectionMode.Single;
 },
 CheckColumnSelectionMode: function(){
  return this.selectionMode == ListBoxSelectionMode.CheckColumn;
 },
 OnItemClick: function(index, evt){
  if(!this.isInitialized) 
   return;
  if(this.readOnly)
   return this.OnItemClickOrDblClickReadOnly();
  if(this.CheckColumnSelectionMode() && this.IsCheckBoxClicked(evt))
   this.GetItemSelectionHelper().OnItemCheckBoxClick(index, evt);
  else
   this.GetItemSelectionHelper().OnItemClick(index, evt);
  this.SetFocus();
  this.RaiseItemClick();
 },
 OnItemClickOrDblClickReadOnly: function(){
  return false;
 },
 OnItemDblClick: function(){
  if(this.readOnly)
   return this.OnItemClickOrDblClickReadOnly();
  return this.RaiseItemDoubleClick();
 },
 CanChangeSelection: function(){
  return !this.readOnly || !this.isInitialized;
 },
 SelectIndexSilent: function(index){ 
  return this.SetItemSelectionStateSilent(index);
 },
 SetItemSelectionStateSilent: function(index){
  if(!this.CanChangeSelection())
   return;
  var oldSelectionIndex = this.GetSelectedIndex();
  this.LockSelectionEvents();
  this.SetSelectedIndexCore(index);
  this.UnlockSelectionEvents();
  return index != oldSelectionIndex;
 },
 SetItemSelectionAppearance: function(index, selected, controller){
  if(!this.CanChangeSelection())
   return;
  if(!controller)
   controller = ASPx.GetStateController();
  if(!this.isInitialized)
   this.SetHoverElement(null);
  var itemFirstTextCell = this.GetItemFirstTextCell(index);
  if(selected)
   controller.SelectElementBySrcElement(itemFirstTextCell);
  else
   controller.DeselectElementBySrcElement(itemFirstTextCell);
  if(!this.isInitialized)
   this.SetHoverElement(itemFirstTextCell);
 },
 GetItemSelectionHelper: function(){
  if(!this.itemSelectionHelper)
   this.itemSelectionHelper = this.CreateItemSelectionHelper();
  return this.itemSelectionHelper;
 },
 CreateItemSelectionHelper: function(){
  if(this.selectionMode == ListBoxSelectionMode.Single)
   return new ListBoxSingleSelectionHelper(this);
  else if(this.selectionMode == ListBoxSelectionMode.Multiple)
   return new ListBoxMultiSelectionHelper(this);
  else if(this.selectionMode == ListBoxSelectionMode.CheckColumn)
   return new ListBoxCheckSelectionHelper(this);
 },
 GetValue: function(){
  var index = this.GetSelectedIndex();
  if(0 <= index && index < this.itemsValue.length)
   return this.itemsValue[index];
  return null;
 },
 SetValue: function(value){
  var index = this.FindItemIndexByValue(value);
  this.SetSelectedIndex(index);
 },
 GetSelectedItem: function(){
  var index = this.GetSelectedIndex();
  return this.GetItem(index);
 },
 GetSelectedIndex: function(){
  if(!this.isInitialized)
   return this.GetSelectedIndexInternal();
  return this.GetItemSelectionHelper().GetSelectedIndex();
 },
 SetSelectedIndex: function(index){
  this.LockSelectionEvents();
  this.SetSelectedIndexCore(index);
  this.EnsureSelectedItemVisible(index);
  this.UnlockSelectionEvents();
 },
 SetSelectedIndexCore: function(index){
  this.GetItemSelectionHelper().SetSelectedIndex(index);
 },
 GetSelectedIndices: function(){
  return this.GetItemSelectionHelper().GetSelectedIndices();
 },
 GetSelectedValues: function(){ 
  return this.GetItemSelectionHelper().GetSelectedValues();
 },
 GetSelectedItems: function(){
  return this.GetItemSelectionHelper().GetSelectedItems();
 },
 SelectAll: function(){
  this.SelectIndices();
 },
 UnselectAll: function(){
  this.UnselectIndices();
 },
 SelectIndices: function(indices){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectIndices(indices);
  this.UnlockSelectionEvents();
 },
 SelectItems: function(items){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectItems(items);
  this.UnlockSelectionEvents();
 },
 SelectValues: function(values){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectValues(values);
  this.UnlockSelectionEvents();
 },
 UnselectIndices: function(indices){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectIndices(indices);
  this.UnlockSelectionEvents();
 },
 UnselectItems: function(items){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectItems(items);
  this.UnlockSelectionEvents();
 },
 UnselectValues: function(values){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectValues(values);
  this.UnlockSelectionEvents();
 },
 GetIsItemSelected: function(index){
  return this.GetItemSelectionHelper().GetIsItemSelected(index);
 },
 GetFocusedIndex: function(){
  return this.GetItemSelectionHelper().GetFocusedIndex();
 },
 UpdateInternalState: function(){
  this.UpdateHiddenInputs();
 },
 IsUpdateHiddenInputsLocked: function(){
  return this.GetItemSelectionHelper().IsUpdateInternalSelectionStateLocked();
 },
 UpdateHiddenInputs: function(){
  if(this.IsUpdateHiddenInputsLocked())
   return;
  if(this.MultiSelectionMode()){ 
   var element = this.FindStateInputElement();
   if(ASPx.IsExistsElement(element)) {
    var sb = [ ];
    var serialiser = this.GetSerializingHelper();
    var selectedIndices = this.GetSelectedIndices();
    for(var i = 0; i < selectedIndices.length; i++)
     serialiser.SerializeAtomValue(sb, this.GetItemValue(selectedIndices[i]));
    element.value = sb.join("");
   }
  } else 
   ASPxClientListBoxBase.prototype.UpdateHiddenInputs.call(this);
 },
 UseDelayedSpecialFocus: function() { 
  return true;
 },
 ShowLoadingPanel: function() { 
  if(!this.isComboBoxList){
   var loadingParentElement = this.GetScrollDivElement().parentNode;
   var lp = this.CreateLoadingPanelWithAbsolutePosition(loadingParentElement);
   this.PreventMouseWheelOnElement(lp);
  }
 },
 ShowLoadingDiv: function () {
  if(!this.isComboBoxList){
   var loadingParentElement = this.GetScrollDivElement().parentNode;
   var ld = this.CreateLoadingDiv(loadingParentElement);
   this.PreventMouseWheelOnElement(ld);
  }
 },
 PreventMouseWheelOnElement: function(element) {
  if(!element) return;
  var wheelEventName = ASPx.Evt.GetMouseWheelEventName();
  ASPx.Evt.AttachEventToElement(element, wheelEventName, function(evt) {
   if(this.scrollHelper.GetIsAnySpacerVisible())
    ASPx.Evt.PreventEvent(evt);
  }.aspxBind(this));
 },
 ParseCallbackResult: function(result, shouldSelectSilentDelegate){
  var gottenEgdeOfCollection = false;
  var nothingToLoad = result == "[]";
  var isLoadindToTopByScroll = this.scrollHelper.IsScrolledToTopSpacer();
  if(!nothingToLoad){
   var deserializedItems = this.DeserializeItems(result);
   this.LoadItemsFromCallback(isLoadindToTopByScroll, deserializedItems, shouldSelectSilentDelegate);
   gottenEgdeOfCollection = deserializedItems.length != this.callbackPageSize;
  }
  var noMoreItemsForLoadThisDirection = nothingToLoad || gottenEgdeOfCollection;
  this.SetScrollSpacerVisibility(isLoadindToTopByScroll, !noMoreItemsForLoadThisDirection);
  this.scrollHelper.Reset();
 },
 LoadItemsFromCallback: function(isToTop, deserializedItems, shouldSelectSilentDelegate){
  this.LockSynchronizationOnInternalCallback();
  this.BeginUpdate();
  var isMultiSelect = this.MultiSelectionMode();
  this.RemoveAccessibilityHeaderRow();
  if(isToTop){
   var scrollHeightCorrection = 0;
   for(var i = deserializedItems.length - 1; i >= 0; i --){
    this.InsertItem(0, deserializedItems[i].texts, deserializedItems[i].value, this.GetItemImageUrl(deserializedItems[i]));
    scrollHeightCorrection += this.GetItemHeight(0);
   } 
   this.GetScrollDivElement().scrollTop += scrollHeightCorrection;
   this.serverIndexOfFirstItem -= deserializedItems.length;
   if(this.serverIndexOfFirstItem < 0) this.serverIndexOfFirstItem = 0;
  } else {
   for(var i = 0; i < deserializedItems.length; i ++){
    var itemIndex = this.AddItem(deserializedItems[i].texts, deserializedItems[i].value, this.GetItemImageUrl(deserializedItems[i]));
    var shouldSelectSilent = shouldSelectSilentDelegate && shouldSelectSilentDelegate(deserializedItems[i].value, deserializedItems[i].text);
    this.SelectValueOnLoad(itemIndex, deserializedItems[i].selected, shouldSelectSilent, isMultiSelect);
   } 
  }
  if(this.changeSelectAfterCallback != 0) {
   var newIndex = this.GetSelectedIndex() + this.changeSelectAfterCallback;
   newIndex = this.GetAdjustedIndex(newIndex);
   this.SelectIndexSilent(newIndex);
   if(this.scrollHelper.isScrolledToTopSpacer)
    this.ScrollItemToTop(newIndex);
   else
    this.ScrollToItemVisible(newIndex);
  }
  this.AddAccessibilityHeaderRow();
  this.EndUpdate();
  this.UnlockSynchronizationOnInternalCallback();
 },
 SelectValueOnLoad: function (index, selected, shouldSelectSilent, isMultiSelect) {
  if(selected && this.changeSelectAfterCallback == 0) {
   if(isMultiSelect) {
    this.SelectIndices([index]);
   } else {
    if(shouldSelectSilent)
     this.SelectIndexSilent(index);
    else
     this.SelectIndex(index);
   }
  }
 },
 CreateSerializingHelper: function(){
  return new ListBoxItemsSerializingHelper(this);
 },
 InCallback: function(){
  var callbackOwner = this.GetCallbackOwnerControl();
  if(callbackOwner != null)
   return callbackOwner.InCallback();
  return ASPxClientListEdit.prototype.InCallback.call(this);
 },
 GetItemsRangeForLoad: function(){
  return this.scrollHelper.GetItemsRangeForLoad();
 },
 GetScrollSpacerElement: function(isTop){
  return document.getElementById(this.name + (isTop ? lbTSIdSuffix : lbBSIdSuffix));
 },
 GetScrollSpacerVisibility: function(isTop){
  if(!this.clientEnabled)
   return false;
  return isTop ? this.isTopSpacerVisible : this.isBottomSpacerVisible;
 },
 SetScrollSpacerVisibility: function(isTop, visibility){
  this.LockScrollHandler();
  var spacer = this.GetScrollSpacerElement(isTop);
  if(spacer){
   if(visibility)
    spacer.style.height = this.GetScrollDivElement().clientHeight + "px";
   if(this.clientEnabled){
    if(isTop)
     this.isTopSpacerVisible = visibility;
    else
     this.isBottomSpacerVisible = visibility;
   }
   if(ASPx.GetElementDisplay(spacer) != visibility){
    ASPx.SetElementDisplay(spacer, visibility);
    ASPx.GetElementVisibility(spacer, visibility);
   }
  }
  this.UnlockScrollHandler();
 },
 SetTopScrollSpacerVisibility: function(visibility){
  this.SetScrollSpacerVisibility(true, visibility);
 },
 SetBottomScrollSpacerVisibility: function(visibility){
  this.SetScrollSpacerVisibility(false, visibility);
 },
 GetTopScrollSpacerHeight: function(){
  return this.GetScrollSpacerVisibility(true) ? this.GetScrollSpacerElement(true).clientHeight : 0;
 },
 GetBottomScrollSpacerHeight: function(){
  return this.GetScrollSpacerVisibility(false) ? this.GetScrollSpacerElement(false).clientHeight : 0;
 },
 SendCallback: function(){
  if(!this.InCallback()){
   this.ShowLoadingElements();
   var callbackOwner = this.GetCallbackOwnerControl();
   if(callbackOwner != null)
    callbackOwner.SendCallback();
    else {
    var argument = this.GetCallbackArguments();
    this.CreateCallback(argument);
   }
  }
 },
 OnCallback: function(result, shouldSelectSilentDelegate) {
  this.ParseCallbackResult(result, shouldSelectSilentDelegate);
  this.OnCallbackFinally();
 },
 OnCallbackError: function(result){
  ASPxClientListBoxBase.prototype.OnCallbackError.call(this, result);
  this.OnCallbackFinally();
 },
 OnCallbackFinally: function(){
  this.HideLoadingPanel();
  this.changeSelectAfterCallback = 0;
 },
 LockScrollHandler: function(){
  this.scrollHandlerLockCount ++;
 },
 UnlockScrollHandler: function(){
  this.scrollHandlerLockCount --;
 },
 IsScrollHandlerLocked: function(){
  return this.scrollHandlerLockCount > 0;
 },
 OnScroll: function(){
  if(this.IsScrollHandlerLocked()) return;
  if(this.IsVisible() && !this.InCallback() && ( this.GetScrollSpacerVisibility(true) || this.GetScrollSpacerVisibility(false))) {
   this.scrollHelper.OnScroll();
   if(this.scrollHelper.GetIsNeedToHideTopSpacer())
    this.SetTopScrollSpacerVisibility(false);
   if(this.scrollHelper.GetIsNeedCallback())
    this.SendCallback();
  }
 },
 OnBrowserWindowResize: function(evt) {
  if(this.IsVisible())
   this.CorrectSize();
 },
 KeyboardSupportAllowed: function(){
  return !this.CheckColumnSelectionMode();
 },
 InitializeKeyHandlers: function() {
  if(this.KeyboardSupportAllowed()){
   this.AddKeyDownHandler(ASPx.Key.PageUp, "OnPageUp");
   this.AddKeyDownHandler(ASPx.Key.PageDown, "OnPageDown");
   this.AddKeyDownHandler(ASPx.Key.End, "OnEndKeyDown");
   this.AddKeyDownHandler(ASPx.Key.Home, "OnHomeKeyDown");
   this.AddKeyDownHandler(ASPx.Key.Up, "OnArrowUp");
   this.AddKeyDownHandler(ASPx.Key.Down, "OnArrowDown");
  } else if(this.accessibilityCompliant && !this.IsNativeCheckBoxes()) {
   this.AddKeyDownHandler(ASPx.Key.Up, "OnAccessArrowUp");
   this.AddKeyDownHandler(ASPx.Key.Down, "OnAccessArrowDown");
  }
 },
 OnArrowUp: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(-1);
  return true;
 },
 OnArrowDown: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(1);
  return true;
 },
 OnAccessArrowUp: function(evt){
  if(!this.isInitialized) return true;
  var index = this.GetFocusedIndex();
  var isFocused = this.GetInternalCheckBox(index) && this.GetInternalCheckBox(index).focused;
  if(index <= 0 || !isFocused)
   index = this.GetItemCount() - 1;
  else
   index--;
  this.SetFocusedIndex(index);
  return true;
 },
 OnAccessArrowDown: function(evt){
  if(!this.isInitialized) return true;
  var index = this.GetFocusedIndex();
  var isFocused = this.GetInternalCheckBox(index) && this.GetInternalCheckBox(index).focused;
  if(index < 0 || index == this.GetItemCount() - 1 || !isFocused)
   index = 0;
  else
   index++;
  this.SetFocusedIndex(index);
  return true;
 },
 SetFocusedIndex: function(index) {
  if(this.GetIsCheckColumnExists())
   this.GetInternalCheckBox(index).mainElement.focus();
  this.GetItemSelectionHelper().SetFocusedIndexInternal(index, false);
 },
 OnPageUp: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(-this.scrollPageSize);
  return true;
 },
 OnPageDown: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(this.scrollPageSize);
  return true;
 },
 OnHomeKeyDown: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(-this.GetItemCount());
  return true;
 },
 OnEndKeyDown: function(evt){
  if(this.isInitialized)
   this.SelectNeighbour(this.GetItemCount());
  return true;
 },
 GetAdjustedIndex: function(index){
  if(index < 0) index = 0;
  else{
   var itemCount = this.GetItemCount();
   if(index >= itemCount) index = itemCount - 1;
  }
  return index;
 },
 SelectNeighbour: function (step) {
  var itemCount = this.GetItemCount();
  if(itemCount > 0) {
   this.changeSelectAfterCallback = 0;
   var selectedIndex = this.GetFocusedIndex();
   var pageDownSize = step == 1 ? this.scrollPageSize + 1 : this.scrollPageSize; 
   var isFirstPageDown = selectedIndex == -1 && step == pageDownSize && step > 1;
   var newSelectedIndex = isFirstPageDown ? step : selectedIndex + step;
   newSelectedIndex = this.GetAdjustedIndex(newSelectedIndex);
   if(selectedIndex != newSelectedIndex) {
    this.LockScrollOnKBNavigation();
    this.SetSelectedIndexCore(newSelectedIndex);
    this.UnlockScrollOnKBNavigation();
   }
   if(this.GetIsNeedToCallbackLoadItemsToTop(newSelectedIndex, step, itemCount)) {
    this.LoadItemsOnCallback(true, newSelectedIndex);
   } else if(this.GetIsNeedToCallbackLoadItemsToBottom(newSelectedIndex, step, itemCount)) {
    this.LoadItemsOnCallback(false, newSelectedIndex);
   }
   this.ScrollToItemVisible(newSelectedIndex);
  }
 },
 GetIsNeedToCallbackLoadItemsToTop: function(selectedIndex, step, itemCount){
  return this.isCallbackMode && this.GetScrollSpacerVisibility(true) && 
   this.serverIndexOfFirstItem > 0 && ((step < 0 && selectedIndex <= 0) || step <= -itemCount);
 },
 GetIsNeedToCallbackLoadItemsToBottom: function(selectedIndex, step, itemCount){
  return this.isCallbackMode && this.GetScrollSpacerVisibility(false) && 
   ((step > 0 && selectedIndex >= itemCount - 1) || step >= itemCount);
 },
 LoadItemsOnCallback: function(isToTop, index){
  this.changeSelectAfterCallback = index - this.GetSelectedIndex();
  this.scrollHelper.SetItemsRangeForLoad(isToTop);
  this.SendCallback();
 },
 FindInputElement: function(){
  return this.accessibilityCompliant ? this.GetAccessibilityServiceElement() : this.GetKBSInput();
 },
 GetKBSInput: function() {
  return this.GetChildElement("KBS");
 },
 SetHoverElement: function(element){
  ASPx.GetStateController().SetCurrentHoverElementBySrcElement(element);
 },
 InitOnContainerMadeVisible: function(){
  this.AdjustControl();
 },
 ClearItemsCore: function(){
  this.ClearListTableContent();
  this.OnItemsCleared();
  this.SetValue(null);
 },
 OnItemsCleared: function(){
  this.GetItemSelectionHelper().OnItemsCleared();
 },
 CopyCellWidths: function(sourceRowIndex, destinationRowIndex){
  var cellCount = this.GetItemCellCount();
  var sourceRow = this.GetItemRow(sourceRowIndex);
  var destRow = this.GetItemRow(destinationRowIndex);
  for(var i = 0; i < cellCount; i++)
   destRow.cells[i].style.width = sourceRow.cells[i].style.width;
 },
 RemoveItem: function(index){
  if(index == 0 && this.GetItemCount() > 1)
   this.CopyCellWidths(0, 1);
  if(0 <= index && index < this.GetItemCount()){
   if(this.GetIsCheckColumnExists() && !this.IsNativeCheckBoxes())
    this.RemoveInternalCheckBoxFromCollecntion(index);
   this.UpdateSyncArraysItemDeleted(this.GetItem(index), true);
   var row = this.GetItemRow(index);
   if(ASPx.IsExistsElement(row)){
    var firstCellId = row.cells[0].id;
    var itemId = firstCellId.match(/LBI\d+/)[0];
    this.RemoveStateControllerClasses(itemId);
    row.parentNode.removeChild(row);
   }
   this.OnItemRemoved(index);
  }
 },
 GetItem: function(index){
  var listTable = this.GetListTable();
  var rowLength = this.GetAccessibilityHeaderRow() ? listTable.rows.length - 1 : listTable.rows.length;
  if(!listTable || index < 0 || index >= rowLength)
   return null;
  var row = listTable.rows[index];
  var image = this.imageCellExists ? ASPx.GetNodeByTagName(row.cells[this.GetImageCellIndex()], "IMG", 0) : null;
  var src = image == null ? "" : ASPx.ImageUtils.GetImageSrc(image);
  var i = this.GetItemFirstTextCellIndex();
  var texts = [];
  for(;i < row.cells.length; i ++){
   var textCell = row.cells[i],
    text;
   if(typeof(textCell.attributes["DXText"]) != "undefined")
    text = ASPx.Attr.GetAttribute(textCell, "DXText");
   else
    text = ASPx.GetInnerText(textCell);
   text = text.replace(new RegExp(nbspChar, "g"), " ");
   texts.push(text);
  }
  return new ASPxClientListBoxItem(this, index, texts, this.itemsValue[index], src, this.GetIsItemSelected(index));
 },
 PerformCallback: function(arg) {
  this.SetScrollSpacerVisibility(true, false);
  this.SetScrollSpacerVisibility(false, false);
  this.ClearItemsForPerformCallback();
  this.serverIndexOfFirstItem = 0;
  this.SetScrollSpacerVisibility(true, false);
  this.SetScrollSpacerVisibility(false, false);
  this.FormatAndSetCustomCallbackArg(arg);
  this.SendCallback();
 },
 GetTableRowParent: function(table){
  if(table.tBodies.length > 0)
   return table.tBodies[0];
  return table;
 },
 ProtectWhitespaceSerieses: function(text){
  if(text == "") 
   text = nbsp;
  else {
   if(text.charAt(0) == ' ')
    text = nbsp + text.slice(1);
   if(text.charAt(text.length - 1) == ' ')
    text = text.slice(0, -1) + nbsp;
   text = text.replace(new RegExp("  ", "g"), " &nbsp;");
  }
  return text;
 },
 CreateItem: function(index, texts, value, imageUrl, selected){
  return new ASPxClientListBoxItem(this, index, texts, value, imageUrl, selected);
 },
 InsertItemInternal: function(index, texts, value, imageUrl){
  if(!texts || texts.length == 0)
   texts = [""];
  else if(typeof(texts) == "string")
   texts = [ texts ];
  if(typeof (value) == "undefined")
   value = texts[0];
  if(!ASPx.IsExists(imageUrl))
   imageUrl = "";
  var newItemRow = this.CreateNewItem();
  ASPx.Attr.RemoveAttribute(newItemRow, "id");
  var listTable = this.GetListTable();
  var tbody = this.GetTableRowParent(listTable);
  var isAdd = listTable.rows.length <= index;
  if(isAdd)
   tbody.appendChild(newItemRow);
  else
   tbody.insertBefore(newItemRow, this.GetItemRow(index));
  var newIndex = this.FindFreeIndex();
  var newId = this.CreateItemId(newIndex);
  var newClientId = this.CreateItemClientId(newIndex);
  this.InitializeItemAttributes(newItemRow, newClientId, true);
  this.AddStateControllerClasses(newId);
  this.PrepareItem(newItemRow, texts, imageUrl); 
  ASPx.Data.ArrayInsert(this.itemsValue, value, index);
  this.RegisterInsertedItem(index, texts, value, imageUrl);
  if(this.GetIsCheckColumnExists() && !this.IsNativeCheckBoxes())
   this.AddInternalCheckBoxToCollection(index);
  this.OnItemInserted(index);
 },
 AddStateControllerClasses: function(itemId){
  var itemCellsIdPostfixes = this.GetItemCellsIdPostfixes();
  var sampleItemFirstTextCell = this.GetSampleItemFirstTextCell();
  var styleController = ASPx.GetStateController();
  var hoverStyleClasses = this.CreateStyleClasses(itemId, itemCellsIdPostfixes, 
      styleController.GetHoverElement(sampleItemFirstTextCell), ASPx.HoverItemKind);
  var selectedStyleClasses = this.CreateStyleClasses(itemId, itemCellsIdPostfixes, 
      styleController.GetSelectedElement(sampleItemFirstTextCell), ASPx.SelectedItemKind);
  var disabledStyleClasses = this.CreateStyleClasses(itemId, itemCellsIdPostfixes, 
      styleController.GetDisabledElement(sampleItemFirstTextCell), ASPx.DisabledItemKind);
    ASPx.AddHoverItems(this.name, hoverStyleClasses, true);
    ASPx.AddSelectedItems(this.name, selectedStyleClasses, true);
    ASPx.AddDisabledItems(this.name, disabledStyleClasses, true);
  ASPx.Attr.RemoveAttribute(sampleItemFirstTextCell, ASPx.CachedStatePrefix + ASPx.HoverItemKind);
  ASPx.Attr.RemoveAttribute(sampleItemFirstTextCell, ASPx.CachedStatePrefix + ASPx.SelectedItemKind);
  ASPx.Attr.RemoveAttribute(sampleItemFirstTextCell, ASPx.CachedStatePrefix + ASPx.DisabledItemKind);
 },
 RemoveStateControllerClasses: function(itemId){
  var itemCellsIdPostfixes = this.GetItemCellsIdPostfixes();
  var classes = [];
  classes[0] = [];
  classes[0][0] = [itemId];
  classes[0][1] = itemCellsIdPostfixes;
    ASPx.RemoveHoverItems(this.name, classes);
    ASPx.RemoveSelectedItems(this.name, classes);
    ASPx.RemoveDisabledItems(this.name, classes);
 },
 PrepareItem: function(newItemRow, texts, imageUrl){ 
  var i = 0;
  if(this.GetIsCheckColumnExists())
   i ++;
  if(this.imageCellExists) {
   this.PrepareItemImage(newItemRow, i, imageUrl);
   i ++;
  }
  var cellCount = this.GetItemCellCount();
  for(var j = 0; i < cellCount; i++, j++)
   this.PrepareItemTextCell(newItemRow.cells[i], texts[j])
 },
 PrepareItemImage: function(newItemRow, imageCellIndex, imageUrl){
  var imageCell = newItemRow.cells[imageCellIndex];
  var image = ASPx.GetNodeByTagName(imageCell, "IMG", 0);
  if(!imageUrl) {
   if(image)
    ASPx.RemoveElement(image);
   imageCell.innerHTML = "&nbsp;";
  } else {
   if(!image) {
    image = document.createElement("IMG");
    imageCell.innerHTML = "";
    imageCell.appendChild(image);
   }
   ASPx.ImageUtils.SetImageSrc(image, imageUrl);
  }
 }, 
 PrepareItemTextCell: function(cell, text){
  if(!ASPx.IsExists(text)) 
   text = "";
  if(this.encodeHtml)
   text = ASPx.Str.EncodeHtml(text);
  cell.innerHTML = this.ProtectWhitespaceSerieses(text);
  if(text == "")
   ASPx.Attr.SetAttribute(cell, "DXText", text);
 },
 ClearListTableContent: function(){
  var tBody = this.GetTableRowParent(this.GetListTable());
  if(ASPx.Browser.IE)
   tBody.innerText = "";
  else
   tBody.innerHTML = "";
 },
 FormatText: function(texts){
  if(typeof(texts) == "string")
   return texts;
  else if(!this.IsMultiColumn())
   return texts[0];
  else
   return this.FormatTextCore(texts);
 },
 FormatTextCore: function(texts){
  if(this.isComboBoxList)
   return ASPx.Formatter.Format(this.textFormatString, texts);
  else
   return texts.join("; ");
 },
 OnItemInserted: function(index){
  this.GetItemSelectionHelper().OnItemInserted(index);
 },
 OnItemRemoved: function(index){
  this.GetItemSelectionHelper().OnItemRemoved(index);
 },
 CreateItemId: function(index){
  return lbIIdSuffix + index;
 },
 CreateItemClientId: function(index){
  return this.name + "_" + lbIIdSuffix + index;
 },
 CreateNewItem: function(){
  var newItemRow = this.GetSampleItemRow();
  if(ASPx.IsExistsElement(newItemRow)) 
   newItemRow = newItemRow.cloneNode(true);
  return newItemRow;
 },
 CreateStyleClasses: function(id, postfixes, item, kind){
  var classes = [];
  if(item && item[kind]){
   classes[0] = [];
   classes[0][0] = item[kind].classNames;
   classes[0][1] = item[kind].cssTexts;
   classes[0][2] = [];
   classes[0][2][0] = id;
   classes[0][3] = postfixes;
  }
  return classes;
 },
 CorrectSizeByTimer: function(){
  if(this.APILockCount == 0 && this.IsDisplayed())
   window.setTimeout(function() { this.OnCorrectSizeByTimer(); }.aspxBind(this), 0);
 },
 FindFreeIndex: function(){
  return this.freeUniqIndex ++;
 },
 GetSampleItemRowID: function(){
  return this.name + "_" + lbSIIdSuffix;
 },
 GetAccessibilitySampleHeaderRowID: function() {
  return this.name + "_" + lbAIRTIdSuffix;
 },
 GetSampleItemRow: function(){
  if(this.SampleItem == null)
   this.SampleItem = ASPx.GetElementById(this.GetSampleItemRowID());
  return this.SampleItem;
 },
 GetAccessibilitySampleHeaderRow: function() {
  if(this.sampleHeaderRow == null)
   this.sampleHeaderRow = ASPx.GetElementById(this.GetAccessibilitySampleHeaderRowID());
  return this.sampleHeaderRow;
 },
 AddAccessibilityHeaderRow: function() {
  if(!this.accessibilityCompliant || !this.IsMultiColumn()) return;
  var listTableBody = ASPx.GetChildByTagName(this.GetListTable(), "TBODY", 0);
  var headerRow = this.GetAccessibilitySampleHeaderRow().cloneNode(true);
  headerRow.id = this.GetAccessibilityHeaderRowID();
  listTableBody.appendChild(headerRow);
 },
 GetAccessibilityHeaderRow: function() {
  return this.GetChildElement(lbAIRIdSuffix);
 },
 RemoveAccessibilityHeaderRow: function() {
  var headerRow = this.GetAccessibilityHeaderRow();
  if(headerRow)
   ASPx.RemoveElement(headerRow);
 },
 GetAccessibilityHeaderRowID: function() {
  return this.name + "_" + lbAIRIdSuffix;
 },
 GetSampleItemFirstTextCell: function(){
  if(!ASPx.IsExistsElement(this.sampleItemFirstTextCell)){
   var sampleItemRow = this.GetSampleItemRow();
   if(ASPx.IsExistsElement(sampleItemRow))
    this.sampleItemFirstTextCell = sampleItemRow.cells[this.imageCellExists ? 1 : 0];
  }
  return this.sampleItemFirstTextCell;
 },
 ChangeEnabledAttributes: function(enabled){
  this.ChangeListTableEvents(this.GetListTable(), ASPx.Attr.ChangeEventsMethod(enabled));
  var focusableElement = this.GetInputElement();
  if(focusableElement) {
   this.ChangeSpecialInputEnabledAttributes(focusableElement, ASPx.Attr.ChangeEventsMethod(enabled));
   if(this.accessibilityCompliant && !this.isComboBoxList)
    enabled ? ASPx.Attr.SetAttribute(focusableElement, "tabindex", "0") : focusableElement.removeAttribute("tabindex");
  }
 },
 ChangeEnabledStateItems: function(enabled){
  var controller = ASPx.GetStateController();
  controller.SetElementEnabled(this.GetMainElement(), enabled);
  var count = this.GetItemCount();
  var i = this.hasSampleItem ? -1 : 0 ;
  var checkColumnExists = this.GetIsCheckColumnExists();
  for(; i < count; i ++){
   var element = this.GetItemFirstTextCell(i);
   if(element)
    controller.SetElementEnabled(element, enabled);
   if(checkColumnExists && i >= 0)
    this.SetCheckBoxEnabled(i, enabled);
  }
 },
 ChangeListTableEvents: function(listTable, method){
  if(this.isComboBoxList){
   method(listTable, "mouseup", aspxLBIClick);
   if(ASPx.Browser.Firefox)
    method(listTable, "mousedown", ASPx.Evt.PreventEvent); 
  }
  else{
   method(listTable, "click", aspxLBIClick);   
   method(listTable, "dblclick", aspxLBIClick); 
   if(this.MultiSelectionMode())
    ASPx.Evt.AttachEventToElement(listTable, "selectstart", aspxLBTSelectStart);
  }
 },
 IsValueChanged: function(){
  return this.cachedValue != this.GetValue();
 },
 OnItemSelectionChanged: function(index, selected){
  if(this.CheckColumnSelectionMode())
   this.SetCheckBoxChecked(index, selected);
  if(!this.IsSelectionEventsLocked()) {
   this.SetRaiseSelectedIndexChangedArguments(this.autoPostBack, index, selected);
   var valueChanged = this.IsValueChanged();
   if(valueChanged) {
    this.RaisePersonalStandardValidation();
    this.OnValueChanged();
   } else {
    if(this.RaiseSelectedIndexChanged())
     this.SendPostBackInternal("");
   }
  }
  this.CacheValue();
  if(this.accessibilityHelper)
   this.accessibilityHelper.OnSelectedIndexChanged(index);
 },
 SetRaiseSelectedIndexChangedArguments: function(processOnServer, index, selected){
  this.selectedIndexChangedArguments = {
   processOnServer: processOnServer,
   index: index,
   selected: selected
  };
 },
 GetRaiseSelectedIndexChangedArguments: function(){
  if(!this.selectedIndexChangedArguments)
   this.SetRaiseSelectedIndexChangedArguments(false, this.GetSelectedIndex(), true);
  return this.selectedIndexChangedArguments;
 },
 RaiseSelectedIndexChanged: function (processOnServer) {
  this.RaiseValidationInternal();
  var savedArgs = this.GetRaiseSelectedIndexChangedArguments();
  processOnServer = savedArgs.processOnServer || processOnServer;
  if(!this.SelectedIndexChanged.IsEmpty()){
   var args = new ASPxClientListEditItemSelectedChangedEventArgs(savedArgs.index, savedArgs.selected, processOnServer);
   this.SelectedIndexChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 SetWidth: function(width) {
  this.width = width + "px";
   this.GetScrollDivElement().style.width = "100%";
   this.constructor.prototype.SetWidth.call(this, width);
 },
 SetHeight: function(height) {
  this.heightCorrected = false;
  this.constructor.prototype.SetHeight.call(this, height);
 },
 GetAccessibilityServiceElement: function() {
  return this.GetChildElement(accessibilityAssistID);
 },
 OnAssociatedLabelClick: function(evt) {
  ASPxClientListBoxBase.prototype.OnDelayedSpecialFocusMouseDown.call(this, evt);
 }
});
var ASPxClientNativeListBox = ASPx.CreateClass(ASPxClientListBoxBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
 },
 InitializeEvents: function() {
  ASPxClientListBoxBase.prototype.InitializeEvents.call(this);
  if(!!this.GetMainElement()) {
   ASPx.Evt.AttachEventToElement(this.GetMainElement(), "keydown", this.OnKeyDown.aspxBind(this));
   ASPx.Evt.AttachEventToElement(this.GetMainElement(), "keyup", this.OnKeyUp.aspxBind(this));
   ASPx.Evt.AttachEventToElement(this.GetMainElement(), "keypress", this.OnKeyPress.aspxBind(this));
  }
 },
 SetMainElement: function(mainElement){
  this.mainElement = mainElement;
 },
 FindInputElement: function(){
  return this.GetMainElement();
 }, 
 GetOptionCount: function(){
  return this.GetMainElement().options.length;
 },
 GetOption: function(index){
  return this.GetMainElement().options[index];
 },
 GetItemCount: function(){
  return this.GetOptionCount();
 },
 SelectIndexSilent: function(index){
  var selectedIndex = this.GetSelectedIndexInternal();
  var isValidIndex = (-1 <= index && index < this.GetItemCount());
  if((selectedIndex != index && isValidIndex) || !this.isInitialized){
   this.SetSelectedIndexInternal(index);
   return true;
  }
  return false;
 },
 GetSelectedIndexInternal: function(){
  return this.GetMainElement().selectedIndex; 
 },
 SetSelectedIndexInternal: function(index){
  this.GetMainElement().selectedIndex = index; 
 },
 ClearItemsCore: function(){
  this.GetMainElement().innerHTML = "";
 },
 RemoveItem: function(index){
  if(0 <= index && index < this.GetItemCount()){
   var oldSelectedIndex = this.GetSelectedIndexInternal();
   this.UpdateSyncArraysItemDeleted(this.GetItem(index), true);
   var option = this.GetOption(index);
   this.GetMainElement().removeChild(option);
   this.UpdateOptionValues();
   this.OnItemRemoved(oldSelectedIndex, index);
  }
 },
 OnItemRemoved: function(oldSelectedIndex, newSelectedIndex){
  if(newSelectedIndex == oldSelectedIndex && !this.MultiSelectionMode())
   this.SetSelectedIndexInternal(-1);
 },
 MultiSelectionMode: function(){
  return this.GetMainElement().multiple;
 },
 GetItem: function(index){
  if(0 <= index && index < this.GetOptionCount()) {
   var text = this.GetOption(index).text;
   var selected = this.GetMainElement().options[index].selected
   if(ASPx.IsExists(text))
    return new ASPxClientListBoxItem(this, index, text, this.itemsValue[index], "", selected);
  }
  return null;
 },
 PerformCallback: function(arg) {
  this.ClearItemsForPerformCallback();
  this.FormatAndSetCustomCallbackArg(arg);
  this.SendCallback();
 },
 SendCallback: function(){
  if(!this.InCallback()){
   var callbackOwner = this.GetCallbackOwnerControl();
   if(callbackOwner != null)
    callbackOwner.SendCallback();
    else {
    var argument = this.GetCallbackArguments();
    this.CreateCallback(argument);
   }
  }
 },
 ParseCallbackResult: function(result){
  var deserializedItems = this.DeserializeItems(result);
  this.LoadItemsFromCallback(true, deserializedItems);
 },
 InsertItemInternal: function(index, text, value, imageUrl) {
  if(typeof (value) == "undefined")
   value = text;
  var oldSelectedIndex = this.GetSelectedIndexInternal();
  var isAdd = this.GetOptionCount() <= index;
  var newOption = document.createElement("OPTION");
  if(isAdd)
   this.GetMainElement().appendChild(newOption);
  else
   this.GetMainElement().insertBefore(newOption, this.GetOption(index));
  newOption.innerHTML = text;
  this.UpdateOptionValues();
  ASPx.Data.ArrayInsert(this.itemsValue, value, index);
  this.RegisterInsertedItem(index, text, value, imageUrl); 
  if(index == oldSelectedIndex && index != -1)
   this.SetSelectedIndex(index + 1);
 },
 UpdateOptionValues: function() {
  if(this.APILockCount == 0){
   for(var i = 0; i < this.GetOptionCount(); i++)
    this.GetOption(i).value = i;
  }
 },
 ChangeEnabledAttributes: function(enabled){
  if(!this.isComboBoxList)
   this.GetMainElement().disabled = !enabled;
 },
 OnCallback: function(result) {
  this.ParseCallbackResult(result);
 },
 OnItemDblClick: function(){
  this.RaiseItemDoubleClick();
 },
 LoadItemsFromCallback: function(isToTop, deserializedItems){
  this.BeginUpdate();
  this.LockSynchronizationOnInternalCallback();
  var mainElement = this.GetMainElement();
  for(var i = deserializedItems.length - 1; i >= 0; i--) {
   this.InsertItemInternal(0, deserializedItems[i].text, deserializedItems[i].value, deserializedItems[i].imageUrl);
   if(deserializedItems[i].selected) {
    var index = deserializedItems[i].index;
    mainElement.options[0].selected = true;
   }
  }
  this.UnlockSynchronizationOnInternalCallback();
  this.EndUpdate();
 },
 EndUpdate: function(){
  ASPxClientListBoxBase.prototype.EndUpdate.call(this);
  this.UpdateOptionValues();
 },
 GetSelectedIndices: function(){
  var selectedIndices = [];
  var mainElement = this.GetMainElement();
  for(var i = 0; i < mainElement.options.length; i++){
   if(mainElement.options[i].selected)
    selectedIndices.push(i);
  }
  return selectedIndices;
 },
 GetSelectedValues: function(){ 
  var selectedValues = [];
  var selectedIndices = this.GetSelectedIndices();
  for(var i = 0; i < selectedIndices.length; i++)
   selectedValues.push(this.GetItemValue(selectedIndices[i]));
  return selectedValues;
 },
 GetSelectedItems: function(){
  var selectedItems = [];
  var selectedIndices = this.GetSelectedIndices();
  for(var i = 0; i < selectedIndices.length; i++)
   selectedItems.push(this.GetItem(selectedIndices[i]));
  return selectedItems;
 },
 SelectAll: function(){
  this.SetAllItemsSelectedValue(true);
 },
 UnselectAll: function(){
  this.SetAllItemsSelectedValue(false);
 },
 SetAllItemsSelectedValue: function(selected){
  var mainElement = this.GetMainElement();
  for(var i = 0; i < mainElement.options.length; i++)
   mainElement.options[i].selected = selected;
 },
 SelectIndices: function(indices){
  this.SetIndicesSelectionState(indices, true);
 },
 UnselectIndices: function(indices){
  this.SetIndicesSelectionState(indices, false);
 },
 SetIndicesSelectionState: function(indices, selected){
  var mainElement = this.GetMainElement();
  for(var i = 0; i < indices.length; i++){
   mainElement.options[indices[i]].selected = selected;
  }
 },
 SelectItems: function(items){
  if(ASPx.IsExists(items))
   this.SetItemsSelectionState(items, true);
  else
   this.SelectAll();
 },
 UnselectItems: function(items){
  if(ASPx.IsExists(items))
   this.SetItemsSelectionState(items, false);
  else
   this.UnselectAll();
 },
 SetItemsSelectionState: function(items, selected){
  var mainElement = this.GetMainElement();
  for(var i = 0; i < items.length; i++){
   mainElement.options[items[i].index].selected = selected;
  }
 },
 SelectValues: function(values){
  this.SetValuesSelectedState(values, true);
 },
 UnselectValues: function(values){
  this.SetValuesSelectedState(values, false);
 },
 SetValuesSelectedState: function(values, selected){
  var mainElement = this.GetMainElement();
  var index;
  for(var i = 0; i < values.length; i++){
   index = this.FindItemIndexByValue(values[i]);
   mainElement.options[index].selected = selected;
  }
 }
});
var AccessibilityHelperListBox = ASPx.CreateClass(ASPx.AccessibilityHelperBase, {
 constructor: function(listBox) {
  this.constructor.prototype.constructor.call(this, listBox);
  this.checkBoxRefocusTimeout = 1000;
  this.firstReadingColumnIndex = this.control.CheckColumnSelectionMode() ? 1 : 0;
  this.Initialize();
 },
 Initialize: function() {
  this.initializeLabelElement();
  if(this.control.CheckColumnSelectionMode() && !this.control.IsNativeCheckBoxes())
   this.control.GotFocus.AddHandler(function() { this.SetCheckBoxFocus(); }.aspxBind(this));
  this.OnSelectedIndexChanged(this.control.GetSelectedIndex());
 },
 initializeLabelElement: function() {
  var captionCell = this.control.GetCaptionCell();
  if(!captionCell) return;
  this.changeActivityAttributes(this.getMainElement(), { "aria-labelledby": captionCell.id });
  var captionLabel = captionCell.childNodes[0];
  this.changeActivityAttributes(captionLabel, { "for": "" });
  ASPx.Evt.AttachEventToElement(captionLabel, ASPx.TouchUIHelper.touchMouseDownEventName, function(evt) {
   this.OnDelayedSpecialFocusMouseDown(evt);
  }.aspxBind(this.control));
 },
 OnSelectedIndexChanged: function(index) {
  var stateSelected = index != -1 && this.control.GetItem(index).selected;
  var selectedIndex = this.control.GetSelectedIndex();
  if(this.control.CheckColumnSelectionMode() || stateSelected || selectedIndex == -1)
   this.setSelectionAttributes(index, stateSelected);
 },
 getPronounceTimeout: function() {
  if(ASPx.Browser.WebKitFamily && this.control.CheckColumnSelectionMode())
   return 1000;
  return ASPx.AccessibilityHelperBase.prototype.getPronounceTimeout.call(this);
 },
 getHeaderCellCaptionText: function(index) {
  var headerDiv = this.control.GetHeaderDivElement();
  if(!headerDiv) return "";
  var headerTable = headerDiv.firstElementChild;
  return headerTable.rows[0].cells[this.firstReadingColumnIndex + index].textContent;
 },
 SetCheckBoxFocus: function() {
  var isCheckBoxFocused = false;
  for(var i = 0; i < this.control.GetItemCount(); i++)
   if(this.control.GetInternalCheckBox(i).focused) {
    isCheckBoxFocused = true;
    break;
   }
  if(!isCheckBoxFocused)
   setTimeout(function() {
    if(!this.control.focused) return;
    this.control.SetFocusedIndex(0);
   }.aspxBind(this), this.checkBoxRefocusTimeout);
 },
 setSelectionAttributes: function(index, stateSelected) {
  if(index == -1) index = 0;
  var item = this.control.GetItem(index);
  if(!item) return;
  var assistText = "";
  if(!this.control.IsMultiColumn()) {
   assistText = item.text;
  } else {
   var columnsCount = this.control.columnFieldNames.length;
   var formatString = ASPx.AccessibilitySR.TableItemFormatString; 
   for(var i = 0; i < columnsCount; i++)
    assistText += ASPx.Str.ApplyReplacement(formatString, [["{0}", this.getHeaderCellCaptionText(i)], ["{1}", item.texts[i]]]);
  }
  var activeItemArgs = {
   "role"    : "option",
   "aria-posinset" : index + 1,
   "aria-setsize"  : this.control.itemTotalCount,
   "aria-selected" : stateSelected
  };
  var inactiveItemArgs = {
   "role"    : "",
   "aria-posinset" : "",
   "aria-setsize"  : "",
   "aria-selected" : ""
  };
  this.PronounceMessage(assistText, activeItemArgs, inactiveItemArgs);
 }
});
ASPxClientListBox.Cast = ASPxClientControl.Cast;
var ASPxClientCheckListBase = ASPx.CreateClass(ASPxClientListEdit, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);          
  this.imageProperties = null;
  this.internalButtonCollection = null; 
  this.icbFocusedStyle = [];
  this.items = [];
 },
 Initialize: function() {
  ASPxClientListEdit.prototype.Initialize.call(this);
  this.UpdateInternalSelectedIndex(); 
 },
 UpdateInternalSelectedIndex: function() {
  var selectedIndexFromServer = this.GetSelectedIndex();
  if(ASPx.Browser.IE) {
   var stateInput = this.FindStateInputElement();
   if(stateInput) {
    var restoredSelectedIndex = stateInput.value;
    if(restoredSelectedIndex != '' && restoredSelectedIndex != selectedIndexFromServer)
     this.SetSelectedIndex(restoredSelectedIndex);
   }
  }
 },
 CreateButtonInternalCollection: function() { 
  this.internalButtonCollection = new ASPx.CheckBoxInternalCollection(this.imageProperties, false, true, ASPx.CheckEditElementHelper.Instance, undefined,
   this.accessibilityCompliant);
  var instance = this;
  for(var i = 0; i < this.GetItemCount(); i++) {
   var icbInputElement = this.GetItemInput(i);
   var internalButton = this.internalButtonCollection.Add(icbInputElement.id, icbInputElement, this.GetItemElement(i));
   internalButton.CreateFocusDecoration(this.icbFocusedStyle);
   internalButton.SetEnabled(this.GetEnabled());
   internalButton.readOnly = this.readOnly;
   internalButton.CheckedChanged.AddHandler(function(s, e) { instance.OnItemClick(instance.GetItemIndexByElement(ASPx.Evt.GetEventSource(e))); });
   internalButton.Focus.AddHandler(function(s, e) { instance.OnFocus(); });
   internalButton.LostFocus.AddHandler(function(s, e) { instance.OnLostFocus(); });
   this.attachToCellsClick(i);
   this.PrepareInternalButton(internalButton, i);
  }
  this.attachToMainElementMouseDown();
 },
 CheckableElementsExist: function() {
  return !!this.imageProperties;
 },
 SetEnabled: function(enabled){
  ASPxClientListEdit.prototype.SetEnabled.call(this, enabled);
  var stateInput = this.FindStateInputElement();
  if(enabled)
   ASPx.Attr.RemoveAttribute(stateInput, "disabled");
  else
   ASPx.Attr.SetAttribute(stateInput, "disabled", "disabled");
 },
 SetFocus: function() {
  this.UpdateFocus(); 
 },
 UpdateFocus: function() {
 },
 IsElementBelongToInputElement: function(element) {
  return this.GetItemIndexByElement(element) != -1;
 },
 attachToCellsClick: function(index) {
  var element = this.GetItemElement(index);
  ASPx.Evt.AttachEventToElement(element, "click", function(evt) {
   var src = ASPx.Evt.GetEventSource(evt);
   var label = ASPx.CheckEditElementHelper.Instance.GetLabelElement(element);
   var button = this.internalButtonCollection.Get(this.GetItemInput(index).id);
   if(!ASPx.GetIsParent(button.mainElement, src) && src !== label && src.parentElement !== label) {
    ASPx.CheckEditElementHelper.Instance.InvokeClick(button, evt);
   }
  }.aspxBind(this));
 },
 attachToMainElementMouseDown: function() {
  var mainElement = this.GetMainElement();
  ASPx.Evt.AttachEventToElement(mainElement, "mousedown", function() { 
   if(this.enabled && !this.readOnly)
    this.LockFocusEvents();
  }.aspxBind(this));
 },
 GetItemIndexByElement: function(element) {
  for(var i = 0; i < this.GetItemCount(); i++) {
   var itemElement = this.GetItemElement(i);
   if(ASPx.GetIsParent(itemElement, element))
    return i;
  }
  return -1;  
 },
 GetItemInput: function(index) {
  return this.GetChildElement("RB" + index + "_I");
 },
 GetItemElement: function(index) {
  return this.GetChildElement("RB" + index);
 },
 GetItemFocusableElement: function(index) {
  return this.accessibilityCompliant ? this.GetChildElement("RB" + index + "_I_D") : this.GetItemInput(index);
 },
 GetItemCount: function() {
  return this.items.length;
 },
 OnItemClick: function(index) {
 },
 OnItemClickReadonly: function() {
  var index = this.GetSelectedIndexInternal();
  this.SelectIndexSilent(index);
 },
 UpdateHiddenInputs: function(index) {
  var stateInput = this.FindStateInputElement();
  if(ASPx.IsExistsElement(stateInput))
   stateInput.value = index;
  var valueInput = this.GetValueInputElement();
  if(ASPx.IsExistsElement(valueInput)) {
   var value = this.GetValue();
   valueInput.value = ASPx.IsExists(value) ? value : " ";
  }
 },
 GetItemValue: function(index){
  if(index > -1 && index < this.items.length) {
   if(typeof(this.items[index].value) == "string" && this.items[index].value == "" && this.convertEmptyStringToNull)
    return null;
   else
    return this.items[index].value;
  }
  return null;
 },
 SetValue: function(value) {
  for(var i = 0; i < this.items.length; i++) {
   if(this.GetItemValue(i) == value) {   
    this.SelectIndexSilent(i);
    return;
   }
  } 
  this.SelectIndexSilent(-1);    
 },
 CreateItems: function(itemsProperties){
  for(var i = 0; i < itemsProperties.length; i++)
   this.CreateItem(i, itemsProperties[i][0], this.GetDecodeValue(itemsProperties[i][1]), itemsProperties[i][2]);
 },
 CreateItem: function(index, text, value, imageUrl){
  var item = new ASPxClientListEditItem(this, index, text, value, imageUrl);
  this.items.push(item);
 },
 GetItem: function(index){
  return (0 <= index && index < this.items.length) ? this.items[index] : null;
 },
 ChangeEnabledAttributes: function(enabled){
  if(!this.CheckableElementsExist()) {
   for(var i = 0; i < this.GetItemCount(); i++){
    var element = this.GetItemInput(i);
    if(element){
     this.ChangeItemEnabledAttributes(element, ASPx.Attr.ChangeAttributesMethod(enabled));
     element.disabled = !enabled;
    }
   }
  } else {
   var selectedIndex = this.GetSelectedIndexInternal();
   this.UpdateCheckableElementDecorations(selectedIndex, enabled);
  }
 },
 ChangeEnabledStateItems: function(enabled){
  ASPx.GetStateController().SetElementEnabled(this.GetMainElement(), enabled);
  if(this.isNative){
   for(var i = 0; i < this.GetItemCount(); i++){
    var element = this.GetItemInput(i);
    if(element)
     ASPx.GetStateController().SetElementEnabled(element, enabled);
   }
  }
 },
 ChangeItemEnabledAttributes: function(element, method){
  method(element, "onclick");
 }
});
var ASPxClientRadioButtonList = ASPx.CreateClass(ASPxClientCheckListBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);          
 },
 InlineInitialize: function() {
  var selectedIndex = this.GetSelectedIndex();
  this.UpdateHiddenInputs(selectedIndex);
  if(this.CheckableElementsExist()) 
   this.CreateButtonInternalCollection();
  this.SetSelectedIndex(this.GetSelectedIndex()); 
  ASPxClientCheckListBase.prototype.InlineInitialize.call(this);
 },
 Initialize: function() {
  ASPxClientCheckListBase.prototype.Initialize.call(this);
 },
 PrepareInternalButton: function(internalRadioButton){
  internalRadioButton.autoSwitchEnabled = false;
 },
 GetInputElement: function() {
  if(this.isNative) {
   var index = this.GetSelectedIndexInternal();
   return this.GetItemInput(index);
  } else 
   return this.GetValueInputElement();
 },
 GetValueInputElement: function() {
  if(this.valueInput == null) {
   var stateInput = this.FindStateInputElement();
   this.valueInput = this.GetHiddenField(null, this.name + "_ValueInput", stateInput.parentNode, stateInput);
  }
  return this.valueInput;
 },
 GetValueInputToValidate: function() {
  return this.GetValueInputElement();
 },
 SelectIndexSilent: function(index) {
  var itemCount = this.GetItemCount();
  var isValidIndex = (-1 <= index && index < itemCount);
  if(isValidIndex) {
   if(this.CheckableElementsExist()) 
    this.UpdateCheckableElementDecorations(index, this.GetEnabled());
   else {
    for(var i = 0; i < itemCount; i++) {
     var element = this.GetItemInput(i);
     if(element)
      element.checked = (i == index);
    }
   }
   this.SetSelectedIndexInternal(index);
   this.UpdateHiddenInputs(index);
  }
 },
 UpdateCheckableElementDecorations: function(selectedIndex, enabled) {
  if(this.CheckableElementsExist()) {
   for(var i = 0; i < this.items.length; i++) {
    var inputElement = this.GetItemInput(i);
    var internalButton = this.internalButtonCollection.Get(inputElement.id);
    internalButton.SetEnabled(enabled);
    internalButton.SetValue(i == selectedIndex ? ASPx.CheckBoxInputKey.Checked : ASPx.CheckBoxInputKey.Unchecked);
   }
  }
 },
 UpdateFocus: function() {
  var index = this.GetSelectedIndexInternal();
  if(index == -1)
   index = 0;
  var itemElement = this.GetItemFocusableElement(index);
  if(itemElement != null && ASPx.GetActiveElement() != itemElement && ASPx.IsEditorFocusable(itemElement)) 
   ASPx.SetFocus(itemElement);
 },
 OnItemClick: function(index) {
  if(this.GetSelectedIndexInternal() != index) {
   this.SelectIndexSilent(index);
   this.RaisePersonalStandardValidation();
   this.OnValueChanged();
  }
  this.UpdateFocus();
 },
 RequireInputElementToValidate: function() {
  return false;
 }
});
ASPxClientRadioButtonList.Cast = ASPxClientControl.Cast;
var ASPxClientCheckBoxList = ASPx.CreateClass(ASPxClientCheckListBase, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);          
  this.selectionEventsLockCount = 0;
 },
 InlineInitialize: function() {
  if(this.CheckableElementsExist()) 
   this.CreateButtonInternalCollection();
  ASPxClientCheckListBase.prototype.InlineInitialize.call(this);
 },
 Initialize: function() {
  ASPxClientCheckListBase.prototype.Initialize.call(this);
  this.InitSelection();
 },
 InitSelection: function() {
  this.SelectIndices(this.initSelectedIndices);
  this.CacheValue();
 },
 PrepareInternalButton: function(internalCheckBox, index){
  internalCheckBox.autoSwitchEnabled = true;
  internalCheckBox.SetChecked(this.GetItemSelectionHelper().GetIsItemSelected(index));
 },
 SelectIndexSilent: function(index) {
  var itemCount = this.GetItemCount();
  var isValidIndex = (-1 <= index && index < itemCount);
  if(isValidIndex) {
   this.UpdateHiddenInputs(index);
  }
 },
 UpdateCheckableElementDecorations: function(selectedIndex, enabled) {
  if(this.CheckableElementsExist()) {
   for(var i = 0; i < this.items.length; i++) {
    var inputElement = this.GetItemInput(i);
    var internalButton = this.internalButtonCollection.Get(inputElement.id);
    internalButton.SetEnabled(enabled);
   }
  }
 },
 SetSelectionDecoration: function(index, selected){ 
  if(this.CheckableElementsExist()){
   var inputElement = this.GetItemInput(index);
   var internalButton = this.internalButtonCollection.Get(inputElement.id);
   internalButton.SetValue(selected ? ASPx.CheckBoxInputKey.Checked : ASPx.CheckBoxInputKey.Unchecked);
  } else {
   var element = this.GetItemInput(index);
   if(element)
    element.checked = (selected); 
  }
 },
 OnItemClick: function(index) {
  this.GetItemSelectionHelper().OnItemClick(index);
 },
 UpdateFocus: function() {
  var index = this.GetItemSelectionHelper().GetFocusedItemIndex();
  if(index == -1)
   index = this.GetSelectedIndexInternal();
  if(index == -1)
   index = 0;
  var itemElement = this.GetItemFocusableElement(index);
  if(itemElement != null && ASPx.GetActiveElement() != itemElement && ASPx.IsEditorFocusable(itemElement)) 
   ASPx.SetFocus(itemElement);
 },
 UpdateInternalState: function(){
  this.UpdateHiddenInputs();
 },
 IsUpdateHiddenInputsLocked: function(){
  return this.GetItemSelectionHelper().IsUpdateInternalSelectionStateLocked();
 },
 UpdateHiddenInputs: function(){
  if(this.IsUpdateHiddenInputsLocked()) 
   return;
  var element = this.FindStateInputElement();
  if(ASPx.IsExistsElement(element)) { 
   var sb = [ ];
   var serialiser = this.GetSerializingHelper();
   var selectedIndices = this.GetSelectedIndices();
   for(var i = 0; i < selectedIndices.length; i++)
    serialiser.SerializeAtomValue(sb, selectedIndices[i]);
   element.value = sb.join("");
  }
 },
 GetSerializingHelper: function(){ 
  if(this.serializingHelper == null)
   this.serializingHelper = new ListBoxBaseItemsSerializingHelper(this);
  return this.serializingHelper;
 },
 SetItemSelectionAppearance: function(index, selected, controller){
 },
 LockSelectionEvents: function(){
  this.selectionEventsLockCount++;
 },
 UnlockSelectionEvents: function(){
  this.selectionEventsLockCount--;
 },
 IsSelectionEventsLocked: function(){
  return this.selectionEventsLockCount > 0;
 },
 CacheValue: function(){
  this.cachedValue = this.GetValue();
 },
 IsValueChanged: function(){
  return this.cachedValue != this.GetValue();
 },
 OnItemSelectionChanged: function(index, selected){
  this.SetSelectionDecoration(index, selected);
  if(!this.IsSelectionEventsLocked()) {
   this.SetRaiseSelectedIndexChangedArguments(this.autoPostBack, index, selected);
   var valueChanged = this.IsValueChanged();
   if(valueChanged) {
    this.RaisePersonalStandardValidation();
    this.OnValueChanged();
   } else {
    if(this.RaiseSelectedIndexChanged())
     this.SendPostBackInternal("");
   }
  }
  this.CacheValue();
 },
 SetRaiseSelectedIndexChangedArguments: function(processOnServer, index, selected){
  this.selectedIndexChangedArguments = {
   processOnServer: processOnServer,
   index: index,
   selected: selected
  };
 },
 GetRaiseSelectedIndexChangedArguments: function(){
  if(!this.selectedIndexChangedArguments)
   this.SetRaiseSelectedIndexChangedArguments(false, this.GetSelectedIndex(), true);
  return this.selectedIndexChangedArguments;
 },
 RaiseSelectedIndexChanged: function (processOnServer) {
  this.RaiseValidationInternal();
  var savedArgs = this.GetRaiseSelectedIndexChangedArguments();
  processOnServer = savedArgs.processOnServer || processOnServer;
  if(!this.SelectedIndexChanged.IsEmpty()){
   var args = new ASPxClientListEditItemSelectedChangedEventArgs(savedArgs.index, savedArgs.selected, processOnServer);
   this.SelectedIndexChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 GetItemSelectionHelper: function(){
  if(!this.itemSelectionHelper)
   this.itemSelectionHelper = this.CreateItemSelectionHelper();
  return this.itemSelectionHelper;
 },
 CreateItemSelectionHelper: function(){
  return new CheckBoxListMultiSelectionHelper(this);
 },
 GetItem: function(index){
  var item = ASPxClientCheckListBase.prototype.GetItem.call(this, index);
  item.selected = this.GetItemSelectionHelper().GetIsItemSelected(index);
  return item;
 },
 SetValue: function(value){
  var index = this.FindItemIndexByValue(value);
  this.SetSelectedIndex(index);
 },
 GetSelectedIndexInternal: function(){
  if(!this.isInitialized)
   return ASPxClientCheckListBase.prototype.GetSelectedIndexInternal.call(this);
  return this.GetItemSelectionHelper().GetSelectedIndex();
 },
 SetSelectedIndex: function(index){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SetSelectedIndex(index);
  this.UnlockSelectionEvents();
 },
 GetSelectedIndices: function(){
  return this.GetItemSelectionHelper().GetSelectedIndices();
 },
 GetSelectedValues: function(){ 
  return this.GetItemSelectionHelper().GetSelectedValues();
 },
 GetSelectedItems: function(){
  return this.GetItemSelectionHelper().GetSelectedItems();
 },
 SelectAll: function(){
  this.SelectIndices();
 },
 UnselectAll: function(){
  this.UnselectIndices();
 },
 SelectIndices: function(indices){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectIndices(indices);
  this.UnlockSelectionEvents();
 },
 SelectItems: function(items){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectItems(items);
  this.UnlockSelectionEvents();
 },
 SelectValues: function(values){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().SelectValues(values);
  this.UnlockSelectionEvents();
 },
 UnselectIndices: function(indices){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectIndices(indices);
  this.UnlockSelectionEvents();
 },
 UnselectItems: function(items){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectItems(items);
  this.UnlockSelectionEvents();
 },
 UnselectValues: function(values){
  this.LockSelectionEvents();
  this.GetItemSelectionHelper().UnselectValues(values);
  this.UnlockSelectionEvents();
 }
});
ASPxClientCheckBoxList.Cast = ASPxClientControl.Cast;
var ASPxClientListEditItemSelectedChangedEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
 constructor: function(index, isSelected, processOnServer){
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.index = index;
  this.isSelected = isSelected;
 }
});
function aspxLBTSelectStart(evt){
 var element = ASPx.Evt.GetEventSource(evt);
 var shiftPressed = evt.shiftKey;
 var ctrlKey = evt.ctrlKey || evt.metaKey;
 if(shiftPressed || ctrlKey){
  ASPx.Selection.Clear();
  ASPx.Evt.PreventEventAndBubble(evt);
 }
}
function aspxLBIClick(evt){
 if(ASPx.TouchUIHelper.isMouseEventFromScrolling) return;
 var element = ASPx.Evt.GetEventSource(evt);
 while(element != null && element.tagName != "BODY"){
  if(element.tagName == "TR"){
   var table = element.offsetParent;
   if(table && table.ListBoxId){
    var lb = ASPx.GetControlCollection().Get(table.ListBoxId);
    if(lb != null) {
     var retValue;
     if(evt.type == "dblclick") 
      retValue =lb.OnItemDblClick();
     else if(!lb.isComboBoxList || ASPx.Evt.IsLeftButtonPressed(evt)) 
      retValue = lb.OnItemClick(element.rowIndex, evt);
     if(typeof(retValue) != "undefined")
      return retValue;
    }
    break;
   }
  }
  element = element.parentNode;
 }
}
function aspxLBScroll(evt){
 var sourceId = ASPx.Evt.GetEventSource(evt).id;
 if(sourceId.slice(-lbDSuffix.length) == lbDSuffix){
  var name = sourceId.slice(0, -2);
  var lb = ASPx.GetControlCollection().Get(name);
  if(lb != null && lb.isInitialized) 
   lb.OnScroll();
 }
}
ASPx.NLBIDClick = function(evt) {
 var element = ASPx.Evt.GetEventSource(evt);
 if(element != null && element.tagName == "SELECT"){
  var lb = ASPx.GetControlCollection().Get(element.id);
  if(lb != null)
   lb.OnItemDblClick();
 }
}
ASPx.ERBLIClick = function(name, index) {
 var list = ASPx.GetControlCollection().Get(name);
 if(list != null)
  list.OnItemClick(index);
}
ASPx.ERBLICancel = function(name) {
 var list = ASPx.GetControlCollection().Get(name);
 if(list != null)
  list.OnItemClickReadonly();
}
window.ASPxClientListEdit = ASPxClientListEdit;
window.ASPxClientListEditItem = ASPxClientListEditItem;
window.ASPxClientListBoxItem = ASPxClientListBoxItem;
window.ASPxClientListBoxBase = ASPxClientListBoxBase;
window.ASPxClientListBox = ASPxClientListBox;
window.ASPxClientNativeListBox = ASPxClientNativeListBox;
window.ASPxClientCheckListBase = ASPxClientCheckListBase;
window.ASPxClientRadioButtonList = ASPxClientRadioButtonList;
window.ASPxClientCheckBoxList = ASPxClientCheckBoxList;
window.ASPxClientListEditItemSelectedChangedEventArgs = ASPxClientListEditItemSelectedChangedEventArgs;
})();
(function(window) {
 var dx_PrintHelper = ASPx.CreateClass(null, {
  constructor: function() {
   this.printFrame = null;
   if(ASPx.Browser.Opera) {
    this.printElementName = "DXOperaPrinter";
    this.printElement = null;
    this.mergeProperties(ASPx.dx_XROperaPrintTrick);
   }
  },
  pdfExists: function() {
   if(!ASPx.IsExists(this.pdf)) {
    this.pdf = this.existsIEPlugin() || this.existsFFPlugin();
   }
   return this.pdf;
  },
  existsIEPlugin: function() {
   return this.createActiveXObject("PDF.PdfCtrl.5")
    || this.createActiveXObject("PDF.PdfCtrl.6")
    || this.createActiveXObject("AcroPDF.PDF.1");
  },
  createActiveXObject: function(classid) {
   if(window["ActiveXObject"] === undefined) {
    return null;
   }
   try {
    return new ActiveXObject(classid);
   } catch(ex) {
    return null;
   }
  },
  existsFFPlugin: function() {
   var plugins = navigator.mimeTypes["application/pdf"];
   var plugin = plugins && plugins.enabledPlugin;
   return plugin
    && (plugin.name === "Chrome PDF Viewer" || (plugin.description.indexOf("Adobe") !== -1)
     && (plugin.description.indexOf("Version") === -1 || parseFloat(plugin.description.split("Version")[1]) >= 6));
  },
  getFrame: function() {
   this.ensurePrintFrame();
   return this.printFrame;
  },
  getFrameRecreated: function() {
   var frameElement = document.getElementById("DXPrinter");
   if(frameElement) {
    document.body.removeChild(frameElement);
   }
   if(this.printFrame) {
    this.printFrame = null;
   }
   return this.getFrame();
  },
  mergeProperties: function(properties) {
   for(var name in properties) {
    this[name] = properties[name];
   }
  },
  print: function(result) {
   this.ensurePrintElement();
   this.fillPrintElement(result);
   var printDocument = this.printFrame.document;
   if(ASPx.Browser.IE && printDocument.readyState !== "complete") {
    ASPx.Evt.AttachEventToElement(printDocument, "readystatechange", function() {
     if(printDocument.readyState === "complete") {
      this.printCore();
     }
    }.aspxBind(this));
   } else
    this.printCore();
  },
  printCore: function() {
   if(!ASPx.IsExists(this.printFrame)) {
    return;
   }
   var style = null;
   if(ASPx.Browser.IE) {  
    style = ASPx.GetElementById("DXRPrintHideContent");
    this.setIEStyleDisabled(style, false);
   }
   this.printFrame.focus();
   this.printFrame.print();
   if(ASPx.Browser.IE) {
    this.setIEStyleDisabled(style, true);
   }
  },
  setIEStyleDisabled: function(style, disabled) {
   if(!ASPx.IsExists(style)) {
    return;
   }
   var sheet = ASPx.Browser.Version < 9
    ? style.styleSheet
    : style.sheet;
   sheet.disabled = disabled;
  },
  fillPrintElement: function(content) {
   var printDocument = this.printFrame.document;
   printDocument.open("text/html", "replace");
   printDocument.write(content);
   printDocument.close();
  },
  ensurePrintElement: function() {
   this.ensurePrintFrame();
  },
  ensurePrintFrame: function() {
   if(this.printFrame) {
    return;
   }
   var elementId = "DXPrinter";
   if(ASPx.Browser.Firefox) {
    try {
     delete window.frames[elementId];
    } catch(e) { }
   }
   this.createFrameElement(elementId);
   this.printFrame = window.frames[elementId];
  },
  createFrameElement: function(name) {
   var f = document.createElement("iframe");
   f.frameBorder = "0";
   f.style.overflow = "hidden";
   var frameSize = ASPx.Browser.Safari ? "1px" : "0px"; 
   var position = ASPx.Browser.Safari ? "0px" : "-100px"; 
   f.style.width = frameSize;
   f.style.height = frameSize;
   f.name = name;
   f.id = name;
   f.style.position = "absolute";
   f.style.top = position;
   f.style.left = position;
   if (ASPx.Browser.Safari) {
    f.style.opacity = 0;
   }
   if(ASPxClientReportViewer.__useMobileSpecificExport) {
    f.setAttribute('sandbox', "allow-same-origin allow-scripts allow-forms");
   }
   document.body.appendChild(f);
   return f;
  }
 });
 ASPx.dx_PrintHelper = dx_PrintHelper;
})(window);

(function(window) {
 function dx_DivSearcher(mainContentElement, text, searchUp, mcase, wholeWord) {
  this.mainContentElement = mainContentElement;
  this.doc = ASPx.GetElementDocument(mainContentElement);
  this.win = this.doc.defaultView || this.doc.parentWindow;
  this.text = text;
  this.up = searchUp;
  this.mcase = mcase;
  this.wholeWord = wholeWord;
  this.currentElementIndex;
  this.currentElementCharOffset;
  this.lastTriedCheckPointIndex;
  this.lastTriedCheckPointCharOffset;
  this.currentElement;
  this.currentElementTextContent;
  this.search = function() {
   var nobrs = this.mainContentElement.getElementsByTagName("nobr");
   if(!mcase)
    this.text = this.text.toLowerCase();
   var matched = this.searchCore(nobrs);
   if(matched) {
    var currentContainer = this.getTextNodeFromElement(nobrs[this.lastTriedCheckPointIndex]);
    var otherContainer = this.getTextNodeFromElement(nobrs[this.currentElementIndex]);
    var currentOffset = this.lastTriedCheckPointCharOffset;
    var otherOffset = this.currentElementCharOffset;
    return { "startContainer": (this.up ? otherContainer : currentContainer), "startOffset": (this.up ? otherOffset : currentOffset), "endContainer": (this.up ? currentContainer : otherContainer), "endOffset": (this.up ? currentOffset : otherOffset) + 1 };
   }
   return null;
  };
  this.getIndexOf = function(cortege, element) {
   for(var index in cortege) {
    if(cortege[index] === element.parentNode)
     return index;
   }
   return null;
  };
  this.decreaseOrNull = function(value) {
   return value == 0 ? 0 : (value - 1);
  };
  this.searchCore = function(elements) {
   if(elements.length == 0 || this.text.length == 0) {
    return false;
   }
   var textLength = this.text.length;
   var selection = this.win.getSelection();
   var range;
   var resetArrayElementIndex = function(array, up) {
    return up ? array.length - 1 : 0;
   };
   if(selection.rangeCount != 0 && (range = selection.getRangeAt(0)) && this.mainContentElement.contains(range.startContainer) && range.startContainer !== this.mainContentElement) {
    this.currentElementIndex = this.getIndexOf(elements, this.up ? range.endContainer : range.startContainer);
    if(!this.currentElementIndex)
     return false;
    this.currentElementCharOffset = this.up ? this.decreaseOrNull(range.startOffset) : range.endOffset;
    selection.removeAllRanges();
   } else {
    this.currentElementIndex = resetArrayElementIndex(elements, this.up);
    this.currentElementCharOffset = this.up ? this.getLastIndex(elements[this.currentElementIndex].textContent) : 0;
   }
   this.currentElement = elements[this.currentElementIndex];
   this.currentElementTextContent = this.currentElement ? this.currentElement.textContent : "";
   if(this.up ? this.currentElementCharOffset == 0 : this.currentElementCharOffset >= this.currentElementTextContent.length) {
    this.currentElementCharOffset = this.up ? 0 : this.decreaseOrNull(this.currentElementTextContent.length);
    if(!this.nextSearchPointStep(elements, this.up))
     return false;
    else {
     this.currentElement = elements[this.currentElementIndex];
     this.currentElementTextContent = this.currentElement ? this.currentElement.textContent : "";
    }
   }
   for(var searchTextCharIndex = resetArrayElementIndex(this.text, this.up) ; this.up ? searchTextCharIndex >= 0 : searchTextCharIndex < textLength;) {
    if(this.up ? searchTextCharIndex == (textLength - 1) : (searchTextCharIndex == 0)) {
     this.lastTriedCheckPointIndex = this.currentElementIndex;
     this.lastTriedCheckPointCharOffset = this.currentElementCharOffset;
    }
    var char = this.currentElementTextContent[this.currentElementCharOffset];
    var equal = !this.isWhiteSpace(this.text[searchTextCharIndex]) ? this.text[searchTextCharIndex] === (this.mcase ? char : char.toLowerCase()) : this.isWhiteSpace(this.currentElementTextContent[this.currentElementCharOffset]);
    if(equal) {
     if(this.isLastItem(searchTextCharIndex, this.text, this.up))
      return true;
     else if(this.isLastItem(this.currentElementCharOffset, this.currentElementTextContent, this.up)) {
      equal = this.isWhiteSpace(this.text[this.up ? --searchTextCharIndex : ++searchTextCharIndex]);
      if(equal && this.isLastItem(searchTextCharIndex, this.text, this.up))
       return true;
     }
    }
    if(equal) {
     if(!this.nextSearchPointStep(elements, this.up))
      return false;
     this.up ? --searchTextCharIndex : ++searchTextCharIndex;
    } else {
     searchTextCharIndex = resetArrayElementIndex(this.text, this.up);
     this.currentElementCharOffset = this.lastTriedCheckPointCharOffset;
     this.currentElementIndex = this.lastTriedCheckPointIndex;
     if(!this.nextSearchPointStep(elements, this.up))
      return false;
    }
   }
  };
  this.getLastIndex = function(array) {
   return (!array || array.length === 0) ? 0 : array.length - 1;
  };
  this.getTextNodeFromElement = function(element) {
   for(var i = 0; i < element.childNodes.length; i++) {
    var curNode = element.childNodes[i];
    if(curNode.nodeType == 3)
     return curNode;
   }
  };
  this.nextSearchPointStep = function(elements, up) {
   if(this.isLastItem(this.currentElementCharOffset, this.currentElementTextContent, up)) {
    if(this.isLastItem(this.currentElementIndex, elements, up))
     return false;
    else {
     this.currentElement = elements[up ? --this.currentElementIndex : ++this.currentElementIndex];
     this.currentElementTextContent = this.currentElement ? this.currentElement.textContent : "";
     this.currentElementCharOffset = up ? this.getLastIndex(elements[this.currentElementIndex].textContent) : 0;
    }
   } else {
    up ? this.currentElementCharOffset-- : this.currentElementCharOffset++;
   }
   return true;
  };
  this.isLastItem = function(offset, array, up) {
   return !isNaN(parseInt(offset)) && array && ((parseInt(offset, 10) + 1 === array.length) && !up || up && (parseInt(offset, 10) === 0));
  };
  this.isWhiteSpace = function(stringChar) {
   return !/\S/.test(stringChar);
  };
 }
 function dx_Range(element, searchUp, useDivContent) {
  this.element = element;
  this.doc = ASPx.GetElementDocument(element);
  this.win = this.doc.defaultView || this.doc.parentWindow;
  this.storedSelections = [];
  this.useDivContent = useDivContent;
  this.empty = function() {
   if(!ASPx.Browser.MacOSMobilePlatform)
    return;
   this.storeCurrentSelection();
   for(var index = 0; index < this.storedSelections.length; index++) {
    var selection = this.win.getSelection();
    if(selection) {
     selection.removeAllRanges();
     var rangeValues = this.storedSelections.pop();
     var range = this.doc.createRange();
     range.setStart(rangeValues.startContainer, rangeValues.startOffset);
     range.setEnd(rangeValues.endContainer, rangeValues.endOffset);
     selection.addRange(range);
     this.hilightSelected("transparent");
    }
   }
   this.restoreLastStoredSelection();
   this.storedSelections = [];
   this.lastStoredSelection = null;
  };
  this.clearLastStoredSelection = function() {
   this.lastStoredSelection = null;
  };
  this.restoreLastStoredSelection = function(up) {
   if(this.lastStoredSelection) {
    var restoredSelection = this.setSelection(this.lastStoredSelection, up);
    var range;
    if(restoredSelection && restoredSelection.rangeCount !== 0) {
     range = restoredSelection.getRangeAt(0);
     restoredSelection.removeAllRanges();
     restoredSelection.addRange(range);
     range.collapse(up);
    }
    return range;
   }
  };
  this.storeCurrentSelection = function(lastStoredSelection) {
   if(lastStoredSelection) {
    this.lastStoredSelection = lastStoredSelection;
    return;
   }
   var selection = this.win.getSelection();
   if(selection.rangeCount !== 0) {
    var range = selection.getRangeAt(0);
    this.lastStoredSelection = { "startContainer": range.startContainer, "startOffset": range.startOffset, "endContainer": range.endContainer, "endOffset": range.endOffset };
   }
  };
  this.setSelection = function(rangeValues) {
   var selection = this.win.getSelection();
   selection.removeAllRanges();
   var range = this.doc.createRange();
   range.setStart(rangeValues.startContainer, rangeValues.startOffset);
   range.setEnd(rangeValues.endContainer, rangeValues.endOffset);
   selection.addRange(range);
   return selection;
  };
  this.hilightSelected = function(color) {
   this.doc.designMode = "on";
   if(!this.doc.execCommand("HiliteColor", false, color))
    this.doc.execCommand("BackColor", false, color);
   this.doc.designMode = "off";
  };
  this.findText = function(text, mword, mcase, up, isServerCallback) {
   var selection, range;
   if(isServerCallback) {
    if(up) {
     this.empty();
     range = this.doc.createRange();
     range.selectNodeContents(this.element);
     range.collapse(false);
     selection = this.win.getSelection();
     selection.removeAllRanges();
     selection.addRange(range);
    }
   } else {
    this.empty();
   }
   var searchResult;
   if(this.useDivContent) {
    var searcher = new dx_DivSearcher(this.element, text, up, mcase, mword);
    isServerCallback ? this.clearLastStoredSelection() : this.restoreLastStoredSelection(up);
    if(searchResult = searcher.search()) {
     this.setSelection(searchResult, up);
     this.scrollTo(searchResult.startContainer.parentElement);
     this.storeCurrentSelection(searchResult);
    } else {
     this.clearLastStoredSelection();
    }
   } else {
    searchResult = this.win.find(text, mcase, up, false, false);
    if(searchResult && ASPx.Browser.MacOSMobilePlatform) {
     this.hilightSelected("yellow");
     selection = this.win.getSelection();
     range = selection.getRangeAt(0);
     var currentRangeInfo = { "startContainer": range.startContainer, "startOffset": range.startOffset, "endContainer": range.endContainer, "endOffset": range.endOffset };
     this.storedSelections.push(currentRangeInfo);
     range.collapse(up);
     selection.removeAllRanges();
     selection.addRange(range);
    }
   }
   return searchResult;
  };
  this.scrollTo = function(element) {
   if(element && element.scrollIntoView)
    element.scrollIntoView(false);
  };
 }
 function dx_TextRange(element, searchUp) {
  this.selText = "";
  this.element = element;
  this.range = ASPx.GetElementDocument(element).body.createTextRange();
  this.range.moveToElementText(element);
  this.originalRange = this.range.duplicate();
  this.empty = function() {
   if(this.element.document && this.element.document.selection)
    this.element.document.selection.empty();
  };
  this.select = function(text) {
   this.range.select();
   this.selText = text;
  };
  this.findText = function(text, mword, mcase, up, isServerCallback) {
   if(!text || text.length == 0)
    return true;
   var fl = this.getFlags(mword, mcase);
   var val = up ? this.findUp(text, fl) : this.findDown(text, fl);
   if(val) this.select(text);
   return val;
  };
  this.getFlags = function(mword, mcase) {
   var fl = 0;
   if(mword) fl += 2;
   if(mcase) fl += 4;
   return fl;
  };
  this.findUp = function(text, fl) {
   this.range.moveEnd("character", -this.selText.length);
   var val = this.range.findText(text, -1000, fl) && this.originalRange.inRange(this.range);
   if(!val) this.range.moveEnd("character", this.selText.length);
   return val;
  };
  this.findDown = function(text, fl) {
   this.range.moveStart("character", this.selText.length);
   var val = this.range.findText(text, 1000, fl) && this.originalRange.inRange(this.range);
   if(!val) this.range.moveStart("character", -this.selText.length);
   return val;
  };
 }
 ASPx.dx_Range = dx_Range;
 ASPx.dx_TextRange = dx_TextRange;
})(window);
(function(window) {
 var dx_XROperaPrintTrick = {
  printCore: function() {
   this.runAfterImagesLoaded(function() { self.print(); });
  },
  fillPrintElement: function(content) {
   this.printElement.innerHTML = content;
  },
  ensurePrintElement: function(className) {
   if(!ASPx.IsExists(this.printElement)) {
    this.printElement = this.createDivElement(this.printElementName, className);
    this.ensurePrintStyleElement();
   }
  },
  ensurePrintStyleElement: function() {
   if(ASPx.GetElementById(this.printElementName + "Style")) {
    return;
   }
   var htmlElement = document.getElementsByTagName("HTML")[0];
   var elements = htmlElement.getElementsByTagName("HEAD");
   var headElement = (elements && elements.length > 0) ? elements[0] : htmlElement.appendChild(document.createElement("HEAD"));
   var styleElement = headElement.appendChild(document.createElement("STYLE"));
   styleElement.innerText = "@media print {div." + this.printElementName + " { display: block } body>* { display: none } body { background-color: #FFFFFF;  background-image: none; margin: 0px 0px 0px 0px } } @media screen,projection {div." + this.printElementName + " { display: none }}";
   styleElement.id = this.printElementName + "Style";
  },
  createDivElement: function(name, className) {
   var d = document.createElement("div");
   d.name = name;
   d.id = name;
   d.className = name + " " + className;
   document.body.appendChild(d);
   return d;
  },
  runAfterImagesLoaded: function(func) {
   var reqs = [];
   reqs.remove = function(req) {
    for(var i = 0; i < this.length; i++) {
     if(this[i] == req) {
      this.splice(i, 1);
     }
    }
   };
   var onReadyStateChangeHandler = function() {
    if(this.readyState === 4) {
     reqs.remove(this);
     if(reqs.length === 0) {
      func();
     }
    }
   };
   var runRequest = function() {
    var req = new XMLHttpRequest();
    req.open("GET", images[i].src, true);
    req.send(null);
    req.onreadystatechange = onReadyStateChangeHandler;
    return req;
   };
   var images = this.printElement.getElementsByTagName("IMG");
   for(var i = 0; i < images.length; i++) {
    if(!images[i].complete) {
     reqs.push(runRequest());
    }
   }
   if(reqs.length === 0) {
    func();
   }
  }
 };
 ASPx.dx_XROperaPrintTrick = dx_XROperaPrintTrick;
})(window);
(function (window) {
 function getEditorValue(editor) {
  var value = editor.cpReportParametersPanel_MultiValue
   ? editor.GetTokenValuesCollection()
   : editor.GetValue();
  if (editor.cpReportParametersPanel_DateTimeLookup) { 
   if (editor.cpReportParametersPanel_MultiValue) {
    var valueLength = value.length;
    for (var i = 0; i < valueLength; i++) {
     value[i] = eval(value[i]);
    }
   } else {
    value = eval(value);
   }
  }
  return value;
 }
 function setEditorValue(editor, value) {
  var supportUpdate = editor.BeginUpdate && editor.EndUpdate;
  if (supportUpdate)
   editor.BeginUpdate();
  if(editor.cpReportParametersPanel_MultiValue) {
   ASPxClientReportParametersPanel.resetMultiValueEditor(editor, value);
  } else {
   editor.SetValue(value);
  }
  if (supportUpdate)
   editor.EndUpdate();
 }
 var ASPxClientReportParametersPanel = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.parameters = {};
   this.editorValueChangedHandler = null;
   this.resetingCascadeParameters = false;
   this.cascadeLookupValuesRequest = new ASPxClientEvent();
  },
  InlineInitialize: function() {
   ASPxClientControl.prototype.InlineInitialize.call(this);
   var controlCollection = ASPx.GetControlCollection();
   var self = this;
   this.resetButton = controlCollection.Get(this.name + "_Reset");
   this.resetButton.Click.AddHandler(function() { self.resetButtonClick(); });
   this.submitButton = controlCollection.Get(this.name + "_Submit");
   this.submitButton.Click.AddHandler(function() { self.submitButtonClick(); });
   this.editorValueChangedHandler = function(s) {
    self.editorValueChanged(s);
   }
   var parameters = this.parameters;
   for(var i in parameters) {
    if(!parameters.hasOwnProperty(i)) {
     continue;
    }
    var parameter = parameters[i];
    if(!parameter.editorId) {
     continue;
    }
    var editor = controlCollection.Get(parameter.editorId);
    editor.ValueChanged.AddHandler(this.editorValueChangedHandler);
    if(parameter.useCascadeLookup) {
     this.patchAutoCompleteBoxForCascadeLookupSupport(editor);
    }
    if(editor.cpReportParametersPanel_MultiValue) {
     editor.TokensChanged.AddHandler(function(s, e) { self.onTokenParameterChanged(s); });
    }
    parameter.editor = editor;
   }
  },
  Initialize: function() {
   this.constructor.prototype.Initialize.call(this);
   if(this.reportViewerId) {
    this.reportViewer = ASPx.GetControlCollection().Get(this.reportViewerId);
   }
  },
  AssignParameters: function(parametersInfo) {
   var len = parametersInfo.length;
   for(var i = 0; i < len; i++) {
    var parameterInfo = parametersInfo[i];
    var path = parameterInfo.Path || parameterInfo.path;
    var value = parameterInfo.Value || parameterInfo.value;
    this.assignParameterCore(path, value);
   }
   this.resetButtonClick();
  },
  AssignParameter: function(path, value) {
   this.assignParameterCore(path, value);
   this.resetButtonClick();
  },
  GetParameterNames: function() {
   var result = [];
   var parameters = this.parameters;
   for(var i in parameters) {
    if(parameters.hasOwnProperty(i)) {
     result.push(i);
    }
   }
   return result;
  },
  GetEditorByParameterName: function(parameterName) {
   var parameters = this.parameters;
   return parameters.hasOwnProperty(parameterName) && parameters[parameterName].editor;
  },
  editorValueChanged: function(currentEditor) {
   !this.resetingCascadeParameters && this.resetButton.SetEnabled(true);
   var cascadeLookupValues = this.collectCascadeLookupValues(currentEditor);
   if(cascadeLookupValues) {
    this.cascadeLookupValuesRequest.FireEvent(this, cascadeLookupValues);
   }
  },
  assignParameterCore: function(path, value) {
   var parameters = this.parameters;
   if(!parameters[path]) {
    throw new Error("there is no such parameter");
   }
   parameters[path].value = value;
  },
  resetButtonClick: function() {
   if(!this.reportViewer) {
    return;
   }
   var parameters = this.parameters;
   var firstEditor;
   for(var path in parameters) {
    var parameter = parameters[path];
    if (!ASPx.IsExists(parameter)) {
     continue;
    }
    var editor = parameter.editor;
    if(editor) {
     !firstEditor && (firstEditor = editor);
     setEditorValue(editor, parameter.value);
    }
   }
   var cascadeParamsWithLookupValues = this.collectCascadeLookupValues(firstEditor);
   if(cascadeParamsWithLookupValues) {
    this.resetingCascadeParameters = true;
    this.cascadeLookupValuesRequest.FireEvent(this, cascadeParamsWithLookupValues);
   }
   this.resetButton.SetEnabled(false);
   ASPxClientEdit.ValidateEditorsInContainer(this.GetMainElement());
  },
  submitButtonClick: function() {
   if(!this.reportViewer || !ASPxClientEdit.ValidateEditorsInContainer(this.GetMainElement())) {
    return;
   }
   var reportViewerParameters = {};
   var parameters = this.parameters;
   for(var path in parameters) {
    var parameter = parameters[path];
    if (!ASPx.IsExists(parameter)) {
     continue;
    }
    var value = !parameter.editor ? parameter.value : getEditorValue(parameter.editor);
    parameter.value = value;
    reportViewerParameters[path] = value;
   }
   this.resetButton.SetEnabled(false);
   this.reportViewer.SubmitParameters(reportViewerParameters);
  },
  patchAutoCompleteBoxForCascadeLookupSupport: function(autoCompleteBox) {
   autoCompleteBox.dxxrdv_callbackEvent = new ASPxClientEvent();
   autoCompleteBox.CreateCallback = function(arg) {
    autoCompleteBox.dxxrdv_callbackEvent.FireEvent(autoCompleteBox, arg);
   };
  },
  collectCascadeLookupValues: function(currentEditor) {
   var currentEditorFounded = false;
   var cascadeLookupValues = {};
   var hasCallbackEventArguments = false;
   for(var i in this.parameters) {
    var parameter = this.parameters[i];
    if(!ASPx.IsExists(parameter)) {
     continue;
    }
    var editor = parameter.editor;
    var value = !editor ? parameter.value : getEditorValue(editor);
    var cascadeLookupValue = {
     value: value
    };
    if(!currentEditorFounded && editor === currentEditor) {
     currentEditorFounded = true;
    } else if(currentEditorFounded && parameter.useCascadeLookup) {
     var onCallbackEvent = function(_, callbackEventArgument) {
      cascadeLookupValue.callbackEventArgument = callbackEventArgument;
     };
     editor.dxxrdv_callbackEvent.AddHandler(onCallbackEvent);
     editor.PerformCallback();
     editor.dxxrdv_callbackEvent.RemoveHandler(onCallbackEvent);
     hasCallbackEventArguments = true;
    }
    cascadeLookupValues[i] = cascadeLookupValue;
   }
   return hasCallbackEventArguments ? cascadeLookupValues : null;
  },
  onCascadeLookupsCallbackCore: function(responses) {
   for(var i in responses) {
    var response = responses[i];
    var parameter = this.parameters[i];
    if(!ASPx.IsExists(response) || !ASPx.IsExists(parameter)) {
     continue;
    }
    var editor = parameter.editor;
    if(!editor) {
     continue;
    }
    editor.ValueChanged.RemoveHandler(this.editorValueChangedHandler);
    editor.DoCallback(response);
    editor.ValueChanged.AddHandler(this.editorValueChangedHandler);
   }
   this.resetingCascadeParameters = false;
  },
  collectEditors: function() {
   var result = [];
   var parameters = this.parameters;
   for(var i in parameters) {
    if(!parameters.hasOwnProperty(i)) {
     continue;
    }
    var parameter = parameters[i];
    if(!parameter.editor) {
     result.push({ parameterName: i, value: parameter.value });
    } else {
     result.push(parameter.editor);
    }
   }
   return result;
  },
  onTokenParameterChanged: function(tokenBoxEditor) {
   var tokens = tokenBoxEditor.GetTokenCollection();
   for(var i = 0; i < tokens.length; i++) {
    var tokenText = tokens[i];
    var isFound = !!tokenBoxEditor.FindItemByText(tokenText);
    if(!isFound)
     tokenBoxEditor.AddItem(tokenText, tokenText);
   }
  }
 });
 ASPxClientReportParametersPanel.resetMultiValueEditor = function(tokenbox, values) {
  tokenbox.ClearTokenCollection();
  var valuesLength = values.length;
  for(var i = 0; i < valuesLength; i++) {
   var value = values[i];
   var item = tokenbox.FindItemByValue(value);
   if(item) {
    tokenbox.AddToken(item.text);
   }
  }
 };
 var ASPxClientReportParameterInfo = ASPx.CreateClass(null, {
  constructor: function(path, value) {
   this.Path = path;
   this.Value = value;
  }
 });
 window.ASPxClientReportParametersPanel = ASPxClientReportParametersPanel;
 window.ASPxClientReportParameterInfo = ASPxClientReportParameterInfo;
})(window);

(function() {
var ASPxClientButton = ASPx.CreateClass(ASPxClientControl, {
 constructor: function(name) {
  this.constructor.prototype.constructor.call(this, name);
  this.isASPxClientButton = true;
  this.allowFocus = true;
  this.autoPostBackFunction = null;
  this.causesValidation = true;
  this.checked = false;
  this.clickLocked = false;
  this.groupName = "";
  this.focusElementSelected = false;
  this.pressed = false;
  this.useSubmitBehavior = true;
  this.validationGroup = "";
  this.validationContainerID = null;
  this.validateInvisibleEditors = false;
  this.originalWidth = null;
  this.originalHeight = null;
  this.needUpdateBounds = true;
  this.isTextEmpty = false;
  this.CheckedChanged = new ASPxClientEvent();
  this.GotFocus = new ASPxClientEvent();
  this.LostFocus = new ASPxClientEvent();
  this.Click = new ASPxClientEvent();
 },
 InlineInitialize: function() {
  var mainElement = this.GetMainElement();
  this.originalWidth = mainElement.style.width;
  this.originalHeight = mainElement.style.height;
  ASPxClientControl.prototype.InlineInitialize.call(this);
  this.InitializeElementIDs();
  this.InitializeEvents();
  this.InitializeEnabled();
  this.InitializeChecked();
  if(this.IsLink())
   this.InitializeLink();
  this.PreventButtonImageDragging();
  this.needUpdateBounds = ASPx.Browser.Safari || ASPx.GetCurrentStyle(mainElement).display.indexOf("table") === -1;
  if(this.needUpdateBounds)
   mainElement.className = mainElement.className.replace("dxbTSys", "");
  else {
   var contentElement = this.GetContentDiv();
   if(contentElement) contentElement.style.verticalAlign = mainElement.style.verticalAlign;
  }
 },
 InitializeElementIDs: function(){
  var mainElement = this.GetMainElement();
  var contentElement = ASPx.GetNodeByTagName(mainElement, "DIV", 0);
  if(contentElement) contentElement.id = this.name + "_CD";
  var imageElement = ASPx.GetNodeByTagName(mainElement, "IMG", 0);
  if(imageElement) imageElement.id = this.name + "Img";
 },
 InitializeEnabled: function(){
  this.SetEnabledInternal(this.clientEnabled, true);
 },
 InitializeChecked: function(){
  this.SetCheckedInternal(this.checked, true);
 },
 InitializeLink: function(){
  var mainElement = this.GetMainElement();
  if(this.enabled)
   mainElement.href = "javascript:;";
  if(!this.allowFocus)
   mainElement.style.outline = 0;
  if(!this.GetTextContainer())
   mainElement.style.fontSize = "0pt";
 },
 InitializeEvents: function(){
  if(!this.isNative && !this.IsLink()) {
   var element = this.GetInternalButton();
   if(element)
    element.onfocus = null;
   var textControl = this.GetTextControl();
   if(textControl) {
    if(ASPx.Browser.IE)
     ASPx.Evt.AttachEventToElement(textControl, "mouseup", ASPx.Selection.Clear);
    ASPx.Evt.PreventElementDragAndSelect(textControl, false);
   }    
  }
  this.onClick = function(evt) {
   var processOnServer = ASPx.BClick(this.name, evt);
   if(!processOnServer)
    ASPx.Evt.PreventEvent(evt);
   return processOnServer;
  }.aspxBind(this);
  this.onImageMoseDown = function() { var el = ASPx.GetFocusedElement(); if(el) el.blur(); };
  this.onGotFocus = function() { this.OnFocus(); }.aspxBind(this);
  this.onLostFocus = function() { this.OnLostFocus(); }.aspxBind(this);
  this.onKeyUp = function(evt) { this.OnKeyUp(evt); }.aspxBind(this);
  this.onKeyDown = function(evt) { this.OnKeyDown(evt); }.aspxBind(this); 
  if(!this.isNative && !this.IsLink()) {
   this.AttachNativeHandlerToMainElement("focus", "SetFocus");
   this.AttachNativeHandlerToMainElement("click", "DoClick");
  }
 },
 AdjustControlCore: function () {
  if(this.isNative || this.IsLink()) return;
  var buttonImage = this.GetButtonImage();  
  if(buttonImage && buttonImage.offsetHeight === 0 && buttonImage.offsetWidth === 0)
   buttonImage.onload = function() { this.UpdateSize(); }.aspxBind(this);
  else
   this.UpdateSize();
 },
 UpdateSize: function(){
  if(this.needUpdateBounds){
   this.UpdateWidth();
   this.UpdateHeight();
  }
  else
   this.CorrectWrappedText(this.GetContentDiv, "Text", true);
 },
 UpdateHeight: function(){
  if(this.isNative || this.IsLink() || this.originalHeight === null || ASPx.IsPercentageSize(this.originalHeight)) return;
  var height;
  var mainElement = this.GetMainElement();
  var contentDiv = this.GetContentDiv();
  var borderAndPadding = ASPx.GetTopBottomBordersAndPaddingsSummaryValue(mainElement);
  var contentHasExcessiveHeight = contentDiv.offsetHeight > mainElement.offsetHeight - borderAndPadding;
  var needSetAutoHeight = !this.originalHeight || (ASPx.Browser.Safari && contentHasExcessiveHeight);
  if(needSetAutoHeight) {
   mainElement.style.height = "";
   height = mainElement.offsetHeight - borderAndPadding;
  }
  else
   height = (ASPx.PxToInt(this.originalHeight) - borderAndPadding);
  if(height){
   mainElement.style.height = height + "px";
   if(contentDiv && contentDiv.offsetHeight > 0){
    var contentDivCurrentStyle = ASPx.GetCurrentStyle(contentDiv);
    var paddingTop = parseInt(contentDivCurrentStyle.paddingTop) || 0;
    var paddingBottom = parseInt(contentDivCurrentStyle.paddingBottom) || 0;
    var clientHeightDiff = height - contentDiv.offsetHeight;
    var verticalAlign = ASPx.GetCurrentStyle(mainElement).verticalAlign;
    if(verticalAlign == "top")
     paddingBottom = paddingBottom + clientHeightDiff;
    else if(verticalAlign == "bottom")
     paddingTop = paddingTop + clientHeightDiff;
    else {
     var halfClientHeightDiff = Math.floor(clientHeightDiff / 2);
     paddingTop = paddingTop + halfClientHeightDiff;
     paddingBottom = paddingBottom + (clientHeightDiff - halfClientHeightDiff);
    }
    contentDiv.style.paddingTop = (paddingTop > 0 ? paddingTop : 0) + "px";
    contentDiv.style.paddingBottom = (paddingBottom > 0 ? paddingBottom : 0) + "px";
   }
  }
 },
 UpdateWidth: function(){
  if(this.isNative || this.IsLink() || this.originalWidth === null) return;
  if(!ASPx.IsPercentageSize(this.originalWidth)) {
   var mainElement = this.GetMainElement();
   var borderAndPadding = ASPx.GetLeftRightBordersAndPaddingsSummaryValue(mainElement);
   if(this.originalWidth && ASPx.IsTextWrapped(this.GetTextContainer()))
    mainElement.style.width = (ASPx.PxToInt(this.originalWidth) - borderAndPadding) + "px";
   else
    mainElement.style.width = "";
   var width = mainElement.offsetWidth - borderAndPadding;
   if(this.originalWidth && width < ASPx.PxToInt(this.originalWidth) - borderAndPadding) 
    width = ASPx.PxToInt(this.originalWidth) - borderAndPadding;
   if(width)
    mainElement.style.width = (width > 0 ? width : 0)  + "px";
  }
  this.CorrectWrappedText(this.GetContentDiv, "Text", true);
 },
 GetAdjustedSizes: function() {
  var sizes = ASPxClientControl.prototype.GetAdjustedSizes.call(this);
  var image = this.GetButtonImage();
  if(image) {
   sizes.imageWidth = image.offsetWidth;
   sizes.imageHeight = image.offsetHeight;
  }
  return sizes;
 },
 PreventButtonImageDragging: function() {
  ASPx.Evt.PreventImageDragging(this.GetButtonImage());
 },
 AttachNativeHandlerToMainElement: function(handlerName, correspondingMethodName) {
  var mainElement = this.GetMainElement();
  if(!ASPx.IsExistsElement(mainElement))
   return;
  mainElement[handlerName] = function() { _aspxBCallButtonMethod(this.name, correspondingMethodName); }.aspxBind(this);
 },
 GetContentDiv: function(){
  return this.GetChildElement("CD");
 },       
 GetButtonImage: function(){
  return ASPx.CacheHelper.GetCachedElement(this, "buttonImage", 
   function() { 
    return ASPx.GetNodeByTagName(this.GetMainElement(), "IMG", 0); 
   });
 },
 GetInternalButton: function() {
  return ASPx.CacheHelper.GetCachedElement(this, "internalButton", 
   function() { 
    return this.isNative || this.IsLink() ? this.GetMainElement() : ASPx.GetNodeByTagName(this.GetMainElement(), "INPUT", 0);
   });
 },
 GetTextContainer: function() {
  return ASPx.CacheHelper.GetCachedElement(this, "textContainer", 
   function() { 
    if(this.isNative)
     return this.GetMainElement();
    else{
     var textElement = this.IsLink() ? this.GetMainElement() : this.GetContentDiv();
     return ASPx.GetNodeByTagName(textElement, "SPAN", 0);
    }
   });
 },
 GetTextControl: function(){
  return ASPx.CacheHelper.GetCachedElement(this, "textControl", 
   function() { 
    var element = ASPx.GetParentByTagName(this.GetContentDiv(), "DIV");
    if(!ASPx.IsExistsElement(element) || (element.id == this.name))
     element = this.GetContentDiv();
    return element;
   });
 },
 IsLink: function(){
  if (this.GetMainElement())
   return this.GetMainElement().tagName === "A";
  return false;
 },   
 IsHovered: function(){
  var hoverElement = this.GetMainElement();
  return ASPx.GetStateController().currentHoverItemName == hoverElement.id;
 },   
 SetEnabledInternal: function(enabled, initialization) {
  if(!this.enabled)
   return;
  if(!initialization || !enabled)
   this.ChangeEnabledStateItems(enabled);
  this.ChangeEnabledAttributes(enabled);
 },
 ChangeEnabledAttributes: function(enabled) {
  var element = this.GetInternalButton();
  if(element) {
   element.disabled = !enabled;
   if(this.IsLink()){
    var method = ASPx.Attr.ChangeAttributesMethod(enabled);
    method(this.GetMainElement(), "href");
   }
  }
  this.ChangeEnabledEventsAttributes(ASPx.Attr.ChangeEventsMethod(enabled));
 },
 ChangeEnabledEventsAttributes: function(method) {
  var element = this.GetMainElement();
  method(element, "click", this.onClick);
  if(this.allowFocus){
   if(!this.isNative && !this.IsLink()) 
    element = this.GetInternalButton();
   if(element) {
    method(element, "focus", this.onGotFocus);
    method(element, "blur", this.onLostFocus);
    if(!this.isNative && !this.IsLink()){
     method(element, "keyup", this.onKeyUp);
     method(element, "blur", this.onKeyUp);
     method(element, "keydown", this.onKeyDown);
    }
   }
   if(ASPx.Browser.Firefox){
    var image = this.GetButtonImage();
    if(image)
     method(image, "mousedown", this.onImageMoseDown); 
   }
  }
 },
 ChangeEnabledStateItems: function(enabled){
  if(this.isNative) return;
  ASPx.GetStateController().SetElementEnabled(this.GetMainElement(), enabled);
  this.UpdateFocusedStyle();
 },
 RequiredPreventDoublePostback: function(){
  return ASPx.Browser.Firefox && !this.isNative; 
 },
 OnFocus: function() {
  if(!this.allowFocus)
   return false;
  this.focused = true;
  if(this.isInitialized)
   this.RaiseFocus();
  this.UpdateFocusedStyle();
 },  
 OnLostFocus: function() {
  if(!this.allowFocus)
   return false;
  this.focused = false;
  if(this.isInitialized)
   this.RaiseLostFocus();
  this.UpdateFocusedStyle();
 },
 CauseValidation: function() {
  if(this.causesValidation && typeof(ASPxClientEdit) != "undefined")
   return this.validationContainerID != null ?
    ASPxClientEdit.ValidateEditorsInContainerById(this.validationContainerID, this.validationGroup, this.validateInvisibleEditors) :
    ASPxClientEdit.ValidateGroup(this.validationGroup, this.validateInvisibleEditors);
  else
   return true;
 },
 OnClick: function(evt) {
  if(this.clickLocked) return true;
  if(this.checked && this.groupName != "" && this.GetCheckedGroupList().length > 1) return;
  this.SetFocus();
  var isValid = this.CauseValidation();
  var processOnServer = this.autoPostBack;
  if(this.groupName != "") {
   if(this.GetCheckedGroupList().length == 1)
    this.SetCheckedInternal(!this.checked, false);
   else {
    this.SetCheckedInternal(true, false);
    this.ClearButtonGroupChecked(true);
   }
   processOnServer = this.RaiseCheckedChanged();
   if(processOnServer && isValid)
    this.SendPostBack("CheckedChanged");
  }
  var params = this.RaiseClick();
  if(evt && params.cancelEventAndBubble)
   ASPx.Evt.PreventEventAndBubble(evt);
  if(params.processOnServer && isValid){
   var requiredPreventDoublePostback = this.RequiredPreventDoublePostback();
   var postponePostback = ASPx.Browser.AndroidMobilePlatform; 
   if(requiredPreventDoublePostback || postponePostback)
    window.setTimeout(function() { _aspxBCallButtonMethod(this.name, "SendPostBack", "Click"); }.aspxBind(this), 0); 
   else
    this.SendPostBack("Click");
   return !requiredPreventDoublePostback;
  }
  return false;
 },
 OnKeyUp: function(evt) {
  if(this.pressed)
   this.SetUnpressed();
 },
 OnKeyDown: function(evt) {
  if(evt.keyCode == ASPx.Key.Enter || evt.keyCode == ASPx.Key.Space)
   this.SetPressed();
 },  
 GetChecked: function(){
  return this.groupName != "" ? this.checked : false;
 },  
 GetCheckedGroupList: function(){
  var result = [ ];
  ASPx.GetControlCollection().ForEachControl(function(control) {
   if(ASPx.Ident.IsASPxClientButton(control) && (control.groupName == this.groupName) && !control.IsDOMDisposed())
    result.push(control);
  }, this);
  return result;
 },
 ClearButtonGroupChecked: function(raiseCheckedChanged){
  var list = this.GetCheckedGroupList();
  for(var i = 0; i < list.length; i ++){
   if(list[i] != this && list[i].checked) {
    list[i].SetCheckedInternal(false, false);
    if(raiseCheckedChanged)
     list[i].RaiseCheckedChanged();
   }
  }
 },
 ApplyCheckedStyle: function(){
  var stateController = ASPx.GetStateController();
  if(this.IsHovered()) 
   stateController.SetCurrentHoverElement(null);  
  stateController.SelectElementBySrcElement(this.GetMainElement());
 }, 
 ApplyUncheckedStyle: function(){
  var stateController = ASPx.GetStateController();
  if(this.IsHovered()) 
   stateController.SetCurrentHoverElement(null);
  stateController.DeselectElementBySrcElement(this.GetMainElement());
 },  
 SetCheckedInternal: function(checked, initialization){
  if(initialization && checked || (this.checked != checked)){
   this.checked = checked;
   if(checked)
    this.ApplyCheckedStyle();
   else
    this.ApplyUncheckedStyle();
  }
 },
 UpdateStateObject: function(){
  if(this.groupName != "")
   this.UpdateStateObjectWithObject({ checked: this.checked });
 },
 GetStateHiddenFieldName: function() {
  return this.uniqueID + "$State";
 },
 ApplyPressedStyle: function(){
  ASPx.GetStateController().OnMouseDownOnElement(this.GetMainElement());
 },
 ApplyUnpressedStyle: function(){ 
  ASPx.GetStateController().OnMouseUpOnElement(this.GetMainElement());
 },
 SetPressed: function(){
  this.pressed = true;
  this.ApplyPressedStyle();
 }, 
 SetUnpressed: function(){
  this.pressed = false;
  this.ApplyUnpressedStyle();
 },
 SetFocus: function(){
  if(!this.allowFocus || this.focused)
   return;
  var element = this.GetInternalButton();
  if(element) {
   var hiddenInternalButtonRequiresVisibilityToGetFocused = ASPx.Browser.WebKitFamily  && !this.isNative  && !this.IsLink();
   if(hiddenInternalButtonRequiresVisibilityToGetFocused)
    ASPxClientButton.MakeHiddenElementFocusable(element);
   if(ASPx.IsFocusable(element) && ASPx.GetActiveElement() != element)
    element.focus();
   if(hiddenInternalButtonRequiresVisibilityToGetFocused)
    ASPxClientButton.RestoreHiddenElementAppearance(element);
  }
 },
 ApplyFocusedStyle: function(){
  if(this.focusElementSelected) return;
  if(typeof(ASPx.GetStateController) != "undefined")
   ASPx.GetStateController().SelectElementBySrcElement(this.GetContentDiv());
  this.focusElementSelected = true;
 },
 ApplyUnfocusedStyle: function(){ 
  if(!this.focusElementSelected) return;
  if(typeof(ASPx.GetStateController) != "undefined")
   ASPx.GetStateController().DeselectElementBySrcElement(this.GetContentDiv());
  this.focusElementSelected = false;
 },
 UpdateFocusedStyle: function(){
  if(this.isNative || this.IsLink()) return;
  if(this.enabled && this.clientEnabled && this.allowFocus && this.focused)
   this.ApplyFocusedStyle();
  else
   this.ApplyUnfocusedStyle();
 },
 SendPostBack: function(postBackArg){
  if(!this.enabled || !this.clientEnabled)
   return;
  var arg = postBackArg || "";
  if(this.autoPostBackFunction)
   this.autoPostBackFunction(arg);
  else if(!this.useSubmitBehavior || this.IsLink())
   ASPxClientControl.prototype.SendPostBack.call(this, arg);
  if(this.useSubmitBehavior && !this.isNative) 
   this.ClickInternalButton();
 },
 ClickInternalButton: function(){
  var element = this.GetInternalButton();
  if(element) {
   this.clickLocked = true;
   if(ASPx.Browser.NetscapeFamily)
    this.CreateUniqueIDCarrier(); 
   var postHandler = ASPx.GetPostHandler();
   postHandler.SetLastSubmitElementName(element.name);
   ASPx.Evt.DoElementClick(element);
   postHandler.SetLastSubmitElementName(null);
   if(ASPx.Browser.NetscapeFamily)
    this.RemoveUniqueIDCarrier(); 
   this.clickLocked = false;
  }
 },
 CreateUniqueIDCarrier: function() {
  var name = this.uniqueID;
  var id = this.GetUniqueIDCarrierID();
  var field = ASPx.CreateHiddenField(name, id);
  var form = this.GetParentForm();
  if(form) form.appendChild(field);
 },
 RemoveUniqueIDCarrier: function() {
  var field = document.getElementById(this.GetUniqueIDCarrierID());
  if(field)
   field.parentNode.removeChild(field);
 },
 GetUniqueIDCarrierID: function() {
  return this.uniqueID + "_UIDC";
 },
 DoClick: function(){
  if(!this.enabled || !this.clientEnabled)
   return;
  var button = (this.isNative || this.IsLink()) ? this.GetMainElement() : this.GetInternalButton();
  if(button)
   ASPx.Evt.DoElementClick(button);
  else 
   this.OnClick();   
 },
 GetChecked: function(){
  return this.checked;
 },
 SetChecked: function(checked){
  this.SetCheckedInternal(checked, false);
  this.ClearButtonGroupChecked(false);
 },
 GetText: function(){
  if(!this.isTextEmpty)
   return this.isNative ? this.GetTextContainer().value : this.GetTextContainer().innerHTML;
  return "";
 },
 SetText: function(text){
  this.isTextEmpty = (text == null || text == "");
  var textContainer = this.GetTextContainer();
  if(textContainer){
   if(this.isNative)
    textContainer.value = (text != null) ? text : "";
   else {
    var value = this.isTextEmpty ? "&nbsp;" : text;
      textContainer.innerHTML = value;
    var element = this.GetInternalButton();
    if(element)
     element.value = value;
    if(this.clientVisible && ASPx.Browser.IE && ASPx.Browser.Version >= 9) 
     ASPx.SetElementDisplay(this.GetMainElement(), true);
   }
   this.UpdateSize();
  }
 },
 GetImageUrl: function(){
  var img = this.GetButtonImage();
  return img ?  img.src : "";
 },
 SetImageUrl: function(url){
  var img = this.GetButtonImage();
  if(img) {
   img.src = url;
   this.UpdateSize();
  }
 },
 SetEnabled: function(enabled){
  if(this.clientEnabled != enabled) {
   if(!enabled && this.focused)
    this.OnLostFocus();
   this.clientEnabled = enabled;
   this.SetEnabledInternal(enabled, false);
  }
 },
 GetEnabled: function(){
  return this.enabled && this.clientEnabled;
 },
 Focus: function(){
  this.SetFocus();
 },
 RaiseCheckedChanged: function(){
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned("CheckedChanged");
  if(!this.CheckedChanged.IsEmpty()){
   var args = new ASPxClientProcessingModeEventArgs(processOnServer);
   this.CheckedChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 RaiseFocus: function(){
  if(!this.GotFocus.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.GotFocus.FireEvent(this, args);
  }
 },
 RaiseLostFocus: function(){
  if(!this.LostFocus.IsEmpty()){
   var args = new ASPxClientEventArgs();
   this.LostFocus.FireEvent(this, args);
  }
 },
 RaiseClick: function() {
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned("Click");
  var cancelEventAndBubble = false;
  if(!this.Click.IsEmpty()) {
   var args = new ASPxClientButtonClickEventArgs(processOnServer, cancelEventAndBubble);
   this.Click.FireEvent(this, args);
   cancelEventAndBubble = args.cancelEventAndBubble;
   processOnServer = args.processOnServer;
  }
  return {
   processOnServer: processOnServer,
   cancelEventAndBubble: cancelEventAndBubble
  };
 }
});
var ASPxClientButtonClickEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
 constructor: function(processOnServer, cancelEventAndBubble) {
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.cancelEventAndBubble = cancelEventAndBubble;
 }
});
ASPxClientButton.Cast = ASPxClientControl.Cast;
ASPxClientButton.MakeHiddenElementFocusable = function(element) {
 element.__dxHiddenElementState = {
  parentDisplay: element.parentNode.style.display,
  height: element.style.height,
  width: element.style.width
 };
 element.parentNode.style.display = "block";
 element.style.height = "1px";
 element.style.width = "1px";
};
ASPxClientButton.RestoreHiddenElementAppearance = function(element) {
 var state = element.__dxHiddenElementState;
 element.parentNode.style.display = state.parentDisplay;
 element.style.height = state.height;
 element.style.width = state.width;
 delete element.__dxHiddenElementState;
};
ASPx.Ident.IsASPxClientButton = function(obj) {
 return !!obj.isASPxClientButton;
};
function _aspxBCallButtonMethod(name, methodName, arg) {
 var button = ASPx.GetControlCollection().Get(name); 
 if(button != null)
  button[methodName](arg);
}
ASPx.BClick = function(name, evt) {
 var button = ASPx.GetControlCollection().Get(name); 
 if(button != null)
  return button.OnClick(evt);
}
window.ASPxClientButton = ASPxClientButton;
})();

(function() {
 ASPxClientPanelBase = ASPx.CreateClass(ASPxClientControl, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.touchUIScroller = null;
  },
  Initialize: function(){
   ASPxClientControl.prototype.Initialize.call(this);
   this.touchUIScroller = ASPx.TouchUIHelper.makeScrollableIfRequired(this.GetMainElement());
  },
  getContentElement: function() {
   if(this.getAnimationContentContainerElement())
    return this.getAnimationContentContainerElement();
   if(this.getScrollContentContainerElement())
    return this.getScrollContentContainerElement();
   if(!ASPx.IsExistsElement(this.contentElement)){
    var element = this.GetMainElement();
    this.contentElement = element && element.tagName == "TABLE" ? element.rows[0].cells[0] : element;
   }
   return this.contentElement;
  },
  getAnimationContentContainerElement: function() {
   return null;
  },
  getScrollContentContainerElement: function() {
   return null;
  },
  GetContentHTML: function(){
   return this.GetContentHtml();
  },
  SetContentHTML: function(html){
   this.SetContentHtml(html);
  },
  GetContentHtml: function(){
   return this.getContentElement().innerHTML;
  },
  SetContentHtml: function(html){
   ASPx.SetInnerHtml(this.getContentElement(), html);
   if(this.touchUIScroller)
    this.touchUIScroller.ChangeElement(this.getContentElement());
  }
 });
 ASPxClientPanelBase.Cast = ASPxClientControl.Cast;
 var FixedPanels = {};
 var FixedPositionProperties;
 var InitFixedPositionProperties = function(){
  FixedPositionProperties = {};
  FixedPositionProperties["Top"] = { 
   documentPadding: "padding-top", documentMargin: "margin-top", documentMargin2: "margin-bottom", 
   contentEdge: "top", oppositeContentEdge: "bottom", size: "offsetHeight", animationSize: "height", oppositePanel: "Bottom" 
  };
  FixedPositionProperties["Bottom"] = { 
   documentPadding: "padding-bottom", documentMargin: "margin-top", documentMargin2: "margin-bottom", 
   contentEdge: "bottom", oppositeContentEdge: "top", size: "offsetHeight", animationSize: "height", oppositePanel: "Top"
  };
  FixedPositionProperties["Left"] = { 
   documentPadding: "padding-left", documentMargin: "margin-left", documentMargin2: "margin-right", 
   contentEdge: "left", oppositeContentEdge: "right", size: "offsetWidth", animationSize: "width", oppositePanel: "Right"
  };
  FixedPositionProperties["Right"] = { 
   documentPadding: "padding-right", documentMargin: "margin-left", documentMargin2: "margin-right", 
   contentEdge: "right", oppositeContentEdge: "left", size: "offsetWidth", animationSize: "width", oppositePanel: "Left"
  };
 }
 var ExpandDirectionProperties;
 var InitExpandDirectionProperties = function(){
  ExpandDirectionProperties = {};
  ExpandDirectionProperties["PopupToLeft"] = { 
   hAlign: ASPx.PopupUtils.OutsideLeftAlignIndicator, vAlign: ASPx.PopupUtils.TopSidesAlignIndicator, 
   size: "offsetWidth", animationSize: "width" 
  };
  ExpandDirectionProperties["PopupToRight"] = { 
   hAlign: ASPx.PopupUtils.OutsideRightAlignIndicator, vAlign: ASPx.PopupUtils.TopSidesAlignIndicator, 
   size: "offsetWidth", animationSize: "width" 
  };
  ExpandDirectionProperties["PopupToTop"] = { 
   hAlign: ASPx.PopupUtils.LeftSidesAlignIndicator, vAlign: ASPx.PopupUtils.AboveAlignIndicator, 
   size: "offsetHeight", animationSize: "height" 
  };
  ExpandDirectionProperties["PopupToBottom"] = { 
   hAlign: ASPx.PopupUtils.LeftSidesAlignIndicator, vAlign: ASPx.PopupUtils.BelowAlignIndicator, 
   size: "offsetHeight", animationSize: "height" 
  };
 }
 var CollapsiblePanelsAutoGenGroupCount = 0;
 var CollapsiblePanelsGroups = {};
 var ExpandedPanels = {};
 var DocumentProperties = {};
 var EXPANDED_SELECTOR = "dxpnl-expanded";
 var COLLAPSIBLE_SELECTOR = "dxpnl-collapsible";
 var CENTER_BTN_POSITION_SELECTOR = "dxpnl-cp";
 var EXPAND_BAR_ID = "_EB";
 var EXPAND_BUTTON_ID = "_EBB";
 var CONTENT_CONTAINER_ID = "_CC";
 var COLLAPSED_STATE_CLASS_NAME = "dxpnl-collapsedState";
 var HIDDEN_STATE_CLASS_NAME = "dxpnl-hiddenState";
 ASPxClientPanel = ASPx.CreateClass(ASPxClientPanelBase, {
  constructor: function(name) {
   this.constructor.prototype.constructor.call(this, name);
   this.animationType = "none";
   this.fixedPosition = this.getFixedPosition();
   this.expandEffect = "Slide";
   this.expandOnPageLoad = false;
   this.groupName = "";
   this.fixedPositionOverlap = false;
   this.fixedPositionProperties = null;
   this.expandDirectionProperties = null;
   this.documentMarginsChanged = false;
   this.slideAnimationPosProperty = null;
   this.slideAnimationExpandBarSize = null;
   this.collapseWindowWidth = 0;
   this.collapseWindowHeight = 0;
   this.hideWindowWidth = 0;
   this.hideWindowHeight = 0;
   this.contentElement = null;
   this.expandBarElement = null;
   this.expandButtonElement = null;
   this.animationContentContainerElement = null;
   this.scrollContentContainerElement = null;
   this.Collapsed = new ASPxClientEvent();
   this.Expanded = new ASPxClientEvent();
  },
  InlineInitialize: function(){
   ASPxClientPanelBase.prototype.InlineInitialize.call(this);
   if(this.fixedPosition){
    if(!FixedPositionProperties)
     InitFixedPositionProperties();
    this.fixedPositionProperties = FixedPositionProperties[this.fixedPosition];
   }
   if(this.expandEffect.indexOf("Popup") > -1){
    if(!ExpandDirectionProperties)
     InitExpandDirectionProperties();
    this.expandDirectionProperties = ExpandDirectionProperties[this.expandEffect];
   }
   if(this.isPositionFixed()){
    FixedPanels[this.fixedPosition] = this;
    var scrollContainer = this.getScrollContentContainerElement();
    if(scrollContainer && 
     (scrollContainer.style.overflow !== "" && scrollContainer.style.overflow !== "visible" ||
     scrollContainer.style.overflowX !== "" && scrollContainer.style.overflowX !== "visible" ||
     scrollContainer.style.overflowY !== "" && scrollContainer.style.overflowY !== "visible")){
     ASPx.Evt.AttachEventToElement(scrollContainer, "scroll",
      function (evt) {
       if(typeof(ASPx.GetDropDownCollection) != "undefined")
        ASPx.GetDropDownCollection().ProcessControlsInContainer(scrollContainer, function(control) {
         control.HideDropDown();
        });
       if(typeof(ASPx.GetMenuCollection) != "undefined")
        ASPx.GetMenuCollection().HideAll();
      }.aspxBind(this));
    }
   }
   if(this.hideWindowWidth > 0 || this.hideWindowHeight > 0)
    this.createVisibilityCss();
   if(this.collapseWindowWidth > 0 || this.collapseWindowHeight > 0)
    this.createCollapsibilityCss();
   if(this.useAdaptivityClassNames())
    this.ensureAdaptivityClassNames();
   if(this.groupName == ""){
    this.groupName = "DXAutoGenExpandGroup" + CollapsiblePanelsAutoGenGroupCount;
    CollapsiblePanelsAutoGenGroupCount++;
   }
   if(!CollapsiblePanelsGroups[this.groupName])
    CollapsiblePanelsGroups[this.groupName] = [];
   CollapsiblePanelsGroups[this.groupName].push(this);
   var btnElement = this.getExpandButtonElement();
   if(btnElement){
    ASPx.Evt.AttachEventToElement(btnElement, ASPx.TouchUIHelper.touchMouseUpEventName,
     function (evt) {
      if(ASPx.Evt.IsLeftButtonPressed(evt))
       this.Toggle();
     }.aspxBind(this));
   }
   this.updateFixedPanelContext();
   if(!this.clientEnabled)
    this.SetEnabled(this.clientEnabled);
  },
  AfterInitialize: function(){
   ASPxClientPanelBase.prototype.AfterInitialize.call(this);
   var barElement = this.getExpandBarElement();
   if(barElement && this.isExpandBarChangeVisibilityOnExpanding())
    ASPx.AddClassNameToElement(barElement, "h");
   if(this.expandOnPageLoad)
    this.Expand(true);
  },
  OnDispose: function () {
   if(FixedPanels[this.fixedPosition] === this)
    delete FixedPanels[this.fixedPosition];
   if(ASPx.Ident.IsArray(CollapsiblePanelsGroups[this.groupName])){
    ASPx.Data.ArrayRemove(CollapsiblePanelsGroups[this.groupName], this);
    if(CollapsiblePanelsGroups[this.groupName].length === 0)
     delete CollapsiblePanelsGroups[this.groupName];
   }
   if(ExpandedPanels[this.groupName] === this)
    delete ExpandedPanels[this.groupName];
   this.constructor.prototype.OnDispose.call(this);
  },
  AdjustControlCore: function() {
   this.updateExpandButtonPosition();
   this.updateFixedPanelContext();
  },
  GetAdjustedSizes: function() {
   var sizes = this.constructor.prototype.GetAdjustedSizes.call(this);
   var expandBar = this.getExpandBarElement();
   if(expandBar) {
    sizes["expandBarWidth"] = expandBar.offsetWidth;
    sizes["expandBarHeight"] = expandBar.offsetHeight;
   }
   return sizes;
  },
  IsDisplayed: function() {
   if(this.constructor.prototype.IsDisplayed.call(this))
    return true;
   return this.IsDisplayedElement(this.getExpandBarElement());
  },
  IsHidden: function() {
   if(!this.constructor.prototype.IsHidden.call(this))
    return false;
   return this.IsHiddenElement(this.getExpandBarElement());
  },
  OnBrowserWindowResize: function(evt) {
   if(this.useAdaptivityClassNames())
    this.ensureAdaptivityClassNames();
   window.setTimeout(function() {
    this.updateExpandButtonPosition();
    this.updateFixedPanelContext();
    this.checkCollapseContent();
   }.aspxBind(this), 0);
  },
  BrowserWindowResizeSubscriber: function() {
   return this.isPositionFixed() || this.getExpandBarElement() || this.useAdaptivityClassNames();
  },
  HasFixedPosition: function() {
   return this.isPositionFixed();
  },
  getSizeCore: function(element, sizeProperty){
   return element[sizeProperty];
  },
  getFixedSize: function(sizeProperty){
   return this.getSizeCore(this.getFixedElement(), sizeProperty);
  },
  getExpandedSize: function(sizeProperty){
   if(this.getExpandBarElement() && this.isElementDisplayed(this.getExpandBarElement()))
    return this.getSizeCore(this.GetMainElement(), sizeProperty);
   return 0;
  },
  GetWidth: function() {
   if(!this.getExpandBarElement()) 
    return this.constructor.prototype.GetWidth.call(this);
   var width = 0;
   if(this.isElementDisplayed(this.getExpandBarElement()))
    width += this.getExpandBarElement().offsetWidth;
   if(this.isElementDisplayed(this.GetMainElement()) && (!this.IsExpandedInternal() || !this.isPopupExpanding()))
    width += this.GetMainElement().offsetWidth;
   return width;
  },
  GetHeight: function() {
   if(!this.getExpandBarElement()) 
    return this.constructor.prototype.GetHeight.call(this);
   var height = 0;
   if(this.isElementDisplayed(this.getExpandBarElement()))
    height += this.getExpandBarElement().offsetHeight;
   if(this.isElementDisplayed(this.GetMainElement()) && (!this.IsExpandedInternal() || !this.isPopupExpanding()))
    height += this.GetMainElement().offsetHeight;
   return height;
  },
  SetVisible: function (value) {
   if(this.clientVisible != value) {
    ASPxClientPanelBase.prototype.SetVisible.call(this, value);
    var expandBarElement = this.getExpandBarElement();
    if(expandBarElement) ASPx.SetElementDisplay(expandBarElement, value);
    this.updateFixedPanelContext();
   }
  },
  updateFixedPanelContext: function(){
   if(!this.isPositionFixed()) return;
   this.updateDocumentPaddings();
   this.updateMainElementFixedPosition();
   this.updateFixedPanelsPosition();
  },
  updateExpandButtonPosition: function(){
   var expandButton = this.getExpandButtonElement();
   if(!expandButton) return;
   var isCenterPosition = expandButton.className.indexOf(CENTER_BTN_POSITION_SELECTOR) > -1;
   if(isCenterPosition && expandButton.offsetWidth > 0){
    expandButton.style.width = expandButton.offsetWidth + "px";
    ASPx.SetElementFloat(expandButton, "none");
   }
   var correctButtonPosition = false;
   if(this.fixedPosition == "Top" || this.fixedPosition == "Bottom")
    correctButtonPosition = true;
   else if(this.fixedPosition == "Left" || this.fixedPosition == "Right")
    correctButtonPosition = isCenterPosition;
   else if(this.hasVerticalOrientation())
    correctButtonPosition = isCenterPosition;
   else
    correctButtonPosition = true;
   if(correctButtonPosition) 
    this.CorrectVerticalAlignment(ASPx.AdjustVerticalMargins, this.getExpandButtonElement, "Btn", true);
  },
  updateDocumentPaddings: function(){
   if(!this.fixedPositionProperties) return;
   var size = this.getFixedSize(this.fixedPositionProperties.size);
   var expandedSize = 0;
   if(this.expandEffect == "Slide"){
    expandedSize = this.getExpandedSize(this.fixedPositionProperties.size);
    if(this.fixedPosition == "Right" || this.fixedPosition == "Bottom")
     expandedSize = -expandedSize;
   }
   this.changeStyleSideAttribute(document.documentElement, "padding", this.fixedPositionProperties.documentPadding, size + "px");
   var documentMarginValue = this.getDocumentPropertyValue(this.fixedPositionProperties.documentMargin);
   var documentMargin2Value = this.getDocumentPropertyValue(this.fixedPositionProperties.documentMargin2);
   if(expandedSize != 0){
    ASPx.Attr.ChangeStyleAttribute(document.documentElement, this.fixedPositionProperties.documentMargin, (documentMarginValue + expandedSize) + "px");
    ASPx.Attr.ChangeStyleAttribute(document.documentElement, this.fixedPositionProperties.documentMargin2, (documentMargin2Value - expandedSize) + "px");
    this.documentMarginsChanged = true;
   }
   else if(this.documentMarginsChanged){
    ASPx.Attr.RestoreStyleAttribute(document.documentElement, this.fixedPositionProperties.documentMargin);
    ASPx.Attr.RestoreStyleAttribute(document.documentElement, this.fixedPositionProperties.documentMargin2);
    this.documentMarginsChanged = false;
   }
  },
  changeStyleSideAttribute: function(element, baseAttr, attr, value){
   if(!ASPx.Browser.IE || ASPx.Browser.Version > 8)
    ASPx.Attr.ChangeStyleAttribute(element, attr, value);
   else{
    var style = ASPx.GetCurrentStyle(element);
    var top = (attr == baseAttr + "-top") ? value : style[baseAttr + "Top"];
    var right = (attr == baseAttr + "-right") ? value : style[baseAttr + "Right"];
    var bottom = (attr == baseAttr + "-bottom") ? value : style[baseAttr + "Bottom"];
    var left = (attr == baseAttr + "-left") ? value : style[baseAttr + "Left"];
    ASPx.Attr.ChangeStyleAttribute(element, baseAttr, top + " " + right + " " + bottom + " " + left);
   }
  },
  updateMainElementFixedPosition: function(){
   if(!this.fixedPositionProperties) return;
   var barElement = this.getExpandBarElement();
   if(barElement){
    var size = this.getSizeCore(barElement, this.fixedPositionProperties.size);
    ASPx.Attr.ChangeStyleAttribute(this.GetMainElement(), this.fixedPositionProperties.contentEdge, size + "px");
   }
  },
  updateFixedPanelsPosition: function() {
   this.updateFixedPanelsEdges(this.updateFixedPanelEdge);
   this.updateFixedPanelsEdges(this.updateFixedPanelOppositeEdge);
  },
  updateFixedPanelsEdges: function(method) {
   if(FixedPanels["Top"]){
    if(FixedPanels["Left"] && !FixedPanels["Top"].fixedPositionOverlap && FixedPanels["Left"].fixedPositionOverlap)
     method.call(FixedPanels["Left"], FixedPanels["Top"], FixedPanels["Right"]);
    if(FixedPanels["Right"] && !FixedPanels["Top"].fixedPositionOverlap && FixedPanels["Right"].fixedPositionOverlap)
     method.call(FixedPanels["Right"], FixedPanels["Top"], FixedPanels["Left"]);
   }
   if(FixedPanels["Bottom"]){
    if(FixedPanels["Left"] && !FixedPanels["Bottom"].fixedPositionOverlap && FixedPanels["Left"].fixedPositionOverlap)
     method.call(FixedPanels["Left"], FixedPanels["Bottom"], FixedPanels["Right"]);
    if(FixedPanels["Right"] && !FixedPanels["Bottom"].fixedPositionOverlap && FixedPanels["Right"].fixedPositionOverlap)
     method.call(FixedPanels["Right"], FixedPanels["Bottom"], FixedPanels["Left"]);
   }
   if(FixedPanels["Left"]){
    if(FixedPanels["Top"] && (!FixedPanels["Left"].fixedPositionOverlap || FixedPanels["Top"].fixedPositionOverlap))
     method.call(FixedPanels["Top"], FixedPanels["Left"], FixedPanels["Bottom"]);
    if(FixedPanels["Bottom"] && (!FixedPanels["Left"].fixedPositionOverlap || FixedPanels["Bottom"].fixedPositionOverlap))
     method.call(FixedPanels["Bottom"], FixedPanels["Left"], FixedPanels["Top"]);
   }
   if(FixedPanels["Right"]){
    if(FixedPanels["Top"] && (!FixedPanels["Right"].fixedPositionOverlap || FixedPanels["Top"].fixedPositionOverlap))
     method.call(FixedPanels["Top"], FixedPanels["Right"], FixedPanels["Bottom"]);
    if(FixedPanels["Bottom"] && (!FixedPanels["Right"].fixedPositionOverlap || FixedPanels["Bottom"].fixedPositionOverlap))
     method.call(FixedPanels["Bottom"], FixedPanels["Right"], FixedPanels["Top"]);
   }
  },
  updateFixedPanelEdge: function(panel){
   var size = this.getFixedSize(this.fixedPositionProperties.size);
   if(this.expandEffect == "Slide")
    size += this.getExpandedSize(this.fixedPositionProperties.size);
   this.updateFixedPanelEdgeCore(panel, this.fixedPositionProperties.contentEdge, size);
  },
  updateFixedPanelOppositeEdge: function(panel, opppositePanel){
   if(!this.IsExpandedInternal() && opppositePanel) return;
   if(this.expandEffect == "Slide") {
    var size = this.getExpandedSize(this.fixedPositionProperties.size);
    this.updateFixedPanelEdgeCore(panel, this.fixedPositionProperties.oppositeContentEdge, -size);
   }
  },
  updateFixedPanelEdgeCore: function(panel, edge, size){
   var mainElement = panel.GetMainElement();
   mainElement.style[edge] = size + "px";
   var expandBarElement = panel.getExpandBarElement();
   if(expandBarElement)
    expandBarElement.style[edge] = size + "px";
  },
  isPositionFixed: function(){
   return !!this.fixedPositionProperties;
  },
  getFixedPosition: function(){
   var cssClass = this.GetMainElement().className;
   if(cssClass.indexOf("dxpnl-edge t") > -1)
    return "Top";
   if(cssClass.indexOf("dxpnl-edge b") > -1)
    return "Bottom";
   if(cssClass.indexOf("dxpnl-edge l") > -1)
    return "Left";
   if(cssClass.indexOf("dxpnl-edge r") > -1)
    return "Right";
   return null;
  },
  isPopupExpanding: function(){
   return !!this.expandDirectionProperties;
  },
  isExpandBarChangeVisibilityOnExpanding: function(){
   return !this.isPopupExpanding() && !this.isPositionFixed() && CollapsiblePanelsGroups[this.groupName].length > 1;
  },
  createVisibilityCss: function() {
   var rules = [];
   rules.push({ selector: "#" + this.name, cssText: "display: none!important;" });
   rules.push({ selector: "#" + this.name + EXPAND_BAR_ID, cssText: "display: none!important;" });
   this.insertAdaptivityRules(rules, this.hideWindowWidth, this.hideWindowHeight, HIDDEN_STATE_CLASS_NAME);
  },
  createCollapsibilityCss: function() {
   var rules = [];
   rules.push({ selector: "#" + this.name, cssText: "display: none;" });
   rules.push({ selector: "#" + this.name + EXPAND_BAR_ID + ".dxpnl-bar", cssText: (this.isPositionFixed() ? "display: block;" : "display: table;") });
   rules.push({ selector: "#" + this.name + "." + EXPANDED_SELECTOR, cssText: "display: block!important;" });
   this.insertAdaptivityRules(rules, this.collapseWindowWidth, this.collapseWindowHeight, COLLAPSED_STATE_CLASS_NAME);
  },
  insertAdaptivityRules: function(rules, maxWindowWidth, maxWindowHeight, adaptivityClassName) {
   var styleSheet = ASPx.GetCurrentStyleSheet();
   if(!styleSheet) return;
   if(!this.isIE8()) {
    var mediaRule = "@media all and (max-width: " + maxWindowWidth + "px), (max-height: " + maxWindowHeight + "px) { ";
    for(var i = 0; i < rules.length; i++)
     mediaRule += rules[i].selector + "{" + rules[i].cssText + "}";
    mediaRule += "}";
    if(styleSheet.insertRule)
     styleSheet.insertRule(mediaRule, styleSheet.cssRules.length);
   }
   else
    for(var i = 0; i < rules.length; i++) {
     rules[i].selector += "." + adaptivityClassName;
     ASPx.AddStyleSheetRule(styleSheet, rules[i].selector, rules[i].cssText);
    }
  },
  ensureAdaptivityClassNames: function() {
   this.ensureAdaptivityClassName(HIDDEN_STATE_CLASS_NAME, this.hideWindowWidth, this.hideWindowHeight);
   this.ensureAdaptivityClassName(COLLAPSED_STATE_CLASS_NAME, this.collapseWindowWidth, this.collapseWindowHeight);
  },
  ensureAdaptivityClassName: function(adaptivityClassName, maxWindowWidth, maxWindowHeight) {
   var currentDocumentWidth = ASPx.GetCurrentDocumentWidth();
   var currentDocumentHeight = ASPx.GetCurrentDocumentHeight();
   if(currentDocumentWidth <= maxWindowWidth || currentDocumentHeight <= maxWindowHeight)
    this.addAdaptivityClassName(adaptivityClassName);
   else
    this.removeAdaptivityClassName(adaptivityClassName);
  },
  addAdaptivityClassName: function(className) {
   ASPx.AddClassNameToElement(this.GetMainElement(), className);
   if(ASPx.IsExists(this.getExpandBarElement()))
    ASPx.AddClassNameToElement(this.getExpandBarElement(), className);
  },
  removeAdaptivityClassName: function(className) {
   ASPx.RemoveClassNameFromElement(this.GetMainElement(), className);
   if(ASPx.IsExists(this.getExpandBarElement()))
    ASPx.RemoveClassNameFromElement(this.getExpandBarElement(), className);
  },
  useAdaptivityClassNames: function() {
   return this.isIE8()
    && (this.hideWindowWidth > 0 || this.hideWindowHeight > 0 || this.collapseWindowWidth > 0 || this.collapseWindowHeight > 0);
  },
  isIE8: function() {
   return ASPx.Browser.IE && ASPx.Browser.Version === 8;
  },
  Toggle: function() {
   if(this.IsExpandedInternal()) 
    this.Collapse();
   else 
    this.Expand();
  },
  IsExpandable: function() {
   if(this.GetMainElement().className.indexOf(" " + COLLAPSIBLE_SELECTOR) > -1)
    return true;
   if(this.collapseWindowWidth > 0 || this.collapseWindowHeight > 0){
    var expandBarElement = this.getExpandBarElement();
    return expandBarElement && ASPx.GetCurrentStyle(expandBarElement).display !== "none";
   }
   return false;
  },
  IsExpanded: function() {
   if(this.IsExpandable())
    return this.IsExpandedInternal();
   return true;
  },
  IsExpandedInternal: function() {
   return this.GetMainElement().className.indexOf(" " + EXPANDED_SELECTOR) > -1;
  },
  Expand: function(preventAnimation) {
   if(ExpandedPanels[this.groupName] != this) {
    if(ExpandedPanels[this.groupName])
     ExpandedPanels[this.groupName].Collapse(preventAnimation);
    this.collapseOppositePanel(preventAnimation);
    this.collapseUnfixedPopupPanels();
    ExpandedPanels[this.groupName] = this;
    ASPx.GetStateController().SelectElementBySrcElement(this.GetMainElement());
    ASPx.GetStateController().SelectElementBySrcElement(this.getExpandButtonElement());
    ASPx.GetControlCollection().AdjustControls(this.GetMainElement());
    if(this.isPopupExpanding() && !this.isPositionFixed())
     this.updateMainElementPosition(true);
    if(this.isExpandBarChangeVisibilityOnExpanding())
     this.slideAnimationExpandBarSize = this.getSlideAnimationSize(this.getExpandBarElement(), true);
    ASPx.GetStateController().SelectElementBySrcElement(this.getExpandBarElement());
    if(!preventAnimation && this.animationType == "slide")
     this.startSlideAnimation(this.GetMainElement(), false);
    else if(!preventAnimation && this.animationType == "fade")
     this.startFadeAnimation(this.GetMainElement(), false);
    else
     this.expandCore();
   }
  },
  Collapse: function(preventAnimation) {
   if(ExpandedPanels[this.groupName] == this) {
    ExpandedPanels[this.groupName] = null;
    this.collapseUnfixedPopupPanels();
    if(this.isExpandBarChangeVisibilityOnExpanding()){
     ASPx.GetStateController().DeselectElementBySrcElement(this.getExpandBarElement());
     this.slideAnimationExpandBarSize = this.getSlideAnimationSize(this.getExpandBarElement(), true);
     ASPx.GetStateController().SelectElementBySrcElement(this.getExpandBarElement());
    }
    if(!preventAnimation && this.animationType == "slide")
     this.startSlideAnimation(this.GetMainElement(), true);
    else if(!preventAnimation && this.animationType == "fade")
     this.startFadeAnimation(this.GetMainElement(), true);
    else
     this.collapseCore();
   }
  },
  expandCore: function() {
   if(this.isPositionFixed()) {
    this.updateFixedPanelContext();
   }
   this.raiseExpanded();
  },
  collapseCore: function() {
   ASPx.GetStateController().DeselectElementBySrcElement(this.GetMainElement());
   ASPx.GetStateController().DeselectElementBySrcElement(this.getExpandButtonElement());
   if(this.isPopupExpanding() && !this.isPositionFixed())
    this.updateMainElementPosition(false);
   ASPx.GetStateController().DeselectElementBySrcElement(this.getExpandBarElement());
   if(this.isPositionFixed()) {
    this.updateFixedPanelContext();
   }
   this.slideAnimationPosProperty = null;
   this.raiseCollapsed();
  },
  collapseOppositePanel: function(preventAnimation) {
   if(!this.fixedPositionProperties) return;
   if(FixedPanels[this.fixedPositionProperties.oppositePanel])
    FixedPanels[this.fixedPositionProperties.oppositePanel].Collapse(preventAnimation);
  },
  collapseUnfixedPopupPanels: function() {
   if(!this.isPositionFixed() || this.isPopupExpanding()) return;
   for(var groupName in ExpandedPanels){
    if(ExpandedPanels[groupName] && !ExpandedPanels[groupName].fixedPosition && ExpandedPanels[groupName].isPopupExpanding())
     ExpandedPanels[groupName].Collapse(true);
   }
  },
  saveOpacity: function(element) {
   if(!this.isIE8())
    ASPx.Attr.SaveStyleAttribute(element, "opacity");
   else if(ASPx.GetCurrentStyle(element).filter)
    ASPx.Attr.SaveStyleAttribute(element, "filter");
  },
  restoreOpacity: function(element) {
   if(!this.isIE8())
    ASPx.Attr.RestoreStyleAttribute(element, "opacity");
   else
    ASPx.Attr.RestoreStyleAttribute(element, "filter");
  },
  startFadeAnimation: function (element, isCollapsing) {
   this.saveOpacity(element);
   var onComplete =  function() { this.finishFadeAnimation(element, isCollapsing); }.aspxBind(this);
   if(isCollapsing)
    ASPx.AnimationHelper.fadeOut(element, onComplete, ASPx.AnimationConstants.Durations.SHORT);
   else
    ASPx.AnimationHelper.fadeIn(element, onComplete, ASPx.AnimationConstants.Durations.SHORT);
  },
  finishFadeAnimation: function (element, isCollapsing) {
   this.restoreOpacity(element);
   if(isCollapsing)
    this.collapseCore(); 
   else
    this.expandCore(); 
  },
  startSlideAnimation: function(element, isCollapsing) {
   var sizeProperty = this.getSlideAnimationSizeProperty();
   var offsetWidth = element.offsetWidth;
   var offsetHeight = element.offsetHeight;
   ASPx.Attr.SaveStyleAttribute(element, sizeProperty);
   if(element.style.overflow !== "")
    ASPx.Attr.ChangeStyleAttribute(element, "overflow", "hidden");
   else{
    ASPx.Attr.ChangeStyleAttribute(element, "overflow-x", "hidden");
    ASPx.Attr.ChangeStyleAttribute(element, "overflow-y", "hidden");
   }
   var contentContainer = this.getAnimationContentContainerElement();
   if(contentContainer) {
    if(contentContainer.style.overflow !== "")
     ASPx.Attr.ChangeStyleAttribute(contentContainer, "overflow", "hidden");
    else{
     ASPx.Attr.ChangeStyleAttribute(contentContainer, "overflow-x", "hidden");
     ASPx.Attr.ChangeStyleAttribute(contentContainer, "overflow-y", "hidden");
    }
    ASPx.Attr.ChangeStyleAttribute(contentContainer, "width", offsetWidth - ASPx.GetLeftRightBordersAndPaddingsSummaryValue(element) + "px");
    ASPx.Attr.ChangeStyleAttribute(contentContainer, "height", offsetHeight - ASPx.GetTopBottomBordersAndPaddingsSummaryValue(element) + "px");
   }
   var transitionProperties = {
    duration: ASPx.AnimationConstants.Durations.SHORT, 
    onComplete: function() { this.finishSlideAnimation(element, isCollapsing); }.aspxBind(this)
   };
   if(this.isPositionFixed())
    transitionProperties.onStep = function() { this.performSlideAnimationStep(); }.aspxBind(this);
   var transition = ASPx.AnimationHelper.createMultipleAnimationTransition(element, transitionProperties);
   var size = this.getSlideAnimationSize(element, !this.isPositionFixed());
   var startSize = isCollapsing ? size : 0;
   var endSize = isCollapsing ? 0 : size;
   if(this.isExpandBarChangeVisibilityOnExpanding() && this.slideAnimationExpandBarSize){
    if(startSize == 0)
     startSize = this.slideAnimationExpandBarSize;
    if(endSize == 0)
     endSize = this.slideAnimationExpandBarSize;
   }
   var properties = {};
   properties[sizeProperty] = { from: startSize, to: endSize, unit: "px" };
   if(!isCollapsing) 
    ASPx.Attr.ChangeStyleAttribute(element, sizeProperty, startSize + "px");
   if(this.slideAnimationPosProperty){
    var position = parseInt(element.style[this.slideAnimationPosProperty]);
    var startPosition = isCollapsing ? position : position + size;
    var endPosition = isCollapsing ? position + size : position;
    properties[this.slideAnimationPosProperty] = { from: startPosition, to: endPosition, unit: "px" };
    if(!isCollapsing) 
     ASPx.Attr.ChangeStyleAttribute(element, this.slideAnimationPosProperty, startPosition + "px");
   }
   transition.Start(properties);
  },
  finishSlideAnimation: function(element, isCollapsing) {
   var sizeProperty = this.getSlideAnimationSizeProperty();
   ASPx.Attr.RestoreStyleAttribute(element, sizeProperty);
   ASPx.Attr.RestoreStyleAttribute(element, "overflow");
   ASPx.Attr.RestoreStyleAttribute(element, "overflow-x");
   ASPx.Attr.RestoreStyleAttribute(element, "overflow-y");
   var contentContainer = this.getAnimationContentContainerElement();
   if(contentContainer) {
    ASPx.Attr.RestoreStyleAttribute(contentContainer, "overflow");
    ASPx.Attr.RestoreStyleAttribute(contentContainer, "overflow-x");
    ASPx.Attr.RestoreStyleAttribute(contentContainer, "overflow-y");
    ASPx.Attr.RestoreStyleAttribute(contentContainer, "width");
    ASPx.Attr.RestoreStyleAttribute(contentContainer, "height");
   }
   if(isCollapsing)
    this.collapseCore(); 
   else
    this.expandCore(); 
  },
  performSlideAnimationStep: function() {
   this.updateFixedPanelContext();
  },
  getSlideAnimationSizeProperty: function() {
   if(this.fixedPositionProperties)
    return this.fixedPositionProperties.animationSize;
   else if(this.expandDirectionProperties)
    return this.expandDirectionProperties.animationSize;
   else 
    return this.hasVerticalOrientation() ? "width" : "height";
  },
  getSlideAnimationSize: function(element, fullSize) {
   var sizeProperty;
   if(this.fixedPositionProperties)
    sizeProperty = this.fixedPositionProperties.size;
   else if(this.expandDirectionProperties)
    sizeProperty = this.expandDirectionProperties.size;
   else
    sizeProperty = this.hasVerticalOrientation() ? "offsetWidth" : "offsetHeight";
   var size = this.getSizeCore(element, sizeProperty);
   if(fullSize) {
    if(sizeProperty == "offsetWidth")
     size -= ASPx.GetHorizontalBordersWidth(element);
    else
     size -= ASPx.GetVerticalBordersWidth(element);
   }
   else {
    if(sizeProperty == "offsetWidth")
     size -= ASPx.GetLeftRightBordersAndPaddingsSummaryValue(element);
    else
     size -= ASPx.GetTopBottomBordersAndPaddingsSummaryValue(element);
   }
   return size;
  },
  getSlideAnimationPosProperty: function(x, y) {
   if(this.expandEffect == "PopupToTop")
    return !y.isInverted ? "top" : null;
   if(this.expandEffect == "PopupToBottom")
    return y.isInverted ? "top" : null;
   if(this.expandEffect == "PopupToLeft")
    return !x.isInverted ? "left" : null;
   if(this.expandEffect == "PopupToRight")
    return y.isInverted ? "left" : null;
   return null;
  }, 
  hasVerticalOrientation: function() {
   var float = ASPx.GetElementFloat(this.GetMainElement());
   return (float === "left" || float === "right");
  },
  updateMainElementPosition: function(expanded) {
   if(!this.expandDirectionProperties) return;
   if(expanded)
    this.updateMainElementExpandedPosition(this.GetMainElement());
   else
    this.updateMainElementCollapsedPosition(this.GetMainElement());
  },
  updateMainElementExpandedPosition: function(element) {
   if(element.style.width === "100%")
    ASPx.Attr.ChangeStyleAttribute(element, "width", (element.parentNode.offsetWidth - ASPx.GetLeftRightMargins(element)) + "px");
   if(element.style.height === "100%")
    ASPx.Attr.ChangeStyleAttribute(element, "height", (element.parentNode.offsetHeight - ASPx.GetTopBottomMargins(element)) + "px");
   ASPx.Attr.ChangeStyleAttribute(element, "position", "absolute");
   var barElement = this.getExpandBarElement();
   var x = ASPx.PopupUtils.GetPopupAbsoluteX(element,
    barElement, this.expandDirectionProperties.hAlign, 0, 0, 0, false, false);
   var y = ASPx.PopupUtils.GetPopupAbsoluteY(element,
    barElement, this.expandDirectionProperties.vAlign, 0, 0, 0, true);
   ASPx.Attr.ChangeStyleAttribute(element, "left", x.position + "px");
   ASPx.Attr.ChangeStyleAttribute(element, "top", y.position + "px");
   this.slideAnimationPosProperty = this.getSlideAnimationPosProperty(x, y);
  },
  updateMainElementCollapsedPosition: function(element) {
   ASPx.Attr.RestoreStyleAttribute(element, "position");
   ASPx.Attr.RestoreStyleAttribute(element, "left");
   ASPx.Attr.RestoreStyleAttribute(element, "top");
   ASPx.Attr.RestoreStyleAttribute(element, "width");
   ASPx.Attr.RestoreStyleAttribute(element, "height");
  },
  checkCollapseContent: function(){
   if(!this.getExpandBarElement()) return;
   if(this.IsExpandedInternal()){
    if(CollapsiblePanelsGroups[this.groupName].length === 1 && !this.isElementDisplayed(this.getExpandBarElement()) && this.isElementDisplayed(this.GetMainElement()))
     this.Collapse(true);
    if(!this.isPositionFixed() && this.isPopupExpanding())
     this.Collapse(true);
   }
  },
  raiseCollapsed: function() {
   if(!this.Collapsed.IsEmpty()) {
    var args = new ASPxClientEventArgs();
    this.Collapsed.FireEvent(this, args);
   }
  },
  raiseExpanded: function() {
   if(!this.Expanded.IsEmpty()) {
    var args = new ASPxClientEventArgs();
    this.Expanded.FireEvent(this, args);
   }
  },
  getAnimationContentContainerElement: function() {
   if(!ASPx.IsExistsElement(this.animationContentContainerElement)) 
    this.animationContentContainerElement = ASPx.GetChildByClassName(this.GetMainElement(), "dxpnl-acc");
   return this.animationContentContainerElement;
  },
  getScrollContentContainerElement: function() {
   if(!ASPx.IsExistsElement(this.scrollContentContainerElement)) 
    this.scrollContentContainerElement = ASPx.GetNodesByPartialClassName(this.GetMainElement(), "dxpnl-scc")[0];
   return this.scrollContentContainerElement;
  },
  getExpandBarElement: function() {
   if(!ASPx.IsExistsElement(this.expandBarElement))
    this.expandBarElement = ASPx.GetElementById(this.name + EXPAND_BAR_ID);
   return this.expandBarElement;
  },
  getExpandButtonElement: function() {
   if(!ASPx.IsExistsElement(this.expandButtonElement))
    this.expandButtonElement = ASPx.GetElementById(this.name + EXPAND_BUTTON_ID);
   return this.expandButtonElement;
  },
  getFixedElement: function(){
   if(this.getExpandBarElement() && this.isElementDisplayed(this.getExpandBarElement()))
    return this.getExpandBarElement();
   else
    return this.GetMainElement();
  },
  getDocumentPropertyValue: function(attr){
   if(DocumentProperties[attr] === undefined){
    var currentStyle = ASPx.GetCurrentStyle(document.documentElement);
    var attrValue = parseInt(ASPx.Attr.GetAttribute(currentStyle, attr));
    DocumentProperties[attr] = !isNaN(attrValue) ? attrValue : 0;
   }
   return DocumentProperties[attr];
  },
  isElementDisplayed: function(element){
   return ASPx.GetCurrentStyle(element).display != "none";
  }
 });
 ASPxClientPanel.Cast = ASPxClientControl.Cast;
 window.ASPxClientPanelBase = ASPxClientPanelBase;
 window.ASPxClientPanel = ASPxClientPanel;
})();
(function () {
ASPxClientCallbackPanel = ASPx.CreateClass(ASPxClientPanel, {
 constructor: function (name) {
  this.constructor.prototype.constructor.call(this, name);
  this.hideContentOnCallback = true;
  this.isLoadingPanelTextEmpty = false;
 },
 OnCallback: function (result) {
  ASPx.SetInnerHtml(this.getContentElement(), result);
  if(this.touchUIScroller)
   this.touchUIScroller.ChangeElement(this.getContentElement());
 },
 ShowLoadingPanel: function () {
  var element = this.getContentElement();
  var mainElement = (element.tagName == "TD") ? this.GetMainElement() : element;
  if(!this.hideContentOnCallback)
   this.CreateLoadingPanelWithAbsolutePosition(this.GetMainElement().parentNode, mainElement);
  else
   this.CreateLoadingPanelInsideContainer(element, true, true, false);
 },
 ShowLoadingDiv: function () {
  this.CreateLoadingDiv(this.GetMainElement().parentNode, this.getContentElement());
 },
 GetCallbackAnimationElement: function() {
  return this.getContentElement();
 },
 PerformCallback: function (parameter) {
  this.CreateCallback(parameter);
 },
 CreateCallback: function (arg, command, callbackInfo) {
  this.ShowLoadingElements();
  ASPxClientControl.prototype.CreateCallback.call(this, arg, command);
 },
 GetLoadingPanelTextLabelID: function () {
  return this.name + "_TL";
 },
 GetLoadingPanelTextLabel: function () {
  return ASPx.GetElementById(this.GetLoadingPanelTextLabelID());
 },
 GetLoadingPanelText: function () {
  var textLabel = this.GetLoadingPanelTextLabel();
  if(textLabel && !this.isLoadingPanelTextEmpty)
   return textLabel.innerHTML;
  return "";
 },
 SetLoadingPanelText: function (text) {
  this.isLoadingPanelTextEmpty = text == null || text == "";
  var textLabel = this.GetLoadingPanelTextLabel();
  if(textLabel)
   textLabel.innerHTML = this.isLoadingPanelTextEmpty ? "&nbsp;" : text;
 },
 SetContentHtml: function (html, useAnimation) {
  ASPxClientPanel.prototype.SetContentHtml.call(this, html);
  if(useAnimation && typeof(ASPx.AnimationHelper) != "undefined")
   ASPx.AnimationHelper.fadeIn(this.getContentElement());
 }
});
ASPxClientCallbackPanel.Cast = ASPxClientControl.Cast;
window.ASPxClientCallbackPanel = ASPxClientCallbackPanel;
})();
(function () {
var ASPxClientTreeView = ASPx.CreateClass(ASPxClientControl, {
 DisabledCssClassName: "dxtvDisabled",
 ElbowCssClassName: "dxtv-elb",
 ElbowWithoutLineCssClassName: "dxtv-elbNoLn",
 ButtonCssClassName: "dxtv-btn",
 NodeCssClassName: "dxtv-nd",
 LineCssClassName: "dxtv-ln",
 NodeCheckboxCssClassName: "dxtv-ndChk",
 NodeImageCssClassName: "dxtv-ndImg",
 NodeTextSpanCssClassName: "dxtv-ndTxt",
 NodeTemplateCssClassName: "dxtv-ndTmpl",
 RtlCssClassName: "dxtvRtl",
 IndexPathSeparator: "_",
 NodeIDPrefix: "_N",
 NodeImageIDPostfix: "I",
 NodeLoadingPanelIDPostfix: "NLP",
 SampleExpandButtonIDPostfix: "_SEB",
 SampleCollapseButtonIDPostfix: "_SCB",
 SampleNodeLoadingPanelIDPostfix: "_SNLP",
 ControlContentDivIDPostfix: "_CD",
 NodeCheckboxIDPostfix: "_CHK",
 ExpandNodeCommand: "E",
 ExpandAllNodesCommand: "EA",
 CheckNodeRecursiveCommand: "CHKNR",
 RaiseNodeClickEventCommand: "NCLK",
 RaiseExpandedChangingEventCommand: "ECHANGING",
 RaiseCheckedChangedEventCommand: "CCHNGD",
 PostRequestArgsSeparator: "|",
 NodeClickServerEventName: "NodeClick",
 ExpandedChangingServerEventName: "ExpandedChanging",
 CheckedChangedServerEventName: "CheckedChanged",
 WidthMeasurementIncrement: 1000,
 IE6WidthMeasurementDivWidth: 99999,
 AnimationDuration: 300,
 MinAnimationDuration: 200,
 HoverCorrectionDelay: 50,
 constructor: function (name) {
  this.constructor.prototype.constructor.call(this, name);
  this.enableAnimation = true;
  this.nodesInfo = null;
  this.nodesUrls = null;
  this.contentBoundsMode = true;
  this.checkNodesRecursive = false;
  this.allowSelectNode = false;
  this.virtualMode = false;
  this.imageProperties = null;
  this.icbFocusedStyle = [];
  this.requireWidthRecalculationOnHover = false;
  this.nodeLoadingPanelWidth = 0;
  this.nodeLoadingPanelHeight = 0;
  var instance = this;
  this.expandCollapseHandler = function (e) { instance.HandleExpandButtonClick(e); };
  this.nodeClickHandler = function (e) { instance.HandleNodeClick(e); };
  this.nodeDblClickHandler = function (e) { instance.HandleNodeDblClick(e); };
  this.rootNode = new ASPxClientTreeViewNode(this);
  this.selectedNodeContentElementID = null;
  this.requireRaiseExpandedChangedList = [];
  this.initialControlWidth = 0;
  this.NodeClick = new ASPxClientEvent();
  this.ExpandedChanged = new ASPxClientEvent();
  this.ExpandedChanging = new ASPxClientEvent();
  this.CheckedChanged = new ASPxClientEvent();
 },
 ReplaceElementWithSampleElement: function (srcElement, sampleElement, copySrcInnerHtml) {
  var newElement = sampleElement.cloneNode(true);
  newElement.id = srcElement.id;
  ASPx.SetElementDisplay(newElement, true);
  if(copySrcInnerHtml && srcElement.innerHTML)
   ASPx.SetInnerHtml(newElement, srcElement.innerHTML);
  srcElement.parentNode.replaceChild(newElement, srcElement);
  return newElement;
 },
 ToggleExpandButtonClickHandler: function (attach, button) {
  var method = attach ? ASPx.Evt.AttachEventToElement : ASPx.Evt.DetachEventFromElement;
  method(button, "click", this.expandCollapseHandler);
 },
 AddElementCssClass: function (element, className) {
  this.RemoveElementCssClass(element, className);
  element.className = element.className + " " + className;
 },
 RemoveElementCssClass: function (element, className) {
  var newElementClassName = element.className.replace(className, "");
  element.className = ASPx.Str.Trim(newElementClassName);
 },
 RemoveEmptyTextNodes: function (element) {
  var nonEmptyTextPattern = /\S/;
  var textNodeType = 3;
  var elementNodeType = 1;
  for(var i = 0; i < element.childNodes.length; i++) {
   if(element.childNodes[i].nodeType == textNodeType &&
    !nonEmptyTextPattern.test(element.childNodes[i].nodeValue)) {
    element.removeChild(element.childNodes[i]);
    i--;
   } else if(element.childNodes[i].nodeType == elementNodeType)
    this.RemoveEmptyTextNodes(element.childNodes[i]);
  }
 },
 GetNodeIDByContentElementID: function (contentElementID) {
  return ASPx.Str.Trim(contentElementID.replace(this.name + "_", ""));
 },
 GetNodeIndexPathByContentElementID: function (contentElementID) {
  return ASPx.Str.Trim(contentElementID.replace(this.name + this.NodeIDPrefix, ""));
 },
 CreatePostRequestArgs: function (command, arg1, arg2) {
  var args = command + this.PostRequestArgsSeparator + arg1;
  if(arg2 || arg2 === "")
   args += this.PostRequestArgsSeparator + arg2;
  return args;
 },
 MergeNodesData: function (srcData, destData) {
  for(var key in srcData)
   destData[key] = srcData[key];
 },
 GetNodeListItem: function (clientNode) {
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  return ASPx.GetParentByTagName(contentElement, "LI");
 },
 SerializeBooleanValue: function (value) {
  return value ? "T" : "";
 },
 GetContentElementByNodeID: function (nodeID) {
  return ASPx.GetElementById(this.name + "_" + nodeID);
 },
 GetListItems: function (list) {
  var listNodes = ASPx.GetChildElementNodes(list);
  var listItems = [];
  if(!listNodes)
   return null;
  for(var i = 0; i < listNodes.length; i++) {
   if(listNodes[i].tagName == "LI")
    listItems.push(listNodes[i]);
  }
  return listItems;
 },
 GetClickedContentElementByEventArgs: function (e) {
  var clickedElement = ASPx.Evt.GetEventSource(e);
  var contentElement = ASPx.GetParentByClassName(clickedElement, this.NodeCssClassName);
  if(ASPx.ElementContainsCssClass(clickedElement, this.NodeCheckboxCssClassName)) {
   if(ASPx.Browser.Firefox) {
    ASPx.Evt.PreventEventAndBubble(e);
    var instance = this;
    var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
    window.setTimeout(function () {
     ASPx.CheckableElementHelper.Instance.InvokeClick(internalCheckBox, e);
    });
   }
   return null;
  }
  if(!contentElement || ASPx.ElementContainsCssClass(contentElement, this.DisabledCssClassName))
   return null;
  return contentElement;
 },
 IsRightToLeft: function () {
  return ASPx.IsElementRightToLeft(this.GetMainElement());
 },
 InlineInitialize: function () {
  ASPxClientControl.prototype.InlineInitialize.call(this);
  this.SetInitialControlWidth();
  if(this.imageProperties)
   this.CreateInternalCheckBoxCollection();
  this.InitializeControlElements();
 },
 Initialize: function () {
  ASPxClientControl.prototype.Initialize.call(this);
  this.InitLoadingPanelSize();
  this.AssignEllipsisToolTips();
 },
 AdjustControlCore: function () {
  this.CorrectControlWidth();
 },
 CreateInternalCheckBoxCollection: function () {
  this.internalCheckBoxCollection = new ASPx.CheckBoxInternalCollection(this.imageProperties, true);
 },
 AddInternalCheckBoxToCollection: function (icbInputElement, contentElement) {
  var instance = this;
  var internalCheckBox = this.internalCheckBoxCollection.Add(contentElement.id, icbInputElement);
  internalCheckBox.SetEnabled(!this.IsNodeDisabled(contentElement));
  internalCheckBox.readOnly = this.readOnly;
  internalCheckBox.CreateFocusDecoration(this.icbFocusedStyle);
  internalCheckBox.CheckedChanged.AddHandler(
   function (s, e) {
    instance.UpdateCheckedInNodesState(s.inputElement, true);
    instance.OnNodeCheckboxClick(s.inputElement);
   }
  );
 },
 InitLoadingPanelSize: function () {
  var panel = this.GetSampleNodeLoadingPanel();
  if(panel) {
   this.nodeLoadingPanelWidth = panel.offsetWidth || panel.naturalWidth || panel.width;
   this.nodeLoadingPanelHeight = panel.offsetHeight || panel.naturalHeight || panel.width;
   ASPx.SetElementDisplay(panel, false);
   panel.style.visibility = "";
   panel.style.position = "";
  }
 },
 InitializeControlElements: function () {
  var mainElement = this.GetMainElement();
  if(ASPx.ElementContainsCssClass(mainElement, this.DisabledCssClassName))
   return;
  var rootList = ASPx.GetNodeByTagName(mainElement, "UL", 0);
  this.InitializeNodeContainerElements(rootList, "", null);
  this.InitializeNodeSelection();
 },
 InitializeNodeSelection: function () {
  var contentElement = this.GetContentElementByNodeID(this.GetSelectedNodeIDFromState());
  if(contentElement)
   this.ApplySelectionToNode(contentElement);
  else { 
   var firstNodeId = this.NodeIDPrefix.replace("_", "") + this.GetNodeIndexPath(0, 0);
   ASPx.GetStateController().DeselectElementBySrcElement(this.GetContentElementByNodeID(firstNodeId));
  }
 },
 GetNodeIndexPath: function (listItemIndex, parentIndexPath) {
  if(!parentIndexPath)
   return listItemIndex.toString();
  return parentIndexPath + this.IndexPathSeparator + listItemIndex.toString();
 },
 GetElementID: function (IDPrefix, indexPath) {
  return this.name + IDPrefix + indexPath;
 },
 ApplyServerProvidedClientNodeInfo: function (clientNode, indexPath) {
  if(!this.nodesInfo[indexPath])
   return;
  clientNode.clientEnabled = !!this.nodesInfo[indexPath][0];
  clientNode.clientVisible = !!this.nodesInfo[indexPath][1];
  clientNode.name = this.nodesInfo[indexPath][2];
  clientNode.navigateUrl = this.nodesInfo[indexPath][3];
  clientNode.target = this.nodesInfo[indexPath][4];
 },
 CreateClientNode: function (index, parentClientNode, indexPath) {
  if(!this.nodesInfo)
   return null;
  var clientNode = new ASPxClientTreeViewNode();
  clientNode.treeView = this;
  clientNode.parent = parentClientNode;
  clientNode.index = index;
  this.ApplyServerProvidedClientNodeInfo(clientNode, indexPath, null);
  if(parentClientNode)
   parentClientNode.nodes.push(clientNode);
  else
   this.rootNode.nodes.push(clientNode);
  return clientNode;
 },
 GetServerProvidedNodeIndex: function (listItem) {
  var nodeContentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  if(!nodeContentElement || !nodeContentElement.id)
   return null;
  var nodeIndexPath = this.GetNodeIndexPathByContentElementID(nodeContentElement.id);
  var nodeIndices = nodeIndexPath.split(this.IndexPathSeparator);
  return parseInt(nodeIndices[nodeIndices.length - 1]);
 },
 InitializeNodeContainerElements: function (nodeContainer, parentIndexPath, parentClientNode) {
  var listItems = this.GetListItems(nodeContainer);
  if(!listItems)
   return;
  for(var i = 0, nodeIndex = 0; i < listItems.length; i++, nodeIndex++) {
   var serverProvidedNodeIndex = this.GetServerProvidedNodeIndex(listItems[i]);
   if(serverProvidedNodeIndex)
    nodeIndex = serverProvidedNodeIndex;
   var nodeIndexPath = this.GetNodeIndexPath(nodeIndex, parentIndexPath);
   var clientNode = this.CreateClientNode(i, parentClientNode, nodeIndexPath);
   if(clientNode)
    clientNode.last = i == listItems.length - 1;
   this.InitializeNodeContent(listItems[i], nodeIndexPath, clientNode);
   this.InitializeExpandButton(listItems[i]);
   if(clientNode) {
    if(!clientNode.clientVisible)
     this.SetNodeClientVisible(clientNode, false);
    if(!clientNode.clientEnabled)
     this.SetNodeClientEnabled(clientNode, false);
   }
   var subnodesList = ASPx.GetNodeByTagName(listItems[i], "UL", 0);
   if(subnodesList)
    this.InitializeNodeContainerElements(subnodesList, nodeIndexPath, clientNode);
  }
 },
 InitializeExpandButton: function (listItem) {
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  if(button && !ASPx.ElementContainsCssClass(button, this.DisabledCssClassName))
   this.ToggleExpandButtonClickHandler(true, button);
 },
 InitializeNodeContent: function (listItem, nodeIndexPath, clientNode) {
  var nodeContentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  if(!nodeContentElement)
   return;
  var contentElementID = this.GetElementID(this.NodeIDPrefix, nodeIndexPath);
  if(clientNode) {
   clientNode.enabled = !this.IsNodeDisabled(nodeContentElement);
   clientNode.contentElementID = contentElementID;
   var textSpan = ASPx.GetNodesByPartialClassName(nodeContentElement, this.NodeTextSpanCssClassName)[0];
   clientNode.text = textSpan ? ASPx.GetInnerText(textSpan) : "";
  }
  nodeContentElement.id = contentElementID;
  if(clientNode && clientNode.last && ASPx.Browser.IE) {
   var listItem = ASPx.GetParentByTagName(nodeContentElement, "LI");
   var clearElement = ASPx.GetNodeByTagName(listItem, "B", 0);
   if(clearElement && clearElement.style.display == "inline")
    clearElement.style.display = "";
  }
  ASPx.AssignAccessabilityEventsToLink(nodeContentElement);
  ASPx.Evt.AttachEventToElement(nodeContentElement, "click", this.nodeClickHandler);
  ASPx.Evt.AttachEventToElement(nodeContentElement, "dblclick", this.nodeDblClickHandler);
  if(this.contentBoundsMode) {
   var instance = this;
   ASPx.Evt.AttachEventToElement(nodeContentElement, "mousemove", function (evt) {
    instance.CorrectControlWidthOnHover(evt.target);
   });
  }
  this.InitializeNodeImage(nodeContentElement, clientNode);
  var icbMainElement = ASPx.GetNodesByPartialClassName(nodeContentElement, this.NodeCheckboxCssClassName)[0];
  if(icbMainElement) {
   var icbInputElement = ASPx.GetNodeByTagName(icbMainElement, "input", 0);
   icbInputElement.id = this.GetElementID(this.NodeCheckboxIDPostfix, nodeIndexPath);
   if(this.imageProperties)
    this.AddInternalCheckBoxToCollection(icbInputElement, nodeContentElement);
  }
 },
 IsNodeDisabled: function (nodeContentElement) {
  return ASPx.ElementContainsCssClass(nodeContentElement, this.DisabledCssClassName);
 },
 InitializeNodeImage: function (nodeContentElement, clientNode) {
  var nodeImage = ASPx.GetNodesByPartialClassName(nodeContentElement, this.NodeImageCssClassName)[0];
  if(!nodeImage)
   return;
  nodeImage.id = nodeContentElement.id + this.NodeImageIDPostfix;
  if(!ASPx.Browser.IE) {
   var nodeImageLoaded = nodeImage.naturalWidth !== 0 && nodeImage.naturalHeight !== 0 && nodeImage.complete;
   if(!nodeImageLoaded) {
    var instance = this;
    ASPx.Evt.AttachEventToElement(nodeImage, "load", function (evt) {
     instance.CorrectControlWidth();
    });
    if(ASPx.Browser.WebKitFamily)
     ASPx.Evt.AttachEventToElement(nodeImage, "error", function (evt) {
      instance.CorrectControlWidth();
     });
   }
  }
  if(clientNode)
   clientNode.imageUrl = nodeImage.src;
 },
 GetControlContentDiv: function () {
  return ASPx.GetElementById(this.name + this.ControlContentDivIDPostfix);
 },
 SetInitialControlWidth: function () {
  var mainElement = this.GetMainElement();
  if(mainElement.style.width && !ASPx.IsPercentageSize(mainElement.style.width))
   this.initialControlWidth = mainElement.offsetWidth;
 },
 CorrectControlWidthOnHover: function (nodeElement) {
  if(!this.requireWidthRecalculationOnHover)
   return;
  if(ASPx.Browser.IE && ASPx.Browser.Version < 9) {
   var instance = this;
   window.setTimeout(function () {
    instance.CorrectControlWidth();
   }, 0);
   return;
  }
  if(nodeElement.lastCorrectionOnHover && (new Date().getTime() - nodeElement.lastCorrectionOnHover <= this.HoverCorrectionDelay))
   return;
  this.CorrectControlWidth();
  nodeElement.lastCorrectionOnHover = new Date().getTime();
 },
 CorrectControlWidth: function () {
  var mainElement = this.GetMainElement();
  var controlContentDiv = this.GetControlContentDiv();
  var rootNodesList = ASPx.GetNodeByTagName(controlContentDiv, "UL", 0);
  if(!rootNodesList)
   return;
  mainElement.style.overflow = "hidden";
  ASPx.SetElementFloat(rootNodesList, "left");
  var prevListWidth = 0;
  do {
   prevListWidth = rootNodesList.offsetWidth;
   ASPx.SetOffsetWidth(controlContentDiv, controlContentDiv.offsetWidth + this.WidthMeasurementIncrement);
   if(ASPx.Browser.Opera) {
    rootNodesList.style.width = "100%";
    var dummy = rootNodesList.offsetWidth;
    rootNodesList.style.width = "";
   }
  } while(prevListWidth != rootNodesList.offsetWidth);
  if(rootNodesList.offsetWidth > this.initialControlWidth) {
   var needRoundingCorrection = ASPx.Browser.HardwareAcceleration || 
           ASPx.Browser.MacOSMobilePlatform;      
   var roundingCorrection = needRoundingCorrection ? 1 : 0; 
   var isPercentageWidth = ASPx.IsPercentageSize(mainElement.style.width);
   mainElement.style[isPercentageWidth ? "minWidth" : "width"] = rootNodesList.offsetWidth + roundingCorrection + "px";
  }
  ASPx.SetElementFloat(rootNodesList, "");
  mainElement.style.overflow = "";
  controlContentDiv.style.width = "";
 },
 GetPreviousSiblingNodeListItem: function (clientNode) {
  var previousNodeIndex = clientNode.index - 1;
  if(previousNodeIndex < 0)
   return null;
  var previousClientNode = clientNode.parent ? clientNode.parent.GetNode(previousNodeIndex) :
   this.rootNode.nodes[previousNodeIndex];
  return this.GetNodeListItem(previousClientNode);
 },
 GetListItemElbowSpan: function (listItem) {
  return ASPx.GetNodesByPartialClassName(listItem, this.ElbowCssClassName)[0] ||
    ASPx.GetNodesByPartialClassName(listItem, this.ElbowWithoutLineCssClassName)[0];
 },
 SetNodeClientVisible: function (clientNode, clientVisible) {
  if(this.IsRootNode(clientNode))
   return;
  var listItem = this.GetNodeListItem(clientNode);
  ASPx.SetElementDisplay(listItem, clientVisible);
  this.CorrectControlWidth();
  if(!clientNode.last)
   return;
  var previousNodeListItem = this.GetPreviousSiblingNodeListItem(clientNode);
  if(!previousNodeListItem)
   return;
  var previousNodeElbowSpan = this.GetListItemElbowSpan(previousNodeListItem);
  if(ASPx.ElementContainsCssClass(previousNodeElbowSpan, this.ElbowWithoutLineCssClassName))
   return;
  this.InitializeExpandButton(previousNodeListItem);
  if(clientVisible)
   this.AddElementCssClass(previousNodeListItem, this.LineCssClassName);
  else
   this.RemoveElementCssClass(previousNodeListItem, this.LineCssClassName);
 },
 SetNodeClientEnabled: function (clientNode, clientEnabled) {
  if(this.IsRootNode(clientNode))
   return;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  ASPx.GetStateController().SetElementEnabled(contentElement, clientEnabled);
  if(this.internalCheckBoxCollection) {
   var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
   if(internalCheckBox)
    internalCheckBox.SetEnabled(clientEnabled);
  }
  if(clientNode.navigateUrl) {
   var nodeLink = this.GetNodeLinkElement(clientNode);
   if(!clientEnabled && nodeLink.href) {
    ASPx.Attr.SetAttribute(nodeLink, "savedhref", nodeLink.href);
    ASPx.Attr.RemoveAttribute(nodeLink, "href");
   }
   else if(clientEnabled && ASPx.Attr.GetAttribute(nodeLink, "savedhref")) {
    ASPx.Attr.SetAttribute(nodeLink, "href", ASPx.Attr.GetAttribute(nodeLink, "savedhref"));
    ASPx.Attr.RemoveAttribute(nodeLink, "savedhref");
   }
  }
  var listItem = ASPx.GetParentByTagName(contentElement, "LI");
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  if(button) {
   this.ToggleExpandButtonClickHandler(clientEnabled, button);
   button.style.cursor = clientEnabled ? "pointer" : "default";
  }
 },
 SetNodeText: function (clientNode, text) {
  if(this.IsRootNode(clientNode))
   return;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  var textSpan = ASPx.GetNodesByPartialClassName(contentElement, this.NodeTextSpanCssClassName)[0];
  if(textSpan) {
   ASPx.SetInnerHtml(textSpan, text);
   this.CorrectControlWidth();
  }
 },
 SetNodeImageUrl: function (clientNode, url) {
  if(this.IsRootNode(clientNode))
   return;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  var nodeImage = ASPx.GetNodesByPartialClassName(contentElement, this.NodeImageCssClassName)[0];
  if(nodeImage)
   nodeImage.src = url;
 },
 GetNodeLinkElement: function (clientNode) {
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  return this.GetNodeLinkElementCore(contentElement);
 },
 GetNodeLinkElementCore: function(contentElement) {
  if(ASPx.ElementContainsCssClass(contentElement, this.NodeTemplateCssClassName))
   return null;
  return contentElement.tagName == "A" ? contentElement : ASPx.GetNodeByTagName(contentElement, "A", 0);
 },
 GetNodeNavigateUrl: function (clientNode) {
  if(this.contentBoundsMode || this.IsRootNode(clientNode))
   return clientNode.navigateUrl || "";
  var nodeLink = this.GetNodeLinkElement(clientNode);
  return nodeLink ? (nodeLink.href || ASPx.Attr.GetAttribute(nodeLink, "savedhref")) : "";
 },
 SetNodeNavigateUrl: function (clientNode, url) {
  if(this.IsRootNode(clientNode))
   return;
  var nodeLink = this.GetNodeLinkElement(clientNode);
  if(nodeLink) {
   if(ASPx.Attr.IsExistsAttribute(nodeLink, "savedhref"))
    ASPx.Attr.SetAttribute(nodeLink, "savedhref", url);
   else if(ASPx.Attr.IsExistsAttribute(nodeLink, "href"))
    nodeLink.href = url;
   clientNode.navigateUrl = url;
  }
 },
 UpdateCheckedInNodesState: function (checkbox, needToSaveToCookies) {
  var contentElement = ASPx.GetParentByClassName(checkbox, this.NodeCssClassName);
  var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
  var value = internalCheckBox.GetCurrentInputKey();
  var nodeID = this.GetNodeIDByContentElementID(contentElement.id);
  this.nodesState[2][nodeID] = value;
  if(needToSaveToCookies)
   this.UpdateNodesStateCookies();
 },
 UpdateRecursiveCheckedNodesStateOnCallback: function (checkState, nodeIDs) {
  this.HideLoadingPanel();
  for(var i = 0; i < nodeIDs.length; i++) {
   if(this.nodesState[2][nodeIDs[i]] != checkState)
    this.nodesState[2][nodeIDs[i]] = checkState;
  }
  this.UpdateNodesStateCookies();
 },
 CreateRecursiveNodeCheckRequest: function (contentElement) {
  var requestArgs = this.CreatePostRequestArgs(this.CheckNodeRecursiveCommand,
    this.GetNodeIDByContentElementID(contentElement.id));
  if(this.autoPostBack) {
   if(this.isInitialized)
    this.SendPostBack(requestArgs);
   return;
  }
  if(this.callBack) {
   var mainElement = this.GetMainElement();
   this.CreateLoadingDiv(mainElement);
   this.CreateLoadingPanelWithAbsolutePosition(mainElement);
   this.CreateCallback(requestArgs);
  }
 },
 OnNodeCheckboxClick: function (checkbox) {
  var contentElement = ASPx.GetParentByClassName(checkbox, this.NodeCssClassName);
  var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
  if(this.checkNodesRecursive) {
   var checkBoxState = internalCheckBox.GetCurrentInputKey();
   this.UpdateCheckedStateRecursive(checkbox, checkBoxState);
  }
  var processOnServer = this.RaiseCheckedChanged(contentElement);
  if(this.checkNodesRecursive && !this.virtualMode && (this.autoPostBack || this.callBack))
   this.CreateRecursiveNodeCheckRequest(contentElement);
  else if(processOnServer) {
   var requestArgs = this.CreatePostRequestArgs(this.RaiseCheckedChangedEventCommand,
    this.GetNodeIDByContentElementID(contentElement.id));
   if(this.isInitialized)
    this.SendPostBack(requestArgs);
  }
 },
 UpdateCheckedStateRecursive: function (checkbox, state) {
  var listItem = ASPx.GetParentByTagName(checkbox, "LI");
  this.UpdateDescendantsCheckedState(listItem, state);
  this.UpdateAncestorsCheckedState(listItem);
  this.UpdateNodesStateCookies();
 },
 UpdateDescendantsCheckedState: function (listItem, state) {
  var subnodesList = ASPx.GetNodeByTagName(listItem, "UL", 0);
  if(!subnodesList) {
   listItem.requireUpdateCheckedState = true;
   listItem.checkedState = state;
   return;
  }
  var descendantListItems = this.GetListItems(subnodesList);
  for(var i = 0; i < descendantListItems.length; i++) {
   var contentElement = ASPx.GetNodesByPartialClassName(descendantListItems[i], this.NodeCssClassName)[0];
   var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
   if(internalCheckBox && internalCheckBox.GetValue() != state) {
    internalCheckBox.SetValue(state);
    this.UpdateCheckedInNodesState(internalCheckBox.inputElement);
   }
   this.UpdateDescendantsCheckedState(descendantListItems[i], state);
  }
 },
 UpdateAncestorsCheckedState: function (listItem) {
  var parentSubnodesList = ASPx.GetParentByTagName(listItem, "UL");
  var parentListItem = ASPx.GetParentByTagName(parentSubnodesList, "LI");
  if(!parentListItem || !ASPx.GetParentById(parentListItem, this.name))
   return;
  var parentChecked = true;
  var parentUnchecked = true;
  var siblingListItems = this.GetListItems(parentSubnodesList);
  for(var i = 0; i < siblingListItems.length; i++) {
   var contentElement = ASPx.GetNodesByPartialClassName(siblingListItems[i], this.NodeCssClassName)[0];
   var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
   if(internalCheckBox) {
    var currentCheckBoxState = internalCheckBox.GetCurrentInputKey();
    if(currentCheckBoxState != ASPx.CheckBoxInputKey.Checked)
     parentChecked = false;
    if(currentCheckBoxState != ASPx.CheckBoxInputKey.Unchecked)
     parentUnchecked = false;
   }
  }
  var parentCheckboxContentElement = ASPx.GetNodesByPartialClassName(parentListItem, this.NodeCssClassName)[0];
  if(parentCheckboxContentElement) {
   var parentCheckBoxState = parentChecked ? ASPx.CheckBoxInputKey.Checked : (parentUnchecked ? ASPx.CheckBoxInputKey.Unchecked : ASPx.CheckBoxInputKey.Indeterminate);
   var parentInternalCheckBox = this.internalCheckBoxCollection.Get(parentCheckboxContentElement.id);
   if(parentInternalCheckBox && parentInternalCheckBox.GetValue() != parentCheckBoxState) {
    parentInternalCheckBox.SetValue(parentCheckBoxState);
    this.UpdateCheckedInNodesState(parentInternalCheckBox.inputElement);
   }
  }
  this.UpdateAncestorsCheckedState(parentListItem);
 },
 SetNodeState: function (clientNode, state) {
  if(this.IsRootNode(clientNode))
   return;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  var checkbox = ASPx.GetNodesByPartialClassName(contentElement, this.NodeCheckboxCssClassName)[0];
  var stateKey = ASPx.CheckBoxInputKey[state];
  var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
  if(internalCheckBox && internalCheckBox.GetValue() != stateKey) {
   internalCheckBox.SetValue(stateKey);
   this.UpdateCheckedInNodesState(internalCheckBox.inputElement, true);
  }
  if(this.checkNodesRecursive && checkbox)
   this.UpdateCheckedStateRecursive(checkbox, stateKey);
 },
 GetNodeState: function (clientNode) {
  if(!this.internalCheckBoxCollection)
   return ASPx.CheckBoxCheckState.Unchecked;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  var internalCheckBox = this.internalCheckBoxCollection.Get(contentElement.id);
  return internalCheckBox ? internalCheckBox.GetCurrentCheckState() : ASPx.CheckBoxCheckState.Unchecked;
 },
 GetSelectedNodeIDFromState: function () {
  return this.nodesState ? this.nodesState[1] : "";
 },
 SetSelectedNodeIDToState: function (nodeID) {
  if(!this.nodesState || !ASPx.IsExists(this.nodesState[1]))
   return;
  this.nodesState[1] = nodeID;
  this.UpdateNodesStateCookies();
 },
 NavigateToNodeLink: function (contentElementID) {
  var navigateUrl = null;
  var target = null;
  if(this.rootNode.nodes.length > 0) {
   var clientNode = this.rootNode.GetNodeByContentElementID(contentElementID);
   navigateUrl = clientNode.navigateUrl;
   target = clientNode.target;
  } else {
   var nodeIndexPath = this.GetNodeIndexPathByContentElementID(contentElementID);
   if(!(this.nodesUrls && this.nodesUrls[nodeIndexPath]))
    return;
   navigateUrl = this.nodesUrls[nodeIndexPath][0];
   target = this.nodesUrls[nodeIndexPath][1];
  }
  if(navigateUrl)
   ASPx.Url.Navigate(navigateUrl, target || "");
 },
 ApplySelectionToNode: function (contentElement) {
  var previouslySelectedContentElement = ASPx.GetElementById(this.selectedNodeContentElementID);
  if(previouslySelectedContentElement)
   ASPx.GetStateController().DeselectElementBySrcElement(previouslySelectedContentElement);
  if(contentElement) {
   ASPx.GetStateController().SelectElementBySrcElement(contentElement);
   this.CorrectControlWidth();
   this.selectedNodeContentElementID = contentElement.id;
  } else
   this.selectedNodeContentElementID = null;
 },
 HandleNodeClick: function (e) {
  var contentElement = this.GetClickedContentElementByEventArgs(e);
  if(!contentElement)
   return;
  if(this.allowSelectNode && this.selectedNodeContentElementID != contentElement.id) {
   this.SetSelectedNodeIDToState(this.GetNodeIDByContentElementID(contentElement.id));
   ASPx.ClearHoverState();
   this.ApplySelectionToNode(contentElement);
   ASPx.UpdateHoverState(e);
  }
  var processEventOnServer = this.RaiseNodeClick(contentElement, e);
  if(contentElement.tagName != "A")
   this.NavigateToNodeLink(contentElement.id);
  if(processEventOnServer && !this.GetNodeLinkElementCore(contentElement)) {
   var postbackArgs = this.CreatePostRequestArgs(this.RaiseNodeClickEventCommand,
    this.GetNodeIDByContentElementID(contentElement.id));
   if(this.isInitialized)
    this.SendPostBack(postbackArgs);
  }
 },
 OnCallback: function (resultObj) {
  if(!resultObj)
   return;
  switch (resultObj[0]) {
   case this.ExpandNodeCommand:
    if(resultObj[1])
     this.ProcessNodeExpandingOnCallback(resultObj[1], resultObj[2], resultObj[3], resultObj[4]);
    else
     this.ProcessAllNodesExpandingOnCallback(resultObj[2], resultObj[3], resultObj[4]);
    break;
   case this.CheckNodeRecursiveCommand:
    this.UpdateRecursiveCheckedNodesStateOnCallback(resultObj[1], resultObj[2]);
    break;
  }
  if(resultObj[5])
   this.UpdateNodesStateCookies();
 },
 OnCallbackFinalized: function() {
  this.InitializeNodeSelection();
 },
 GetSampleNodeLoadingPanel: function () {
  return ASPx.GetElementById(this.name + this.SampleNodeLoadingPanelIDPostfix);
 },
 GetNodeLoadingPanelID: function (nodeID) {
  return this.name + this.NodeLoadingPanelIDPostfix + nodeID;
 },
 ShowNodeLoadingPanel: function (button, nodeID) {
  var sampleLoadingPanel = this.GetSampleNodeLoadingPanel();
  if(!sampleLoadingPanel || !button) {
   var mainElement = this.GetMainElement();
   this.CreateLoadingDiv(mainElement);
   this.CreateLoadingPanelWithAbsolutePosition(mainElement);
   return;
  }
  var elbowSpan = ASPx.GetParentByTagName(button, "SPAN");
  var panel = this.CloneNodeLoadingPanel(sampleLoadingPanel, nodeID, elbowSpan);
  ASPx.SetElementDisplay(panel, true);
  this.SetNodeLoadingPanelPosition(panel, button, elbowSpan);
  ASPx.SetElementDisplay(button, false);
 },
 HideNodeLoadingPanel: function (nodeID) {
  var panel = ASPx.GetElementById(this.GetNodeLoadingPanelID(nodeID));
  if(panel)
   ASPx.RemoveElement(panel);
 },
 SetNodeLoadingPanelPosition: function (panel, button, elbowSpan) {
  elbowSpan.style.position = "relative";
  var buttonStyle = ASPx.GetCurrentStyle(button);
  var marginLeft = parseInt(buttonStyle.marginLeft);
  var marginTop = parseInt(buttonStyle.marginTop);
  var leftOffset = marginLeft - Math.round((this.nodeLoadingPanelWidth - button.offsetWidth) / 2);
  var topOffset = marginTop - Math.round((this.nodeLoadingPanelHeight - button.offsetHeight) / 2);
  elbowSpan.style.position = "";
  if(this.IsRightToLeft())
   panel.style.marginRight = elbowSpan.offsetWidth - this.nodeLoadingPanelWidth - leftOffset + "px";
  else
   panel.style.marginLeft = leftOffset + "px";
  panel.style.marginTop = topOffset + "px";
 },
 CloneNodeLoadingPanel: function (sampleLoadingPanel, nodeID, elbowSpan) {
  var clonedPanel = sampleLoadingPanel.cloneNode(true);
  clonedPanel.id = this.GetNodeLoadingPanelID(nodeID);
  clonedPanel.dir = "ltr";
  elbowSpan.appendChild(clonedPanel);
  return clonedPanel;
 },
 GetSampleExpandButton: function () {
  return ASPx.GetElementById(this.name + this.SampleExpandButtonIDPostfix);
 },
 GetSampleCollapseButton: function () {
  return ASPx.GetElementById(this.name + this.SampleCollapseButtonIDPostfix);
 },
 SetExpandedToState: function (nodeID, expanded) {
  this.nodesState[0][nodeID] = this.SerializeBooleanValue(expanded);
  this.UpdateNodesStateCookies();
 },
 GetExpandedDataFromState: function () {
  return this.nodesState[0];
 },
 HandleNodeDblClick: function (e) {
  var contentElement = this.GetClickedContentElementByEventArgs(e);
  if(!contentElement)
   return;
  var listItem = ASPx.GetParentByTagName(contentElement, "LI");
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  var expandedState = this.GetExpandedDataFromState();
  var nodeID = this.GetNodeIDByContentElementID(contentElement.id);
  if(!button && !ASPx.IsExists(expandedState[nodeID]))
   return;
  this.ProcessUserInitiatedExpandCollapse(button, listItem);
 },
 InsertSubnodesListMarkup: function (listItem, subnodesListMarkup) {
  var fakeDiv = document.createElement("DIV");
  ASPx.SetInnerHtml(fakeDiv, subnodesListMarkup);
  while(fakeDiv.childNodes.length != 0)
   listItem.appendChild(fakeDiv.childNodes[0]);
 },
 ProcessAllNodesExpandingOnCallback: function (subnodesListMarkup, nodesData, nodeNames) {
  this.HideLoadingPanel();
  for(var nodeIndexPath in nodesData)
   this.nodesState[0][this.NodeIDPrefix.replace("_", "") + nodeIndexPath] = 'T';
  this.UpdateNodesStateCookies();
  this.MergeRetrievedOnCallbackNodeInfo(nodesData, nodeNames);
  var contentDiv = this.GetControlContentDiv();
  contentDiv.innerHTML = subnodesListMarkup;
  var subnodesList = ASPx.GetNodeByTagName(contentDiv, "UL", 0);
  this.rootNode.nodes = [];
  this.InitializeNodeContainerElements(subnodesList, "", null);
  this.AdjustControl();
 },
 MergeRetrievedOnCallbackNodeInfo: function (nodesData, nodeNames) {
  if(nodesData) {
   var destData = this.nodesInfo || this.nodesUrls;
   this.MergeNodesData(nodesData, destData);
  }
  if(nodeNames) {
   this.MergeNodesData(nodeNames, this.nodesState[3]);
   this.UpdateNodesStateCookies();
  }
 },
 ProcessNodeExpandingOnCallback: function (nodeID, subnodesListMarkup, nodesData, nodeNames) {
  this.MergeRetrievedOnCallbackNodeInfo(nodesData, nodeNames);
  var contentElement = this.GetContentElementByNodeID(nodeID);
  contentElement.performingExpandNodeRequest = false;
  this.HideNodeLoadingPanel(this.GetNodeIDByContentElementID(contentElement.id));
  var listItem = ASPx.GetParentByTagName(contentElement, "LI");
  this.InsertSubnodesListMarkup(listItem, subnodesListMarkup);
  var subnodesList = ASPx.GetNodeByTagName(listItem, "UL", 0);
  var nodeIndexPath = this.GetNodeIndexPathByContentElementID(contentElement.id);
  var clientNode = null;
  if(this.rootNode.nodes.length > 0)
   clientNode = this.rootNode.GetNodeByContentElementID(contentElement.id);
  this.InitializeNodeContainerElements(subnodesList, nodeIndexPath, clientNode);
  if(listItem.requireUpdateCheckedState)
   this.UpdateDescendantsCheckedState(listItem, listItem.checkedState);
  if(this.checkNodesRecursive) {
   var listItems = this.GetListItems(subnodesList);
   if(listItems)
    this.UpdateAncestorsCheckedState(listItems[0]);
  }
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  this.PerformNodeExpand(subnodesList, button);
 },
 HandleExpandButtonClick: function (e) {
  var button = ASPx.Evt.GetEventSource(e);
  var listItem = ASPx.GetParentByTagName(button, "LI");
  this.ProcessUserInitiatedExpandCollapse(button, listItem);
 },
 ProcessUserInitiatedExpandCollapse: function (button, listItem) {
  var contentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  if(contentElement.performingExpandNodeRequest)
   return;
  var expandedChangingResults = this.RaiseExpandedChanging(listItem);
  if(expandedChangingResults.cancel)
   return;
  this.ToggleNodeExpandCollapse(listItem, button, true, expandedChangingResults.processOnServer);
 },
 ToggleNodeExpandCollapse: function (listItem, button, requireRaiseExpandedChanged, processOnServer) {
  var subnodesList = ASPx.GetNodeByTagName(listItem, "UL", 0);
  var expanding = !subnodesList || subnodesList.style.display == "none";
  var contentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  if(processOnServer) {
   var requestArgs = this.CreatePostRequestArgs(this.RaiseExpandedChangingEventCommand,
    this.GetNodeIDByContentElementID(contentElement.id), this.SerializeBooleanValue(expanding));
   if(this.isInitialized)
    this.SendPostBack(requestArgs);
   return;
  }
  this.SetExpandedToState(this.GetNodeIDByContentElementID(contentElement.id), expanding);
  if(requireRaiseExpandedChanged)
   this.requireRaiseExpandedChangedList.push(contentElement.id);
  if(subnodesList) {
   if(expanding)
    this.PerformNodeExpand(subnodesList, button);
   else
    this.PerformNodeCollapse(subnodesList, button);
   return;
  }
  contentElement.performingExpandNodeRequest = true;
  this.SendExpandNodePostRequest(contentElement.id, button);
 },
 SendExpandNodePostRequest: function (contentElementID, button) {
  var requestArgs = this.CreatePostRequestArgs(this.ExpandNodeCommand,
   this.GetNodeIDByContentElementID(contentElementID));
  if(this.autoPostBack || !this.callBack) {
   if(this.isInitialized)
    this.SendPostBack(requestArgs);
   return;
  }
  this.ShowNodeLoadingPanel(button, this.GetNodeIDByContentElementID(contentElementID));
  this.CreateCallback(requestArgs);
 },
 StartExpandCollapseAnimation: function (subnodesList, expanding) {
  var height = subnodesList.offsetHeight;
  if(expanding)
   ASPx.SetOffsetHeight(subnodesList, 0);
  ASPx.AnimationHelper.createAnimationTransition(subnodesList, {
   animationEngine: "js", 
   property: "height", unit: "px",
   duration: height > 120 ? this.AnimationDuration : this.MinAnimationDuration,
   onComplete: function (el) {
    this.OnCompleteAnimation(el, expanding);
   }.aspxBind(this)
  }).Start(expanding ? 0 : height, expanding ? height : 0);
 },
 OnCompleteAnimation: function (element, expanding) {
  element.style.height = "";
  if(!expanding) {
   ASPx.SetElementDisplay(element, false);
   this.CorrectControlWidth();
  }
  this.RaiseExpandedChanged(element);
 },
 ReplaceExpandButtonWithSampleButton: function (button, sampleButton) {
  var newButton = this.ReplaceElementWithSampleElement(button, sampleButton, false);
  var listItem = ASPx.GetParentByTagName(newButton, "LI");
  var contentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  if(!ASPx.ElementContainsCssClass(contentElement, this.DisabledCssClassName))
   this.ToggleExpandButtonClickHandler(true, newButton);
  else
   newButton.style.cursor = "default";
 },
 AccomplishExpandCollapse: function (expandButton, sampleButton, subnodesList) {
  if(expandButton)
   this.ReplaceExpandButtonWithSampleButton(expandButton, sampleButton);
  if(!this.enableAnimation)
   this.RaiseExpandedChanged(subnodesList);
 },
 PerformNodeExpand: function (subnodesList, expandButton) {
  ASPx.SetElementDisplay(subnodesList, true);
  this.CorrectControlWidth();
  if(this.enableAnimation)
   this.StartExpandCollapseAnimation(subnodesList, true);
  this.AccomplishExpandCollapse(expandButton, this.GetSampleCollapseButton(), subnodesList);
 },
 PerformNodeCollapse: function (subnodesList, expandButton) {
  if(this.enableAnimation)
   this.StartExpandCollapseAnimation(subnodesList, false);
  else {
   ASPx.SetElementDisplay(subnodesList, false);
   this.CorrectControlWidth();
  }
  this.AccomplishExpandCollapse(expandButton, this.GetSampleExpandButton(), subnodesList);
 },
 GetNodeExpanded: function (clientNode) {
  if(this.IsRootNode(clientNode))
   return true;
  var expandedState = this.GetExpandedDataFromState();
  var nodeID = this.GetNodeIDByContentElementID(clientNode.contentElementID);
  if(ASPx.IsExists(expandedState[nodeID]))
   return !!expandedState[nodeID];
  return false;
 },
 SetNodeExpanded: function (clientNode) {
  if(this.IsRootNode(clientNode))
   return;
  var contentElement = ASPx.GetElementById(clientNode.contentElementID);
  if(contentElement.performingExpandNodeRequest)
   return;
  var listItem = this.GetNodeListItem(clientNode);
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  var nodeID = this.GetNodeIDByContentElementID(clientNode.contentElementID);
  var expandedState = this.GetExpandedDataFromState();
  if(!button && !ASPx.IsExists(expandedState[nodeID]))
   return;
  this.ToggleNodeExpandCollapse(listItem, button, false, false);
 },
 UpdateStateObject: function(){
  this.UpdateStateObjectWithObject({ nodesState: this.nodesState });
 },
 UpdateNodesStateCookies: function() {
  if(this.cookieName) {
   ASPx.Cookie.DelCookie(this.cookieName);
   ASPx.Cookie.SetCookie(this.cookieName, ASPx.Json.ToJson(this.nodesState));
  }
 },
 AreChildNodesLoaded: function (node) {
  var listItem = this.GetNodeListItem(node);
  var button = ASPx.GetNodesByPartialClassName(listItem, this.ButtonCssClassName)[0];
  return !button || !!ASPx.GetNodeByTagName(listItem, "UL", 0);
 },
 RaiseNodeClick: function (contentElement, htmlEvent) {
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned(this.NodeClickServerEventName);
  if(!this.NodeClick.IsEmpty()) {
   var clientNode = this.rootNode.GetNodeByContentElementID(contentElement.id);
   var args = new ASPxClientTreeViewNodeClickEventArgs(processOnServer, clientNode,
    contentElement, htmlEvent);
   this.NodeClick.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 RaiseExpandedChanged: function (subnodesList) {
  if(this.ExpandedChanged.IsEmpty())
   return;
  var listItem = ASPx.GetParentByTagName(subnodesList, "LI");
  var contentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  var nodeIndex = ASPx.Data.ArrayIndexOf(this.requireRaiseExpandedChangedList, contentElement.id);
  if(nodeIndex < 0)
   return;
  this.requireRaiseExpandedChangedList.splice(nodeIndex, 1);
  var clientNode = this.rootNode.GetNodeByContentElementID(contentElement.id);
  var args = new ASPxClientTreeViewNodeEventArgs(clientNode);
  this.ExpandedChanged.FireEvent(this, args);
 },
 RaiseExpandedChanging: function (listItem) {
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned(this.ExpandedChangingServerEventName);
  var contentElement = ASPx.GetNodesByPartialClassName(listItem, this.NodeCssClassName)[0];
  var clientNode = this.rootNode.GetNodeByContentElementID(contentElement.id);
  var args = new ASPxClientTreeViewNodeCancelEventArgs(processOnServer, clientNode);
  if(!this.ExpandedChanging.IsEmpty())
   this.ExpandedChanging.FireEvent(this, args);
  return args;
 },
 RaiseCheckedChanged: function (contentElement) {
  var processOnServer = this.autoPostBack || this.IsServerEventAssigned(this.CheckedChangedServerEventName);
  if(!this.CheckedChanged.IsEmpty()) {
   var clientNode = this.rootNode.GetNodeByContentElementID(contentElement.id);
   var args = new ASPxClientTreeViewNodeProcessingModeEventArgs(processOnServer, clientNode);
   this.CheckedChanged.FireEvent(this, args);
   processOnServer = args.processOnServer;
  }
  return processOnServer;
 },
 GetNode: function (index) {
  return this.rootNode.GetNode(index);
 },
 GetNodeByName: function (name) {
  return this.rootNode.GetNodeByName(name);
 },
 GetNodeByText: function (text) {
  return this.rootNode.GetNodeByText(text);
 },
 GetNodeCount: function () {
  return this.rootNode.GetNodeCount();
 },
 GetSelectedNode: function () {
  return this.rootNode.GetNodeByContentElementID(this.selectedNodeContentElementID);
 },
 SetSelectedNode: function (node) {
  if(node && (node.treeView != this || this.IsRootNode(node)) || !this.allowSelectNode)
   return;
  var contentElement = node ? ASPx.GetElementById(node.contentElementID) : null;
  var selectedNodeID = contentElement ? this.GetNodeIDByContentElementID(contentElement.id) : "";
  this.SetSelectedNodeIDToState(selectedNodeID);
  this.ApplySelectionToNode(contentElement);
 },
 GetRootNode: function () {
  return this.rootNode;
 },
 IsRootNode: function (clientNode) {
  return clientNode == this.rootNode;
 },
 ExpandCollapseNodesRecursive: function (clientNodes, expand) {
  for(var i = 0; i < clientNodes.length; i++) {
   clientNodes[i].SetExpanded(expand);
   if(clientNodes[i].nodes.length > 0)
    this.ExpandCollapseNodesRecursive(clientNodes[i].nodes, expand);
  }
 },
 CollapseAll: function () {
  if(this.rootNode.nodes.length == 0)
   return;
  this.ExpandCollapseNodesRecursive(this.rootNode.nodes, false);
 },
 ExpandAll: function () {
  if(this.rootNode.nodes.length == 0)
   return;
  var postRequestArgs = this.CreatePostRequestArgs(this.ExpandAllNodesCommand, "");
  if(this.autoPostBack) {
   if(this.isInitialized)
    this.SendPostBack(postRequestArgs);
   return;
  }
  if(this.callBack) {
   var mainElement = this.GetMainElement();
   this.CreateLoadingDiv(mainElement);
   this.CreateLoadingPanelWithAbsolutePosition(mainElement);
   this.CreateCallback(postRequestArgs);
   return;
  }
  this.ExpandCollapseNodesRecursive(this.rootNode.nodes, true);
 }
});
ASPxClientTreeView.Cast = ASPxClientControl.Cast;
var ASPxClientTreeViewNode = ASPx.CreateClass(null, {
 constructor: function (treeView, parent, index, name) {
  this.treeView = treeView;
  this.parent = parent;
  this.index = index;
  this.name = name;
  this.enabled = true;
  this.clientEnabled = true;
  this.clientVisible = true;
  this.navigateUrl = null;
  this.target = null;
  this.text = null;
  this.imageUrl = null;
  this.nodes = [];
  this.contentElementID = null;
  this.last = false;
 },
 GetNodeCount: function () {
  return this.nodes.length;
 },
 GetNode: function (index) {
  return (index >= 0 && index < this.nodes.length) ? this.nodes[index] : null;
 },
 GetNodeBySelector: function (selector) {
  for(var i = 0; i < this.nodes.length; i++) {
   if(selector(this.nodes[i]))
    return this.nodes[i];
   var foundNode = this.nodes[i].GetNodeBySelector(selector);
   if(foundNode)
    return foundNode;
  }
  return null;
 },
 GetNodeByContentElementID: function (contentElementID) {
  return this.GetNodeBySelector(function (node) { return node.contentElementID == contentElementID; });
 },
 SetCheckState: function (value) {
  this.treeView.SetNodeState(this, value);
 },
 GetNodeByName: function (name) {
  return this.GetNodeBySelector(function (node) { return node.name == name; });
 },
 GetNodeByText: function (text) {
  return this.GetNodeBySelector(function (node) { return node.GetText() == text });
 },
 GetExpanded: function () {
  return this.treeView.GetNodeExpanded(this);
 },
 SetExpanded: function (value) {
  if(this.GetExpanded() == value)
   return;
  this.treeView.SetNodeExpanded(this);
 },
 GetChecked: function () {
  return this.GetCheckState() == ASPx.CheckBoxCheckState.Checked;
 },
 SetChecked: function (value) {
  this.SetCheckState(value ? ASPx.CheckBoxCheckState.Checked : ASPx.CheckBoxCheckState.Unchecked);
 },
 GetCheckState: function () {
  return this.treeView.GetNodeState(this);
 },
 GetEnabled: function () {
  return this.enabled && this.clientEnabled;
 },
 SetEnabled: function (value) {
  this.clientEnabled = value;
  this.treeView.SetNodeClientEnabled(this, this.clientEnabled);
 },
 GetImageUrl: function () {
  return this.imageUrl || "";
 },
 SetImageUrl: function (value) {
  this.imageUrl = value;
  this.treeView.SetNodeImageUrl(this, value);
 },
 GetNavigateUrl: function () {
  return this.treeView.GetNodeNavigateUrl(this);
 },
 SetNavigateUrl: function (value) {
  this.treeView.SetNodeNavigateUrl(this, value);
 },
 GetText: function () {
  var nbspChar = String.fromCharCode(160)
  return this.text ? this.text.replace(new RegExp(nbspChar, "g"), " ") : "";
 },
 SetText: function (value) {
  this.text = value;
  this.treeView.SetNodeText(this, value);
 },
 GetVisible: function () {
  return this.clientVisible;
 },
 SetVisible: function (value) {
  this.clientVisible = value;
  this.treeView.SetNodeClientVisible(this, this.clientVisible);
 },
 GetHtmlElement: function () {
  return ASPx.GetElementById(this.contentElementID);
 }
});
var ASPxClientTreeViewNodeProcessingModeEventArgs = ASPx.CreateClass(ASPxClientProcessingModeEventArgs, {
 constructor: function (processOnServer, node) {
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.node = node;
 }
});
var ASPxClientTreeViewNodeClickEventArgs = ASPx.CreateClass(ASPxClientTreeViewNodeProcessingModeEventArgs, {
 constructor: function (processOnServer, node, htmlElement, htmlEvent) {
  this.constructor.prototype.constructor.call(this, processOnServer, node);
  this.htmlElement = htmlElement;
  this.htmlEvent = htmlEvent;
 }
});
var ASPxClientTreeViewNodeEventArgs = ASPx.CreateClass(ASPxClientEventArgs, {
 constructor: function (node) {
  this.node = node;
 }
});
var ASPxClientTreeViewNodeCancelEventArgs = ASPx.CreateClass(ASPxClientProcessingModeCancelEventArgs, {
 constructor: function (processOnServer, node) {
  this.constructor.prototype.constructor.call(this, processOnServer);
  this.node = node;
 }
});
window.ASPxClientTreeView = ASPxClientTreeView;
window.ASPxClientTreeViewNode = ASPxClientTreeViewNode;
window.ASPxClientTreeViewNodeProcessingModeEventArgs = ASPxClientTreeViewNodeProcessingModeEventArgs;
window.ASPxClientTreeViewNodeClickEventArgs = ASPxClientTreeViewNodeClickEventArgs;
window.ASPxClientTreeViewNodeEventArgs = ASPxClientTreeViewNodeEventArgs;
window.ASPxClientTreeViewNodeCancelEventArgs = ASPxClientTreeViewNodeCancelEventArgs;
})();

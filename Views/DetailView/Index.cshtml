@using System;
@using System.Drawing;
@{
    Layout = null;
    var ModelObject = ViewBag.DetailViewModelObject as dynamic;
    var ModelDetailViewDetails = ((IEnumerable<dynamic>)ModelObject.ModelDetailViewDetails);
    var Tabs = ModelDetailViewDetails.Where(p => p.ID_ControlType == 11).ToList();
    var LookUpListViewControls = ModelDetailViewDetails.Where(p => p.ID_ControlType == 15 && p.IsReadOnly == false).ToList();
    var GeneralTabName = "General_" + ModelObject.Name + "_{{CurrentObject.ID}}";
    foreach (var tab in Tabs)
    {
        tab.FormOptionName = tab.Name + "FormOptions";
        if (((IDictionary<string, object>)tab).Keys.Contains("TabName") == false)
        {
            tab.TabName = ModelObject.ModelName + "-" + tab.Name + "_{{CurrentObject.ID}}";
        }
    }
    bool IsModal = ViewBag.IsModal;
    bool IsGenerateTabs = Tabs.Count > 0;
    //string ScrollViewHieght = IsModal ? "auto" : "650px";
    string FormId = HtmlHelperExtensions.RandomString();
    string ViewName = ModelObject.Name;
    string PrimaryColor = ModelObject.PrimaryColor;
    string PrimaryLightColor = HtmlHelperExtensions.setSecondaryColor(@ModelObject.PrimaryColor);
    bool IsDevelopersMode = ViewBag.IsDeveloperMode;
    bool IsEditingOnly = ViewBag.IsEditingOnly;
    
}
<style>
    @if (true)
    {
        @:#@FormId .header {
             @:background-color:@PrimaryLightColor;
             @:color:@PrimaryColor;
        @:}
        @:#@FormId .JsModalbtnContainer {
            @:background-color:@PrimaryColor;
        @:}
        @:#@FormId .status-bar-container {
        @:    background-color:@PrimaryColor;
        @:}
    }
</style>
<div id="@FormId" class="@ViewName js-detailview-container js-themes horizontal" style="height:100%;position:relative" ng-keydown="onKeyDown($event)" tabindex="-100" init-view>
    <div style="height:92%">
        <form name="_DetailViewForm">
            <div class="js-header-container">
                <div class="header">
                    @*<div class="JsClearFilter" style="display:inline-block" ><span class="mdi mdi-filter-remove"></span></div>*@
                    <span class="@ModelObject.Icon" /> <div class="ModelDisplayName" style="display:inline-block" ng-click="ShowListView()">{{DisplayName}}</div>
                    <div class="DisplayName">
                        {{CurrentObject.ID == -1 ? '(New)' : DisplayPropertyName}}
                    </div>
                    <div style="display:inline-flex" ng-show="IsModelNotifShow"><js-notif icon="mdi mdi-note-outline" background="#b20000" option="ModelNotifOption" style="height:25px!important;width:25px!important;font-size:13px;line-height:20px;margin-left:0px"></js-notif></div>
                </div>
                <div class="js-grid-toolbar">
                    <div dx-menu="FormContextMenu" class="FormContextMenu">
                        <div data-options="dxTemplate: { name: 'item' }">
                            <span class="icon {{icon}}"></span> <span>{{name}}</span>
                        </div>
                    </div>
                </div>
            </div>
            @*max-width:1420px*@
            <div class="row detailview-scorllview" style="background-color:#fff;"
                 dx-scroll-view="{ 
                    showScrollbar : 'onHover',
                    useNative : false ,
                    height: '100%',
                    ID_Form : '@FormId',
                    onInitialized : $parent.onScrollViewInitialized
                }">
                <div dx-form="GeneralFormOptions"/>  
                <div>

                    @{ 
                        var Grids = ModelDetailViewDetails.Where(p => (p.ID_ControlType == 10 && p.ID_ModelProperty_ParentTable == null)  ).ToList().OrderBy(p => p.SeqNo).ToList();
                        var TabPanels = ModelDetailViewDetails.Where(p => p.IsOnGridTab == true && p.ID_ControlType == 11).ToList().OrderBy(p => p.SeqNo).ToList();
                        if (Grids.Count == 1 && TabPanels.Count == 0)
                        {

                            @:<div class="form-details" ng-repeat="Grid in GridTabPanelControlOption.items"  style="margin-top:10px">
                            @:
                            @:    <div ng-if="Grid.isForm == false" ng-class="{'hasChildGrid': Grid.ChildGrids.length > 0}" >
                            @:
                            @:        <div ng-class="{'hasChildGrid-Parent': Grid.ChildGrids.length > 0}">
                            @:            <div class="row"> 
                            @:                <div class="col-md-4 record-count">
                            @:                    {{Grid.Caption.toUpperCase()}}{{" ( " + $parent.CurrentObject[Grid.PropertyName].length + " )"}}
                            @:                </div>
                            @:                <div class="col-md-8 batch-edit-container">
                            @:                    <div dx-menu="Grid.MenuOptions" class="js-grid-toolbar dx-menu-right"></div>
                            @:                    @*<div dx-button="Grid.batchEditButton"></div>*@
                            @:                </div>
                            @:            </div>
                            @:            <div id="{{Grid.Name}}_{{$parent.CurrentObject.ID}}" dx-data-grid="Grid.GridOption" >
                            @:                <div data-options="dxTemplate:{ name:'contextItem' }">
                            @:                    <div class="JsdxContextMenu">
                            @:                        <div class="dxContainer">
                            @:                            <div class="Icon"><span class="{{icon}}"></span></div> 
                            @:                            <div class="Text">{{text}}</div>
                            @:                        </div>
                            @:                    </div>
                            @:                </div>
                            @:            </div>
                            @:        </div>
                            @:
                            @:        <div class="child-grid" ng-repeat="childGrid in Grid.ChildGrids">
                            @:            <div class="row">
                            @:                <div class="col-md-4 record-count">
                            @:                    {{childGrid.Caption.toUpperCase()}}
                            @:                </div>
                            @:                <div class="col-md-8 batch-edit-container">
                            @:                    <div dx-menu="childGrid.MenuOptions" class="js-grid-toolbar dx-menu-right"></div>
                            @:                    @*<div dx-button="childGrid.batchEditButton"></div>*@
                            @:                </div>
                            @:            </div>
                            @:            <div dx-data-grid="childGrid.GridOption">
                            @:                <div data-options="dxTemplate:{ name:'contextItem' }">
                            @:                    <div class="JsdxContextMenu">
                            @:                        <div class="dxContainer">
                            @:                            <div class="Icon"><span class="{{icon}}"></span></div> 
                            @:                            <div class="Text">{{text}}</div>
                            @:                        </div>
                            @:                    </div>
                            @:                </div>
                            @:            </div>
                            @:        </div>
                            @:    </div>
                            @:    <div ng-if="Grid.isForm == true">
                            @:    </div>
                            @:
                            @:</div>

                        } else {
                            
                            if (Grids.Count > 0 || TabPanels.Count > 0)
                            {
                                <div class="form-details" dx-item-alias="Grid" dx-tab-panel="GridTabPanelControlOption" style="width:100%;margin-top:10px">

                                    <div data-options="dxTemplate : { name: 'dxDataGrid' } " style="width:100%">

                                        <div 
                                            dx-scroll-view="{ 
                                             showScrollbar : 'onHover',
                                             useNative : true ,
                                             ID_Form : '@FormId',
                                             onInitialized : $parent.onScrollViewInitialized
                                            }">

                                            <div ng-class="{'hasChildGrid': Grid.ChildGrids.length > 0}" ng-if="Grid.isForm == false" style="padding-left:25px;padding-right:25px">
                                                <div ng-class="{'hasChildGrid-Parent': Grid.ChildGrids.length > 0}">
                                                    <div class="row">
                                                        <div class="col-md-3 record-count">
                                                            {{Grid.Caption.toUpperCase()}}{{" ( " + $parent.$parent.CurrentObject[Grid.PropertyName].length + " )"}}
                                                        </div>
                                                        <div class="col-md-9 batch-edit-container">
                                                            <div dx-menu="Grid.MenuOptions" class="js-grid-toolbar dx-menu-right"></div>
                                                        </div>
                                                    </div>
                                                    <div dx-data-grid="Grid.GridOption" >
                                                        <div data-options="dxTemplate:{ name:'contextItem' }">
                                                            <div class="JsdxContextMenu">
                                                                <div class="dxContainer">
                                                                    <div class="Icon"><span class="{{icon}}"></span></div> 
                                                                    <div class="Text">{{text}}</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                             
                                            <div class="child-grid" ng-repeat="childGrid in Grid.ChildGrids">
                                                <div class="row">
                                                    <div class="col-md-3 record-count">
                                                        {{childGrid.Caption.toUpperCase()}}
                                                    </div>
                                                    <div class="col-md-9 batch-edit-container">
                                                        <div dx-menu="childGrid.MenuOptions" class="js-grid-toolbar dx-menu-right"></div>
                                                        @*<div dx-button="childGrid.batchEditButton"></div>*@
                                                    </div>
                                                </div>
                                                <div dx-data-grid="childGrid.GridOption">
                                                    <div data-options="dxTemplate:{ name:'contextItem' }">
                                                        <div class="JsdxContextMenu">
                                                            <div class="dxContainer">
                                                                <div class="Icon"><span class="{{icon}}"></span></div> 
                                                                <div class="Text">{{text}}</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="grid-form" ng-if="Grid.isForm == true" style="width:100%">
                                            <div style="position:relative;height:100%;width:100%">
                                                <div style="position:absolute;top:0;bottom:0;left:0;right:0">
                                                    <div dx-form="Grid.formOption" class="{{Grid.name}}"></div>
                                                </div>
                                            </div>
                                            
                                        </div>
                                    </div>
                                </div>
                            </div>
                                }
                            }
                        }
                </div>
            </div>
        </form>
    </div>

    @if (IsModal)
    {
            <div class="JsModalbtnContainer">
                <div class="JsModalbtnContainerInner">
                    <div class="inner-status" style="float:left">
                        <span ng-hide="StatusText === ''" class='fa fa-exclamation-circle'></span> {{StatusText}}
                    </div>
                    <div class="ctn">
                        @if (IsEditingOnly == true)
                        {
                            <div dx-button="{ text : '@Html.Raw(IsModal && IsEditingOnly == false ? "Save" : "OK")',
                                          icon: '@Html.Raw(IsModal && IsEditingOnly == false ? "fa fa-save" : "mdi mdi-checkbox-marked-circle-outline")',
                                          onClick : @Html.Raw(IsModal && IsEditingOnly == false ? "PerformSave" : "OnEditDone")  }"></div>
                        }
                        else
                        {
                            <div dx-button="{ text : 'Save & Close',
                                 icon : 'fa fa-save',
                                 onClick : PerformSaveAndClose }"></div>
                        }
                        <div dx-button="{ text : '@Html.Raw(IsModal && IsEditingOnly == false ? "Close" : "Cancel")',
                                          icon:'@Html.Raw(IsModal && IsEditingOnly == false ? "mdi mdi-exit-to-app" : "fa fa-close")',
                                          onClick : ClosePopup }"></div>
                    </div>
                </div>
            </div>
    }
    else
    {

        <div class="status-bar-container" style="bottom:0;position:absolute">
            <div class="inner-status col-md-6">
                    <span ng-hide="StatusText === ''" class='fa fa-exclamation-circle'></span> {{StatusText}}
            </div>
            <div class="inner-status col-md-6 other-infos">
                <div class="right-container">
                    <span class="mdi mdi-information-outline"/> {{DataInformationText}}
                </div>
            </div>
        </div>
    }
</div>
